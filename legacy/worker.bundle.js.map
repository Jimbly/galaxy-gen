{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/client/glov/require.js","src/client/shims/assert.js","src/client/worker_deps.js","dist/game/build.intermediate/client/glov/client/glov/polyfill.js","dist/game/build.intermediate/client/glov/client/glov/worker_thread.js","dist/game/build.intermediate/client/client/worker.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","glob","window","self","deps","mod","ok","exp","msg","undefined","JSON","stringify","equal","b","assert"],"mappings":"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","file":"worker.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* globals self */\nconst glob = typeof window === 'undefined' ? self : window;\nlet deps = glob.deps = glob.deps || {};\nglob.require = function (mod) {\n  if (!deps[mod]) {\n    throw new Error(`Cannot find module '${mod}' (add it to deps.js or equivalent)`);\n  }\n  return deps[mod];\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nfunction ok(exp, msg) {\n  if (exp) {\n    return;\n  }\n  throw new Error(`Assertion failed: ${msg ? msg : exp === undefined ? '' : JSON.stringify(exp)}`);\n}\nmodule.exports = ok;\nmodule.exports.ok = ok;\n\nfunction equal(a, b) {\n  if (a === b) {\n    return;\n  }\n  throw new Error(`Assertion failed: \"${a}\"===\"${b}\"`);\n}\nmodule.exports.equal = equal;\n","/* globals deps */\nrequire('./glov/require.js');\n\ndeps.assert = require('assert');\n","/* eslint no-extend-native:off,no-invalid-this:off */\n\n// TypedArray.slice, fill, join, sort, etc - not supported on IE, some older Safari, older Android, Chrome 44\nlet typedarrays = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array];\n\nif (!Uint8Array.prototype.slice) {\n  typedarrays.forEach(function (ArrayType) {\n    Object.defineProperty(ArrayType.prototype, 'slice', {\n      value: function (begin, end) {\n        if (end === undefined) {\n          end = this.length;\n        }\n        if (end < 0) {\n          end = this.length - end;\n        }\n        begin = begin || 0;\n        if (begin >= this.length) {\n          begin = this.length - 1;\n        }\n        if (end > this.length) {\n          end = this.length;\n        }\n        if (end < begin) {\n          end = begin;\n        }\n        let len = end - begin;\n        let ret = new ArrayType(len);\n        for (let ii = 0; ii < len; ++ii) {\n          ret[ii] = this[begin + ii];\n        }\n        return ret;\n      }\n    });\n  });\n}\n\nfunction cmpDefault(a, b) {\n  return a - b;\n}\nlet replacements = {\n  join: function (delim) {\n    return Array.prototype.join.call(this, delim);\n  },\n  fill: function (value, begin, end) {\n    if (end === undefined) {\n      end = this.length;\n    }\n    for (let ii = begin || 0; ii < end; ++ii) {\n      this[ii] = value;\n    }\n    return this;\n  },\n  sort: function (cmp) {\n    Array.prototype.sort.call(this, cmp || cmpDefault);\n  },\n};\n\nfor (let key in replacements) {\n  if (!Uint8Array.prototype[key]) {\n    typedarrays.forEach(function (ArrayType) {\n      Object.defineProperty(ArrayType.prototype, key, {\n        value: replacements[key],\n      });\n    });\n  }\n}\n\nif (!String.prototype.endsWith) {\n  Object.defineProperty(String.prototype, 'endsWith', {\n    value: function (test) {\n      return this.slice(-test.length) === test;\n    },\n  });\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value: function (test) {\n      return this.slice(0, test.length) === test;\n    },\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/* eslint-env browser */\n\nrequire('./polyfill.js');\n\nconst assert = require('assert');\n\nexport function sendmsg(id, data, transfer) {\n  postMessage({ id, data }, transfer);\n}\n\nexport function debugmsg(msg, clear) {\n  sendmsg('debugmsg', { msg, clear });\n}\n\nlet handlers = [];\nexport function addHandler(id, cb) {\n  assert(!handlers[id]);\n  handlers[id] = cb;\n}\n\nlet time_work = 0;\nlet time_idle = 0;\nlet batch_timing = [];\nlet last_report_time = Date.now();\nlet timing_enabled = false;\n\nfunction reportTiming(now) {\n  // end work, start yield/idle\n  if (now - last_report_time > 100) {\n    let elapsed = time_work + time_idle;\n    assert(elapsed <= now - last_report_time + 10); // this happened once, why?\n    sendmsg('timing', { time_work, time_idle, elapsed, batches: batch_timing });\n    last_report_time = now;\n    time_idle = time_work = 0;\n    batch_timing.length = 0;\n  }\n}\n\nlet last_work_end = last_report_time;\nlet last_work_start = 0;\nexport function startWork() {\n  let now = Date.now();\n  let idle_time = now - last_work_end;\n  if (timing_enabled) {\n    batch_timing.push(idle_time);\n  }\n  time_idle += idle_time;\n  last_work_start = now;\n}\n\nexport function endWork() {\n  let now = Date.now();\n  last_work_end = now;\n  let batch_time = now - last_work_start;\n  time_work += batch_time;\n  if (timing_enabled) {\n    batch_timing.push(batch_time);\n    reportTiming(now);\n  }\n}\n\nonmessage = function (evt) {\n  // start work, end yield/idle\n  startWork();\n  evt = evt.data;\n  if (evt instanceof Object && evt.id) {\n    assert(handlers[evt.id]);\n    try {\n      handlers[evt.id](evt.data);\n    } catch (e) {\n      sendmsg('error', { message: e.message || String(e), stack: e.stack });\n    }\n  } else {\n    console.log('worker (worker thread) unhandled message', evt);\n  }\n  endWork();\n};\n\naddHandler('busy', function (data) {\n  let start = Date.now();\n  let a = 1;\n  let b = 1;\n  while (Date.now() - start < data) {\n    let c = a + b;\n    a = b;\n    b = c;\n  }\n  sendmsg('busy_done', null);\n});\n\naddHandler('timing_enable', function (data) {\n  timing_enabled = data;\n});\n\nsendmsg('log', 'WebWorker communication initialized');\n","\nconst worker = require('./glov/worker_thread.js');\n\nworker.addHandler('test', function () {\n  console.log('Worker Test!');\n});\n"]}