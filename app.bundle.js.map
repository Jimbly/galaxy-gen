{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.js","biomes.ts","galaxy.ts","img/font/04b03_8x1.json","img/font/04b03_8x2.json","img/font/palanquin32.json","main.ts","simple_soundscape.ts","solar_system.ts","star_types.ts","../glov/client/abtest.ts","../glov/client/autoatlas.ts","../glov/client/bootstrap.js","../glov/client/browser.js","../glov/client/build_ui.js","../glov/client/camera2d.js","../glov/client/client_config.ts","../glov/client/cmds.js","../glov/client/dyn_geom.js","../glov/client/edit_box.js","../glov/client/effects.js","../glov/client/engine.js","../glov/client/engine_cmds.js","../glov/client/environments.ts","../glov/client/error_report.js","../glov/client/external_users_client.ts","../glov/client/fetch.js","../glov/client/filewatch.js","../glov/client/font.js","../glov/client/framebuffer.js","../glov/client/geom.js","../glov/client/glb/decode-utf8.js","../glov/client/glb/gltf-type-utils.js","../glov/client/glb/parser.js","../glov/client/glb/unpack-binary-json.js","../glov/client/glb/unpack-glb-buffers.js","../glov/client/in_event.js","../glov/client/input.js","../glov/client/input_constants.ts","../glov/client/link.js","../glov/client/local_storage.ts","../glov/client/localization.ts","../glov/client/locate_asset.ts","../glov/client/markdown.ts","../glov/client/markdown_parse.ts","../glov/client/markdown_renderables.ts","../glov/client/mat43.js","../glov/client/models.js","../glov/client/net.js","../glov/client/normalize_mousewheel.ts","../glov/client/particles.js","../glov/client/perf.js","../glov/client/perf_net.ts","../glov/client/pointer_lock.js","../glov/client/polyfill.js","../glov/client/profiler.js","../glov/client/profiler_ui.js","../glov/client/rand_fast.js","../glov/client/scroll_area.ts","../glov/client/settings.js","../glov/client/shader_debug_ui.js","../glov/client/shaders.js","../glov/client/simple-markdown/index.ts","../glov/client/slider.js","../glov/client/social.ts","../glov/client/sound.ts","../glov/client/spot.ts","../glov/client/sprite_sets.js","../glov/client/sprites.js","../glov/client/subscription_manager.js","../glov/client/textures.js","../glov/client/transition.js","../glov/client/ui.js","../glov/client/uistyle.ts","../glov/client/urlhash.js","../glov/client/walltime.js","../glov/client/webfs.js","../glov/client/words/profanity.js","../glov/client/wsclient.js","../glov/common/ack.js","../glov/common/base64.js","../glov/common/chunked_send.js","../glov/common/cmd_parse.ts","../glov/common/crc32.js","../glov/common/data_error.ts","../glov/common/dot-prop.js","../glov/common/enums.ts","../glov/common/external_users_common.ts","../glov/common/friends_data.ts","../glov/common/md5.js","../glov/common/packet.js","../glov/common/perfcounters.js","../glov/common/platform.ts","../glov/common/rand_alea.js","../glov/common/texpack_common.js","../glov/common/tiny-events.js","../glov/common/util.ts","../glov/common/verify.ts","../glov/common/vmath.ts","../glov/common/words/profanity_common.js","../glov/common/wscommon.js"],"names":[],"mappings":"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AE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AAEzB,EAAE,GAAG,EADL,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,YAChB,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI;AACzB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,IAAI;AACvB,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAI,I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","file":"app.bundle.js","sourceRoot":"","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* eslint global-require:off */\n\n// For debug and used internally in the build/bundling pipeline\nwindow.glov_build_version=BUILD_TIMESTAMP;\n\n// Startup code.\n\nlet called_once = false;\nfunction onLoad() {\n  if (called_once) {\n    return;\n  }\n  called_once = true;\n  window.time_load_onload = Date.now();\n  require('glov/client/bootstrap.js');\n  // require('glov/client/worker_comm.js').startup(); // First, so it gets loading quickly (if workers required)\n  if (window.conf_env === 'multiplayer') {\n    //require('./multiplayer.js').main();\n  } else if (window.conf_env === 'entity') {\n    //require('./enttest.js').main();\n  } else {\n    require('./main.js').main();\n  }\n  window.time_load_init = Date.now();\n}\n\nwindow.addEventListener('DOMContentLoaded', onLoad);\n\nwindow.onload = onLoad;\n","export const BIOMES = {\n  WATER_DEEP: 24,\n  WATER_SHALLOW: 25,\n  DESERT: 30,\n  GREEN_PLAINS: 26,\n  GREEN_FOREST: 29,\n  MOUNTAINS: 27,\n  MOUNTAINS_SNOW: 28,\n  FROZEN_PLAINS: 10, // AAP64'd\n  FROZEN_OCEAN: 11, // AAP64'd\n  FROZEN_MOUNTAINS: 31,\n  DIRT: 32,\n  DIRT_DARK: 42,\n  MOLTEN_MOUNTAINS: 36,\n  MOLTEN_PLAINS: 37,\n  MOLTEN_LAVAFLOW: 38,\n  DIRT_RED: 46,\n  DEAD_FOREST: 1, // AAP64'd\n  MOONROCK1: 6, // AAP64'd\n  MOONROCK2: 7, // AAP64'd\n  MOONROCK3: 8, // AAP64'd\n  MOONROCK4: 9, // AAP64'd\n  // needs pixel art below here\n  GAS_ORANGE_LIGHT: 33,\n  GAS_ORANGE_DARK: 34,\n  GAS_GRAY: 35,\n  GAS_BLUE_DARK: 39,\n  GAS_BLUE_MED: 40,\n  GAS_BLUE_LIGHT: 41,\n  GAS_YELLOW: 43,\n  GAS_YELLOW_RED: 44,\n  GAS_RED: 45,\n  GAS_PURPLE_LIGHT: 16,\n  GAS_PURPLE_DARK: 17,\n};\ntype BiomeName = keyof typeof BIOMES;\nexport type Biome = typeof BIOMES[BiomeName];\n\nexport const BIOMES_SAME_LOOSE = (function () {\n  let ret: Record<Biome, Partial<Record<Biome, true>>> = {};\n  let key: BiomeName;\n  for (key in BIOMES) {\n    let v = BIOMES[key]!;\n    ret[v] = { [v]: true };\n  }\n  function associate(b1: Biome, b2: Biome): void {\n    ret[b1][b2] = true;\n    ret[b2][b1] = true;\n  }\n  associate(BIOMES.GREEN_PLAINS, BIOMES.GREEN_FOREST);\n  associate(BIOMES.GREEN_PLAINS, BIOMES.MOUNTAINS);\n  associate(BIOMES.GREEN_FOREST, BIOMES.MOUNTAINS);\n  // associate(BIOMES.DIRT_RED, BIOMES.DEAD_FOREST);\n  return ret;\n}());\n","export const LAYER_STEP = 4;\nexport const STAR_LAYER = 6;\nexport const MAX_LAYER = 8;\nimport assert from 'assert';\nimport * as engine from 'glov/client/engine';\nimport { Texture } from 'glov/client/sprites';\nimport {\n  TEXTURE_FORMAT,\n  textureLoad,\n} from 'glov/client/textures';\nimport {\n  mashString,\n  randCreate,\n} from 'glov/common/rand_alea';\nimport { WithRequired } from 'glov/common/types';\nimport {\n  clamp,\n  easeInOut,\n  easeOut,\n  lerp,\n} from 'glov/common/util';\nimport SimplexNoise from 'simplex-noise';\nimport { SolarSystem, solarSystemCreate } from './solar_system';\nimport { hueFromID } from './star_types';\n\nconst { abs, atan2, ceil, floor, max, min, sqrt, pow, PI, round } = Math;\n\nconst SUMSQ = 0.75;\n\nconst POI_TYPE_OFFS = [\n  [1, 0,0,\n   0.5, 0,-1, 0.5, -1,0, 0.5, 0,1, 0.5, 1,0], // 4 neighbors\n  [1, 0,0,\n   0.5, 0,-1, 0.5, 0,-2, 0.5, -1,0, 0.5, -2,0, 0.5, 1,0, 0.5, 2,0, 0.5, 0,1, 0.5, 0,2, // plus pattern\n   0.2, -1,-1, 0.2, 1,-1, 0.2, -1,1, 0.2, 1,1], // diagonals\n  [1, 0,0,\n   0.2, 0,-1, 0.2, 0,-2, 0.2, -1,0, 0.2, -2,0, 0.2, 1,0, 0.2, 2,0, 0.2, 0,1, 0.2, 0,2,\n   0.2, -1,-1, 0.2, 1,-1, 0.2, -1,1, 0.2, 1,1],\n];\n\nlet counts = {\n  bicubic: 0,\n  getSampleBuf: 0,\n  realizeStars: 0,\n  realizeStarsFinish: 0,\n  perturb: 0,\n  assignChildStars: 0,\n  data: 0,\n  star_buf: 0,\n  hue_buf: 0,\n  getCellTextured: 0,\n  tex: 0,\n  cell: 0,\n  star: 0,\n  renderStars: 0,\n};\n\nlet star_buf_pool: Float32Array[] = [];\nlet hue_buf_pool: Uint8Array[] = [];\n\nlet noise = new Array(2);\nlet rand = randCreate(0);\nexport type PerturbParams = {\n  noise_freq: number;\n  noise_weight: number;\n};\nexport type GenGalaxyParams = {\n  seed: number;\n  arms: number;\n  buf_dim: number;\n  twirl: number;\n  center: number;\n  poi_count: number;\n  len_mods: number;\n  noise_freq: number;\n  noise_weight: number;\n  star_count: number;\n  max_zoom: number;\n  layer1?: PerturbParams;\n  layer2?: PerturbParams;\n  layer3?: PerturbParams;\n  layer4?: PerturbParams;\n  layer5?: PerturbParams;\n};\ntype POI = {\n  x: number;\n  y: number;\n  type: number;\n  v: number;\n};\ntype GenGalaxyRet = {\n  data: Float32Array;\n  sum: number;\n  sumsq: number;\n  star_count: number;\n  pois: POI[];\n};\nfunction genGalaxy(params: GenGalaxyParams): GenGalaxyRet {\n  let {\n    seed, arms, buf_dim, twirl, center, poi_count, len_mods, noise_freq, noise_weight,\n    star_count, max_zoom,\n  } = params;\n  for (let ii = 0; ii < noise.length; ++ii) {\n    noise[ii] = new SimplexNoise(`${seed}n${ii}`);\n  }\n  rand.reseed(seed);\n  let arm_len = new Array(len_mods);\n  for (let ii = 0; ii < arm_len.length; ++ii) {\n    arm_len[ii] = rand.random();\n  }\n\n  let data = new Float32Array(buf_dim * buf_dim);\n  for (let idx = 0, yy = 0; yy < buf_dim; ++yy) {\n    let y = yy / buf_dim * 2 - 1; // -1 ... 1\n    for (let xx = 0; xx < buf_dim; ++xx, ++idx) {\n      let x = xx / buf_dim * 2 - 1; // -1 ... 1\n      let d = sqrt(x * x + y * y);\n      let rawd = d;\n      let theta = atan2(x, y);\n      let rawtheta = theta;\n      theta += d*twirl;\n      //let dense = sin(theta * 7) * 0.5 + 0.5;\n      let dense = theta / (2*PI); // 0...1\n      while (dense < 0) {\n        dense += 1;\n      }\n      let armidx = (dense * 2 % 1) * arm_len.length;\n      let armi = floor(armidx);\n      let armf = armidx - armi;\n      let interp_arm_len = lerp(easeInOut(armf, 2), arm_len[armi], arm_len[(armi + 1) % arm_len.length]);\n      d *= 1 + interp_arm_len;\n\n      dense *= arms; // 0..arms\n      dense %= 1;\n      dense = abs(dense *2 - 1);\n      dense *= dense;\n      let invd = max(0, 1 - d);\n      // Change falloff to be tighter farther out\n      let id2 = max(0, min(1, invd * 2));\n      if (id2 === 0) {\n        dense = 0;\n      } else {\n        dense = max(0, min(1, dense / id2 - (1 / id2 - 1)));\n      }\n      dense = easeOut(dense, 2);\n      //dense = arm_soft + (1 - arm_soft) * dense;\n      let v;\n      dense = lerp(min(d, 1), invd, dense);\n      v = dense;\n      //v = dense - d;\n      let cv = clamp((center - rawd) * 20, 0, 1);\n      v += easeInOut(cv, 2);\n\n      let noise_v1 = noise[0].noise2D(rawd * noise_freq, theta * d) * 0.5 + 0.5;\n      let theta_rot = ((rawtheta + PI*2) % (PI*2) + d*twirl);\n      let noise_v2 = noise[0].noise2D(rawd * noise_freq, theta_rot * d) * 0.5 + 0.5;\n      let theta01 = (rawtheta/(PI*2)+1)%1;\n      let noise_v = lerp(abs(theta01 * 2 - 1), noise_v2, noise_v1);\n      noise_v = (noise_v * 2) - 1;\n      // as v goes from 0 to 0.1, fade noise_v from 0.05 to 1\n      noise_v *= lerp(clamp(v * 10, 0, 1), 0.05, 1);\n      // as v goes above a threshold, fade noise_v from 1 to 0\n      noise_v *= lerp(clamp((v - 0.7)/0.1, 0, 1), 1, 0);\n      // as d goes to 1, fade out noise_v\n      noise_v *= lerp(clamp((rawd-0.7)/0.3, 0, 1), 1, 0);\n      v += noise_v * noise_weight;\n      // noise_v = max(0, 1 - (1 - noise_v) * d * noise_weight);\n      // v *= noise_v;\n      data[idx] = max(v, 0); // clamp(v, 0, 1);\n    }\n  }\n\n  const POI_BORDER = 5;\n  let pois = [];\n  let poi_offs = 0.5 / pow(2, max_zoom);\n  for (let ii = 0; ii < poi_count; ++ii) {\n    let x = POI_BORDER + rand.range(buf_dim - POI_BORDER * 2);\n    let y = POI_BORDER + rand.range(buf_dim - POI_BORDER * 2);\n    let v = rand.floatBetween(0.2, 1);\n    // Also add a little density around the POI\n    let idx = x + y * buf_dim;\n    data[idx] = max(data[idx], v * 0.5);\n    x = x/buf_dim + poi_offs; // center in a final zoomed in cell\n    y = y/buf_dim + poi_offs; // center in a final zoomed in cell\n    let type = rand.range(POI_TYPE_OFFS.length);\n    pois.push({\n      x, y,\n      type, v,\n    });\n  }\n\n  let sum = 0;\n  let sumsq = 0;\n  for (let ii = 0; ii < data.length; ++ii) {\n    let v = data[ii];\n    sum += v;\n    sumsq += v*v;\n  }\n\n  return {\n    data,\n    sum,\n    sumsq,\n    star_count,\n    pois,\n  };\n}\n\nlet tex_pool: Texture[] = [];\nlet tex_id_idx = 0;\n\ntype GalaxyLayer = GalaxyCell[];\n\nexport class Galaxy {\n  buf_dim: number;\n  tex_total_size: number;\n  tex_data: Uint8Array;\n  layers: GalaxyLayer[];\n  work_frame = 0;\n  loading = false;\n  constructor(public params: GenGalaxyParams) {\n    let buf_dim = this.buf_dim = params.buf_dim;\n    let tex_total_size = this.tex_total_size = buf_dim * buf_dim;\n    this.tex_data = new Uint8Array(tex_total_size * 4);\n    this.layers = [];\n  }\n\n  sample_buf?: Float32Array;\n  last_sample_buf?: string;\n  declare getSampleBuf: (layer_idx: number, cx: number, cy: number) => Float32Array | null;\n\n  declare getCell: (layer_idx: number, cell_idx: number) => GalaxyCellAlloced;\n  declare getCellJustAlloc: (layer_idx: number, cell_idx: number) => GalaxyCell;\n  declare getCellInternal: (layer_idx: number, cell_idx: number, just_alloc: boolean) => GalaxyCell;\n  declare realizeStars: (cell: GalaxyCell) => boolean;\n  declare renderStars: (cell: GalaxyCell) => boolean;\n  declare assignChildStars: (cell: GalaxyCell) => void;\n  declare perturb: (cell: GalaxyCell, params: { noise_freq: number; noise_weight: number })=> void;\n\n  stars?: Partial<Record<number, Star>>;\n  declare getStar: (star_id: number) => Star | null;\n  declare getStarData: (star: Star) => asserts star is WithRequired<Star, 'solar_system'>;\n  declare dispose: () => void;\n  declare getCellTextured: (layer_idx: number, cell_idx: number) => GalaxyCellAlloced;\n  declare starsNear: (x: number, y: number, num: number) => number[];\n}\n\nconst SAMPLE_PAD = 4;\n// function expandLinear16X(data, buf_dim, xq, yq) {\n//   let sample_dim = buf_dim + SAMPLE_PAD * 2;\n//   let ret = new Float32Array(buf_dim * buf_dim);\n//   let qs = buf_dim / 4;\n//   for (let yy = 0; yy < buf_dim; ++yy) {\n//     for (let xx = 0; xx < buf_dim; ++xx) {\n//       let x_in = floor(xx / 4);\n//       let dx = xx/4 - x_in;\n//       let y_in = floor(yy / 4);\n//       let dy = yy/4 - y_in;\n//       let in_idx = (y_in + yq * qs + SAMPLE_PAD) * sample_dim + x_in + xq * qs + SAMPLE_PAD;\n//       let v00 = data[in_idx];\n//       let v10 = data[in_idx + 1];\n//       let v01 = data[in_idx + sample_dim];\n//       let v11 = data[in_idx + sample_dim + 1];\n//       let v0 = lerp(dy, v00, v01);\n//       let v1 = lerp(dy, v10, v11);\n//       ret[xx + yy * buf_dim] = lerp(dx, v0, v1);\n//     }\n//   }\n//   return ret;\n// }\n\n// from http://paulbourke.net/miscellaneous/imageprocess/\nlet cubic_weights = (function () {\n  function cub(v: number): number {\n    return v*v*v;\n  }\n  function p(v: number): number {\n    return max(0, v);\n  }\n  function r(x: number): number {\n    let v= 1/6 * (cub(p(x+2)) - 4 * cub(p(x+1)) + 6*cub(p(x)) - 4 * cub(p(x-1)));\n    return v;\n  }\n  function weight(ii: number, jj: number, dx: number, dy: number): number {\n    return r(ii - dx/4) * r(jj - dy/4);\n  }\n  let ret: number[][][] = [];\n  for (let dy = 0; dy < 4; ++dy) {\n    let row: number[][] = [];\n    ret.push(row);\n    for (let dx = 0; dx < 4; ++dx) {\n      let w = [];\n      for (let ii = -1; ii <= 2; ++ii) {\n        for (let jj = -1; jj <= 2; ++jj) {\n          w.push(weight(ii, jj, dx, dy));\n        }\n      }\n      row.push(w);\n    }\n  }\n  return ret;\n}());\nfunction expandBicubic16X(data: Float32Array, buf_dim: number, xq: number, yq: number): Float32Array {\n  ++counts.bicubic;\n  let sample_dim = buf_dim + SAMPLE_PAD * 2;\n  let ret = new Float32Array(buf_dim * buf_dim);\n  ++counts.data;\n  let qs = buf_dim / 4;\n  let idx_add = (yq * qs + SAMPLE_PAD) * sample_dim + xq * qs + SAMPLE_PAD;\n  for (let yy = 0; yy < buf_dim; ++yy) {\n    let y_in = floor(yy / 4);\n    let dy = yy - y_in * 4;\n    let in_idx_y = y_in * sample_dim + idx_add;\n    let w_row = cubic_weights[dy];\n    for (let xx = 0; xx < buf_dim; ++xx) {\n      let x_in = floor(xx / 4);\n      let dx = xx - x_in * 4;\n      let in_idx = in_idx_y + x_in;\n      let sum = 0;\n      let weights = w_row[dx];\n      for (let ii = -1, widx=0; ii <= 2; ++ii) {\n        for (let jj = -1; jj <= 2; ++jj, ++widx) {\n          sum += data[in_idx + ii + jj * sample_dim] * weights[widx];\n        }\n      }\n      ret[xx + yy * buf_dim] = sum;\n    }\n  }\n  return ret;\n}\n\n\n// Gets a padded buffer from the specified cell and all neighbors\nGalaxy.prototype.getSampleBuf = function (layer_idx: number, cx: number, cy: number): Float32Array | null {\n  let { sample_buf, buf_dim } = this;\n  let key = [layer_idx, cx, cy].join();\n  if (this.last_sample_buf === key) {\n    return sample_buf!;\n  }\n  let layer_res = pow(LAYER_STEP, layer_idx);\n  let sample_dim = buf_dim + SAMPLE_PAD * 2;\n  if (!sample_buf) {\n    sample_buf = this.sample_buf = new Float32Array(sample_dim*sample_dim);\n  }\n  // Call getCell() on all requirements (may recurse into here)\n  let bufs: (Float32Array|null)[][] = [];\n  for (let dy = -1; dy <= 1; ++dy) {\n    let py = cy + dy;\n    bufs[dy] = [];\n    for (let dx = -1; dx <= 1; ++dx) {\n      let px = cx + dx;\n      let buf;\n      if (px < 0 || px >= layer_res || py < 0 || py >= layer_res) {\n        buf = null;\n      } else {\n        let cell = this.getCell(layer_idx, px + py * layer_res);\n        if (!cell.ready) {\n          return null;\n        }\n        buf = cell.data;\n        assert(buf);\n      }\n      bufs[dy][dx] = buf;\n    }\n  }\n\n  if (engine.frame_index === this.work_frame && !this.loading) {\n    return null;\n  }\n\n  ++counts.getSampleBuf;\n  for (let dy = -1; dy <= 1; ++dy) {\n    for (let dx = -1; dx <= 1; ++dx) {\n      let buf = bufs[dy][dx];\n      let ox = SAMPLE_PAD + dx * buf_dim;\n      let oy = SAMPLE_PAD + dy * buf_dim;\n      let x0 = max(0, -ox);\n      let y0 = max(0, -oy);\n      let x1 = min(buf_dim, sample_dim - ox);\n      let y1 = min(buf_dim, sample_dim - oy);\n      for (let xx = x0; xx < x1; ++xx) {\n        for (let yy = y0; yy < y1; ++yy) {\n          sample_buf[ox + xx + (oy + yy) * sample_dim] = buf ? buf[xx + yy * buf_dim] : 0;\n        }\n      }\n    }\n  }\n  this.last_sample_buf = key;\n  return sample_buf;\n};\n\ntype StarProgress = {\n  state: unknown;\n  y: number;\n  out: number;\n};\n\nconst STAR_QUOTA = 14; // ms\nlet realize_scratch_buf: Float64Array;\nlet realize_scratch_buf_size = 0;\nGalaxy.prototype.realizeStars = function (cell: GalaxyCell): boolean {\n  let start = Date.now();\n  let {\n    layer_idx, cell_idx, star_count, data, sum, sumsq, x0, y0, w, pois,\n    star_progress, star_storage,\n  } = cell;\n  assert(star_count !== undefined);\n  assert(sum !== undefined);\n  assert(sumsq !== undefined);\n  assert(pois);\n  let scale = star_count / lerp(SUMSQ, sum, sumsq) * 1.03;\n  assert.equal(layer_idx, STAR_LAYER); // consistent IDs only on this layer\n  let { buf_dim, params } = this;\n  let { seed } = params;\n  let yy0;\n  let out_idx: number;\n  ++counts.realizeStars;\n  if (!star_progress) {\n    assert(star_count >= pois.length);\n    rand.reseed(mashString(`${seed}_${layer_idx}_${cell_idx}`));\n    star_storage = cell.star_storage = new Float64Array(star_count * 2);\n    cell.star_storage_start = 0;\n    yy0 = 0;\n    out_idx = 0;\n  } else {\n    if (star_progress.state) {\n      rand.importState(star_progress.state);\n    }\n    yy0 = star_progress.y;\n    out_idx = star_progress.out;\n    assert(star_storage);\n  }\n  // const value_scale = 0.75; // Was: (sum / star_count), which was ~0.75 before SUMSQ\n  function addStarSub(x: number, y: number): void {\n    assert(star_storage); // workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n    assert(pois); // workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n    ++counts.star;\n    let idx;\n    if (out_idx === star_count) {\n      idx = rand.range(star_count - pois.length) + pois.length;\n    } else {\n      idx = out_idx++;\n    }\n    star_storage[idx*2] = x;\n    star_storage[idx*2+1] = y;\n    let xfloat = star_storage[idx*2];\n    let yfloat = star_storage[idx*2+1];\n    assert(xfloat >= cell.x0);\n    assert(xfloat < cell.x0 + w);\n    assert(yfloat >= cell.y0);\n    assert(yfloat < cell.y0 + w);\n  }\n  function addStar(xx: number, yy: number): void {\n    // type: rand.range(POI_TYPE_OFFS.length),  // this choice now implicit from the ID\n    // v: (0.5 + rand.random()) * value_scale, // this choice now implicit from the ID\n    let x = x0 + xx/buf_dim * w;\n    let y = y0 + yy/buf_dim * w;\n    addStarSub(x, y);\n  }\n  if (star_count) {\n    assert(data);\n    let expire = start + STAR_QUOTA;\n    if (out_idx === 0) {\n      for (let ii = 0; ii < pois.length; ++ii) {\n        let poi = pois[ii];\n        addStarSub(poi.x, poi.y);  // Losing ID / changing shape here!\n        // stars[out_idx++] = poi; // Losing ID / changing shape here!\n      }\n    }\n    for (let idx=yy0*buf_dim, yy = yy0; yy < buf_dim; ++yy) {\n      for (let xx = 0; xx < buf_dim; ++xx, ++idx) {\n        let v = data[idx];\n        v *= 1 + SUMSQ * (v - 1); // v = lerp(SUMSQ, v, v*v);\n        let expected_stars = v * scale;\n        // assert(expected_stars < 10); // sometimes more than 65\n        // assert(expected_stars < 50);\n        let actual_stars = floor(rand.random() * (expected_stars + 1) + expected_stars * 0.5);\n        for (let ii = 0; ii < actual_stars; ++ii) {\n          // uniform within sub-cell\n          addStar(xx + rand.random(), yy + rand.random());\n        }\n      }\n      if (Date.now() > expire && yy !== buf_dim - 1 && !this.loading) {\n        cell.star_progress = {\n          y: yy + 1,\n          state: rand.exportState(),\n          out: out_idx,\n        };\n        //let end = Date.now();\n        //console.log(`realizeStars(${star_count}): ${end - start}ms place (partial ${yy - yy0 + 1})`);\n        return false;\n      }\n    }\n    // console.log((stars.length-star_count)/star_count, stars.length, star_count); // about 5% under to 30% over\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (out_idx < star_count) {\n      addStar(rand.floatBetween(0, buf_dim), rand.floatBetween(0, buf_dim));\n    }\n    assert.equal(out_idx, star_count);\n\n    // TODO: relaxation step to separate really close stars (1/1000 ly? <=2px in highest res buffer?)\n\n    // sort by xy into octants\n    let temp = new Array(star_count);\n    for (let ii = 0; ii < star_count; ++ii) {\n      temp[ii] = ii*2;\n    }\n    let mod0 = w/LAYER_STEP;\n    temp.sort((ai, bi) => {\n      assert(star_storage); // workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      let ax = star_storage[ai];\n      let ay = star_storage[ai+1];\n      let bx = star_storage[bi];\n      let by = star_storage[bi+1];\n      let mod = mod0;\n      let layer = layer_idx;\n      while (true) {\n        if (layer === MAX_LAYER+1) {\n          return 0;\n        }\n        let ayi = floor(ay / mod);\n        let byi = floor(by / mod);\n        if (ayi !== byi) {\n          return ayi - byi;\n        }\n        let axi = floor(ax / mod);\n        let bxi = floor(bx / mod);\n        if (axi !== bxi) {\n          return axi - bxi;\n        }\n        mod /= LAYER_STEP;\n        ++layer;\n      }\n    });\n    if (star_count > realize_scratch_buf_size) {\n      realize_scratch_buf_size = ceil(1.25 * star_count);\n      realize_scratch_buf = new Float64Array(realize_scratch_buf_size*2);\n    }\n    // fill buffer\n    for (let ii = 0; ii < star_count; ++ii) {\n      let idx = temp[ii];\n      realize_scratch_buf[ii*2] = star_storage[idx];\n      realize_scratch_buf[ii*2+1] = star_storage[idx+1];\n      let x = realize_scratch_buf[ii*2];\n      let y = realize_scratch_buf[ii*2+1];\n      assert(x >= cell.x0);\n      assert(x < cell.x0 + w);\n      assert(y >= cell.y0);\n      assert(y < cell.y0 + w);\n    }\n    for (let ii = 0; ii < star_count * 2; ++ii) {\n      star_storage[ii] = realize_scratch_buf[ii];\n    }\n  }\n  delete cell.star_progress;\n  // let end = Date.now();\n  // console.log(`realizeStars(${star_count}): ${end - start}ms place`);\n  ++counts.realizeStarsFinish;\n  return true;\n};\n\n// https://stackoverflow.com/questions/664014/what-integer-hash-function-are-good-that-accepts-an-integer-hash-key\nfunction hash(x: number): number {\n  x = (((x >>> 16) ^ x) * 0x45d9f3b) >>> 0;\n  x = (((x >>> 16) ^ x) * 0x45d9f3b) >>> 0;\n  x = ((x >>> 16) ^ x) >>> 0;\n  return x;\n}\nfunction starValueFromID(id: number): number {\n  return (0.5 + hash(id) / 0xffffffff) * 0.75;\n}\nfunction starVisTypeFromID(id: number): number {\n  return ((hash(id) & 0x7fff) / 0x8000 * POI_TYPE_OFFS.length) | 0;\n}\n\n// render into `data` appropriately for the current zoom\n{\n  const blur_weights = [\n    1/16, 1/8, 1/16,\n    1/8, 1/4, 1/8,\n    1/16, 1/8, 1/16,\n    // 0,0,0,\n    // 0,1,0,\n    // 0,0,0,\n  ];\n  // Note: this function gets called recursively\n  Galaxy.prototype.renderStars = function (cell: GalaxyCell): boolean {\n    let { layer_idx, x0, y0, w, cx, cy } = cell;\n    let { buf_dim } = this;\n    let scale = buf_dim / w;\n\n    let layer_res = pow(LAYER_STEP, layer_idx);\n    let ndata = [];\n    let nhue = [];\n    for (let yy = -1; yy <= 1; ++yy) {\n      let ncy = cy + yy;\n      for (let xx = -1; xx <= 1; ++xx) {\n        let ncx = cx + xx;\n        let n;\n        if (ncy < 0 || ncy >= layer_res || ncx < 0 || ncx >= layer_res) {\n          n = cell;\n        } else {\n          n = this.getCellJustAlloc(layer_idx, ncx + ncy * layer_res);\n        }\n        assert(!n.tex); // just for debug, make sure this neighbor we're writing into hasn't already made a texture\n        if (!n.star_buf) {\n          if (star_buf_pool.length) {\n            n.star_buf = star_buf_pool.pop()!;\n            n.star_buf.fill(0);\n          } else {\n            n.star_buf = new Float32Array(buf_dim * buf_dim);\n            ++counts.star_buf;\n          }\n        }\n        ndata.push(n.star_buf);\n        if (!n.hue_buf) {\n          if (hue_buf_pool.length) {\n            n.hue_buf = hue_buf_pool.pop()!;\n            n.hue_buf.fill(0);\n          } else {\n            n.hue_buf = new Uint8Array(buf_dim * buf_dim);\n            ++counts.hue_buf;\n          }\n        }\n        nhue.push(n.hue_buf);\n      }\n    }\n    assert(ndata[4] === cell.star_buf);\n    ++counts.renderStars;\n\n    let weights: number[] = [];\n    let xpos: number[] = [];\n    let ypos: number[] = [];\n    // let { max_zoom } = this.params;\n    // let max_res = pow(2, max_zoom);\n    let { star_count, star_storage, star_storage_start, star_idx } = cell;\n    assert(star_storage);\n    assert(star_storage_start !== undefined);\n    assert(star_count !== undefined);\n    assert(star_idx !== undefined);\n    let store_idx = star_storage_start*2;\n    for (let ii = 0; ii < star_count; ++ii) {\n      let x = star_storage[store_idx++];\n      let y = star_storage[store_idx++];\n      let id = star_idx + ii;\n      let v = starValueFromID(id);\n      x = (x - x0) * scale;\n      y = (y - y0) * scale;\n      if (layer_idx === 7 || layer_idx === 6) {\n        let hue = hueFromID(id);\n        const r = layer_idx === 7 ? 2 : 1.5;\n        const vscale = layer_idx === 7 ? 4 : 2;\n        const rsq = r * r;\n        let wtot = 0;\n        let widx = 0;\n        // scoot in so we don't need to go into neighboring data\n        // TODO: This causes visible seams, but without it we get discontinuities - need to render neighbor stars too!\n        // x = max(r/2 + 0.5, min(buf_dim - r/2 - 0.5, x));\n        // y = max(r/2 + 0.5, min(buf_dim - r/2 - 0.5, y));\n        let ix = floor(x);\n        let iy = floor(y);\n        if (layer_idx === 7) {\n          // distance squared falloff blurred star\n          for (let yy = floor(-r); yy <= ceil(r); ++yy) {\n            let dy = iy + yy - y + 0.5;\n            if (abs(dy) >= r) {\n              continue;\n            }\n            for (let xx = floor(-r); xx <= ceil(r); ++xx) {\n              let dx = ix + xx - x + 0.5;\n              let dsq = dx * dx + dy * dy;\n              if (dsq >= rsq) {\n                continue;\n              }\n              let d =sqrt(dsq);\n              let wt = (1-d/r)*(1-d/r);\n              // let wt = 1 - dsq / rsq;\n              wtot += wt;\n              weights[widx] = wt;\n              xpos[widx] = ix + xx;\n              ypos[widx++] = iy + yy;\n            }\n          }\n        } else if (layer_idx === 6) {\n          weights = blur_weights;\n          wtot = 1;\n          for (let yy = -1; yy <= 1; ++yy) {\n            for (let xx = -1; xx <= 1; ++xx) {\n              xpos[widx] = ix + xx;\n              ypos[widx++] = iy + yy;\n            }\n          }\n        }\n        for (let jj = 0; jj < widx; ++jj) {\n          let wt = weights[jj];\n          let xx = xpos[jj];\n          let yy = ypos[jj];\n          let nid = 4;\n          if (xx < 0) {\n            nid--;\n            xx+=buf_dim;\n          } else if (xx >= buf_dim) {\n            nid++;\n            xx-=buf_dim;\n          }\n          if (yy < 0) {\n            nid-=3;\n            yy+=buf_dim;\n          } else if (yy >= buf_dim) {\n            nid+=3;\n            yy-=buf_dim;\n          }\n          let data = ndata[nid];\n          let hue_buf = nhue[nid];\n          let idx = xx + yy * buf_dim;\n          let old_w = data[idx];\n          let new_w = wt / wtot;\n          data[idx] += v * vscale * new_w;\n          hue_buf[idx] = round((old_w * hue_buf[idx] + hue * new_w) / (new_w + old_w));\n        }\n      } else {\n        // layer 8, basically ignored?  Move poi-style star rendering here to deal with wrap-around?\n        // let ix = floor(x);\n        // let iy = floor(y);\n        // let idx = ix + iy * buf_dim;\n        // // just add\n        // cell.data[idx] += v;\n      }\n    }\n    return true;\n  };\n}\n\ntype CellChildData = {\n  pois: POI[];\n  star_count?: number;\n  star_idx?: number;\n  store_start?: number;\n  store_count?: number;\n};\n\nGalaxy.prototype.assignChildStars = function (cell: GalaxyCell): void {\n  let { buf_dim } = this;\n  let { pois, star_count, sum, sumsq, data, star_idx, star_storage, star_storage_start } = cell;\n  let child_data: CellChildData[] = [];\n  for (let ii = 0; ii < LAYER_STEP * LAYER_STEP; ++ii) {\n    child_data.push({ pois: [] });\n  }\n  assert(pois);\n  assert(star_count !== undefined);\n  if (!star_storage) {\n    assert(sumsq !== undefined);\n    assert(star_idx !== undefined);\n    assert(data);\n    let qs = buf_dim / LAYER_STEP;\n    let running_sum = 0;\n    let running_sumsq = 0;\n    let last_star_count = 0;\n    for (let idx=0, yy = 0; yy < LAYER_STEP; ++yy) {\n      for (let xx = 0; xx < LAYER_STEP; ++xx, ++idx) {\n        if (sum) {\n          let idxbase = xx * qs + yy * qs * buf_dim;\n          for (let jj = 0; jj < qs; ++jj) {\n            let idx_in = idxbase + jj * buf_dim;\n            for (let ii = 0; ii < qs; ++ii, ++idx_in) {\n              let v = data[idx_in];\n              running_sum += v;\n              running_sumsq += v*v;\n            }\n          }\n        }\n        let sc = sum ? round(lerp(SUMSQ, running_sum / sum, running_sumsq / sumsq) * star_count) : 0;\n        child_data[idx].star_count = sc - last_star_count;\n        child_data[idx].star_idx = star_idx + last_star_count;\n        last_star_count = sc;\n      }\n    }\n    assert.equal(last_star_count, star_count);\n  }\n  let mul = LAYER_STEP / cell.w;\n  for (let ii = 0; ii < pois.length; ++ii) {\n    let poi = pois[ii];\n    let qx = floor((poi.x - cell.x0) * mul);\n    let qy = floor((poi.y - cell.y0) * mul);\n    assert(qx >= 0 && qx < LAYER_STEP);\n    assert(qy >= 0 && qy < LAYER_STEP);\n    let idx = qy * LAYER_STEP + qx;\n    child_data[idx].pois.push(poi);\n  }\n  if (star_storage) {\n    assert(star_storage_start !== undefined);\n    let child_idx = 0;\n    let last_start = star_storage_start;\n    let end = star_storage_start + star_count;\n    for (let ii = star_storage_start; ii < end; ++ii) {\n      let x = star_storage[ii*2];\n      let y = star_storage[ii*2+1];\n      let qx = floor((x - cell.x0) * mul);\n      let qy = floor((y - cell.y0) * mul);\n      assert(qx >= 0 && qx < LAYER_STEP);\n      assert(qy >= 0 && qy < LAYER_STEP);\n      let idx = qy * LAYER_STEP + qx;\n      assert(idx >= child_idx);\n      while (child_idx < idx) {\n        child_data[child_idx].store_start = last_start;\n        child_data[child_idx++].store_count = ii - last_start;\n        last_start = ii;\n      }\n    }\n    while (child_idx < LAYER_STEP * LAYER_STEP) {\n      child_data[child_idx].store_start = last_start;\n      child_data[child_idx++].store_count = end - last_start;\n      last_start = end;\n    }\n  }\n  cell.child_data = child_data;\n  ++counts.assignChildStars;\n};\n\nGalaxy.prototype.perturb = function (cell: GalaxyCell, params: PerturbParams): void {\n  let { buf_dim } = this;\n  let { noise_freq, noise_weight } = params;\n  let { data, x0, y0, w } = cell;\n  assert(data);\n  let mul = w / buf_dim;\n  for (let idx=0, yy = 0; yy < buf_dim; ++yy) {\n    let world_y = y0 + yy * mul;\n    for (let xx = 0; xx < buf_dim; ++xx, ++idx) {\n      let world_x = x0 + xx * mul;\n      let noisev = noise[1].noise2D(world_x * noise_freq, world_y * noise_freq);\n      //data[idx] *= 1 + noise_weight * noisev; // uniform scale around 1.0\n      // instead, only decrease, makes rendered maps look better, darken as you zoom in\n      let v = data[idx] * (1 + noise_weight * (noisev * 0.5 - 0.5));\n      // assert(v >= 0); // not if noise_weight > 1\n      v = max(0, v);\n      data[idx] = v;\n    }\n  }\n  ++counts.perturb;\n};\n\nexport type GalaxyCell = {\n  x0: number;\n  y0: number;\n  w: number;\n  h: number;\n  layer_idx: number;\n  cell_idx: number;\n  cx: number;\n  cy: number;\n  ready: boolean;\n\n  sum?: number;\n  sumsq?: number;\n  data: Float32Array | null;\n  star_count?: number;\n  star_idx?: number;\n  stars_ready?: boolean;\n  pois?: POI[];\n  star_progress?: StarProgress;\n  star_storage?: Float64Array;\n  star_storage_start?: number;\n  star_buf: Float32Array | null;\n  hue_buf: Uint8Array | null;\n  tex: Texture | null;\n  child_data?: CellChildData[];\n};\nexport type GalaxyCellAlloced = WithRequired<GalaxyCell, 'pois' | 'star_count' | 'sum' | 'sumsq' | 'star_idx' | 'data'>;\nGalaxy.prototype.getCellJustAlloc = function (layer_idx: number, cell_idx: number): GalaxyCell {\n  return this.getCellInternal(layer_idx, cell_idx, true);\n};\nGalaxy.prototype.getCell = function (layer_idx: number, cell_idx: number): GalaxyCellAlloced {\n  return this.getCellInternal(layer_idx, cell_idx, false) as GalaxyCellAlloced;\n};\nGalaxy.prototype.getCellInternal = function (layer_idx: number, cell_idx: number, just_alloc: boolean): GalaxyCell {\n  if (layer_idx > MAX_LAYER) {\n    return {} as GalaxyCell;\n  }\n  let { layers, buf_dim, params } = this;\n  let layer = layers[layer_idx];\n  if (!layer) {\n    layer = layers[layer_idx] = [];\n  }\n  let cell = layer[cell_idx];\n  if (cell && cell.ready) {\n    return cell;\n  }\n\n  let layer_res = pow(LAYER_STEP, layer_idx);\n  let cx = cell_idx % layer_res;\n  let cy = floor(cell_idx / layer_res);\n  let x0 = cx / layer_res;\n  let y0 = cy / layer_res;\n  let w = 1/layer_res;\n  if (!cell) {\n    ++counts.cell;\n    cell = {\n      // relative position and size to entire galaxy\n      x0, y0, w, h: w,\n      layer_idx, cell_idx, cx, cy,\n      ready: false,\n      data: null,\n      star_buf: null,\n      hue_buf: null,\n      tex: null,\n    };\n    layer[cell_idx] = cell;\n  }\n\n  if (just_alloc) {\n    return cell;\n  }\n\n  // Fill it\n  if (layer_idx === 0) {\n    assert(cell_idx === 0);\n    let ret = genGalaxy(params);\n    cell.sum = ret.sum;\n    cell.sumsq = ret.sumsq;\n    cell.data = ret.data;\n    cell.star_count = ret.star_count;\n    cell.star_idx = 0;\n    cell.stars_ready = true;\n    cell.pois = ret.pois;\n  } else {\n    // How many cells wide is this layer?\n    let px = floor(cx / LAYER_STEP);\n    let py = floor(cy / LAYER_STEP);\n    let pres = pow(LAYER_STEP, layer_idx - 1);\n    let parent = this.getCell(layer_idx - 1, py * pres + px);\n    if (!parent.ready) {\n      return cell;\n    }\n\n    if (engine.frame_index === this.work_frame && !this.loading) {\n      // Already did one this frame (presumably a parent)\n      return cell;\n    }\n\n\n    let qx = cx - px * LAYER_STEP;\n    let qy = cy - py * LAYER_STEP;\n    let qidx = qx + qy * LAYER_STEP;\n\n    if (!cell.pois) {\n      assert(parent.child_data);\n      cell.pois = parent.child_data[qidx].pois;\n      // pois.filter((poi) => poi.x >= x0 && poi.x < x0 + w && poi.y >= y0 && poi.y < y0 + w);\n    }\n\n    if (!cell.data) {\n      if (layer_idx > STAR_LAYER) {\n        // just rendered stars, don't need interpolation here\n        cell.data = null;\n        // cell.data = new Float32Array(this.tex_total_size);\n        // ++counts.data;\n      } else {\n        let sample_buf = this.getSampleBuf(layer_idx - 1, px, py);\n        if (!sample_buf) {\n          // Already did one this frame\n          return cell;\n        }\n        // Going to do work, take the frame's allotment\n        this.work_frame = engine.frame_index;\n\n        // Have the parent sample buf, generate us\n        let data = cell.data = expandBicubic16X(sample_buf, buf_dim, qx, qy);\n        let key = `layer${layer_idx}` as 'layer1' | 'layer2'; // etc\n        if (params[key]) {\n          this.perturb(cell, params[key]!);\n        }\n        let sum = 0;\n        let sumsq = 0;\n        for (let ii = 0; ii < data.length; ++ii) {\n          let v = data[ii];\n          sum += v;\n          sumsq += v*v;\n        }\n        cell.sum = sum;\n        cell.sumsq = sumsq;\n      }\n    }\n\n    if (!cell.stars_ready) {\n      assert(parent.child_data);\n      if (parent.star_storage) {\n        assert(parent.star_idx !== undefined);\n        assert(parent.star_storage_start !== undefined);\n        // filter existing stars\n        cell.star_storage = parent.star_storage;\n        cell.star_storage_start = parent.child_data[qidx].store_start;\n        assert(cell.star_storage_start !== undefined);\n        cell.star_count = parent.child_data[qidx].store_count;\n        cell.star_idx = parent.star_idx + (cell.star_storage_start - parent.star_storage_start);\n      } else {\n        // count or generate stars\n        cell.star_count = parent.child_data[qidx].star_count;\n        cell.star_idx = parent.child_data[qidx].star_idx;\n\n        // did or will do work this frame\n        this.work_frame = engine.frame_index;\n\n        if (layer_idx === STAR_LAYER) { // || cell.star_count < 100000) {\n          // realize stars\n          if (!this.realizeStars(cell)) {\n            // didn't complete\n            return cell;\n          }\n        }\n      }\n      cell.stars_ready = true;\n    }\n    if (layer_idx >= STAR_LAYER) {\n      if (!this.renderStars(cell)) {\n        return cell;\n      }\n    }\n  }\n  this.assignChildStars(cell);\n  cell.ready = true;\n\n  return cell;\n};\n\n{\n  const debug_pix = [\n    [0,0,0,0,0,\n     0,0,1,0,0,\n     0,1,0,1,0,\n     0,1,0,1,0,\n     0,1,0,1,0,\n     0,0,1,0,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,0,1,0,0,\n     0,1,1,0,0,\n     0,0,1,0,0,\n     0,0,1,0,0,\n     0,1,1,1,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,0,1,0,0,\n     0,1,0,1,0,\n     0,0,0,1,0,\n     0,0,1,0,0,\n     0,1,1,1,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,1,1,0,0,\n     0,0,0,1,0,\n     0,1,1,0,0,\n     0,0,0,1,0,\n     0,1,1,0,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,1,0,1,0,\n     0,1,0,1,0,\n     0,1,1,1,0,\n     0,0,0,1,0,\n     0,0,0,1,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,1,1,1,0,\n     0,1,0,0,0,\n     0,1,1,0,0,\n     0,0,0,1,0,\n     0,1,1,0,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,0,1,1,0,\n     0,1,0,0,0,\n     0,1,1,1,0,\n     0,1,0,1,0,\n     0,1,1,1,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,1,1,1,0,\n     0,0,0,1,0,\n     0,0,0,1,0,\n     0,0,1,0,0,\n     0,0,1,0,0,\n     0,0,0,0,0],\n    [0,0,0,0,0,\n     0,1,1,1,0,\n     0,1,0,1,0,\n     0,1,1,1,0,\n     0,1,0,1,0,\n     0,1,1,1,0,\n     0,0,0,0,0],\n  ];\n  Galaxy.prototype.getCellTextured = function (layer_idx: number, cell_idx: number): GalaxyCellAlloced {\n    let { buf_dim, tex_data, tex_total_size } = this;\n    let cell = this.getCell(layer_idx, cell_idx);\n    if (cell.tex) {\n      return cell;\n    }\n    let { data, pois, x0, y0, w, ready, cx, cy } = cell;\n    if (!ready) {\n      // still loading\n      return cell;\n    }\n    assert(pois);\n    let layer_res = pow(LAYER_STEP, layer_idx);\n    if (layer_idx >= STAR_LAYER) {\n      data = cell.star_buf;\n      // neighbors must also be ready / have rendered stars\n      for (let yy = -1; yy <= 1; ++yy) {\n        let ny = cy + yy;\n        if (ny < 0 || ny >= layer_res) {\n          continue;\n        }\n        for (let xx = -1; xx <= 1; ++xx) {\n          let nx = cx + xx;\n          if (!nx && !ny || nx < 0 || nx >= layer_res) {\n            continue;\n          }\n          let n = this.getCell(layer_idx, nx + ny * layer_res);\n          if (!n.ready) {\n            return cell;\n          }\n        }\n      }\n    }\n    ++counts.getCellTextured;\n    assert(data);\n\n    let max_res = pow(2, this.params.max_zoom);\n    if (layer_res === max_res) {\n      for (let ii = 0; ii < tex_total_size; ++ii) {\n        tex_data[ii * 4 + 0] = 0; // brightness\n        tex_data[ii * 4 + 1] = 0; // hue\n        tex_data[ii * 4 + 2] = 0; // ignored\n        tex_data[ii * 4 + 3] = 255; // ignored\n      }\n      // Render in stars\n      let { star_storage, star_count, star_storage_start, star_idx } = cell;\n      assert(star_storage);\n      assert(star_storage_start !== undefined);\n      assert(star_count !== undefined);\n      assert(star_idx !== undefined);\n      let store_idx = star_storage_start*2;\n      for (let ii = 0; ii < star_count; ++ii) {\n        let x = star_storage[store_idx++];\n        let y = star_storage[store_idx++];\n        let id = star_idx + ii;\n        let type = starVisTypeFromID(id);\n        let v = starValueFromID(id);\n        let hue = hueFromID(id);\n        x = floor((x - x0) / w * buf_dim);\n        y = floor((y - y0) / w * buf_dim);\n        x = max(2, min(buf_dim - 2 - 1, x));\n        y = max(2, min(buf_dim - 2 - 1, y));\n        let idx = (x + y * buf_dim) * 4;\n        let offs = POI_TYPE_OFFS[type];\n        for (let jj = 0; jj < offs.length; jj+=3) {\n          let v2 = clamp(floor(v * offs[jj] * 255), 0, 255);\n          let dx = offs[jj+1];\n          let dy = offs[jj+2];\n          let xx = x + dx;\n          let yy = y + dy;\n          if (xx < 0 || xx >= buf_dim || yy < 0 || yy >= buf_dim) {\n            continue;\n          }\n          let d = (dx + dy * buf_dim) * 4;\n          tex_data[idx + d] = max(tex_data[idx + d], v2);\n          tex_data[idx + d + 1] = max(tex_data[idx + d + 1], hue);\n        }\n      }\n    } else {\n      let { hue_buf } = cell;\n      for (let ii = 0; ii < tex_total_size; ++ii) {\n        let d = data[ii];\n        tex_data[ii * 4 + 0] = clamp(floor(d * 255), 0, 255);\n        tex_data[ii * 4 + 1] = hue_buf ? hue_buf[ii] : 0;\n        tex_data[ii * 4 + 3] = 255;\n      }\n\n      // Render in POIs\n      for (let ii = 0; ii < pois.length; ++ii) {\n        let poi = pois[ii];\n        let { x, y, type, v } = poi;\n        x = floor((x - x0) / w * buf_dim);\n        y = floor((y - y0) / w * buf_dim);\n        let idx = (x + y * buf_dim) * 4;\n        let offs = POI_TYPE_OFFS[type];\n        for (let jj = 0; jj < offs.length; jj+=3) {\n          let v2 = clamp(floor(v * offs[jj] * 255), 0, 255);\n          let dx = offs[jj+1];\n          let dy = offs[jj+2];\n          let xx = x + dx;\n          let yy = y + dy;\n          if (xx < 0 || xx >= buf_dim || yy < 0 || yy >= buf_dim) {\n            continue;\n          }\n          let d = (dx + dy * buf_dim) * 4;\n          tex_data[idx + d + 0] = max(tex_data[idx + d + 0], v2);\n          tex_data[idx + d + 1] = max(tex_data[idx + d + 1], 0); // todo: use real hue?\n        }\n      }\n    }\n\n    if (engine.DEBUG && false) {\n      let dbg = debug_pix[layer_idx];\n      if (dbg) {\n        for (let idx=0, yy = 0; yy < 7; ++yy) {\n          for (let xx = 0; xx < 5; ++xx,++idx) {\n            let idx2 = (yy * buf_dim + xx) * 4;\n            for (let ii = 0; ii < 3; ++ii) {\n              tex_data[idx2 + ii] = dbg[idx] ? 255 : 0;\n            }\n          }\n        }\n      }\n    }\n\n    if (tex_pool.length) {\n      cell.tex = tex_pool.pop()!;\n      cell.tex.updateData(buf_dim, buf_dim, tex_data);\n    } else {\n      ++counts.tex;\n      cell.tex = textureLoad({\n        name: `galaxy_${++tex_id_idx}`,\n        format: TEXTURE_FORMAT.RGBA8,\n        width: buf_dim,\n        height: buf_dim,\n        data: tex_data,\n        filter_min: gl.NEAREST,\n        filter_mag: gl.NEAREST,\n        wrap_s: gl.CLAMP_TO_EDGE,\n        wrap_t: gl.CLAMP_TO_EDGE,\n      });\n    }\n\n    if (cell.star_buf) {\n      star_buf_pool.push(cell.star_buf);\n      cell.star_buf = null;\n    }\n    if (cell.hue_buf) {\n      hue_buf_pool.push(cell.hue_buf);\n      cell.hue_buf = null;\n    }\n    return cell;\n  };\n}\n\nexport function distSq(x1: number, y1: number, x2: number, y2: number): number {\n  let dx = x2 - x1;\n  let dy = y2 - y1;\n  return dx*dx + dy*dy;\n}\n\n{\n  const dy = [0, 1, -1];\n  const dx = [0, 1, -1];\n  Galaxy.prototype.starsNear = function (x: number, y: number, num: number): number[] {\n    let { layers } = this;\n    let layer_idx = MAX_LAYER - 1;\n    let layer = layers[layer_idx];\n    if (!layer) {\n      return [];\n    }\n    let layer_res = pow(LAYER_STEP, layer_idx);\n    let cx = floor(x * layer_res);\n    let cy = floor(y * layer_res);\n    let closest = new Array(num * 2); // dist, id\n    for (let ddy = 0; ddy <= 3; ++ddy) {\n      let yy = cy + dy[ddy];\n      if (yy < 0 || yy >= layer_res) {\n        continue;\n      }\n      for (let ddx = 0; ddx <= 3; ++ddx) {\n        let xx = cx + dx[ddx];\n        if (xx < 0 || xx >= layer_res) {\n          continue;\n        }\n        let cell_idx = yy * layer_res + xx;\n        let cell = layer[cell_idx];\n        if (!cell || !cell.star_storage) {\n          // incomplete data loaded, dynamic load here? just for stars?\n          continue;\n        }\n        let { star_storage, star_storage_start, star_count, star_idx } = cell;\n        assert(star_storage);\n        assert(star_storage_start !== undefined);\n        assert(star_count !== undefined);\n        assert(star_idx !== undefined);\n        let store_idx = star_storage_start*2;\n        for (let ii = 0; ii < star_count; ++ii) {\n          let star_x = star_storage[store_idx++];\n          let star_y = star_storage[store_idx++];\n          let star_id = star_idx + ii;\n          let star_dist = distSq(x, y, star_x, star_y);\n          for (let jj = 0; jj < closest.length; jj+=2) {\n            let other_id = closest[jj+1];\n            if (other_id === undefined) {\n              closest[jj] = star_dist;\n              closest[jj+1] = star_id;\n              break;\n            }\n\n            let other_dist = closest[jj];\n            if (star_dist < other_dist) {\n              closest[jj] = star_dist;\n              closest[jj+1] = star_id;\n              star_dist = other_dist;\n              star_id = other_id;\n            }\n          }\n        }\n      }\n    }\n    let ret = [];\n    for (let ii = 1; ii < closest.length; ii+=2) {\n      let id = closest[ii];\n      if (id !== undefined) {\n        ret.push(id);\n      }\n    }\n    return ret;\n  };\n}\n\nexport type Star = {\n  x: number;\n  y: number;\n  id: number;\n  solar_system?: SolarSystem;\n};\n\nGalaxy.prototype.getStar = function (star_id: number): Star | null {\n  let { layers, stars } = this;\n  if (!stars) {\n    this.stars = stars = {};\n  }\n  let existing = stars[star_id];\n  if (existing) {\n    return existing;\n  }\n  function search(layer_idx: number, cx: number, cy: number): Star | null {\n    let layer = layers[layer_idx];\n    let layer_res = pow(LAYER_STEP, layer_idx);\n    let cell_idx = cx + cy * layer_res;\n    let cell = layer[cell_idx];\n    if (!cell || !cell.stars_ready) {\n      return null;\n    }\n    assert(cell.star_idx !== undefined);\n    assert(cell.star_count !== undefined);\n    assert(star_id >= cell.star_idx);\n    if (layer_idx === STAR_LAYER) {\n      let { star_storage, star_storage_start } = cell;\n      if (!star_storage) {\n        return null;\n      }\n      assert(star_storage_start !== undefined);\n      let idx = star_id - cell.star_idx;\n      assert(idx < cell.star_count);\n      let store_idx = (star_storage_start + idx) * 2;\n      let x = star_storage[store_idx++];\n      let y = star_storage[store_idx++];\n      // Create and cache star\n      let star: Star = { x, y, id: star_id };\n      stars![star_id] = star; // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      return star;\n    }\n    // not this layer, drill down\n    if (!cell.child_data) {\n      return null;\n    }\n    for (let qidx = 0; qidx < cell.child_data.length; ++qidx) {\n      let cd = cell.child_data[qidx];\n      if (star_id < cd.star_idx! + cd.star_count!) {\n        let qx = qidx % LAYER_STEP;\n        let qy = (qidx - qx) / LAYER_STEP;\n        return search(layer_idx + 1, cx * LAYER_STEP + qx, cy * LAYER_STEP + qy);\n      }\n    }\n    assert(false);\n    return null;\n  }\n  return search(0, 0, 0);\n};\n\nGalaxy.prototype.getStarData = function (star: Star): asserts star is WithRequired<Star, 'solar_system'> {\n  if (!star.solar_system) {\n    star.solar_system = solarSystemCreate(this.params.seed, star);\n  }\n};\n\nGalaxy.prototype.dispose = function () {\n  let { layers } = this;\n  for (let ii = 0; ii < layers.length; ++ii) {\n    let layer = layers[ii];\n    for (let key in layer) {\n      let cell = layer[key];\n      if (cell.tex) {\n        tex_pool.push(cell.tex);\n        cell.tex = null;\n      }\n    }\n  }\n};\n\nlet debug_buf = JSON.stringify(counts, undefined, 2);\nsetInterval(() => {\n  let buf = JSON.stringify(counts, undefined, 2);\n  if (debug_buf !== buf) {\n    debug_buf = buf;\n    console.log(buf);\n  }\n}, 5000);\n\n\nexport function createGalaxy(params: GenGalaxyParams): Galaxy {\n  return new Galaxy(params);\n}\n","module.exports={\"font_size\":8,\"imageW\":128,\"imageH\":128,\"spread\":2,\"noFilter\":1,\"channels\":1,\"char_infos\":[{\"c\":2,\"x0\":2,\"y0\":2,\"xpad\":1,\"w\":5,\"h\":8},{\"c\":32,\"xpad\":4},{\"c\":33,\"x0\":102,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":1,\"h\":5},{\"c\":34,\"x0\":97,\"y0\":62,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":2},{\"c\":35,\"x0\":108,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":36,\"x0\":48,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":37,\"x0\":118,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":38,\"x0\":2,\"y0\":15,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":39,\"x0\":105,\"y0\":62,\"yoffs\":1,\"xpad\":1,\"w\":1,\"h\":2},{\"c\":40,\"x0\":12,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":5},{\"c\":41,\"x0\":19,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":5},{\"c\":42,\"x0\":57,\"y0\":63,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":3},{\"c\":43,\"x0\":65,\"y0\":63,\"yoffs\":2,\"xpad\":1,\"w\":3,\"h\":3},{\"c\":44,\"x0\":111,\"y0\":62,\"yoffs\":5,\"xpad\":1,\"w\":2,\"h\":2},{\"c\":45,\"x0\":18,\"y0\":74,\"yoffs\":3,\"xpad\":1,\"w\":3,\"h\":1},{\"c\":46,\"x0\":26,\"y0\":74,\"yoffs\":5,\"xpad\":1,\"w\":1,\"h\":1},{\"c\":47,\"x0\":26,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":48,\"x0\":36,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":49,\"x0\":45,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":5},{\"c\":50,\"x0\":52,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":51,\"x0\":61,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":52,\"x0\":70,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":53,\"x0\":79,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":54,\"x0\":88,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":55,\"x0\":97,\"y0\":13,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":56,\"x0\":106,\"y0\":12,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":57,\"x0\":115,\"y0\":12,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":58,\"x0\":73,\"y0\":62,\"yoffs\":2,\"xpad\":1,\"w\":1,\"h\":3},{\"c\":59,\"x0\":51,\"y0\":54,\"yoffs\":2,\"xpad\":1,\"w\":1,\"h\":4},{\"c\":60,\"x0\":2,\"y0\":25,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":61,\"x0\":79,\"y0\":62,\"yoffs\":2,\"xpad\":1,\"w\":3,\"h\":3},{\"c\":62,\"x0\":10,\"y0\":25,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":63,\"x0\":18,\"y0\":24,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":64,\"x0\":27,\"y0\":24,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":65,\"x0\":37,\"y0\":24,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":66,\"x0\":46,\"y0\":24,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":67,\"x0\":55,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":68,\"x0\":63,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":69,\"x0\":72,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":70,\"x0\":80,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":71,\"x0\":88,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":72,\"x0\":97,\"y0\":23,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":73,\"x0\":106,\"y0\":22,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":74,\"x0\":114,\"y0\":22,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":75,\"x0\":2,\"y0\":35,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":76,\"x0\":11,\"y0\":35,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":77,\"x0\":19,\"y0\":34,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":78,\"x0\":29,\"y0\":34,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":79,\"x0\":36,\"y0\":14,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":80,\"x0\":38,\"y0\":34,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":81,\"x0\":57,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":82,\"x0\":47,\"y0\":34,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":83,\"x0\":56,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":84,\"x0\":65,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":85,\"x0\":73,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":86,\"x0\":82,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":87,\"x0\":91,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":88,\"x0\":101,\"y0\":33,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":89,\"x0\":110,\"y0\":32,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":90,\"x0\":119,\"y0\":32,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":91,\"x0\":2,\"y0\":45,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":5},{\"c\":92,\"x0\":9,\"y0\":45,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":93,\"x0\":19,\"y0\":44,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":5},{\"c\":94,\"x0\":118,\"y0\":62,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":2},{\"c\":95,\"x0\":32,\"y0\":73,\"yoffs\":5,\"xpad\":1,\"w\":4,\"h\":1},{\"c\":96,\"x0\":2,\"y0\":74,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":2},{\"c\":97,\"x0\":57,\"y0\":54,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":98,\"x0\":26,\"y0\":44,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":99,\"x0\":66,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":3,\"h\":4},{\"c\":100,\"x0\":35,\"y0\":44,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":101,\"x0\":74,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":102,\"x0\":44,\"y0\":44,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":103,\"x0\":66,\"y0\":2,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":104,\"x0\":52,\"y0\":44,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":105,\"x0\":61,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":1,\"h\":5},{\"c\":106,\"x0\":12,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":2,\"h\":7},{\"c\":107,\"x0\":67,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":108,\"x0\":76,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":1,\"h\":5},{\"c\":109,\"x0\":83,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":5,\"h\":4},{\"c\":110,\"x0\":93,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":111,\"x0\":102,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":112,\"x0\":75,\"y0\":2,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":113,\"x0\":84,\"y0\":2,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":114,\"x0\":111,\"y0\":53,\"yoffs\":2,\"xpad\":1,\"w\":3,\"h\":4},{\"c\":115,\"x0\":119,\"y0\":52,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":116,\"x0\":82,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":117,\"x0\":2,\"y0\":65,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":118,\"x0\":11,\"y0\":65,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":119,\"x0\":20,\"y0\":65,\"yoffs\":2,\"xpad\":1,\"w\":5,\"h\":4},{\"c\":120,\"x0\":30,\"y0\":64,\"yoffs\":2,\"xpad\":1,\"w\":3,\"h\":4},{\"c\":121,\"x0\":93,\"y0\":2,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":6},{\"c\":122,\"x0\":38,\"y0\":64,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":4},{\"c\":123,\"x0\":90,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":124,\"x0\":76,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":1,\"h\":5},{\"c\":125,\"x0\":98,\"y0\":43,\"yoffs\":1,\"xpad\":1,\"w\":3,\"h\":5},{\"c\":126,\"x0\":9,\"y0\":74,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":2},{\"c\":160,\"xpad\":4},{\"c\":181,\"x0\":106,\"y0\":43,\"yoffs\":2,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":916,\"x0\":47,\"y0\":64,\"yoffs\":2,\"xpad\":1,\"w\":5,\"h\":4},{\"c\":8592,\"x0\":115,\"y0\":42,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":8593,\"x0\":2,\"y0\":55,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":8594,\"x0\":12,\"y0\":55,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":8595,\"x0\":22,\"y0\":54,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5},{\"c\":9654,\"x0\":32,\"y0\":54,\"yoffs\":1,\"xpad\":1,\"w\":4,\"h\":5},{\"c\":9660,\"x0\":87,\"y0\":62,\"yoffs\":2,\"xpad\":1,\"w\":5,\"h\":3},{\"c\":9742,\"x0\":19,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":10,\"h\":7},{\"c\":9743,\"x0\":34,\"y0\":2,\"yoffs\":1,\"xpad\":1,\"w\":9,\"h\":7},{\"c\":65533,\"x0\":41,\"y0\":54,\"yoffs\":1,\"xpad\":1,\"w\":5,\"h\":5}]}","module.exports={\"font_size\":16,\"imageW\":1024,\"imageH\":64,\"spread\":2,\"noFilter\":1,\"channels\":1,\"char_infos\":[{\"c\":2,\"x0\":2,\"y0\":2,\"xpad\":1,\"w\":10,\"h\":16},{\"c\":32,\"xpad\":8},{\"c\":33,\"x0\":152,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":2,\"h\":10},{\"c\":34,\"x0\":187,\"y0\":17,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":4},{\"c\":35,\"x0\":159,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":36,\"x0\":74,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":37,\"x0\":174,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":38,\"x0\":189,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":39,\"x0\":198,\"y0\":17,\"yoffs\":3,\"xpad\":2,\"w\":2,\"h\":4},{\"c\":40,\"x0\":204,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":10},{\"c\":41,\"x0\":213,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":10},{\"c\":42,\"x0\":132,\"y0\":19,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":6},{\"c\":43,\"x0\":143,\"y0\":19,\"yoffs\":5,\"xpad\":2,\"w\":6,\"h\":6},{\"c\":44,\"x0\":205,\"y0\":17,\"yoffs\":11,\"xpad\":2,\"w\":4,\"h\":4},{\"c\":45,\"x0\":247,\"y0\":17,\"yoffs\":7,\"xpad\":2,\"w\":6,\"h\":2},{\"c\":46,\"x0\":258,\"y0\":17,\"yoffs\":11,\"xpad\":2,\"w\":2,\"h\":2},{\"c\":47,\"x0\":222,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":48,\"x0\":237,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":49,\"x0\":250,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":10},{\"c\":50,\"x0\":259,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":51,\"x0\":272,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":52,\"x0\":285,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":53,\"x0\":298,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":54,\"x0\":311,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":55,\"x0\":324,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":56,\"x0\":337,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":57,\"x0\":350,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":58,\"x0\":154,\"y0\":17,\"yoffs\":5,\"xpad\":2,\"w\":2,\"h\":6},{\"c\":59,\"x0\":958,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":2,\"h\":8},{\"c\":60,\"x0\":363,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":61,\"x0\":161,\"y0\":17,\"yoffs\":5,\"xpad\":2,\"w\":6,\"h\":6},{\"c\":62,\"x0\":374,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":63,\"x0\":385,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":64,\"x0\":398,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":65,\"x0\":413,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":66,\"x0\":426,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":67,\"x0\":439,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":68,\"x0\":450,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":69,\"x0\":463,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":70,\"x0\":474,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":71,\"x0\":485,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":72,\"x0\":498,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":73,\"x0\":511,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":74,\"x0\":522,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":75,\"x0\":535,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":76,\"x0\":548,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":77,\"x0\":559,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":78,\"x0\":574,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":79,\"x0\":237,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":80,\"x0\":587,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":81,\"x0\":87,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":82,\"x0\":600,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":83,\"x0\":613,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":84,\"x0\":626,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":85,\"x0\":637,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":86,\"x0\":650,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":87,\"x0\":663,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":88,\"x0\":678,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":89,\"x0\":691,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":90,\"x0\":704,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":91,\"x0\":715,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":10},{\"c\":92,\"x0\":724,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":93,\"x0\":739,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":10},{\"c\":94,\"x0\":214,\"y0\":17,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":4},{\"c\":95,\"x0\":265,\"y0\":17,\"yoffs\":11,\"xpad\":2,\"w\":8,\"h\":2},{\"c\":96,\"x0\":225,\"y0\":17,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":4},{\"c\":97,\"x0\":965,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":98,\"x0\":748,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":99,\"x0\":978,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":6,\"h\":8},{\"c\":100,\"x0\":761,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":101,\"x0\":989,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":102,\"x0\":774,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":103,\"x0\":100,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":104,\"x0\":785,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":105,\"x0\":798,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":2,\"h\":10},{\"c\":106,\"x0\":17,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":4,\"h\":14},{\"c\":107,\"x0\":805,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":108,\"x0\":818,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":2,\"h\":10},{\"c\":109,\"x0\":1002,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":10,\"h\":8},{\"c\":110,\"x0\":2,\"y0\":23,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":111,\"x0\":15,\"y0\":23,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":112,\"x0\":113,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":113,\"x0\":126,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":114,\"x0\":28,\"y0\":21,\"yoffs\":5,\"xpad\":2,\"w\":6,\"h\":8},{\"c\":115,\"x0\":39,\"y0\":21,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":116,\"x0\":825,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":117,\"x0\":52,\"y0\":21,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":118,\"x0\":65,\"y0\":21,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":119,\"x0\":78,\"y0\":19,\"yoffs\":5,\"xpad\":2,\"w\":10,\"h\":8},{\"c\":120,\"x0\":93,\"y0\":19,\"yoffs\":5,\"xpad\":2,\"w\":6,\"h\":8},{\"c\":121,\"x0\":139,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":12},{\"c\":122,\"x0\":104,\"y0\":19,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":8},{\"c\":123,\"x0\":836,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":124,\"x0\":818,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":2,\"h\":10},{\"c\":125,\"x0\":847,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":6,\"h\":10},{\"c\":126,\"x0\":234,\"y0\":17,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":4},{\"c\":160,\"xpad\":8},{\"c\":181,\"x0\":858,\"y0\":2,\"yoffs\":5,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":916,\"x0\":117,\"y0\":19,\"yoffs\":5,\"xpad\":2,\"w\":10,\"h\":8},{\"c\":8592,\"x0\":871,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":8593,\"x0\":886,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":8594,\"x0\":901,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":8595,\"x0\":916,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":10,\"h\":10},{\"c\":9654,\"x0\":931,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":8,\"h\":10},{\"c\":9660,\"x0\":172,\"y0\":17,\"yoffs\":5,\"xpad\":2,\"w\":10,\"h\":6},{\"c\":9742,\"x0\":26,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":20,\"h\":14},{\"c\":9743,\"x0\":51,\"y0\":2,\"yoffs\":3,\"xpad\":2,\"w\":18,\"h\":14},{\"c\":65533,\"x0\":944,\"y0\":2,\"yoffs\":3,\"xpad\":1,\"w\":9,\"h\":10}]}","module.exports={\"font_size\":32,\"imageW\":1024,\"imageH\":512,\"spread\":8,\"channels\":1,\"char_infos\":[{\"c\":2,\"x0\":8,\"y0\":8,\"w\":21,\"h\":32},{\"c\":13},{\"c\":32,\"xpad\":7.10156},{\"c\":33,\"x0\":470,\"y0\":224,\"yoffs\":4,\"xpad\":1.13281,\"w\":6,\"h\":22},{\"c\":34,\"x0\":988,\"y0\":334,\"yoffs\":4,\"w\":10,\"h\":8},{\"c\":35,\"x0\":774,\"y0\":300,\"yoffs\":10,\"w\":16,\"h\":17},{\"c\":36,\"x0\":253,\"y0\":8,\"yoffs\":1,\"xpad\":1.32031,\"w\":15,\"h\":29},{\"c\":37,\"x0\":964,\"y0\":141,\"yoffs\":4,\"xpad\":0.773438,\"w\":26,\"h\":23},{\"c\":38,\"x0\":8,\"y0\":190,\"yoffs\":4,\"xpad\":0.570313,\"w\":20,\"h\":23},{\"c\":39,\"x0\":8,\"y0\":381,\"yoffs\":4,\"w\":5,\"h\":8},{\"c\":40,\"x0\":45,\"y0\":190,\"yoffs\":5,\"w\":8,\"h\":23},{\"c\":41,\"x0\":70,\"y0\":190,\"yoffs\":5,\"xpad\":0.890625,\"w\":7,\"h\":23},{\"c\":42,\"x0\":754,\"y0\":335,\"yoffs\":2,\"w\":11,\"h\":11},{\"c\":43,\"x0\":807,\"y0\":300,\"yoffs\":9,\"xpad\":0.414063,\"w\":15,\"h\":17},{\"c\":44,\"x0\":30,\"y0\":381,\"yoffs\":22,\"w\":5,\"h\":8},{\"c\":45,\"x0\":357,\"y0\":375,\"yoffs\":16,\"w\":9,\"h\":3},{\"c\":46,\"x0\":261,\"y0\":376,\"yoffs\":22,\"w\":5,\"h\":4},{\"c\":47,\"x0\":94,\"y0\":190,\"yoffs\":4,\"w\":13,\"h\":23},{\"c\":48,\"x0\":493,\"y0\":224,\"yoffs\":5,\"xpad\":0.671875,\"w\":17,\"h\":22},{\"c\":49,\"x0\":500,\"y0\":263,\"yoffs\":5,\"xpad\":5.67188,\"w\":12,\"h\":21},{\"c\":50,\"x0\":529,\"y0\":263,\"yoffs\":5,\"xpad\":1.67188,\"w\":16,\"h\":21},{\"c\":51,\"x0\":527,\"y0\":224,\"yoffs\":5,\"xpad\":1.67188,\"w\":16,\"h\":22},{\"c\":52,\"x0\":562,\"y0\":263,\"yoffs\":5,\"xpad\":0.671875,\"w\":17,\"h\":21},{\"c\":53,\"x0\":560,\"y0\":224,\"yoffs\":5,\"xpad\":1.67188,\"w\":16,\"h\":22},{\"c\":54,\"x0\":593,\"y0\":224,\"yoffs\":5,\"xpad\":0.671875,\"w\":17,\"h\":22},{\"c\":55,\"x0\":596,\"y0\":263,\"yoffs\":5,\"xpad\":1.67188,\"w\":16,\"h\":21},{\"c\":56,\"x0\":627,\"y0\":224,\"yoffs\":5,\"xpad\":0.671875,\"w\":17,\"h\":22},{\"c\":57,\"x0\":661,\"y0\":224,\"yoffs\":5,\"xpad\":0.671875,\"w\":17,\"h\":22},{\"c\":58,\"x0\":510,\"y0\":341,\"yoffs\":12,\"w\":5,\"h\":14},{\"c\":59,\"x0\":752,\"y0\":300,\"yoffs\":12,\"w\":5,\"h\":18},{\"c\":60,\"x0\":903,\"y0\":99,\"yoffs\":4,\"w\":12,\"h\":25},{\"c\":61,\"x0\":956,\"y0\":334,\"yoffs\":14,\"w\":15,\"h\":9},{\"c\":62,\"x0\":932,\"y0\":99,\"yoffs\":4,\"w\":12,\"h\":25},{\"c\":63,\"x0\":695,\"y0\":224,\"yoffs\":4,\"xpad\":0.195313,\"w\":12,\"h\":22},{\"c\":64,\"x0\":124,\"y0\":188,\"yoffs\":7,\"xpad\":1.21094,\"w\":23,\"h\":23},{\"c\":65,\"x0\":629,\"y0\":263,\"yoffs\":5,\"w\":19,\"h\":21},{\"c\":66,\"x0\":665,\"y0\":263,\"yoffs\":5,\"xpad\":0.882813,\"w\":18,\"h\":21},{\"c\":67,\"x0\":724,\"y0\":223,\"yoffs\":5,\"xpad\":0.945313,\"w\":17,\"h\":22},{\"c\":68,\"x0\":700,\"y0\":263,\"yoffs\":5,\"xpad\":1.01563,\"w\":20,\"h\":21},{\"c\":69,\"x0\":737,\"y0\":262,\"yoffs\":5,\"xpad\":0.617188,\"w\":16,\"h\":21},{\"c\":70,\"x0\":770,\"y0\":262,\"yoffs\":5,\"w\":15,\"h\":21},{\"c\":71,\"x0\":758,\"y0\":223,\"yoffs\":5,\"xpad\":1.75,\"w\":18,\"h\":22},{\"c\":72,\"x0\":802,\"y0\":262,\"yoffs\":5,\"xpad\":2.53906,\"w\":18,\"h\":21},{\"c\":73,\"x0\":837,\"y0\":262,\"yoffs\":5,\"xpad\":2.54688,\"w\":6,\"h\":21},{\"c\":74,\"x0\":793,\"y0\":223,\"yoffs\":5,\"xpad\":2.75781,\"w\":6,\"h\":22},{\"c\":75,\"x0\":860,\"y0\":262,\"yoffs\":5,\"w\":19,\"h\":21},{\"c\":76,\"x0\":896,\"y0\":262,\"yoffs\":5,\"w\":16,\"h\":21},{\"c\":77,\"x0\":929,\"y0\":262,\"yoffs\":5,\"xpad\":2.27344,\"w\":21,\"h\":21},{\"c\":78,\"x0\":967,\"y0\":261,\"yoffs\":5,\"xpad\":2.74219,\"w\":19,\"h\":21},{\"c\":79,\"x0\":164,\"y0\":186,\"yoffs\":4,\"xpad\":1.22656,\"w\":21,\"h\":23},{\"c\":80,\"x0\":8,\"y0\":309,\"yoffs\":5,\"xpad\":0.828125,\"w\":17,\"h\":21},{\"c\":81,\"x0\":202,\"y0\":186,\"yoffs\":4,\"xpad\":1.22656,\"w\":21,\"h\":23},{\"c\":82,\"x0\":42,\"y0\":309,\"yoffs\":5,\"w\":19,\"h\":21},{\"c\":83,\"x0\":240,\"y0\":186,\"yoffs\":4,\"xpad\":1.32031,\"w\":15,\"h\":23},{\"c\":84,\"x0\":78,\"y0\":309,\"yoffs\":5,\"w\":17,\"h\":21},{\"c\":85,\"x0\":816,\"y0\":223,\"yoffs\":5,\"xpad\":2.04688,\"w\":19,\"h\":22},{\"c\":86,\"x0\":112,\"y0\":309,\"yoffs\":5,\"w\":19,\"h\":21},{\"c\":87,\"x0\":148,\"y0\":307,\"yoffs\":5,\"w\":30,\"h\":21},{\"c\":88,\"x0\":852,\"y0\":223,\"yoffs\":5,\"w\":20,\"h\":22},{\"c\":89,\"x0\":195,\"y0\":305,\"yoffs\":5,\"w\":18,\"h\":21},{\"c\":90,\"x0\":230,\"y0\":305,\"yoffs\":5,\"xpad\":0.226563,\"w\":17,\"h\":21},{\"c\":91,\"x0\":961,\"y0\":99,\"yoffs\":4,\"w\":9,\"h\":25},{\"c\":92,\"x0\":272,\"y0\":186,\"yoffs\":4,\"w\":13,\"h\":23},{\"c\":93,\"x0\":987,\"y0\":99,\"yoffs\":4,\"xpad\":1.70313,\"w\":7,\"h\":25},{\"c\":94,\"x0\":52,\"y0\":381,\"yoffs\":14,\"xpad\":0.1875,\"w\":13,\"h\":8},{\"c\":95,\"x0\":383,\"y0\":375,\"yoffs\":23,\"xpad\":0.4375,\"w\":12,\"h\":3},{\"c\":96,\"x0\":162,\"y0\":378,\"yoffs\":3,\"w\":6,\"h\":6},{\"c\":97,\"x0\":839,\"y0\":300,\"yoffs\":10,\"xpad\":1.29688,\"w\":14,\"h\":17},{\"c\":98,\"x0\":302,\"y0\":184,\"yoffs\":4,\"xpad\":0.890625,\"w\":16,\"h\":23},{\"c\":99,\"x0\":870,\"y0\":300,\"yoffs\":10,\"xpad\":0.273438,\"w\":14,\"h\":17},{\"c\":100,\"x0\":335,\"y0\":184,\"yoffs\":4,\"xpad\":2.07031,\"w\":15,\"h\":23},{\"c\":101,\"x0\":901,\"y0\":300,\"yoffs\":10,\"xpad\":1.04688,\"w\":15,\"h\":17},{\"c\":102,\"x0\":889,\"y0\":223,\"yoffs\":4,\"w\":10,\"h\":22},{\"c\":103,\"x0\":367,\"y0\":184,\"yoffs\":10,\"xpad\":2.07031,\"w\":15,\"h\":23},{\"c\":104,\"x0\":916,\"y0\":223,\"yoffs\":4,\"xpad\":1.10156,\"w\":16,\"h\":22},{\"c\":105,\"x0\":264,\"y0\":305,\"yoffs\":5,\"xpad\":1.34375,\"w\":6,\"h\":21},{\"c\":106,\"x0\":114,\"y0\":55,\"yoffs\":5,\"xpad\":1.07031,\"w\":7,\"h\":28},{\"c\":107,\"x0\":949,\"y0\":222,\"yoffs\":4,\"xpad\":0.171875,\"w\":15,\"h\":22},{\"c\":108,\"x0\":981,\"y0\":222,\"yoffs\":4,\"xpad\":1.46875,\"w\":6,\"h\":22},{\"c\":109,\"x0\":159,\"y0\":345,\"yoffs\":10,\"xpad\":1.14063,\"w\":25,\"h\":16},{\"c\":110,\"x0\":201,\"y0\":343,\"yoffs\":10,\"xpad\":2.03906,\"w\":15,\"h\":16},{\"c\":111,\"x0\":933,\"y0\":300,\"yoffs\":10,\"xpad\":0.828125,\"w\":16,\"h\":17},{\"c\":112,\"x0\":399,\"y0\":184,\"yoffs\":10,\"xpad\":0.890625,\"w\":16,\"h\":23},{\"c\":113,\"x0\":432,\"y0\":184,\"yoffs\":10,\"xpad\":2.07031,\"w\":15,\"h\":23},{\"c\":114,\"x0\":293,\"y0\":343,\"yoffs\":11,\"xpad\":0.203125,\"w\":10,\"h\":15},{\"c\":115,\"x0\":966,\"y0\":300,\"yoffs\":10,\"xpad\":0.28125,\"w\":13,\"h\":17},{\"c\":116,\"x0\":654,\"y0\":301,\"yoffs\":7,\"xpad\":0.234375,\"w\":10,\"h\":20},{\"c\":117,\"x0\":233,\"y0\":343,\"yoffs\":11,\"xpad\":1.64844,\"w\":15,\"h\":16},{\"c\":118,\"x0\":320,\"y0\":343,\"yoffs\":11,\"w\":15,\"h\":15},{\"c\":119,\"x0\":352,\"y0\":343,\"yoffs\":11,\"w\":23,\"h\":15},{\"c\":120,\"x0\":392,\"y0\":341,\"yoffs\":11,\"w\":16,\"h\":15},{\"c\":121,\"x0\":8,\"y0\":270,\"yoffs\":11,\"w\":15,\"h\":22},{\"c\":122,\"x0\":425,\"y0\":341,\"yoffs\":11,\"xpad\":0.851563,\"w\":13,\"h\":15},{\"c\":123,\"x0\":40,\"y0\":270,\"yoffs\":6,\"w\":9,\"h\":22},{\"c\":124,\"x0\":46,\"y0\":8,\"w\":7,\"h\":32},{\"c\":125,\"x0\":66,\"y0\":270,\"yoffs\":6,\"xpad\":0.460938,\"w\":8,\"h\":22},{\"c\":126,\"x0\":232,\"y0\":376,\"yoffs\":16,\"xpad\":0.3125,\"w\":12,\"h\":5},{\"c\":144,\"x0\":82,\"y0\":381,\"yoffs\":-5,\"w\":14,\"h\":8},{\"c\":160,\"xpad\":7.10156},{\"c\":161,\"x0\":91,\"y0\":270,\"yoffs\":4,\"xpad\":1.13281,\"w\":6,\"h\":22},{\"c\":162,\"x0\":464,\"y0\":184,\"yoffs\":7,\"xpad\":0.273438,\"w\":14,\"h\":23},{\"c\":163,\"x0\":287,\"y0\":305,\"yoffs\":5,\"xpad\":0.304688,\"w\":14,\"h\":21},{\"c\":164,\"x0\":681,\"y0\":301,\"yoffs\":9,\"xpad\":0.328125,\"w\":20,\"h\":20},{\"c\":165,\"x0\":318,\"y0\":305,\"yoffs\":5,\"w\":18,\"h\":21},{\"c\":166,\"x0\":495,\"y0\":184,\"yoffs\":4,\"xpad\":2.10156,\"w\":6,\"h\":23},{\"c\":167,\"x0\":138,\"y0\":55,\"yoffs\":2,\"xpad\":1.25,\"w\":17,\"h\":28},{\"c\":168,\"x0\":283,\"y0\":376,\"yoffs\":4,\"xpad\":0.453125,\"w\":9,\"h\":4},{\"c\":169,\"x0\":518,\"y0\":184,\"yoffs\":4,\"xpad\":0.625,\"w\":25,\"h\":23},{\"c\":170,\"x0\":660,\"y0\":338,\"yoffs\":4,\"xpad\":0.296875,\"w\":10,\"h\":12},{\"c\":171,\"x0\":782,\"y0\":334,\"yoffs\":13,\"xpad\":0.140625,\"w\":11,\"h\":11},{\"c\":172,\"x0\":838,\"y0\":334,\"yoffs\":13,\"xpad\":0.382813,\"w\":15,\"h\":10},{\"c\":173,\"xpad\":3.94531},{\"c\":174,\"x0\":353,\"y0\":303,\"yoffs\":1,\"xpad\":0.3125,\"w\":22,\"h\":21},{\"c\":175,\"x0\":309,\"y0\":375,\"yoffs\":4,\"w\":9,\"h\":4},{\"c\":176,\"x0\":137,\"y0\":381,\"yoffs\":4,\"w\":8,\"h\":7},{\"c\":177,\"x0\":996,\"y0\":299,\"yoffs\":9,\"w\":14,\"h\":17},{\"c\":178,\"x0\":532,\"y0\":339,\"yoffs\":2,\"xpad\":0.890625,\"w\":11,\"h\":14},{\"c\":179,\"x0\":265,\"y0\":343,\"yoffs\":2,\"xpad\":1.52344,\"w\":11,\"h\":16},{\"c\":180,\"x0\":185,\"y0\":378,\"yoffs\":3,\"w\":6,\"h\":6},{\"c\":181,\"x0\":114,\"y0\":270,\"yoffs\":11,\"xpad\":1.85938,\"w\":15,\"h\":22},{\"c\":182,\"x0\":392,\"y0\":303,\"yoffs\":5,\"xpad\":0.5,\"w\":26,\"h\":21},{\"c\":183,\"x0\":335,\"y0\":375,\"yoffs\":16,\"w\":5,\"h\":4},{\"c\":184,\"x0\":113,\"y0\":381,\"yoffs\":25,\"xpad\":0.0703125,\"w\":7,\"h\":8},{\"c\":185,\"x0\":560,\"y0\":339,\"yoffs\":2,\"xpad\":0.6875,\"w\":10,\"h\":14},{\"c\":186,\"x0\":687,\"y0\":338,\"yoffs\":4,\"xpad\":0.625,\"w\":11,\"h\":12},{\"c\":187,\"x0\":810,\"y0\":334,\"yoffs\":13,\"xpad\":0.140625,\"w\":11,\"h\":11},{\"c\":188,\"x0\":285,\"y0\":8,\"yoffs\":2,\"xpad\":0.0546875,\"w\":25,\"h\":29},{\"c\":189,\"x0\":172,\"y0\":55,\"yoffs\":2,\"xpad\":1.22656,\"w\":25,\"h\":28},{\"c\":190,\"x0\":327,\"y0\":8,\"yoffs\":2,\"xpad\":0.109375,\"w\":26,\"h\":29},{\"c\":191,\"x0\":146,\"y0\":268,\"yoffs\":6,\"xpad\":0.09375,\"w\":13,\"h\":22},{\"c\":192,\"x0\":214,\"y0\":55,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":193,\"x0\":250,\"y0\":55,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":194,\"x0\":286,\"y0\":54,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":195,\"x0\":684,\"y0\":99,\"w\":19,\"h\":26},{\"c\":196,\"x0\":288,\"y0\":99,\"yoffs\":-1,\"w\":19,\"h\":27},{\"c\":197,\"x0\":322,\"y0\":54,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":198,\"x0\":435,\"y0\":303,\"yoffs\":5,\"xpad\":0.28125,\"w\":27,\"h\":21},{\"c\":199,\"x0\":358,\"y0\":54,\"yoffs\":5,\"xpad\":0.945313,\"w\":17,\"h\":28},{\"c\":200,\"x0\":392,\"y0\":54,\"yoffs\":-2,\"xpad\":0.617188,\"w\":16,\"h\":28},{\"c\":201,\"x0\":425,\"y0\":54,\"yoffs\":-2,\"xpad\":0.617188,\"w\":16,\"h\":28},{\"c\":202,\"x0\":458,\"y0\":54,\"yoffs\":-2,\"xpad\":0.617188,\"w\":16,\"h\":28},{\"c\":203,\"x0\":324,\"y0\":99,\"yoffs\":-1,\"xpad\":0.617188,\"w\":16,\"h\":27},{\"c\":204,\"x0\":491,\"y0\":54,\"yoffs\":-2,\"xpad\":1.54688,\"w\":7,\"h\":28},{\"c\":205,\"x0\":515,\"y0\":54,\"yoffs\":-2,\"xpad\":0.546875,\"w\":8,\"h\":28},{\"c\":206,\"x0\":540,\"y0\":54,\"yoffs\":-2,\"w\":11,\"h\":28},{\"c\":207,\"x0\":357,\"y0\":99,\"yoffs\":-1,\"w\":9,\"h\":27},{\"c\":208,\"x0\":479,\"y0\":303,\"yoffs\":5,\"xpad\":1.22656,\"w\":20,\"h\":21},{\"c\":209,\"x0\":720,\"y0\":99,\"xpad\":2.74219,\"w\":19,\"h\":26},{\"c\":210,\"x0\":370,\"y0\":8,\"yoffs\":-2,\"xpad\":1.22656,\"w\":21,\"h\":29},{\"c\":211,\"x0\":408,\"y0\":8,\"yoffs\":-2,\"xpad\":1.22656,\"w\":21,\"h\":29},{\"c\":212,\"x0\":446,\"y0\":8,\"yoffs\":-2,\"xpad\":1.22656,\"w\":21,\"h\":29},{\"c\":213,\"x0\":383,\"y0\":99,\"xpad\":1.22656,\"w\":21,\"h\":27},{\"c\":214,\"x0\":568,\"y0\":54,\"yoffs\":-1,\"xpad\":1.22656,\"w\":21,\"h\":28},{\"c\":215,\"x0\":455,\"y0\":341,\"yoffs\":11,\"xpad\":0.359375,\"w\":15,\"h\":15},{\"c\":216,\"x0\":560,\"y0\":184,\"yoffs\":4,\"xpad\":1.22656,\"w\":21,\"h\":23},{\"c\":217,\"x0\":484,\"y0\":8,\"yoffs\":-2,\"xpad\":2.04688,\"w\":19,\"h\":29},{\"c\":218,\"x0\":520,\"y0\":8,\"yoffs\":-2,\"xpad\":2.04688,\"w\":19,\"h\":29},{\"c\":219,\"x0\":556,\"y0\":8,\"yoffs\":-2,\"xpad\":2.04688,\"w\":19,\"h\":29},{\"c\":220,\"x0\":606,\"y0\":54,\"yoffs\":-1,\"xpad\":2.04688,\"w\":19,\"h\":28},{\"c\":221,\"x0\":642,\"y0\":54,\"yoffs\":-2,\"w\":18,\"h\":28},{\"c\":222,\"x0\":516,\"y0\":301,\"yoffs\":5,\"xpad\":1.00781,\"w\":17,\"h\":21},{\"c\":223,\"x0\":550,\"y0\":301,\"yoffs\":5,\"xpad\":1.30469,\"w\":17,\"h\":21},{\"c\":224,\"x0\":100,\"y0\":147,\"yoffs\":3,\"xpad\":1.29688,\"w\":14,\"h\":24},{\"c\":225,\"x0\":131,\"y0\":145,\"yoffs\":3,\"xpad\":1.29688,\"w\":14,\"h\":24},{\"c\":226,\"x0\":162,\"y0\":145,\"yoffs\":3,\"xpad\":1.29688,\"w\":14,\"h\":24},{\"c\":227,\"x0\":598,\"y0\":184,\"yoffs\":4,\"xpad\":1.29688,\"w\":14,\"h\":23},{\"c\":228,\"x0\":629,\"y0\":184,\"yoffs\":4,\"xpad\":1.29688,\"w\":14,\"h\":23},{\"c\":229,\"x0\":8,\"y0\":148,\"yoffs\":2,\"xpad\":1.29688,\"w\":14,\"h\":25},{\"c\":230,\"x0\":8,\"y0\":347,\"yoffs\":10,\"xpad\":0.960938,\"w\":24,\"h\":17},{\"c\":231,\"x0\":660,\"y0\":184,\"yoffs\":10,\"xpad\":0.273438,\"w\":14,\"h\":23},{\"c\":232,\"x0\":193,\"y0\":145,\"yoffs\":3,\"xpad\":1.04688,\"w\":15,\"h\":24},{\"c\":233,\"x0\":225,\"y0\":145,\"yoffs\":3,\"xpad\":1.04688,\"w\":15,\"h\":24},{\"c\":234,\"x0\":257,\"y0\":145,\"yoffs\":3,\"xpad\":1.04688,\"w\":15,\"h\":24},{\"c\":235,\"x0\":691,\"y0\":184,\"yoffs\":4,\"xpad\":1.04688,\"w\":15,\"h\":23},{\"c\":236,\"x0\":723,\"y0\":183,\"yoffs\":3,\"xpad\":1.34375,\"w\":6,\"h\":23},{\"c\":237,\"x0\":746,\"y0\":183,\"yoffs\":3,\"w\":8,\"h\":23},{\"c\":238,\"x0\":771,\"y0\":183,\"yoffs\":3,\"w\":11,\"h\":23},{\"c\":239,\"x0\":176,\"y0\":266,\"yoffs\":4,\"w\":9,\"h\":22},{\"c\":240,\"x0\":799,\"y0\":183,\"yoffs\":4,\"xpad\":1.53125,\"w\":15,\"h\":23},{\"c\":241,\"x0\":202,\"y0\":266,\"yoffs\":4,\"xpad\":2.03906,\"w\":15,\"h\":22},{\"c\":242,\"x0\":289,\"y0\":143,\"yoffs\":3,\"xpad\":0.828125,\"w\":16,\"h\":24},{\"c\":243,\"x0\":322,\"y0\":143,\"yoffs\":3,\"xpad\":0.828125,\"w\":16,\"h\":24},{\"c\":244,\"x0\":355,\"y0\":143,\"yoffs\":3,\"xpad\":0.828125,\"w\":16,\"h\":24},{\"c\":245,\"x0\":831,\"y0\":183,\"yoffs\":4,\"xpad\":0.828125,\"w\":16,\"h\":23},{\"c\":246,\"x0\":864,\"y0\":183,\"yoffs\":4,\"xpad\":0.828125,\"w\":16,\"h\":23},{\"c\":247,\"x0\":587,\"y0\":339,\"yoffs\":11,\"xpad\":0.453125,\"w\":14,\"h\":14},{\"c\":248,\"x0\":49,\"y0\":347,\"yoffs\":10,\"xpad\":0.828125,\"w\":16,\"h\":17},{\"c\":249,\"x0\":388,\"y0\":143,\"yoffs\":3,\"xpad\":1.64844,\"w\":15,\"h\":24},{\"c\":250,\"x0\":420,\"y0\":143,\"yoffs\":3,\"xpad\":1.64844,\"w\":15,\"h\":24},{\"c\":251,\"x0\":452,\"y0\":143,\"yoffs\":3,\"xpad\":1.64844,\"w\":15,\"h\":24},{\"c\":252,\"x0\":897,\"y0\":183,\"yoffs\":4,\"xpad\":1.64844,\"w\":15,\"h\":23},{\"c\":253,\"x0\":102,\"y0\":8,\"yoffs\":3,\"w\":15,\"h\":30},{\"c\":254,\"x0\":592,\"y0\":8,\"yoffs\":4,\"xpad\":0.890625,\"w\":16,\"h\":29},{\"c\":255,\"x0\":625,\"y0\":8,\"yoffs\":4,\"w\":15,\"h\":29},{\"c\":256,\"x0\":756,\"y0\":99,\"w\":19,\"h\":26},{\"c\":257,\"x0\":929,\"y0\":182,\"yoffs\":4,\"xpad\":1.29688,\"w\":14,\"h\":23},{\"c\":258,\"x0\":421,\"y0\":99,\"yoffs\":-1,\"w\":19,\"h\":27},{\"c\":259,\"x0\":484,\"y0\":143,\"yoffs\":3,\"xpad\":1.29688,\"w\":14,\"h\":24},{\"c\":260,\"x0\":677,\"y0\":54,\"yoffs\":5,\"w\":21,\"h\":28},{\"c\":261,\"x0\":960,\"y0\":182,\"yoffs\":10,\"w\":16,\"h\":23},{\"c\":262,\"x0\":657,\"y0\":8,\"yoffs\":-2,\"xpad\":0.945313,\"w\":17,\"h\":29},{\"c\":263,\"x0\":515,\"y0\":143,\"yoffs\":3,\"xpad\":0.273438,\"w\":14,\"h\":24},{\"c\":268,\"x0\":691,\"y0\":8,\"yoffs\":-2,\"xpad\":0.945313,\"w\":17,\"h\":29},{\"c\":269,\"x0\":546,\"y0\":143,\"yoffs\":3,\"xpad\":0.273438,\"w\":14,\"h\":24},{\"c\":270,\"x0\":715,\"y0\":54,\"yoffs\":-2,\"xpad\":1.01563,\"w\":20,\"h\":28},{\"c\":271,\"x0\":993,\"y0\":181,\"yoffs\":4,\"w\":22,\"h\":23},{\"c\":272,\"x0\":479,\"y0\":303,\"yoffs\":5,\"xpad\":1.22656,\"w\":20,\"h\":21},{\"c\":273,\"x0\":8,\"y0\":230,\"yoffs\":4,\"xpad\":0.0703125,\"w\":17,\"h\":23},{\"c\":274,\"x0\":792,\"y0\":99,\"xpad\":0.617188,\"w\":16,\"h\":26},{\"c\":275,\"x0\":42,\"y0\":230,\"yoffs\":4,\"xpad\":1.04688,\"w\":15,\"h\":23},{\"c\":278,\"x0\":457,\"y0\":99,\"yoffs\":-1,\"xpad\":0.617188,\"w\":16,\"h\":27},{\"c\":279,\"x0\":74,\"y0\":230,\"yoffs\":4,\"xpad\":1.04688,\"w\":15,\"h\":23},{\"c\":280,\"x0\":752,\"y0\":54,\"yoffs\":5,\"xpad\":0.617188,\"w\":16,\"h\":28},{\"c\":281,\"x0\":106,\"y0\":230,\"yoffs\":10,\"xpad\":1.04688,\"w\":15,\"h\":23},{\"c\":282,\"x0\":785,\"y0\":54,\"yoffs\":-2,\"xpad\":0.617188,\"w\":16,\"h\":28},{\"c\":283,\"x0\":577,\"y0\":143,\"yoffs\":3,\"xpad\":1.04688,\"w\":15,\"h\":24},{\"c\":286,\"x0\":818,\"y0\":54,\"yoffs\":-1,\"xpad\":1.75,\"w\":18,\"h\":28},{\"c\":287,\"x0\":134,\"y0\":8,\"yoffs\":3,\"xpad\":2.07031,\"w\":15,\"h\":30},{\"c\":290,\"x0\":853,\"y0\":54,\"yoffs\":5,\"xpad\":1.75,\"w\":18,\"h\":28},{\"c\":291,\"x0\":70,\"y0\":8,\"yoffs\":2,\"xpad\":2.07031,\"w\":15,\"h\":31},{\"c\":298,\"x0\":825,\"y0\":99,\"w\":9,\"h\":26},{\"c\":299,\"x0\":234,\"y0\":266,\"yoffs\":4,\"w\":9,\"h\":22},{\"c\":302,\"x0\":888,\"y0\":54,\"yoffs\":5,\"xpad\":0.546875,\"w\":8,\"h\":28},{\"c\":303,\"x0\":913,\"y0\":54,\"yoffs\":5,\"w\":8,\"h\":28},{\"c\":304,\"x0\":490,\"y0\":99,\"yoffs\":-1,\"xpad\":1.54688,\"w\":7,\"h\":27},{\"c\":305,\"x0\":487,\"y0\":341,\"yoffs\":11,\"xpad\":1.34375,\"w\":6,\"h\":15},{\"c\":310,\"x0\":725,\"y0\":8,\"yoffs\":5,\"w\":19,\"h\":29},{\"c\":311,\"x0\":166,\"y0\":8,\"yoffs\":4,\"xpad\":0.171875,\"w\":15,\"h\":30},{\"c\":313,\"x0\":938,\"y0\":54,\"yoffs\":-2,\"w\":16,\"h\":28},{\"c\":314,\"x0\":851,\"y0\":99,\"w\":8,\"h\":26},{\"c\":315,\"x0\":761,\"y0\":8,\"yoffs\":5,\"w\":16,\"h\":29},{\"c\":316,\"x0\":198,\"y0\":8,\"yoffs\":4,\"xpad\":1.46875,\"w\":6,\"h\":30},{\"c\":317,\"x0\":260,\"y0\":266,\"yoffs\":4,\"w\":16,\"h\":22},{\"c\":318,\"x0\":293,\"y0\":266,\"yoffs\":4,\"w\":12,\"h\":22},{\"c\":321,\"x0\":584,\"y0\":301,\"yoffs\":5,\"xpad\":0.046875,\"w\":16,\"h\":21},{\"c\":322,\"x0\":322,\"y0\":264,\"yoffs\":4,\"w\":11,\"h\":22},{\"c\":323,\"x0\":971,\"y0\":54,\"yoffs\":-2,\"xpad\":2.74219,\"w\":19,\"h\":28},{\"c\":324,\"x0\":138,\"y0\":228,\"yoffs\":3,\"xpad\":2.03906,\"w\":15,\"h\":23},{\"c\":325,\"x0\":794,\"y0\":8,\"yoffs\":5,\"xpad\":2.74219,\"w\":19,\"h\":29},{\"c\":326,\"x0\":609,\"y0\":143,\"yoffs\":10,\"xpad\":2.03906,\"w\":15,\"h\":24},{\"c\":327,\"x0\":8,\"y0\":103,\"yoffs\":-2,\"xpad\":2.74219,\"w\":19,\"h\":28},{\"c\":328,\"x0\":170,\"y0\":226,\"yoffs\":3,\"xpad\":2.03906,\"w\":15,\"h\":23},{\"c\":332,\"x0\":514,\"y0\":99,\"xpad\":1.22656,\"w\":21,\"h\":27},{\"c\":333,\"x0\":202,\"y0\":226,\"yoffs\":4,\"xpad\":0.828125,\"w\":16,\"h\":23},{\"c\":336,\"x0\":830,\"y0\":8,\"yoffs\":-2,\"xpad\":1.22656,\"w\":21,\"h\":29},{\"c\":337,\"x0\":641,\"y0\":143,\"yoffs\":3,\"xpad\":0.828125,\"w\":16,\"h\":24},{\"c\":338,\"x0\":350,\"y0\":264,\"yoffs\":5,\"xpad\":0.390625,\"w\":29,\"h\":22},{\"c\":339,\"x0\":82,\"y0\":347,\"yoffs\":10,\"xpad\":0.65625,\"w\":25,\"h\":17},{\"c\":340,\"x0\":44,\"y0\":103,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":341,\"x0\":235,\"y0\":226,\"yoffs\":3,\"xpad\":0.203125,\"w\":10,\"h\":23},{\"c\":342,\"x0\":868,\"y0\":8,\"yoffs\":5,\"w\":19,\"h\":29},{\"c\":343,\"x0\":262,\"y0\":226,\"yoffs\":11,\"xpad\":0.203125,\"w\":10,\"h\":23},{\"c\":344,\"x0\":80,\"y0\":102,\"yoffs\":-2,\"w\":19,\"h\":28},{\"c\":345,\"x0\":289,\"y0\":226,\"yoffs\":3,\"xpad\":0.203125,\"w\":10,\"h\":23},{\"c\":346,\"x0\":904,\"y0\":8,\"yoffs\":-2,\"xpad\":1.32031,\"w\":15,\"h\":29},{\"c\":347,\"x0\":674,\"y0\":143,\"yoffs\":3,\"xpad\":0.28125,\"w\":13,\"h\":24},{\"c\":350,\"x0\":936,\"y0\":8,\"yoffs\":4,\"xpad\":1.32031,\"w\":15,\"h\":29},{\"c\":351,\"x0\":316,\"y0\":224,\"yoffs\":10,\"xpad\":0.28125,\"w\":13,\"h\":23},{\"c\":352,\"x0\":968,\"y0\":8,\"yoffs\":-2,\"xpad\":1.32031,\"w\":15,\"h\":29},{\"c\":353,\"x0\":704,\"y0\":142,\"yoffs\":3,\"xpad\":0.28125,\"w\":13,\"h\":24},{\"c\":354,\"x0\":116,\"y0\":100,\"yoffs\":5,\"w\":17,\"h\":28},{\"c\":355,\"x0\":876,\"y0\":99,\"yoffs\":7,\"xpad\":0.234375,\"w\":10,\"h\":26},{\"c\":356,\"x0\":150,\"y0\":100,\"yoffs\":-2,\"w\":17,\"h\":28},{\"c\":357,\"x0\":346,\"y0\":224,\"yoffs\":4,\"w\":15,\"h\":23},{\"c\":362,\"x0\":552,\"y0\":99,\"xpad\":2.04688,\"w\":19,\"h\":27},{\"c\":363,\"x0\":378,\"y0\":224,\"yoffs\":4,\"xpad\":1.64844,\"w\":15,\"h\":23},{\"c\":366,\"x0\":8,\"y0\":57,\"yoffs\":-2,\"xpad\":2.04688,\"w\":19,\"h\":29},{\"c\":367,\"x0\":39,\"y0\":148,\"yoffs\":2,\"xpad\":1.64844,\"w\":15,\"h\":25},{\"c\":368,\"x0\":44,\"y0\":57,\"yoffs\":-2,\"xpad\":2.04688,\"w\":19,\"h\":29},{\"c\":369,\"x0\":734,\"y0\":142,\"yoffs\":3,\"xpad\":1.64844,\"w\":15,\"h\":24},{\"c\":370,\"x0\":184,\"y0\":100,\"yoffs\":5,\"xpad\":2.04688,\"w\":19,\"h\":28},{\"c\":371,\"x0\":396,\"y0\":264,\"yoffs\":11,\"w\":17,\"h\":22},{\"c\":376,\"x0\":588,\"y0\":99,\"yoffs\":-1,\"w\":18,\"h\":27},{\"c\":377,\"x0\":220,\"y0\":100,\"yoffs\":-2,\"xpad\":0.226563,\"w\":17,\"h\":28},{\"c\":378,\"x0\":410,\"y0\":224,\"yoffs\":3,\"xpad\":0.851563,\"w\":13,\"h\":23},{\"c\":379,\"x0\":623,\"y0\":99,\"yoffs\":-1,\"xpad\":0.226563,\"w\":17,\"h\":27},{\"c\":380,\"x0\":430,\"y0\":264,\"yoffs\":4,\"xpad\":0.851563,\"w\":13,\"h\":22},{\"c\":381,\"x0\":254,\"y0\":100,\"yoffs\":-2,\"xpad\":0.226563,\"w\":17,\"h\":28},{\"c\":382,\"x0\":440,\"y0\":224,\"yoffs\":3,\"xpad\":0.851563,\"w\":13,\"h\":23},{\"c\":402,\"x0\":71,\"y0\":148,\"yoffs\":4,\"w\":12,\"h\":25},{\"c\":536,\"x0\":221,\"y0\":8,\"yoffs\":4,\"xpad\":1.32031,\"w\":15,\"h\":30},{\"c\":537,\"x0\":766,\"y0\":142,\"yoffs\":10,\"xpad\":0.28125,\"w\":13,\"h\":24},{\"c\":538,\"x0\":80,\"y0\":56,\"yoffs\":5,\"w\":17,\"h\":29},{\"c\":539,\"x0\":657,\"y0\":99,\"yoffs\":7,\"xpad\":0.234375,\"w\":10,\"h\":27},{\"c\":916,\"x0\":460,\"y0\":264,\"yoffs\":4,\"xpad\":3.88281,\"w\":23,\"h\":22},{\"c\":8226,\"x0\":208,\"y0\":376,\"yoffs\":13,\"xpad\":0.28125,\"w\":7,\"h\":6},{\"c\":8482,\"x0\":715,\"y0\":338,\"yoffs\":5,\"xpad\":0.882813,\"w\":22,\"h\":12},{\"c\":8592,\"x0\":870,\"y0\":334,\"yoffs\":11,\"xpad\":0.882813,\"w\":26,\"h\":10},{\"c\":8593,\"x0\":796,\"y0\":142,\"yoffs\":4,\"xpad\":7.88281,\"w\":19,\"h\":24},{\"c\":8594,\"x0\":913,\"y0\":334,\"yoffs\":11,\"xpad\":0.882813,\"w\":26,\"h\":10},{\"c\":8595,\"x0\":832,\"y0\":142,\"yoffs\":4,\"xpad\":7.88281,\"w\":19,\"h\":24},{\"c\":8734,\"x0\":618,\"y0\":339,\"yoffs\":11,\"xpad\":0.6875,\"w\":25,\"h\":14},{\"c\":9654,\"x0\":718,\"y0\":301,\"yoffs\":6,\"w\":17,\"h\":19},{\"c\":9660,\"x0\":124,\"y0\":347,\"yoffs\":7,\"w\":18,\"h\":17},{\"c\":9742,\"x0\":868,\"y0\":142,\"yoffs\":4,\"w\":31,\"h\":24},{\"c\":9743,\"x0\":916,\"y0\":141,\"yoffs\":4,\"w\":31,\"h\":24},{\"c\":65533,\"x0\":617,\"y0\":301,\"yoffs\":5,\"w\":20,\"h\":21}]}","/*eslint global-require:off*/\n// Before requiring anything else that might load from this\nrequire('glov/client/local_storage.js').setStoragePrefix('galaxy-gen'); // eslint-disable-line import/order\n\nimport assert from 'assert';\nimport { autoAtlas } from 'glov/client/autoatlas';\nimport * as camera2d from 'glov/client/camera2d';\nimport * as engine from 'glov/client/engine';\nimport {\n  debugDefineIsSet,\n  getFrameDt,\n  getFrameTimestamp,\n} from 'glov/client/engine';\nimport { copyCanvasToClipboard } from 'glov/client/framebuffer';\nimport {\n  KEYS,\n  inputClick,\n  inputDrag,\n  keyDown,\n  keyDownEdge,\n  mouseMoved,\n  mousePos,\n  mouseWheel,\n} from 'glov/client/input';\nimport {\n  localStorageGetJSON,\n  localStorageSetJSON,\n} from 'glov/client/local_storage';\nimport {\n  netClient,\n  netDisconnected,\n  netInit,\n} from 'glov/client/net';\nimport { addMetric } from 'glov/client/perf';\nimport { shaderCreate } from 'glov/client/shaders';\nimport { slider } from 'glov/client/slider';\nimport { spotSuppressPad } from 'glov/client/spot';\nimport { spriteSetGet } from 'glov/client/sprite_sets.js';\nimport {\n  BLEND_ADDITIVE,\n  ShaderParams,\n  Sprite,\n  Texture,\n  spriteCreate,\n  spriteQueueRaw,\n} from 'glov/client/sprites';\nimport {\n  textureLoad,\n  textureWhite,\n} from 'glov/client/textures';\nimport {\n  LINE_CAP_ROUND,\n  LINE_NO_AA,\n  buttonText,\n  drawCircle,\n  drawElipse,\n  drawHollowCircle,\n  drawHollowRect2,\n  drawLine,\n  drawRect,\n  panel,\n  print,\n  scaleSizes,\n  setFontHeight,\n  uiButtonHeight,\n  uiButtonWidth,\n  uiTextHeight,\n} from 'glov/client/ui';\nimport walltime from 'glov/client/walltime';\nimport {\n  clamp,\n  clone,\n  deepEqual,\n  easeInOut,\n  easeOut,\n  lerp,\n  merge,\n  mod,\n} from 'glov/common/util';\nimport {\n  JSVec2,\n  ROVec4,\n  Vec2,\n  rovec4,\n  unit_vec,\n  v2add,\n  v2addScale,\n  v2copy,\n  v2dist,\n  v2distSq,\n  v2floor,\n  v2set,\n  vec2,\n  vec4,\n} from 'glov/common/vmath';\nimport {\n  BIOMES,\n  Biome,\n} from './biomes';\nimport {\n  Galaxy,\n  GalaxyCellAlloced,\n  GenGalaxyParams,\n  LAYER_STEP,\n  createGalaxy,\n  distSq,\n} from './galaxy';\nimport { SimpleSoundscape } from './simple_soundscape';\nimport {\n  BIT_DETAIL_IDX_SHIFT,\n  BIT_RARITY_MASK,\n  BIT_SAME_LOOSE,\n  NoiseOptsNumberField,\n  NoiseOptsRangeField,\n  PLANET_TYPE_NAMES,\n  Planet,\n  PlanetOverrideParams,\n  SolarSystem,\n  planetCreate,\n  planetMapFlatTexture,\n  planetMapTexture,\n  planetNoiseForType,\n  solarSystemCreate,\n} from './solar_system';\n\nconst { abs, ceil, cos, floor, max, min, pow, round, sin, sqrt, PI } = Math;\n\nwindow.Z = window.Z || {};\nZ.BACKGROUND = 1;\nZ.SPRITES = 10;\nZ.PARTICLES = 20;\nZ.SOLAR = 60;\nZ.PLANET = 70;\nZ.PLANET_MAP = 80;\nZ.UI = 100;\n\n// let app = exports;\n// Virtual viewport for our game logic\nconst game_width = 256 + 90;\nconst game_height = 256;\n\nconst EFF_ZOOM_TO_SOUNDSCAPE = [\n  0, // 0\n  0, // 1\n  0, // 2\n  1, // 3\n  1, // 4\n  1, // 5\n  1, // 6\n  1, // 7\n  2, // 8\n  2, // 9\n  2, // 10\n  2, // 11 // start seeing stars\n  2, // 12\n  2, // 13\n  3, // 14\n  3, // 15\n  3, // 16 // fully zoomed galaxy\n  3, // 17 // orrery - same as previous\n  2, // 18 // globe / orbit\n  2, // 19 // map view full - same as previous\n  4, // 20\n  4, // 21\n  5, // 22\n  5, // 23\n  6, // 24\n  6, // 25\n  6, // 26 // full pixel art\n];\n\n\nfunction zoomTime(amount: number): number {\n  return abs(amount) * 500;\n}\n\nclass Zoomer {\n  zoom_level: number;\n  zoom_offs = vec2();\n  target_zoom_level: number;\n  queued_zooms: {\n    x: number;\n    y: number;\n    progress: number;\n    delta: number;\n  }[] = [];\n\n  constructor(\n    public zoom_level_key: string,\n    public zoom_offs_key: string,\n    public max_zoom: number,\n    public auto_recenter: boolean\n  ) {\n    this.zoom_level = round(localStorageGetJSON(this.zoom_level_key, 0));\n    v2set(this.zoom_offs,\n      localStorageGetJSON(`${this.zoom_offs_key}x`, 0),\n      localStorageGetJSON(`${this.zoom_offs_key}y`, 0));\n    this.target_zoom_level = this.zoom_level;\n  }\n  resetZoom(zoom_level: number, offsx: number, offsy: number): void {\n    this.queued_zooms = [];\n    this.zoom_level = this.target_zoom_level = zoom_level;\n    v2set(this.zoom_offs, offsx, offsy);\n    localStorageSetJSON(this.zoom_level_key, zoom_level);\n  }\n  doZoomActual(x: number, y: number, delta: number): void {\n    const { zoom_offs } = this;\n    let { zoom_level } = this;\n    let cur_zoom = pow(2, zoom_level);\n    let new_zoom_level = max(0, min(zoom_level + delta, this.max_zoom));\n    let new_zoom = pow(2, new_zoom_level);\n    // Calc actual coords at [x,y]\n    let point_x = zoom_offs[0] + x / cur_zoom;\n    let point_y = zoom_offs[1] + y / cur_zoom;\n    // Calc new x0 at new zoom relative to these coords\n    zoom_offs[0] = point_x - x / new_zoom;\n    zoom_offs[1] = point_y - y / new_zoom;\n    zoom_level = new_zoom_level;\n\n    if (zoom_level === 0 && this.auto_recenter) {\n      // recenter\n      zoom_offs[0] = zoom_offs[1] = 0;\n    }\n    this.zoom_level = zoom_level;\n    localStorageSetJSON(`${this.zoom_offs_key}x`, zoom_offs[0]);\n    localStorageSetJSON(`${this.zoom_offs_key}y`, zoom_offs[1]);\n    localStorageSetJSON(this.zoom_level_key, zoom_level);\n  }\n  zoomTick(max_okay_zoom: number, dt: number): void {\n    const { queued_zooms } = this;\n    for (let ii = 0; ii < queued_zooms.length; ++ii) {\n      let zm = queued_zooms[ii];\n      let is_last = ii === queued_zooms.length - 1;\n      let new_progress = min(1, zm.progress + dt/zoomTime(is_last ? zm.delta : 1));\n      let dp;\n      if (debugDefineIsSet('ATTRACT')) {\n        dp = new_progress - zm.progress;\n      } else {\n        // manual mode, smooth the application of zooming\n        dp = easeOut(new_progress, 2) - easeOut(zm.progress, 2);\n      }\n      let new_zoom_level = min(this.zoom_level + zm.delta * dp, this.max_zoom);\n      // not limiting zoom, just feels worse?\n      if (zm.delta > 0 && new_zoom_level > max_okay_zoom && false) {\n        continue;\n      }\n      zm.progress = new_progress;\n      this.doZoomActual(zm.x, zm.y, zm.delta * dp);\n      if (new_progress === 1) {\n        queued_zooms.splice(ii, 1);\n      }\n    }\n    if (!queued_zooms.length) {\n      // recover from floating point issues\n      this.zoom_level = this.target_zoom_level;\n    }\n  }\n  doZoom(x: number, y: number, delta: number): void {\n    this.target_zoom_level = max(0, min(this.target_zoom_level + delta, this.max_zoom));\n    this.queued_zooms.push({\n      x, y, delta,\n      progress: 0,\n    });\n  }\n  drag(delta: Vec2, w: number): void {\n    let zoom = pow(2, this.zoom_level);\n    this.zoom_offs[0] -= delta[0] / w / zoom;\n    this.zoom_offs[1] -= delta[1] / w / zoom;\n    localStorageSetJSON(`${this.zoom_offs_key}x`, this.zoom_offs[0]);\n    localStorageSetJSON(`${this.zoom_offs_key}y`, this.zoom_offs[1]);\n  }\n}\n\n\nexport function main(): void {\n  if (engine.DEBUG) {\n    // Enable auto-reload, etc\n    netInit({ engine });\n  }\n\n  let view = localStorageGetJSON('view', 1);\n  let show_panel = Boolean(localStorageGetJSON('panel', false));\n\n  const font_info_04b03x2 = require('./img/font/04b03_8x2.json');\n  const font_info_04b03x1 = require('./img/font/04b03_8x1.json');\n  const font_info_palanquin32 = require('./img/font/palanquin32.json');\n  let pixely = view === 1 ? 'strict' : 'on';\n  let font_init;\n  let ui_sprites;\n  if (pixely === 'strict' || true) {\n    font_init = { info: font_info_04b03x1, texture: 'font/04b03_8x1' };\n    ui_sprites = spriteSetGet('pixely');\n  } else if (pixely && pixely !== 'off') {\n    font_init = { info: font_info_04b03x2, texture: 'font/04b03_8x2' };\n    ui_sprites = spriteSetGet('pixely');\n  } else {\n    font_init = { info: font_info_palanquin32, texture: 'font/palanquin32' };\n  }\n\n  if (!engine.startup({\n    game_width,\n    game_height,\n    pixely,\n    font: font_init,\n    viewport_postprocess: false,\n    antialias: false,\n    do_borders: false,\n    show_fps: debugDefineIsSet('ATTRACT') ? false : undefined,\n    ui_sprites,\n    // force_webgl2: true,\n    pixel_perfect: 0.8,\n  })) {\n    return;\n  }\n  let font = engine.font;\n\n  scaleSizes(13 / 32);\n  setFontHeight(8);\n\n  let soundscape = new SimpleSoundscape({\n    prefix: 'music/',\n    levels: [\n      [['1_TRACK']],\n      [['2_TRACK'],\n       ['2_SIMPLE_MELODY_01', '2_SIMPLE_MELODY_02']],\n      [['3_TRACK'],\n       ['3_SIMPLE_MELODY_01', '3_SIMPLE_MELODY_02']],\n      [['4_TRACK'],\n       ['4_BASS_01', '4_BASS_02'],\n       ['4_SEQUENCE_01', '4_SEQUENCE_02'],\n       ['4_SIMPLE_MELODY_01', '4_SIMPLE_MELODY_02', '4_SIMPLE_MELODY_03']],\n      [['5_TRACK'],\n       ['5_SIMPLE_MELODY_01', '5_SIMPLE_MELODY_02'],\n       ['5_SLOW_ARP_01', '5_SLOW_ARP_02']],\n      [['6_TRACK'],\n       ['6_SIMPLE_MELODY_01', '6_SIMPLE_MELODY_02']],\n      [['7_TRACK'],\n       ['7_SIMPLE_MELODY_01', '7_SIMPLE_MELODY_02']],\n    ]\n  });\n\n  let tex_palette = textureLoad({\n    url: 'palette/pal2.png',\n    filter_min: gl.NEAREST,\n    filter_mag: gl.NEAREST,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n  });\n\n  let tex_palette_planets = textureLoad({\n    url: 'palette/pal_planets.png',\n    filter_min: gl.NEAREST,\n    filter_mag: gl.NEAREST,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n  });\n\n  let shader_galaxy_pixel = shaderCreate('shaders/galaxy_blend_pixel.fp');\n  let shader_galaxy_blend = shaderCreate('shaders/galaxy_blend.fp');\n  let shader_planet_pixel = shaderCreate('shaders/planet_pixel.fp');\n  let shader_planet_pixel_flat = shaderCreate('shaders/planet_pixel_flat.fp');\n  let shader_pixelart = shaderCreate('shaders/pixelart.fp');\n  let white_tex = textureWhite();\n\n  let sprites = {\n    grass0: autoAtlas('grass', 'def'), // 16x20\n    grass1: autoAtlas('grass-l1', 'def'), // 16x20\n    grass2: autoAtlas('grass-l2', 'def'), // 16x20\n    lava0: autoAtlas('lava', 'def'), // 16x20\n    lava1: autoAtlas('lava-l1', 'def'), // 16x20\n    lava2: autoAtlas('lava-l2', 'def'), // 16x20\n    ice0: autoAtlas('ice', 'def'), // 16x20\n    ice1: autoAtlas('ice-l1', 'def'), // 16x20\n    ice2: autoAtlas('ice-l2', 'def'), // 16x20\n    sand0: autoAtlas('sand', 'def'), // 16x20\n    sand1: autoAtlas('sand-l1', 'def'), // 16x20\n    sand2: autoAtlas('sand-l2', 'def'), // 16x20\n    parched0: autoAtlas('parched', 'def'), // 16x20\n    parched1: autoAtlas('parched-l1', 'def'), // 16x20\n    parched2: autoAtlas('parched-l2', 'def'), // 16x20\n    treesmountains0: autoAtlas('trees-mountains', 'def'), // 52x31\n    treesmountains1: autoAtlas('trees-mountains-l1', 'def'), // 52x31\n    treesmountains2: autoAtlas('trees-mountains-l2', 'def'), // 52x31\n    mountains0: autoAtlas('mountains', 'def'), // 26x5\n    mountains1: autoAtlas('mountains-l1', 'def'), // 26x5\n    mountains2: autoAtlas('mountains-l2', 'def'), // 26x5\n    ocean0: autoAtlas('ocean-animated', 'def'), // 8x21\n    ocean1: autoAtlas('ocean-animated-l1', 'def'), // 8x21\n    ocean2: autoAtlas('ocean-animated-l2', 'def'), // 8x21\n    dirt0: autoAtlas('dirt', 'def'), // 16x20\n    dirt1: autoAtlas('dirt-l1', 'def'), // 16x20\n    dirt2: autoAtlas('dirt-l2', 'def'), // 16x20\n    gasgiant0: autoAtlas('gas-giant', 'def'), // 8x21\n    gasgiant1: autoAtlas('gas-giant', 'def'), // 8x21\n    gasgiant2: autoAtlas('gas-giant', 'def'), // 8x21\n  };\n  for (let key in sprites) {\n    sprites[key as keyof typeof sprites].texs.push(tex_palette_planets);\n  }\n\n  const MAX_ZOOM = 16;\n  const MAX_SOLAR_VIEW = 1;\n  const MAX_PLANET_VIEW = 2;\n  const MAX_PLANET_ZOOM = 7;\n  const PLANET_PIXELART_LEVEL = 3;\n  const buf_dim = 256;\n  let params: GenGalaxyParams & {\n    dither: number;\n    width_ly: number;\n  } = {\n    buf_dim,\n    dither: 0.5,\n    arms: 7,\n    len_mods: 4,\n    twirl: 4,\n    center: 0.09,\n    seed: 1349,\n    noise_freq: 5,\n    noise_weight: 0.22,\n    poi_count: 200,\n    width_ly: 128*1024,\n    star_count: 100*1000*1000*1000,\n    max_zoom: MAX_ZOOM,\n\n    layer1: {\n      noise_freq: 20,\n      noise_weight: 0.2,\n    },\n    layer2: {\n      noise_freq: 80,\n      noise_weight: 0.2,\n    },\n    layer3: {\n      noise_freq: 250,\n      noise_weight: 0.2,\n    },\n    layer4: {\n      noise_freq: 750,\n      noise_weight: 0.25,\n    },\n    layer5: {\n      noise_freq: 2500,\n      noise_weight: 0.3,\n    },\n  };\n  let solar_params = merge({\n    seed: 80,\n    star_id: 55,\n  }, localStorageGetJSON('solar_params', {}));\n  let planet_params: Required<PlanetOverrideParams> = merge({\n    name: 'M' as const,\n    size: 12,\n    seed: 50,\n    noise: clone(planetNoiseForType('M')),\n  }, localStorageGetJSON('planet_params', {}));\n  let planet_view_params: {\n    orbit: number;\n    rot: number;\n  } = merge({\n    orbit: 0,\n    rot: 0,\n  }, localStorageGetJSON('planet_view_params', {}));\n  let gen_params: typeof params;\n  let gen_solar_params: typeof solar_params;\n  let gen_planet_params: typeof planet_params;\n  let debug_sprite: Sprite;\n  let galaxy: Galaxy;\n  function allocSprite(): void {\n    if (!debug_sprite) {\n      let tex = galaxy.getCellTextured(0, 0).tex;\n      assert(tex);\n      debug_sprite = spriteCreate({\n        texs: [tex, tex, tex],\n      });\n    }\n  }\n\n  function round4(v: number): number {\n    return round(v * 1000)/1000;\n  }\n  function roundZoom(v: number): number {\n    return view === 1 ? round(v) : v;\n  }\n\n  function format(v: number): string {\n    assert(v >= 0);\n    if (!v) {\n      return '0';\n    }\n    if (v > 900000000) {\n      return `${(v/1000000000).toFixed(1)}B`;\n    }\n    if (v > 900000) {\n      return `${(v/1000000).toFixed(1)}M`;\n    }\n    if (v > 900) {\n      return `${(v/1000).toFixed(1)}K`;\n    }\n    if (v > 9) {\n      return `${round(v)}`;\n    }\n    let precis = 1;\n    let check = 0.2;\n    while (true) {\n      if (v > check) {\n        return v.toFixed(precis);\n      }\n      check *= 0.1;\n      precis++;\n    }\n  }\n\n  let cells_drawn = 0;\n  addMetric({\n    name: 'cells',\n    show_stat: 'false',\n    labels: {\n      'cells: ': () => cells_drawn.toString(),\n    },\n  });\n\n  let gal_zoomer = new Zoomer('zoom', 'offs', MAX_ZOOM, true);\n  let solar_view = localStorageGetJSON('solar_view', 0);\n  let solar_override = localStorageGetJSON('solar_override', false);\n  let solar_override_system: null | SolarSystem = null;\n  let selected_star_id: number | null = localStorageGetJSON('selected_star', null);\n  let planet_view = localStorageGetJSON('planet_view', 0);\n  let planet_override = localStorageGetJSON('planet_override', false);\n  let planet_flatmap = localStorageGetJSON('planet_flatmap2', 0);\n  let planet_view_page = localStorageGetJSON('planet_view_page', 0);\n  let planet_override_planet: null | Planet = null;\n  let selected_planet_index: null | number = localStorageGetJSON('selected_planet', null);\n  let planet_zoomer = new Zoomer('planet_zoom', 'planet_offs', MAX_PLANET_ZOOM, false);\n  let style = font.styleColored(null, 0x000000ff);\n  let mouse_pos = vec2();\n  let use_mouse_pos = false;\n  const font_style_fade = font.styleColored(null, 0xFFFFFF40);\n  const font_style_label_overlay = font.styleColored(null, 0x00000090);\n  const color_legend_fade = vec4(1,1,1,0.25);\n  const color_highlight = vec4(1,1,0,0.75);\n  const color_text_backdrop = vec4(0,0,0,0.5);\n  let eff_solar_view = solar_view;\n  let eff_solar_view_unsmooth = solar_view;\n  let eff_planet_view = planet_view;\n  let eff_planet_view_unsmooth = planet_view;\n  let last_planet_rot = 0;\n  function zoomTick(max_okay_zoom: number): void {\n    let dt = getFrameDt();\n    gal_zoomer.zoomTick(max_okay_zoom, dt);\n    planet_zoomer.zoomTick(planet_zoomer.max_zoom, dt);\n    let dsolar = dt * 0.003;\n    if (eff_solar_view_unsmooth < solar_view) {\n      eff_solar_view_unsmooth = min(solar_view, eff_solar_view_unsmooth + dsolar);\n    } else if (eff_solar_view_unsmooth > solar_view) {\n      eff_solar_view_unsmooth = max(solar_view, eff_solar_view_unsmooth - dsolar);\n    }\n    let iesvu = floor(eff_solar_view_unsmooth);\n    eff_solar_view = round4(iesvu + easeInOut(eff_solar_view_unsmooth - iesvu, 2));\n\n    let dplanet = dt * 0.003;\n    if (eff_planet_view_unsmooth < planet_view) {\n      eff_planet_view_unsmooth = min(planet_view, eff_planet_view_unsmooth + dplanet);\n    } else if (eff_planet_view_unsmooth > planet_view) {\n      eff_planet_view_unsmooth = max(planet_view, eff_planet_view_unsmooth - dplanet);\n    }\n    let iepvu = floor(eff_planet_view_unsmooth);\n    eff_planet_view = round4(iepvu + easeInOut(eff_planet_view_unsmooth - iepvu, 2));\n  }\n  function solarZoom(delta: number): void {\n    solar_view = clamp(solar_view + delta, 0, MAX_SOLAR_VIEW);\n    localStorageSetJSON('solar_view', solar_view);\n    localStorageSetJSON('selected_star', solar_view ? selected_star_id : null);\n    if (!solar_view) {\n      solar_override = false;\n      localStorageSetJSON('solar_override', solar_override);\n      solar_override_system = null;\n    }\n  }\n  function planetZoom(x: number, y: number, delta: number): void {\n    if (planet_view === MAX_PLANET_VIEW && delta > 0) {\n      return planet_zoomer.doZoom(x, y, delta);\n    } else if (planet_view === MAX_PLANET_VIEW && delta < 0) {\n      if (planet_zoomer.target_zoom_level > 0) {\n        return planet_zoomer.doZoom(x, y, delta);\n      }\n    }\n    planet_view = clamp(planet_view + delta, 0, MAX_PLANET_VIEW);\n    localStorageSetJSON('planet_view', planet_view);\n    localStorageSetJSON('selected_planet', planet_view ? selected_planet_index : null);\n    if (planet_view === 2) {\n      planet_zoomer.resetZoom(0, last_planet_rot * 2, 0);\n    }\n    if (planet_view === 1 && delta > 0) {\n      planet_flatmap = 0;\n      localStorageSetJSON('planet_flatmap2', planet_flatmap);\n      planet_override = false;\n      localStorageSetJSON('planet_override', planet_override);\n    }\n  }\n  function doZoom(x: number, y: number, delta: number): void {\n    if (gal_zoomer.target_zoom_level === MAX_ZOOM && delta > 0) {\n      if (selected_star_id !== null) {\n        if (solar_view && selected_planet_index !== null) {\n          planetZoom(x, y, delta);\n        } else {\n          solarZoom(1);\n        }\n      }\n      return;\n    }\n    if (solar_view && delta < 0) {\n      if (planet_view) {\n        planetZoom(x, y, delta);\n      } else {\n        solarZoom(-1);\n      }\n      return;\n    }\n    gal_zoomer.doZoom(x, y, delta);\n  }\n\n  let last_img: string;\n  let img_id = 0;\n  function saveSnapshot(): void {\n    let src = engine.canvas;\n    let viewport = engine.viewport;\n\n    let canvas_full = document.createElement('canvas');\n    canvas_full.width = game_width * 4;\n    canvas_full.height = game_height * 4;\n    let ctx = canvas_full.getContext('2d');\n    assert(ctx);\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(src, viewport[0], src.height - viewport[3] + viewport[1], viewport[2], viewport[3],\n      0, 0, canvas_full.width, canvas_full.height);\n    let data_full = canvas_full.toDataURL('image/png');\n    //let data_full = canvas_full.toDataURL('image/jpeg', 0.92);\n    if (data_full === last_img) {\n      return;\n    }\n    last_img = data_full;\n\n    if (netClient()) {\n\n      let pak = netClient().pak('img');\n      pak.writeInt(img_id++);\n      pak.writeString(data_full);\n      pak.send();\n    } else {\n      let win = window.open('', 'img_preview');\n      assert(win);\n      let elems = win.document.getElementsByTagName('img');\n      if (elems && elems.length) {\n        elems[0].remove();\n      }\n      win.document.write(`<html><body><img src=\"${data_full}\"/></body></html>`);\n    }\n  }\n\n  const VSCALE = 0.5;\n  function drawHollowElipse(x: number, y: number, z: number, r0: number, r1: number, color: ROVec4): void {\n    let segments = max(20, r0 - 10);\n    let last_pos: JSVec2 = [0,0];\n    let cur_pos: JSVec2 = [0,0];\n    for (let ii = 0; ii <= segments + 1; ++ii) {\n      v2copy(last_pos, cur_pos);\n      let theta = ii / segments * PI * 2 + 0.1;\n      v2set(cur_pos, x + cos(theta) * r0, y + sin(theta) * r1);\n      if (view === 1) {\n        v2floor(cur_pos, cur_pos);\n        v2addScale(cur_pos, cur_pos, unit_vec, 0.5);\n      }\n      if (ii) {\n        drawLine(last_pos[0], last_pos[1], cur_pos[0], cur_pos[1], z, 1, 1, color, LINE_NO_AA|LINE_CAP_ROUND);\n      }\n    }\n  }\n\n  const PLANET_FULL_RADIUS = 128;\n  const ORBIT_RATE = 0.0002;\n  const ROTATION_RATE = 0.0003*0.5;\n  let temp_fade = vec4(1, 1, 1, 1);\n  function drawPlanet(\n    solar_system: SolarSystem,\n    selected_planet: SelectedPlanet,\n    x0: number,\n    y0: number,\n    z: number,\n    w: number,\n    h: number,\n    fade: number,\n  ): void {\n    let { planets } = solar_system;\n    let planet = planets[selected_planet.idx];\n    let theta = planet.orbit + planet.orbit_speed * walltime()*ORBIT_RATE;\n    theta %= 2 * PI;\n    let rot = getFrameTimestamp() * ROTATION_RATE;\n    if (planet_override && planet_override_planet) {\n      planet = planet_override_planet;\n      if (planet_view_params.orbit) {\n        theta = planet_view_params.orbit / 360 * 2 * PI;\n      }\n      if (planet_view_params.rot) {\n        rot = planet_view_params.rot / 360;\n      }\n    }\n    last_planet_rot = rot = mod(rot, 1);\n\n    x0 = lerp(fade, selected_planet.x, x0);\n    y0 = lerp(fade, selected_planet.y, y0);\n    w *= fade;\n    h *= fade;\n    let sprite_size = lerp(fade, planet.size, PLANET_FULL_RADIUS);\n\n    if (planet_flatmap === 1) {\n      // note: w/h happen to be 256 here, which makes this pixel-perfect\n      let pmtex = planetMapFlatTexture();\n      let planet_shader_params = {\n        params: [0, 0, mod(2 - theta / PI + rot*2, 2), 0],\n      };\n      let planet_tex = planet.getTexture(1, PLANET_FULL_RADIUS, 0, 0, 0, false);\n      if (planet_tex) {\n        spriteQueueRaw([pmtex, planet_tex, tex_palette_planets],\n          x0, y0 + h / 2 - w / 4, z, w, w /2, 0, 0, 1, 1,\n          [1,1,1,min(fade * 8, 1)], shader_planet_pixel, planet_shader_params);\n      }\n    } else if (planet_flatmap === 2) {\n      // TODO\n    } else {\n      let pmtex = planetMapTexture(true);\n      let xmid = x0 + w/2;\n      let ymid = y0 + h/2;\n      let planet_shader_params = {\n        params: [rot, pmtex.width / (sprite_size)*1.5 / 255, 2 - theta / PI, 0],\n      };\n      let x = xmid;\n      let y = ymid;\n      temp_fade[3] = min(fade * 8, 1);\n      let planet_tex = planet.getTexture(1, PLANET_FULL_RADIUS, 0, 0, 0, false);\n      if (planet_tex) {\n        spriteQueueRaw([pmtex, planet_tex, tex_palette_planets],\n          x - sprite_size, y - sprite_size, z, sprite_size*2, sprite_size*2, 0, 0, 1, 1,\n          temp_fade, shader_planet_pixel, planet_shader_params);\n      }\n    }\n  }\n\n  const MAP_FULL_SIZE = 256;\n  const MAP_SUBDIVIDE = 2; // how many extra steps to subdivide the top layer\n  const MAP_SUB_SIZE = MAP_FULL_SIZE / pow(2, MAP_SUBDIVIDE);\n  const EMPTY_RAW_DATA = new Uint8Array(MAP_SUB_SIZE * MAP_SUB_SIZE);\n  const NULL_ROWPAIR = [EMPTY_RAW_DATA, EMPTY_RAW_DATA];\n\n  function frameListToBitmask(list: Record<string, number|number[]>): Record<number, number[]> {\n    let ret: Record<number, number[]> = {};\n    for (let key in list) {\n      let offs = list[key];\n      let qs = [];\n      let v = 0;\n      let len = key.length;\n      for (let ii = 0; ii < len; ++ii) {\n        let bit = 1 << (len - 1 - ii);\n        if (key[ii] === '?') {\n          qs.push(bit);\n        } else if (key[ii] === '1') {\n          v |= bit;\n        }\n      }\n      let maxval = (1<<qs.length);\n      for (let ii = 0; ii < maxval; ++ii) {\n        for (let jj = 0; jj < qs.length; ++jj) {\n          if (ii & (1 << jj)) {\n            v |= qs[jj];\n          } else {\n            v &=~qs[jj];\n          }\n        }\n        let v0 = ret[v];\n        if (v0 === undefined) {\n          v0 = ret[v] = [];\n        }\n        if (Array.isArray(offs)) {\n          for (let kk = 0; kk < offs.length; ++kk) {\n            v0.push(offs[kk]);\n          }\n        } else {\n          v0.push(offs);\n        }\n      }\n    }\n    return ret;\n  }\n\n  let frame_offs_regular = frameListToBitmask({\n    '????00?01': 2,\n    '???000?1?': 3,\n    '???00?10?': 4,\n    '?1?100?0?': 5,\n    '?1?001?0?': 7,\n    //'001000100': 16,\n    //'100000001': 17,\n    '?0??01?0?': 18,\n    '?0?10??0?': 20,\n    '?01?00???': 34,\n    '?1?000???': 35,\n    '10?00????': 36,\n    '?0?100?1?': 37,\n    '?0?001?1?': 39,\n    '?1?101?0?': [5,18], // top U\n    '?1?10??1?': [37,35], // left U\n    '?1??01?1?': [7,3], // right U\n    '?0?101?1?': [39,20], // bottom U\n  });\n\n  let frame_offs_cliffs = frameListToBitmask({\n    '????00?01': 2,\n    '???000?1?': 3,\n    '???00?10?': 4,\n    '?1?100?0?': 22,\n    '?1?001?0?': 23,\n    '?0??01?0?': 18,\n    '?0?10??0?': 20,\n    '?01?00???': 34,\n    '?1?000???': 35,\n    '10?00????': 36,\n    '?0?100?1?': 38,\n    '?0?001?1?': 39,\n    '?1?101?0?': 21, //[22,18], // top U\n    '?1?10??1?': 6,// [38,35], // left U\n    '?1??01?1?': 7, // right U\n    '?0?101?1?': 21+16, // [39,20], // bottom U\n  });\n\n  let frame_offs_water = frameListToBitmask({\n    '000000001': 11*8,\n    '000000?1?': 5*8,\n    '000000100': 15*8,\n    '?1?100?00': 0*8,\n    '?1?00100?': 7*8,\n\n    '001000100': 10*8,\n    '100000001': 6*8,\n    '00?00100?': 8*8,\n    '?00100?00': 1*8,\n\n    '001000000': 12*8,\n    '?1?000000': 3*8,\n    '100000000': 16*8,\n    '?00100?1?': 2*8,\n    '00?001?1?': 9*8,\n  });\n\n  let frame_offs_gasgiant = frameListToBitmask({\n    '?1?100?00': 0*16,\n    '?00100?00': 1*16,\n    '?00100?1?': 2*16,\n    '?1?000000': 3*16,\n    '000000?1?': 4*16,\n    '100000001': 5*16,\n    '?1?00100?': 6*16,\n    '00?00100?': 7*16,\n    '00?001?1?': 8*16,\n    '001000100': 9*16,\n    '000000001': 10*16,\n    '001000000': 11*16,\n    '000000100': 12*16,\n    '100000000': 13*16,\n  });\n\n  let frame_offs_tree = frameListToBitmask({\n    '0001': 1,\n    '0010': 3,\n    '0011': 2,\n    '0100': 1 + 52*2,\n    '0101': 1 + 52,\n    '0110': 4 + 52*2,\n    '0111': 4,\n    '1000': 3 + 52*2,\n    '1001': 5 + 52*2,\n    '1010': 3 + 52,\n    '1011': 5,\n    '1100': 2 + 52*2,\n    '1101': 4 + 52,\n    '1110': 5 + 52,\n    '1111': 2 + 52,\n  });\n\n  let frame_offs_mountain_tint = frameListToBitmask({\n    '0001': 1,\n    '0010': 3,\n    '0011': 2,\n    '0100': 1 + 26*2,\n    '0101': 1 + 26,\n    '0110': 4 + 26*2,\n    '0111': 4,\n    '1000': 3 + 26*2,\n    '1001': 5 + 26*2,\n    '1010': 3 + 26,\n    '1011': 5,\n    '1100': 2 + 26*2,\n    '1101': 4 + 26,\n    '1110': 5 + 26,\n    '1111': 2 + 26,\n  });\n\n  type SpriteName = 'grass' | 'dirt' | 'lava' | 'ocean' | 'gasgiant' | 'sand' |\n    'parched' | 'ice' | 'mountains' | 'treesmountains';\n  type SubBiome = {\n    sprite: SpriteName;\n    frame: number;\n    anim: number;\n    ovr_idx?: number;\n    ord: number;\n    color_biome?: Biome;\n    shader_param: ROVec4;\n    frame_offs?: Record<number, number[]>;\n    extra_overlay?: {\n      ovr_idx: number;\n      anim: number;\n    };\n  };\n  function gas1(biome: Biome): SubBiome {\n    return {\n      sprite: 'gasgiant',\n      frame: 1*16 + 15*16,\n      anim: 2,\n      ovr_idx: 2*16 + 15*16,\n      frame_offs: frame_offs_gasgiant,\n      color_biome: biome,\n      extra_overlay: {\n        ovr_idx: 2*16,\n        anim: 3,\n      },\n    } as SubBiome;\n  }\n  function gas2(biome: Biome): SubBiome {\n    return {\n      sprite: 'gasgiant',\n      frame: 1*16,\n      anim: 3,\n      ovr_idx: -15*16,\n      frame_offs: frame_offs_gasgiant,\n      color_biome: biome,\n    } as SubBiome;\n  }\n  const BASE = {\n    NULL: { // lowest ord\n      sprite: 'grass',\n      frame: 1,\n    } as SubBiome,\n    WATER_DEEP: {\n      sprite: 'ocean',\n      frame: 6*8,\n      anim: 1,\n      color_biome: BIOMES.WATER_DEEP,\n    } as SubBiome,\n    WATER_SHALLOW: {\n      sprite: 'ocean',\n      frame: 1*8,\n      anim: 1,\n      ovr_idx: 2*8,\n      frame_offs: frame_offs_water,\n      color_biome: BIOMES.WATER_SHALLOW,\n    } as SubBiome,\n\n    GAS_ORANGE_LIGHTa: gas1(BIOMES.GAS_ORANGE_LIGHT),\n    GAS_ORANGE_LIGHTb: gas2(BIOMES.GAS_ORANGE_LIGHT),\n    GAS_ORANGE_DARKa: gas1(BIOMES.GAS_ORANGE_DARK),\n    GAS_ORANGE_DARKb: gas2(BIOMES.GAS_ORANGE_DARK),\n    GAS_GRAYa: gas1(BIOMES.GAS_GRAY),\n    GAS_GRAYb: gas2(BIOMES.GAS_GRAY),\n    GAS_BLUE_DARKa: gas1(BIOMES.GAS_BLUE_DARK),\n    GAS_BLUE_DARKb: gas2(BIOMES.GAS_BLUE_DARK),\n    GAS_BLUE_MEDa: gas1(BIOMES.GAS_BLUE_MED),\n    GAS_BLUE_MEDb: gas2(BIOMES.GAS_BLUE_MED),\n    GAS_BLUE_LIGHTa: gas1(BIOMES.GAS_BLUE_LIGHT),\n    GAS_BLUE_LIGHTb: gas2(BIOMES.GAS_BLUE_LIGHT),\n    GAS_YELLOWa: gas1(BIOMES.GAS_YELLOW),\n    GAS_YELLOWb: gas2(BIOMES.GAS_YELLOW),\n    GAS_YELLOW_REDa: gas1(BIOMES.GAS_YELLOW_RED),\n    GAS_YELLOW_REDb: gas2(BIOMES.GAS_YELLOW_RED),\n    GAS_REDa: gas1(BIOMES.GAS_RED),\n    GAS_REDb: gas2(BIOMES.GAS_RED),\n    GAS_PURPLE_LIGHTa: gas1(BIOMES.GAS_PURPLE_LIGHT),\n    GAS_PURPLE_LIGHTb: gas2(BIOMES.GAS_PURPLE_LIGHT),\n    GAS_PURPLE_DARKa: gas1(BIOMES.GAS_PURPLE_DARK),\n    GAS_PURPLE_DARKb: gas2(BIOMES.GAS_PURPLE_DARK),\n\n    LAVAFLOW: {\n      sprite: 'ocean',\n      frame: 1*8,\n      anim: 1,\n      // ovr_idx: 2*8,\n      // frame_offs: frame_offs_water,\n      color_biome: BIOMES.MOLTEN_LAVAFLOW,\n    } as SubBiome,\n    SANDa: {\n      sprite: 'sand',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DESERT,\n    } as SubBiome,\n    SANDb: {\n      sprite: 'sand',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DESERT,\n    } as SubBiome,\n    GRASSa: {\n      sprite: 'grass',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8 - 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.GREEN_PLAINS,\n    } as SubBiome,\n    GRASSb: {\n      sprite: 'grass',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.GREEN_PLAINS,\n    } as SubBiome,\n    MOONROCK1: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.MOONROCK1,\n    } as SubBiome,\n    MOONROCK2: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 6*16 + 7, // (14+3) * 16 + 8,\n      frame_offs: frame_offs_cliffs,\n      color_biome: BIOMES.MOONROCK2,\n    } as SubBiome,\n    MOONROCK3: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 6*16 + 7, // (14+3) * 16 + 8,\n      frame_offs: frame_offs_cliffs,\n      color_biome: BIOMES.MOONROCK3,\n    } as SubBiome,\n    DIRT_DARKa: {\n      sprite: 'dirt',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DIRT_DARK,\n    } as SubBiome,\n    DIRT_DARKb: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DIRT_DARK,\n    } as SubBiome,\n    DIRTa: {\n      sprite: 'sand',\n      frame: 1,\n      ovr_idx: 2*16 + 7, // (14+3) * 16 + 8,\n      frame_offs: frame_offs_cliffs,\n      color_biome: BIOMES.DIRT,\n    } as SubBiome,\n    DIRTb: {\n      sprite: 'sand',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DIRT,\n    } as SubBiome,\n    DIRT_REDa: {\n      sprite: 'dirt',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DIRT_RED,\n    } as SubBiome,\n    DIRT_REDb: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DIRT_RED,\n    } as SubBiome,\n    DIRT_REDc: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.DEAD_FOREST,\n    } as SubBiome,\n    ICE_DARKa: {\n      sprite: 'dirt',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.FROZEN_OCEAN,\n    } as SubBiome,\n    ICE_DARKb: {\n      sprite: 'dirt',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.FROZEN_OCEAN,\n    } as SubBiome,\n    ICEa: {\n      sprite: 'ice',\n      frame: 1,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.FROZEN_PLAINS,\n    } as SubBiome,\n    ICEb: {\n      sprite: 'ice',\n      frame: 17,\n      ovr_idx: 14 * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.FROZEN_PLAINS,\n    } as SubBiome,\n    // MOUNTAIN_BASE: {\n    //   sprite: 'lava',\n    //   frame: 1,\n    //   ovr_idx: (14+3) * 16 + 8,\n    //   frame_offs: frame_offs_regular,\n    //   color_biome: BIOMES.DIRT_DARK,\n    // } as SubBiome,\n    MOLTEN: {\n      sprite: 'lava',\n      frame: 17,\n      ovr_idx: (14+3) * 16 + 8,\n      frame_offs: frame_offs_regular,\n      color_biome: BIOMES.MOLTEN_PLAINS,\n    } as SubBiome,\n\n    // overlay details\n    DETAIL_TREES1: {\n      sprite: 'treesmountains',\n      frame: 1,\n      frame_offs: frame_offs_tree,\n    } as SubBiome,\n    DETAIL_TREES_DEAD: {\n      sprite: 'treesmountains',\n      frame: 18*52 + 14,\n      frame_offs: frame_offs_tree,\n    } as SubBiome,\n    DETAIL_MOUNTAINS1: {\n      sprite: 'mountains',\n      frame: 1,\n      frame_offs: frame_offs_mountain_tint,\n      color_biome: BIOMES.MOUNTAINS,\n    } as SubBiome,\n    DETAIL_MOUNTAINS_MOONROCK4: {\n      sprite: 'mountains',\n      frame: 1,\n      frame_offs: frame_offs_mountain_tint,\n      color_biome: BIOMES.MOONROCK4,\n    } as SubBiome,\n    DETAIL_MOUNTAINS_SNOW: {\n      sprite: 'mountains',\n      frame: 14,\n      frame_offs: frame_offs_mountain_tint,\n      color_biome: BIOMES.MOUNTAINS,\n    } as SubBiome,\n    DETAIL_MOLTEN_MOUNTAINS: {\n      sprite: 'mountains',\n      frame: 1,\n      frame_offs: frame_offs_mountain_tint,\n      color_biome: BIOMES.MOLTEN_MOUNTAINS,\n    } as SubBiome,\n  };\n  type BaseType = keyof typeof BASE;\n  let ord = 0;\n  function colorFromBiome(color_biome: Biome): ROVec4 {\n    return rovec4(color_biome / 256 + 1/512, 0, 0, 1);\n  }\n  for (let key in BASE) {\n    let bb = BASE[key as BaseType];\n    bb.anim = bb.anim || 0;\n    bb.ord = ord++;\n    let color_biome = bb.color_biome || BIOMES.GREEN_PLAINS;\n    bb.shader_param = colorFromBiome(color_biome);\n  }\n\n  type DetailDef = [SpriteName, number[], ROVec4];\n  const BIOME_TO_BASE: Record<Biome, [SubBiome, SubBiome, SubBiome?]> = {\n    [BIOMES.WATER_DEEP]: [BASE.WATER_DEEP, BASE.WATER_DEEP],\n    [BIOMES.WATER_SHALLOW]: [BASE.WATER_SHALLOW, BASE.WATER_SHALLOW],\n    [BIOMES.MOLTEN_LAVAFLOW]: [BASE.LAVAFLOW, BASE.LAVAFLOW],\n    [BIOMES.MOLTEN_PLAINS]: [BASE.MOLTEN, BASE.MOLTEN],\n    [BIOMES.GREEN_FOREST]: [BASE.GRASSa, BASE.GRASSb, BASE.DETAIL_TREES1],\n    [BIOMES.MOUNTAINS]: [BASE.GRASSa, BASE.GRASSb, BASE.DETAIL_MOUNTAINS1],\n    [BIOMES.GREEN_PLAINS]: [BASE.GRASSa, BASE.GRASSb],\n    [BIOMES.MOUNTAINS_SNOW]: [BASE.ICEb, BASE.ICEb, BASE.DETAIL_MOUNTAINS_SNOW],\n    [BIOMES.FROZEN_PLAINS]: [BASE.ICEa, BASE.ICEb],\n    [BIOMES.FROZEN_OCEAN]: [BASE.ICE_DARKa, BASE.ICE_DARKb],\n    [BIOMES.FROZEN_MOUNTAINS]: [BASE.ICEa, BASE.ICEa, BASE.DETAIL_MOUNTAINS_SNOW],\n    [BIOMES.MOLTEN_MOUNTAINS]: [BASE.MOLTEN, BASE.MOLTEN, BASE.DETAIL_MOLTEN_MOUNTAINS],\n    [BIOMES.DESERT]: [BASE.SANDa, BASE.SANDb],\n    [BIOMES.DIRT_DARK]: [BASE.DIRT_DARKa, BASE.DIRT_DARKb],\n    [BIOMES.DIRT]: [BASE.DIRTa, BASE.DIRTb],\n    [BIOMES.DIRT_RED]: [BASE.DIRT_REDa, BASE.DIRT_REDb],\n    [BIOMES.DEAD_FOREST]: [BASE.DIRT_REDc, BASE.DIRT_REDc, BASE.DETAIL_TREES_DEAD],\n    [BIOMES.MOONROCK1]: [BASE.MOONROCK1, BASE.MOONROCK1],\n    [BIOMES.MOONROCK2]: [BASE.MOONROCK2, BASE.MOONROCK2],\n    [BIOMES.MOONROCK3]: [BASE.MOONROCK3, BASE.MOONROCK3],\n    [BIOMES.MOONROCK4]: [BASE.MOONROCK3, BASE.MOONROCK3, BASE.DETAIL_MOUNTAINS_MOONROCK4],\n\n    [BIOMES.WATER_DEEP]: [BASE.WATER_DEEP, BASE.WATER_DEEP],\n\n    [BIOMES.GAS_ORANGE_LIGHT]: [BASE.GAS_ORANGE_LIGHTa, BASE.GAS_ORANGE_LIGHTa],\n    [BIOMES.GAS_ORANGE_DARK]: [BASE.GAS_ORANGE_DARKa, BASE.GAS_ORANGE_DARKa],\n    [BIOMES.GAS_GRAY]: [BASE.GAS_GRAYa, BASE.GAS_GRAYa],\n    [BIOMES.GAS_BLUE_DARK]: [BASE.GAS_BLUE_DARKa, BASE.GAS_BLUE_DARKa],\n    [BIOMES.GAS_BLUE_MED]: [BASE.GAS_BLUE_MEDa, BASE.GAS_BLUE_MEDa],\n    [BIOMES.GAS_BLUE_LIGHT]: [BASE.GAS_BLUE_LIGHTa, BASE.GAS_BLUE_LIGHTa],\n    [BIOMES.GAS_YELLOW]: [BASE.GAS_YELLOWa, BASE.GAS_YELLOWa],\n    [BIOMES.GAS_YELLOW_RED]: [BASE.GAS_YELLOW_REDa, BASE.GAS_YELLOW_REDa],\n    [BIOMES.GAS_RED]: [BASE.GAS_REDa, BASE.GAS_REDa],\n    [BIOMES.GAS_PURPLE_LIGHT]: [BASE.GAS_PURPLE_LIGHTa, BASE.GAS_PURPLE_LIGHTa],\n    [BIOMES.GAS_PURPLE_DARK]: [BASE.GAS_PURPLE_DARKa, BASE.GAS_PURPLE_DARKa],\n  };\n\n  type BiomeDetailsRarity = SubBiome[];\n  type BiomeDetails = [BiomeDetailsRarity, BiomeDetailsRarity, BiomeDetailsRarity];\n  function detailRarityToSubBiome(sprite: SpriteName, frames: number[], colorfrom: Biome): BiomeDetailsRarity {\n    let ret: SubBiome[] = [];\n    for (let ii = 0; ii < frames.length; ++ii) {\n      ret.push({\n        sprite,\n        frame: frames[ii],\n        anim: 0,\n        ord: 999,\n        shader_param: colorFromBiome(colorfrom),\n      });\n    }\n    return ret;\n  }\n  type BiomeDetailsFrames = [number[], number[], number[]];\n  function detailFramesToSubBiome(sprite: SpriteName, frameset: BiomeDetailsFrames, colorfrom: Biome): BiomeDetails {\n    return [\n      detailRarityToSubBiome(sprite, frameset[0], colorfrom),\n      detailRarityToSubBiome(sprite, frameset[1], colorfrom),\n      detailRarityToSubBiome(sprite, frameset[2], colorfrom),\n    ];\n  }\n  const BIOME_DETAILS_STANDARD: BiomeDetailsFrames = [\n    [4,5,6,7,20,21,22,23],\n    [2,3,8,9,18,19,24,25,28],\n    [10,11,12,13,26,27,29],\n  ];\n  const BIOME_DETAILS_NO_LIFE_SAND: BiomeDetailsFrames = [\n    [4,5,6,7,20,21,22,23],\n    [2,3,8,9,18,19,24,25,28],\n    [12,13,29],\n  ];\n  const BIOME_DETAILS_DEAD_DIRT: BiomeDetailsFrames = [\n    [4,5,6,7,20,21,22,23],\n    [6,7,8,9,24,25],\n    [13,28,29],\n  ];\n  const BIOME_DETAILS_NO_LIFE_DIRT: BiomeDetailsFrames = [\n    [4,5,6,7,20,21,22,22,23],\n    [6,7,22,23],\n    [13,29],\n  ];\n  const BIOME_DETAILS_MOLTEN: BiomeDetailsFrames = [\n    [6,7,13,13,13,22,23],\n    [4,5,10,11,20,21,26,27,28,29],\n    [2,3,8,9,12,18,19,24,25],\n  ];\n  const BIOME_DETAILS: Record<Biome, BiomeDetails> = {\n    [BIOMES.GREEN_PLAINS]: detailFramesToSubBiome('grass', BIOME_DETAILS_STANDARD, BIOMES.GREEN_PLAINS),\n    [BIOMES.GREEN_FOREST]: detailFramesToSubBiome('grass', BIOME_DETAILS_STANDARD, BIOMES.GREEN_PLAINS),\n    [BIOMES.DESERT]: detailFramesToSubBiome('sand', BIOME_DETAILS_STANDARD, BIOMES.DESERT),\n    [BIOMES.FROZEN_PLAINS]: detailFramesToSubBiome('ice', BIOME_DETAILS_STANDARD, BIOMES.FROZEN_PLAINS),\n    [BIOMES.FROZEN_OCEAN]: detailFramesToSubBiome('ice', BIOME_DETAILS_STANDARD, BIOMES.FROZEN_OCEAN),\n    [BIOMES.DIRT]: detailFramesToSubBiome('sand', BIOME_DETAILS_NO_LIFE_SAND, BIOMES.DIRT),\n    [BIOMES.DIRT_DARK]: detailFramesToSubBiome('dirt', BIOME_DETAILS_DEAD_DIRT, BIOMES.DIRT_DARK),\n    [BIOMES.MOLTEN_PLAINS]: detailFramesToSubBiome('lava', BIOME_DETAILS_MOLTEN, BIOMES.MOLTEN_PLAINS),\n    [BIOMES.DIRT_RED]: detailFramesToSubBiome('dirt', BIOME_DETAILS_STANDARD, BIOMES.DIRT_RED),\n    [BIOMES.DEAD_FOREST]: detailFramesToSubBiome('dirt', BIOME_DETAILS_STANDARD, BIOMES.DEAD_FOREST),\n    [BIOMES.MOONROCK1]: detailFramesToSubBiome('dirt', BIOME_DETAILS_NO_LIFE_DIRT, BIOMES.MOONROCK1),\n    [BIOMES.MOONROCK2]: detailFramesToSubBiome('dirt', BIOME_DETAILS_NO_LIFE_DIRT, BIOMES.MOONROCK2),\n    [BIOMES.MOONROCK3]: detailFramesToSubBiome('dirt', BIOME_DETAILS_NO_LIFE_DIRT, BIOMES.MOONROCK3),\n  };\n\n  let anim_frame = [0,0,0,0];\n  function overlayFor(base: SubBiome, mask: number): null | DetailDef {\n    if (!base.frame_offs) {\n      return null;\n    }\n    let offs = base.frame_offs[mask];\n    if (offs === undefined) {\n      return null;\n    }\n    let r = [];\n    for (let ii = 0; ii < offs.length; ++ii) {\n      r.push(base.ovr_idx! + offs[ii] + anim_frame[base.anim]);\n    }\n    if (base.extra_overlay) {\n      for (let ii = 0; ii < offs.length; ++ii) {\n        r.push(base.extra_overlay.ovr_idx + offs[ii] + anim_frame[base.extra_overlay.anim]);\n      }\n    }\n    return [base.sprite, r, base.shader_param];\n  }\n  function detailFor(detail: SubBiome, mask: number): number[] {\n    let add = anim_frame[detail.anim];\n    if (!detail.frame_offs) {\n      return [detail.frame + add];\n    }\n    let ul = (mask & 0b110110000) === 0b110110000 ? 0b1000 : 0;\n    let ur = (mask & 0b011011000) === 0b011011000 ? 0b0100 : 0;\n    let ll = (mask & 0b000110110) === 0b000110110 ? 0b0010 : 0;\n    let lr = (mask & 0b000011011) === 0b000011011 ? 0b0001 : 0;\n    // alternative formulation:\n    // ul = mask & 0b110110000;\n    // ul &= ul >> 3;\n    // ul &= ul >> 1;\n    // ul >>= 1;\n    mask = ul | ur | ll | lr;\n    let offs = detail.frame_offs[mask];\n    if (offs === undefined) {\n      return [detail.frame + add];\n    }\n    let r = [];\n    for (let ii = 0; ii < offs.length; ++ii) {\n      r.push(detail.frame + offs[ii] + add);\n    }\n    return r;\n  }\n\n  function planetMapMode(\n    planet: Planet,\n    x: number, // origin of the world in screen coords\n    y: number,\n    z_base: number,\n    h: number, // height of the world in screen coords\n    alpha: number,\n    zoom_level: number,\n  ): void {\n    let planet_shader_params = {};\n    temp_fade[3] = alpha;\n    let z0 = z_base;\n    function drawSubLayer(sublayer: number, z: number, no_draw: boolean): boolean {\n      let all_good = true;\n      if (sublayer === 0) {\n        // special: single texture, just fill the screen\n        let layer0 = planet.getTexture(2, MAP_FULL_SIZE, 0, 0, 0, false);\n        if (layer0 && !no_draw) {\n          spriteQueueRaw([layer0, tex_palette_planets],\n            camera2d.x0Real(), y, z, camera2d.wReal(), h,\n            (camera2d.x0Real() - x) / (h * 2), 0, (camera2d.x1Real() - x) / (h * 2), 1,\n            temp_fade, shader_planet_pixel_flat, planet_shader_params);\n        } else {\n          all_good = false;\n        }\n      } else {\n        // draw in parts\n        let zoom = pow(2, sublayer + MAP_SUBDIVIDE);\n        let sub_dim = h / zoom;\n        let sub_num_horiz = zoom * 2;\n        let sub_num_vert = zoom;\n        let sub_x0 = floor((camera2d.x0Real() - x) / sub_dim);\n        let sub_x1 = floor((camera2d.x1Real() - x) / sub_dim);\n        let sub_y0 = floor((camera2d.y0Real() - y) / sub_dim);\n        let sub_y1 = floor((camera2d.y1Real() - y) / sub_dim);\n        for (let yy = sub_y0; yy <= sub_y1; ++yy) {\n          for (let xx = sub_x0; xx <= sub_x1; ++xx) {\n            let layer = planet.getTexture(2, MAP_SUB_SIZE, sublayer + MAP_SUBDIVIDE,\n              mod(xx, sub_num_horiz), mod(yy, sub_num_vert), false);\n            if (layer && !no_draw) {\n              spriteQueueRaw([layer, tex_palette_planets],\n                x + xx * sub_dim,\n                y + yy * sub_dim, z, sub_dim, sub_dim,\n                0, 0, 1, 1,\n                temp_fade, shader_planet_pixel_flat, planet_shader_params);\n            } else {\n              all_good = false;\n            }\n          }\n        }\n        // also preload off the sides\n        let pad = game_height / 4;\n        sub_x0 = floor((camera2d.x0Real() - pad - x) / sub_dim);\n        sub_x1 = floor((camera2d.x1Real() + pad - x) / sub_dim);\n        sub_y0 = floor((camera2d.y0Real() - pad - y) / sub_dim);\n        sub_y1 = floor((camera2d.y1Real() + pad - y) / sub_dim);\n        for (let yy = sub_y0; yy <= sub_y1; ++yy) {\n          for (let xx = sub_x0; xx <= sub_x1; ++xx) {\n            planet.getTexture(2, MAP_SUB_SIZE, sublayer + MAP_SUBDIVIDE,\n              mod(xx, sub_num_horiz), mod(yy, sub_num_vert), false);\n          }\n        }\n      }\n      return all_good;\n    }\n    let sublayer = round(zoom_level);\n    let filled = false;\n    for (let ii = min(PLANET_PIXELART_LEVEL, sublayer); ii >= 0; --ii) {\n      if (drawSubLayer(ii, z_base, filled)) {\n        filled = true;\n      }\n      --z_base;\n    }\n    if (sublayer >= PLANET_PIXELART_LEVEL + 2 && view) {\n      // also draw pixel art\n      let lod = clamp(MAX_PLANET_ZOOM - sublayer, 0, 2) as 0|1|2;\n      sublayer = PLANET_PIXELART_LEVEL;\n      let zoom = pow(2, sublayer + MAP_SUBDIVIDE);\n      let sub_dim = h / zoom; // in screen pixels\n      let sub_num_horiz = zoom * 2;\n      let sub_num_vert = zoom;\n      const tile_h = h / MAP_SUB_SIZE / zoom;\n      let sub_x0 = floor((camera2d.x0Real() - x - tile_h) / sub_dim);\n      let sub_x1 = floor((camera2d.x1Real() - x + tile_h) / sub_dim);\n      let sub_y0 = floor((camera2d.y0Real() - y - tile_h) / sub_dim);\n      let sub_y1 = floor((camera2d.y1Real() - y + tile_h) / sub_dim);\n      let raw_datas: Partial<Record<number, Partial<Record<number, [Uint8Array, Uint8Array?]>>>> = {};\n      for (let yy = sub_y0; yy <= sub_y1; ++yy) {\n        let row = raw_datas[yy] = {} as Partial<Record<number, [Uint8Array, Uint8Array?]>>;\n        for (let xx = sub_x0; xx <= sub_x1; ++xx) {\n          let eff_xx = mod(xx, sub_num_horiz);\n          let layer = planet.getTexture(2, MAP_SUB_SIZE, sublayer + MAP_SUBDIVIDE,\n            eff_xx, mod(yy, sub_num_vert), true);\n          if (layer) {\n            row[eff_xx] = [layer.raw_data, layer.details && layer.details.valid ? layer.details : undefined];\n          }\n        }\n      }\n      anim_frame[1] = floor(getFrameTimestamp() * 0.0086) % 8;\n      anim_frame[2] = floor(getFrameTimestamp() * 0.0086*0.25) % 16;\n      anim_frame[3] = floor(getFrameTimestamp() * 0.0086*0.7) % 16;\n      let map_num_vert = MAP_SUB_SIZE * zoom;\n      let map_num_horiz = map_num_vert * 2;\n      let tile_x0 = floor((camera2d.x0Real() - x) / tile_h);\n      let tile_x1 = floor((camera2d.x1Real() - x) / tile_h);\n      let tile_y0 = floor((camera2d.y0Real() - y) / tile_h);\n      let tile_y1 = floor((camera2d.y1Real() - y) / tile_h);\n      let draw_param = {\n        x: 0,\n        y: 0,\n        w: 0,\n        h: 0,\n        z: 0,\n        frame: 0,\n        shader: shader_pixelart,\n        nozoom: true,\n        color: unit_vec,\n      };\n      type TileInfo = {\n        base: SubBiome;\n        detail?: SubBiome;\n      };\n      function bget(out: TileInfo, xx: number, yy: number): void {\n        let eff_yy = mod(yy, map_num_vert);\n        let sub_y = floor(eff_yy / MAP_SUB_SIZE);\n        let row = raw_datas[sub_y];\n        let tile_y_offs = (eff_yy % MAP_SUB_SIZE) * MAP_SUB_SIZE;\n        let eff_xx = mod(xx, map_num_horiz);\n        let sub_x = floor(eff_xx / MAP_SUB_SIZE);\n        let tile_x_offs = eff_xx % MAP_SUB_SIZE;\n        let rowpair = row && row[sub_x] || NULL_ROWPAIR;\n        let v = rowpair[0][tile_y_offs + tile_x_offs] || 0;\n        let details = rowpair[1];\n        let detailv = details && details[tile_y_offs + tile_x_offs] || 0;\n\n        let pair = BIOME_TO_BASE[v];\n        if (pair) {\n          let same = detailv & BIT_SAME_LOOSE;\n          out.base = pair[same ? 1 : 0];\n          out.detail = pair[2];\n          let detail_rarity = detailv & BIT_RARITY_MASK;\n          if (detail_rarity && same) {\n            let detailrarityset = BIOME_DETAILS[v];\n            if (detailrarityset) {\n              let detailset = detailrarityset[detail_rarity - 1];\n              let detail_idx = detailv >> BIT_DETAIL_IDX_SHIFT;\n              out.detail = detailset[detail_idx % detailset.length];\n            }\n          }\n\n        } else {\n          out.base = BASE.NULL;\n          out.detail = undefined;\n        }\n      }\n      let ndata: TileInfo[] = [];\n      for (let ii = 0; ii < 9; ++ii) {\n        ndata.push({ base: BASE.NULL, detail: undefined });\n      }\n      for (let yy = tile_y0; yy <= tile_y1; ++yy) {\n        for (let jj = 0; jj < 3; ++jj) {\n          for (let ii = 0; ii < 2; ++ii) {\n            bget(ndata[jj * 3 + ii + 1], tile_x0 - 1 + ii, yy - 1 + jj);\n          }\n        }\n        let pixy = round(y + yy * tile_h);\n        let next_pixy = round(y + (yy +1) * tile_h);\n        draw_param.y = pixy;\n        draw_param.h = next_pixy - pixy;\n        for (let xx = tile_x0; xx <= tile_x1; ++xx) {\n          for (let jj = 0; jj < 3; ++jj) {\n            // shift known data\n            let t = ndata[jj*3];\n            ndata[jj*3] = ndata[jj*3+1];\n            ndata[jj*3+1] = ndata[jj*3+2];\n            // get new data\n            bget(t, xx + 1, yy - 1 + jj);\n            ndata[jj*3+2] = t;\n          }\n          let my_info = ndata[4];\n          if (!my_info.base.ord) {\n            continue;\n          }\n\n          let pixx = round(x + xx * tile_h);\n          let next_pixx = round(x + (xx +1) * tile_h);\n          let extra = my_info.detail;\n          draw_param.x = pixx;\n          draw_param.w = next_pixx - pixx;\n\n          let base = my_info.base;\n          draw_param.z = z0 + 1;\n          draw_param.frame = base.frame + anim_frame[base.anim];\n          draw_param.color = base.shader_param;\n          sprites[`${base.sprite}${lod}`].draw(draw_param);\n          if (base.extra_overlay) {\n            draw_param.z++;\n            draw_param.frame = base.frame + base.extra_overlay.ovr_idx - base.ovr_idx! +\n              anim_frame[base.extra_overlay.anim];\n            sprites[`${base.sprite}${lod}`].draw(draw_param);\n          }\n\n          // Get BASE (and details) of neighbors and draw overlays\n          let masks: Record<number, number> = {};\n          let dmask = 0;\n          let overlays = [];\n          for (let jj = 0, idx = 8; jj < 3; ++jj) {\n            for (let ii = 0; ii < 3; ++ii, --idx) {\n              let n = ndata[jj * 3 + ii];\n              let nb = n.base;\n              if (nb.ord > base.ord) {\n                if (!masks[nb.ord]) {\n                  overlays.push(nb);\n                  masks[nb.ord] = (1 << idx);\n                } else {\n                  masks[nb.ord] |= (1 << idx);\n                }\n              }\n              if (n.detail === my_info.detail) {\n                dmask |= (1 << idx);\n              }\n            }\n          }\n          overlays.sort((a, b) => a.ord - b.ord);\n          let last_overlay;\n          for (let ii = 0; ii < overlays.length; ++ii) {\n            let n = overlays[ii];\n            let ovr = overlayFor(n, masks[n.ord]);\n            if (ovr) {\n              last_overlay = ovr;\n              draw_param.color = ovr[2];\n              for (let jj = 0; jj < ovr[1].length; ++jj) {\n                draw_param.z++;\n                draw_param.frame = ovr[1][jj];\n                sprites[`${ovr[0]}${lod}`].draw(draw_param);\n              }\n            }\n          }\n\n          if (extra) {\n            if (extra.ovr_idx) {\n              if (last_overlay) {\n                let ovr = last_overlay[1];\n                for (let jj = 0; jj < ovr.length; ++jj) {\n                  draw_param.z++;\n                  draw_param.frame = extra.ovr_idx + ovr[jj];\n                  sprites[`${last_overlay[0]}${lod}`].draw(draw_param);\n                }\n              }\n            } else {\n              let ovr = detailFor(extra, dmask);\n              draw_param.color = extra.shader_param;\n              for (let jj = 0; jj < ovr.length; ++jj) {\n                draw_param.z++;\n                draw_param.frame = ovr[jj];\n                sprites[`${extra.sprite}${lod}`].draw(draw_param);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  let solar_mouse_pos = vec2();\n  type SelectedPlanet = {\n    idx: number;\n    x: number;\n    y: number;\n    z: number;\n  };\n  function drawSolarSystem(\n    solar_system: SolarSystem,\n    x0: number,\n    y0: number,\n    z: number,\n    w: number,\n    h: number,\n    star_xp: number,\n    star_yp: number,\n    fade: number\n  ): null | SelectedPlanet {\n    mousePos(solar_mouse_pos);\n    let pmtex = planetMapTexture(false);\n    x0 = lerp(fade, star_xp, x0);\n    y0 = lerp(fade, star_yp, y0);\n    w *= fade;\n    h *= fade;\n    let { star_data, planets } = solar_system;\n    let xmid = x0 + w/2;\n    let ymid = y0 + h/2;\n    let sun_radius = star_data.game_radius;\n    let sun_pad = w * 0.1;\n    let c = star_data.color;\n    drawCircle(xmid, ymid, z, sun_radius + 2, 0.25, [c[0], c[1], c[2], fade], BLEND_ADDITIVE);\n    drawCircle(xmid, ymid, z + 0.005, sun_radius, 0.95, [c[0], c[1], c[2], fade]);\n    let rstep = (w/2 - sun_pad) / (planets.length + 2);\n    let r0 = sun_pad + rstep;\n    let closest_planet: null | SelectedPlanet = null;\n    let closest_dist = Infinity;\n    let allow_planet_select = !planet_view && !eff_planet_view;\n    for (let ii = 0; ii < planets.length; ++ii) {\n      let r = r0 + rstep * ii;\n      let planet = planets[ii];\n\n      let do_override = selected_planet_index === ii && planet_override &&\n        planet_override_planet && planet_flatmap === 2 && planet_view;\n      if (do_override) {\n        planet = planet_override_planet!;\n      }\n\n      let theta = planet.orbit + planet.orbit_speed * walltime()*ORBIT_RATE;\n      theta %= 2 * PI;\n      let rot = getFrameTimestamp() * ROTATION_RATE;\n\n      if (do_override) {\n        if (planet_view_params.orbit) {\n          theta = planet_view_params.orbit / 360 * 2 * PI;\n        }\n        if (planet_view_params.rot) {\n          rot = planet_view_params.rot / 360;\n        }\n      }\n\n      let x = xmid + cos(theta) * r;\n      let y = ymid + sin(theta) * r * VSCALE;\n      // if (view === 1) {\n      //   x = round(x);\n      //   y = round(y);\n      // }\n\n      let zz = z + (y - ymid)/h;\n      let dist = v2distSq(solar_mouse_pos, [x, y]);\n      if (dist < closest_dist && dist < 30*30 && allow_planet_select ||\n        !allow_planet_select && ii === selected_planet_index\n      ) {\n        closest_dist = dist;\n        closest_planet = {\n          idx: ii,\n          x, y,\n          z: zz,\n        };\n      }\n\n      // drawCircle(x, y, zz, planet.size + 2, 0.99, [0,0,0,fade]);\n      // c = planet.type.color;\n      // drawCircle(x, y, zz + 0.00001, planet.size, 0.99, [c[0], c[1], c[2], fade]);\n      drawHollowElipse(xmid, ymid, z - 2, r, r * VSCALE, [0.5, 0.5, 0, fade]);\n\n      let sprite_size = planet.size;\n      let planet_shader_params = {\n        params: [rot, pmtex.width / (sprite_size)*1.5 / 255, 2 - theta / PI, 0],\n      };\n      // with pixely view, looks a lot better with a /2 on the texture resolution\n      let planet_tex = planet.getTexture(0, sprite_size*2/2, 0, 0, 0, false);\n      if (planet_tex) {\n        spriteQueueRaw([pmtex, planet_tex, tex_palette_planets],\n          x - sprite_size, y - sprite_size, zz, sprite_size*2, sprite_size*2, 0, 0, 1, 1,\n          [1,1,1,fade], shader_planet_pixel, planet_shader_params);\n      }\n    }\n\n    // draw selected planet\n    if (closest_planet) {\n      let planet = planets[closest_planet.idx];\n      drawCircle(closest_planet.x, closest_planet.y, closest_planet.z - 0.01,\n        planet.size + 2, 0.85, [0.5, 1, 1, fade], BLEND_ADDITIVE);\n      selected_planet_index = closest_planet.idx;\n    } else {\n      selected_planet_index = null;\n    }\n\n    // draw backdrop\n    let br0 = w/2 * 1.5;\n    let br1 = h/2*VSCALE * 1.5;\n    drawElipse(xmid - br0, ymid - br1, xmid + br0, ymid + br1, z - 2.1, 0, [0,0,0,fade]);\n    return closest_planet;\n  }\n\n  let last_solar_system: SolarSystem | null = null;\n  let last_selected_planet: SelectedPlanet | null = null;\n  let drag_temp = vec2();\n  function test(dt: number): void {\n\n    gl.clearColor(0, 0, 0, 1);\n    let z = Z.UI;\n    const button_height = uiButtonHeight();\n    const button_width = uiButtonWidth();\n    const font_height = uiTextHeight();\n\n    let x = 4;\n    let button_spacing = button_height + 6;\n    let y = 4;\n\n    let w = min(game_width, game_height);\n    let map_x0 = show_panel ? game_width - w : (game_width - w)/2;\n    let map_y0 = 0;\n\n    spotSuppressPad();\n\n    function checkLevel(check_zoom_level: number): boolean {\n      const { zoom_level, zoom_offs } = gal_zoomer;\n      let zoom = pow(2, zoom_level);\n      let layer_idx = floor(check_zoom_level / (LAYER_STEP/ 2));\n      let gal_x0 = (camera2d.x0Real() - map_x0) / w / zoom + zoom_offs[0];\n      let gal_x1 = (camera2d.x1Real() - map_x0) / w / zoom + zoom_offs[0];\n      let gal_y0 = (camera2d.y0Real() - map_y0) / w / zoom + zoom_offs[1];\n      let gal_y1 = (camera2d.y1Real() - map_y0) / w / zoom + zoom_offs[1];\n      let layer_res = pow(LAYER_STEP, layer_idx);\n      let layer_x0 = max(0, floor(gal_x0 * layer_res));\n      let layer_x1 = min(layer_res - 1, floor(gal_x1 * layer_res));\n      let layer_y0 = max(0, floor(gal_y0 * layer_res));\n      let layer_y1 = min(layer_res - 1, floor(gal_y1 * layer_res));\n      for (let cy = layer_y0; cy <= layer_y1; ++cy) {\n        for (let cx = layer_x0; cx <= layer_x1; ++cx) {\n          let cell = galaxy.getCellTextured(layer_idx, cy * layer_res + cx);\n          if (!cell.tex) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    let max_okay_zoom = gal_zoomer.zoom_level;\n    if (galaxy) {\n      let zlis = [\n        (LAYER_STEP/2) * ceil(gal_zoomer.zoom_level / (LAYER_STEP/2)),\n        (LAYER_STEP/2) * ceil((gal_zoomer.zoom_level + 1) / (LAYER_STEP/2)),\n      ];\n      // print(font.styleColored(null, 0x808080ff), 10, 20, 1000, `${zlis[0]} (${gal_zoomer.zoom_level})`);\n      for (let ii = 0; ii < zlis.length; ++ii) {\n        let r = checkLevel(zlis[ii]);\n        if (r) {\n          max_okay_zoom = zlis[ii];\n        }\n        // print(font.styleColored(null, 0x808080ff), 10, 30 + ii * font_height, 1000, `${zlis[ii]}: ${r}`);\n      }\n    }\n\n    if (galaxy && !debugDefineIsSet('ATTRACT')) {\n      galaxy.loading = false;\n    }\n\n    if (!deepEqual(params, gen_params)) {\n      gen_params = clone(params);\n      let first = true;\n      if (galaxy) {\n        first = false;\n        galaxy.dispose();\n      }\n      galaxy = createGalaxy(params);\n      galaxy.loading = first || debugDefineIsSet('ATTRACT');\n      allocSprite();\n    }\n\n    if (keyDownEdge(KEYS.C) && keyDown(KEYS.CTRL)) {\n      copyCanvasToClipboard();\n    }\n\n    let hide_solar = eff_planet_view >= 2;\n    if (eff_planet_view < 1 && planet_zoomer.target_zoom_level) {\n      planet_zoomer.resetZoom(0, 0, 0);\n    }\n\n    if (show_panel) {\n      if (buttonText({ x, y, text: `View: ${view ? 'Pixely' : 'Raw'}`, w: button_width * 0.75 }) ||\n        keyDownEdge(KEYS.V)\n      ) {\n        view = (view + 1) % 2;\n        localStorageSetJSON('view', view);\n        setTimeout(() => engine.setPixelyStrict(view === 1), 0);\n        //engine.reloadSafe();\n      }\n\n      if (buttonText({ x: x + button_width - button_height, y, text: '<<', w: button_height }) ||\n        keyDownEdge(KEYS.ESC)\n      ) {\n        show_panel = !show_panel;\n        localStorageSetJSON('panel', show_panel);\n      }\n\n      y += button_spacing;\n\n      // if (view === 1) {\n      //   print(style, x, y, z, `Dither: ${params.dither}`);\n      //   y += font_height;\n      //   params.dither = round4(slider(params.dither, { x, y, z, min: 0, max: 1 }));\n      //   y += button_spacing;\n      // }\n\n      if (planet_view) {\n        if (buttonText({ x, y, z, text: planet_override ? 'Override' : 'Generated' })) {\n          planet_override = !planet_override;\n          localStorageSetJSON('planet_override', planet_override);\n          planet_override_planet = null;\n        }\n        y += button_spacing;\n        if (!hide_solar) {\n          if (buttonText({ x, y, z, text: planet_flatmap === 1 ? 'Flatmap' :\n              planet_flatmap === 2 ? 'Orrery' : 'Globe' }\n          )) {\n            planet_flatmap = (planet_flatmap + 1) % 3;\n            localStorageSetJSON('planet_flatmap2', planet_flatmap);\n          }\n          y += button_spacing;\n        }\n        let solar_system = last_solar_system;\n        if (solar_system) {\n          print(style, x, y, z, `StarID: ${solar_system.star_id}`);\n          y += font_height;\n\n          if (planet_override) {\n            let page_w = button_height * 2;\n            if (buttonText({ x, y, z, w: page_w, text: 'View', disabled: planet_view_page === 0 })) {\n              planet_view_page = 0;\n              localStorageSetJSON('planet_view_page', planet_view_page);\n            }\n            if (buttonText({ x: x + page_w + 2, y, z, w: page_w, text: 'Nois1', disabled: planet_view_page === 1 })) {\n              planet_view_page = 1;\n              localStorageSetJSON('planet_view_page', planet_view_page);\n            }\n            if (buttonText({ x: x + page_w*2 + 4, y, z, w: page_w, text: 'Nois2', disabled: planet_view_page === 2 })) {\n              planet_view_page = 2;\n              localStorageSetJSON('planet_view_page', planet_view_page);\n            }\n            y += button_spacing;\n\n            let noise = planet_params.noise;\n            function expandyField(label: string, field: NoiseOptsRangeField,\n              min_value?: number, max_value?: number\n            ): void {\n              if (min_value === undefined) {\n                min_value = 0.1;\n              }\n              max_value = max_value || 8;\n              if (buttonText({ x: x + button_width - button_height, y: y - 3, z, w: button_height, text: '...' })) {\n                let v = noise[field];\n                if (typeof v === 'number') {\n                  noise[field] = {\n                    min: v,\n                    max: v,\n                    freq: 0.3,\n                  };\n                } else {\n                  noise[field] = (v.min + v.max) / 2;\n                }\n              }\n\n              let v = noise[field];\n              if (typeof v === 'number') {\n                print(style, x, y, z, `${label}: ${v}`);\n                y += font_height;\n                noise[field] = round4(slider(v, { x, y, z, min: min_value, max: max_value }));\n                y += button_spacing;\n              } else {\n                print(style, x, y, z, `${label}`);\n                y += font_height;\n                print(font_style_label_overlay, x+10, y, z+1, `min: ${v.min}`);\n                v.min = round4(slider(v.min, { x, y, z, min: min_value, max: max_value }));\n                y += button_height;\n                print(font_style_label_overlay, x+10, y, z+1, `max: ${v.max}`);\n                v.max = max(v.min, round4(slider(v.max, { x, y, z, min: min_value, max: max_value })));\n                y += button_height;\n                print(font_style_label_overlay, x+10, y, z+1, `freq: ${v.freq}`);\n                v.freq = round4(slider(v.freq, { x, y, z, min: 0.001, max: 10 }));\n                y += button_spacing;\n              }\n            }\n            function simpleField(label: string, field: NoiseOptsNumberField,\n              min_value: number, max_value: number\n            ): void {\n              print(style, x, y, z, `${label}: ${noise[field]}`);\n              y += font_height;\n              noise[field] = round4(slider(noise[field], { x, y, z, min: min_value, max: max_value }));\n              y += button_spacing;\n            }\n\n            if (planet_view_page === 0) {\n              print(style, x, y, z, `Type: ${planet_params.name}`);\n              y += font_height;\n              let name_idx = (PLANET_TYPE_NAMES.indexOf(planet_params.name) + 1) || 1;\n              name_idx = round(slider(name_idx, { x, y, z, min: 1, max: PLANET_TYPE_NAMES.length }));\n              let new_name = PLANET_TYPE_NAMES[name_idx - 1];\n              if (planet_params.name !== new_name) {\n                planet_params.name = new_name;\n                planet_params.noise = clone(planetNoiseForType(new_name));\n              }\n              y += button_spacing;\n\n              // print(style, x, y, z, `Size: ${round4(planet_params.size)}`);\n              // y += font_height;\n              // planet_params.size = round(slider(planet_params.size, { x, y, z, min: 4, max: 128 }));\n              // y += button_spacing;\n\n              if (!hide_solar) {\n                let orbit = planet_view_params.orbit;\n                print(style, x, y, z, `Orbit: ${round(orbit)}`);\n                y += font_height;\n                planet_view_params.orbit = round(slider(orbit, { x, y, z, min: 0, max: 360 }));\n                y += button_spacing;\n                if (planet_view_params.orbit !== orbit) {\n                  localStorageSetJSON('planet_view_params', planet_view_params);\n                }\n\n                let rot = planet_view_params.rot;\n                print(style, x, y, z, `Rotation: ${round(rot)}`);\n                y += font_height;\n                planet_view_params.rot = round(slider(rot, { x, y, z, min: 0, max: 360 }));\n                y += button_spacing;\n                if (planet_view_params.rot !== rot) {\n                  localStorageSetJSON('planet_view_params', planet_view_params);\n                }\n              }\n            } else if (planet_view_page === 1) {\n              expandyField('Freq', 'frequency');\n              // simpleField('Amplitude', 'amplitude'); // doesn't do anything, we normalize\n              expandyField('Perstnc', 'persistence', 0, 1);\n              expandyField('Lacunarity', 'lacunarity', 1, 8);\n            } else if (planet_view_page === 2) {\n              print(style, x, y, z, `Octaves: ${noise.octaves}`);\n              y += font_height;\n              noise.octaves = round(slider(noise.octaves, { x, y, z, min: 1, max: 12 }));\n              y += button_spacing;\n\n              print(style, x, y, z, `Warp: ${noise.domain_warp}`);\n              y += font_height;\n              noise.domain_warp = round(slider(noise.domain_warp, { x, y, z, min: 0, max: 2 }));\n              y += button_spacing;\n\n              if (noise.domain_warp) {\n                simpleField('Warp Freq', 'warp_freq', 0, 4);\n                simpleField('Warp Amp', 'warp_amp', 0.01, 2);\n              }\n              simpleField('Skew', 'skew_x', 0.01, 4);\n            }\n\n            print(style, x, y, z, `Seed: ${planet_params.seed}`);\n            y += font_height;\n            planet_params.seed = round(slider(planet_params.seed, { x, y, z, min: 1, max: 99 }));\n            y += button_spacing;\n\n\n          } else if (last_selected_planet) {\n            let planet = solar_system.planets[last_selected_planet.idx];\n            print(style, x, y, z, `Type: ${planet.type.name}`);\n            y += font_height;\n\n            print(style, x, y, z, `Size: ${round4(planet.size)}`);\n            y += font_height;\n\n            print(style, x, y, z, `Seed: ${planet.seed}`);\n            y += font_height;\n\n            y += button_spacing;\n          }\n\n        }\n\n      } else if (solar_view) {\n        if (buttonText({ x, y, z, text: solar_override ? 'Override' : 'Generated' })) {\n          solar_override = !solar_override;\n          localStorageSetJSON('solar_override', solar_override);\n          solar_override_system = null;\n        }\n        y += button_spacing;\n        if (solar_override) {\n          print(style, x, y, z, `StarID: ${solar_params.star_id}`);\n          y += font_height;\n          solar_params.star_id = round(slider(solar_params.star_id, { x, y, z, min: 1, max: 99 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Seed: ${solar_params.seed}`);\n          y += font_height;\n          solar_params.seed = round(slider(solar_params.seed, { x, y, z, min: 1, max: 99 }));\n          y += button_spacing;\n        }\n      } else {\n        print(style, x, y, z, `Seed: ${params.seed}`);\n        y += font_height;\n        params.seed = round(slider(params.seed, { x, y, z, min: 1, max: 9999 }));\n        y += button_spacing;\n\n        if (gal_zoomer.zoom_level < 1.9) { // Galaxy\n          print(style, x, y, z, `Arms: ${params.arms}`);\n          y += font_height;\n          params.arms = round(slider(params.arms, { x, y, z, min: 1, max: 16 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Arm Mods: ${params.len_mods}`);\n          y += font_height;\n          params.len_mods = round(slider(params.len_mods, { x, y, z, min: 1, max: 32 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Twirl: ${params.twirl}`);\n          y += font_height;\n          params.twirl = round4(slider(params.twirl, { x, y, z, min: 0, max: 8 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Center: ${params.center}`);\n          y += font_height;\n          params.center = round4(slider(params.center, { x, y, z, min: 0, max: 0.3 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Noise Freq: ${params.noise_freq}`);\n          y += font_height;\n          params.noise_freq = round4(slider(params.noise_freq, { x, y, z, min: 0.1, max: 10 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Noise Weight: ${params.noise_weight}`);\n          y += font_height;\n          params.noise_weight = round4(slider(params.noise_weight, { x, y, z, min: 0, max: 4 }));\n          y += button_spacing;\n\n          print(style, x, y, z, `Lone Clusters: ${params.poi_count}`);\n          y += font_height;\n          params.poi_count = round(slider(params.poi_count, { x, y, z, min: 0, max: 1000 }));\n          y += button_spacing;\n        } else {\n          let layer_idx = round(gal_zoomer.zoom_level / (LAYER_STEP / 2));\n          print(style, x, y, z, `Layer #${layer_idx}:`);\n          y += font_height + 2;\n          let key = `layer${layer_idx}` as 'layer1' | 'layer2'; // etc\n          let param = params[key];\n          if (param) {\n            print(style, x, y, z, `Noise Freq: ${param.noise_freq}`);\n            y += font_height;\n            param.noise_freq = round4(slider(param.noise_freq,\n              { x, y, z, min: 0.1, max: 100 * pow(2, layer_idx) }));\n            y += button_spacing;\n\n            print(style, x, y, z, `Noise Weight: ${param.noise_weight}`);\n            y += font_height;\n            param.noise_weight = round4(slider(param.noise_weight, { x, y, z, min: 0, max: 4 }));\n            y += button_spacing;\n          }\n        }\n      }\n\n      panel({\n        x: x - 4, y: 0, w: button_width + 8, h: y, z: z - 1,\n      });\n    } else {\n      if (!debugDefineIsSet('ATTRACT') && buttonText({ x, y, text: '>>', w: button_height }) ||\n        keyDownEdge(KEYS.ESC)\n      ) {\n        show_panel = !show_panel;\n        localStorageSetJSON('panel', show_panel);\n      }\n      y += button_spacing;\n    }\n\n    if (solar_view && solar_override) {\n      if (!solar_override_system || !deepEqual(solar_params, gen_solar_params)) {\n        gen_solar_params = clone(solar_params);\n        localStorageSetJSON('solar_params', solar_params);\n        solar_override_system = solarSystemCreate(solar_params.seed, {\n          // Fake Star structure\n          id: solar_params.star_id,\n        });\n        planet_override_planet = null;\n      }\n    }\n    if (planet_view && planet_override) {\n      if (!planet_override_planet || !deepEqual(planet_params, gen_planet_params)) {\n        gen_planet_params = clone(planet_params);\n        localStorageSetJSON('planet_params', planet_params);\n        planet_override_planet = planetCreate(\n          (solar_override ? solar_params.seed : galaxy.params.seed) + planet_params.seed,\n          solar_override ? solar_params.star_id : (last_solar_system && last_solar_system.star_id || 0),\n          planet_params\n        );\n      }\n    }\n\n    x = game_width - w + 4;\n    y = w - button_height;\n\n    if (buttonText({ x, y, z, w: button_height, text: '-' }) ||\n      keyDownEdge(KEYS.MINUS) || keyDownEdge(KEYS.Q)\n    ) {\n      use_mouse_pos = false;\n      doZoom(0.5, 0.5, -1);\n    }\n    x += button_height + 2;\n    const SLIDER_W = 110;\n    let eff_zoom = gal_zoomer.target_zoom_level + solar_view + planet_view + planet_zoomer.target_zoom_level;\n    let new_zoom = roundZoom(slider(eff_zoom,\n      { x, y, z, w: SLIDER_W, min: 0, max: MAX_ZOOM + MAX_PLANET_VIEW + planet_zoomer.max_zoom + 1 }));\n    if (abs(new_zoom - eff_zoom) > 0.000001) {\n      doZoom(0.5, 0.5, new_zoom - eff_zoom);\n    }\n    x += SLIDER_W + 2;\n    if (buttonText({ x, y, z, w: button_height, text: '+' }) ||\n      keyDownEdge(KEYS.EQUALS) ||\n      keyDownEdge(KEYS.E)\n    ) {\n      use_mouse_pos = false;\n      doZoom(0.5, 0.5, 1);\n    }\n    x += button_height + 2;\n    let mouse_wheel = mouseWheel();\n    if (inputClick({ button: 2 })) {\n      mouse_wheel-=1;\n    }\n    if (mouse_wheel) {\n      use_mouse_pos = true;\n      mousePos(mouse_pos);\n      if (mouse_wheel < 0 && eff_solar_view_unsmooth && !solar_view ||\n        mouse_wheel < 0 && eff_planet_view_unsmooth && !planet_view ||\n        mouse_wheel < 0 && planet_view && planet_zoomer.zoom_level && !planet_zoomer.target_zoom_level ||\n        mouse_wheel < 0 && planet_view && eff_planet_view_unsmooth > planet_view ||\n        mouse_wheel > 0 && planet_view && eff_planet_view_unsmooth < planet_view ||\n        mouse_wheel > 0 && solar_view && eff_solar_view_unsmooth < solar_view\n      ) {\n        // ignore\n      } else {\n        doZoom((mouse_pos[0] - map_x0) / w, (mouse_pos[1] - map_y0) / w, mouse_wheel);\n      }\n    }\n\n    zoomTick(max_okay_zoom);\n    let zoom = pow(2, gal_zoomer.zoom_level);\n    let zoom_text_y = floor(y + (button_height - font_height)/2);\n    let zoom_text_w = print(null, x, zoom_text_y, z,\n      solar_view ? planet_view ? planet_view > 1 ? 'Atmos' : 'Orbit ' : 'Solar' : `${zoom.toFixed(0)}X`);\n    drawRect(x - 2, zoom_text_y, x + zoom_text_w + 2, zoom_text_y + font_height, z - 1, color_text_backdrop);\n    let planet_zoom = pow(2, planet_zoomer.zoom_level);\n\n    x = game_width - w;\n    // y -= font_height;\n    // print(null, x+2, y, z, `Offset: ${round4(zoom_offs[0])},${round4(zoom_offs[1])}`);\n\n    if (!solar_view) {\n      let legend_scale = 0.25;\n      let legend_x0 = game_width - w*legend_scale - 2;\n      let legend_x1 = game_width - 4;\n      let legend_color = solar_view ? color_legend_fade : unit_vec;\n      y = w;\n\n      drawLine(legend_x0, y - 4.5, legend_x1, y - 4.5, z, 1, 1, legend_color);\n      drawLine(legend_x0 - 0.5, y - 7, legend_x0 - 0.5, y - 2, z, 1, 1, legend_color);\n      drawLine(legend_x1 + 0.5, y - 7, legend_x1 + 0.5, y - 2, z, 1, 1, legend_color);\n      let ly = legend_scale * params.width_ly / zoom;\n      let legend_y = y - 6 - font_height;\n      font.drawSizedAligned(solar_view ? font_style_fade : null,\n        legend_x0, legend_y, z, font_height, font.ALIGN.HCENTER, legend_x1 - legend_x0, 0,\n        `${format(ly)}ly`);\n      drawRect(legend_x0 - 2, legend_y, legend_x1 + 2, y, z - 1, color_text_backdrop);\n    }\n\n    x = map_x0;\n    y = map_y0;\n\n    v2set(drag_temp, 0, 0);\n    let kb_scale = keyDown(KEYS.SHIFT) ? 0.5 : 0.125;\n    drag_temp[0] += keyDown(KEYS.A) * kb_scale;\n    drag_temp[0] -= keyDown(KEYS.D) * kb_scale;\n    drag_temp[1] += keyDown(KEYS.W) * kb_scale;\n    drag_temp[1] -= keyDown(KEYS.S) * kb_scale;\n    let drag = inputDrag();\n    if (drag && drag.delta) {\n      v2add(drag_temp, drag_temp, drag.delta);\n      use_mouse_pos = true;\n    }\n    if (drag_temp[0] || drag_temp[1]) {\n      if (solar_view) {\n        if (eff_planet_view > 1) {\n          planet_zoomer.drag(drag_temp, w);\n        }\n      } else {\n        gal_zoomer.drag(drag_temp, w);\n      }\n    }\n    if (debugDefineIsSet('ATTRACT') || true) {\n      gal_zoomer.zoom_offs[0] = clamp(gal_zoomer.zoom_offs[0], 0, 1 - 1/zoom);\n      gal_zoomer.zoom_offs[1] = clamp(gal_zoomer.zoom_offs[1], 0, 1 - 1/zoom);\n    } else {\n      gal_zoomer.zoom_offs[0] = clamp(gal_zoomer.zoom_offs[0], -1/zoom, 1);\n      gal_zoomer.zoom_offs[1] = clamp(gal_zoomer.zoom_offs[1], -1/zoom, 1);\n    }\n    if (eff_planet_view > 1) {\n      if (planet_zoomer.zoom_offs[0] < -1) {\n        planet_zoomer.zoom_offs[0] += 2;\n      }\n      if (planet_zoomer.zoom_offs[0] > 1) {\n        planet_zoomer.zoom_offs[0] -= 2;\n      }\n      planet_zoomer.zoom_offs[1] = clamp(planet_zoomer.zoom_offs[1], 0, 1 - 1/planet_zoom);\n    }\n\n    if (mouseMoved()) {\n      use_mouse_pos = true;\n    }\n    if (use_mouse_pos) {\n      mousePos(mouse_pos);\n    } else {\n      mouse_pos[0] = map_x0 + w/2;\n      mouse_pos[1] = map_y0 + w/2;\n    }\n    mouse_pos[0] = gal_zoomer.zoom_offs[0] + (mouse_pos[0] - map_x0) / w / zoom;\n    mouse_pos[1] = gal_zoomer.zoom_offs[1] + (mouse_pos[1] - map_y0) / w / zoom;\n\n    let overlay_y = 0;\n    let overlay_x = show_panel ? map_x0 + 2 : button_height * 2;\n    let overlay_w = 0;\n    function overlayText(line: string): void {\n      if (debugDefineIsSet('ATTRACT')) {\n        return;\n      }\n      let textw = print(null, overlay_x, overlay_y, z, line);\n      overlay_w = max(overlay_w, textw);\n      overlay_y += font_height;\n    }\n    if (0) {\n      overlayText(`${use_mouse_pos?'Mouse':'Target'}: ${mouse_pos[0].toFixed(9)},${mouse_pos[1].toFixed(9)}`);\n    }\n    function highlightCell(cell: GalaxyCellAlloced): void {\n      const { zoom_offs } = gal_zoomer;\n      let xp = x + (cell.x0 - zoom_offs[0]) * zoom * w;\n      let yp = y + (cell.y0 - zoom_offs[1]) * zoom * w;\n      let wp = w * zoom * cell.w;\n      let hp = w * zoom * cell.h;\n      if (view === 1) {\n        xp = round(xp);\n        yp = round(yp);\n        hp = round(hp);\n        wp = round(wp);\n      }\n      if (debugDefineIsSet('CELL')) {\n        drawHollowRect2({\n          x: xp - 0.5,\n          y: yp - 0.5,\n          w: wp + 1,\n          h: hp + 1,\n          z: Z.UI - 8,\n          color: color_highlight,\n        });\n        overlayText(`Layer ${cell.layer_idx}, Cell ${cell.cell_idx} (${cell.cx},${cell.cy})`);\n        overlayText(`Stars: ${format(cell.star_count)}`);\n        if (cell.pois.length) {\n          overlayText(`POIs: ${cell.pois.length}`);\n        }\n      }\n\n      if (debugDefineIsSet('CURSOR')) {\n        let dx = floor((mouse_pos[0] - cell.x0) / cell.w * galaxy.buf_dim);\n        let dy = floor((mouse_pos[1] - cell.y0) / cell.w * galaxy.buf_dim);\n        if (cell.data) {\n          let dd = cell.data[dy * galaxy.buf_dim + dx];\n          overlayText(`Value: ${dd.toFixed(5)}`);\n        }\n      }\n    }\n\n    let did_highlight = false;\n    function checkCellHighlight(cell: GalaxyCellAlloced): void {\n      if (cell.ready && !did_highlight &&\n        mouse_pos[0] >= cell.x0 && mouse_pos[0] < cell.x0 + cell.w &&\n        mouse_pos[1] >= cell.y0 && mouse_pos[1] < cell.y0 + cell.h\n      ) {\n        did_highlight = true;\n        highlightCell(cell);\n      }\n    }\n\n    cells_drawn = 0;\n    type GalaxyCellTexCache = GalaxyCellAlloced & {\n      texs?: Texture[];\n    };\n    function drawCell(alpha: number, parent: GalaxyCellAlloced, cell: GalaxyCellTexCache): void {\n      const { zoom_level, zoom_offs } = gal_zoomer;\n      ++cells_drawn;\n      let qx = cell.cx - parent.cx * LAYER_STEP;\n      let qy = cell.cy - parent.cy * LAYER_STEP;\n      let draw_param = {\n        x: x + (cell.x0 - zoom_offs[0]) * zoom * w,\n        y: y + (cell.y0 - zoom_offs[1]) * zoom * w,\n        w: w * zoom * cell.w,\n        h: w * zoom * cell.h,\n        z: Z.BACKGROUND,\n        nozoom: true,\n        shader: view === 1 ? shader_galaxy_pixel : shader_galaxy_blend,\n        shader_params: undefined! as ShaderParams,\n      };\n      let partial = false;\n      if (!parent.tex) {\n        if (!cell.tex) {\n          return;\n        }\n        alpha = 1;\n        partial = true;\n      } else if (!cell.tex) {\n        alpha = 0;\n        partial = true;\n      }\n      let dither = lerp(clamp(zoom_level - 12.5, 0, 1), params.dither, 0);\n      draw_param.shader_params = {\n        params: [alpha ? buf_dim : buf_dim / LAYER_STEP, dither],\n        scale: [qx/LAYER_STEP, qy/LAYER_STEP, 1/LAYER_STEP, alpha],\n      };\n      let texs = cell.texs;\n      if (!texs) {\n        texs = [cell.tex || white_tex, parent.tex || white_tex, tex_palette];\n        if (!partial) {\n          cell.texs = texs;\n        }\n      }\n      debug_sprite.texs = texs;\n      debug_sprite.draw(draw_param);\n    }\n    function drawLevel(layer_idx: number, alpha: number, do_highlight: boolean): void {\n      const { zoom_offs } = gal_zoomer;\n      let gal_x0 = (camera2d.x0Real() - map_x0) / w / zoom + zoom_offs[0];\n      let gal_x1 = (camera2d.x1Real() - map_x0) / w / zoom + zoom_offs[0];\n      let gal_y0 = (camera2d.y0Real() - map_y0) / w / zoom + zoom_offs[1];\n      let gal_y1 = (camera2d.y1Real() - map_y0) / w / zoom + zoom_offs[1];\n      let layer_res = pow(LAYER_STEP, layer_idx);\n      let layer_x0 = max(0, floor(gal_x0 * layer_res));\n      let layer_x1 = min(layer_res - 1, floor(gal_x1 * layer_res));\n      let layer_y0 = max(0, floor(gal_y0 * layer_res));\n      let layer_y1 = min(layer_res - 1, floor(gal_y1 * layer_res));\n      let pres = pow(LAYER_STEP, layer_idx - 1);\n      for (let cy = layer_y0; cy <= layer_y1; ++cy) {\n        for (let cx = layer_x0; cx <= layer_x1; ++cx) {\n          let cell = galaxy.getCellTextured(layer_idx, cy * layer_res + cx);\n          let px = floor(cx / LAYER_STEP);\n          let py = floor(cy / LAYER_STEP);\n          let parent = galaxy.getCellTextured(layer_idx - 1, py * pres + px);\n\n          drawCell(alpha, parent, cell);\n\n          if (do_highlight) {\n            checkCellHighlight(cell);\n          } else {\n            checkCellHighlight(parent);\n          }\n        }\n      }\n    }\n    const blend_range = 1;\n    let draw_level = max(0, (gal_zoomer.zoom_level - 1) / (LAYER_STEP/2) + blend_range/2);\n    let level0 = floor(draw_level);\n    let extra = min((draw_level - level0) / blend_range, 1);\n    if (!extra && level0) {\n      level0--;\n      extra = 1;\n    }\n    drawLevel(level0 + 1, extra, Boolean(extra));\n\n    let globe_view: undefined | { pos: Vec2; r: number };\n\n    if (gal_zoomer.zoom_level >= 12) {\n      let star;\n      const SELECT_DIST = 40;\n      if (!solar_override_system) {\n        if ((solar_view || eff_solar_view) && selected_star_id !== null) {\n          // keep it\n          star = galaxy.getStar(selected_star_id);\n        } else {\n          let closest = galaxy.starsNear(mouse_pos[0], mouse_pos[1], 1);\n          let star_id = closest.length ? closest[0] : null;\n          star = star_id !== null && galaxy.getStar(star_id);\n          if (star && sqrt(distSq(star.x, star.y, mouse_pos[0], mouse_pos[1])) * zoom * w > SELECT_DIST) {\n            star = null;\n          }\n          if (star) {\n            selected_star_id = star_id;\n          } else {\n            selected_star_id = null;\n          }\n        }\n      }\n      let xp = x + w/2;\n      let yp = y + w/2;\n      if (star) {\n        if (debugDefineIsSet('STAR')) {\n          overlayText(`star.x: ${star.x.toFixed(10)}`);\n          overlayText(`star.y: ${star.y.toFixed(10)}`);\n        }\n\n        let max_zoom = pow(2, gal_zoomer.max_zoom);\n        xp = star.x * max_zoom * buf_dim;\n        yp = star.y * max_zoom * buf_dim;\n        if (debugDefineIsSet('STAR')) {\n          overlayText(`rel star.x: ${xp.toFixed(2)}`);\n          overlayText(`rel star.y: ${yp.toFixed(2)}`);\n        }\n        if (view === 1) {\n          xp = floor(xp);\n          yp = floor(yp);\n        }\n        xp = x + (xp*zoom/max_zoom/buf_dim - gal_zoomer.zoom_offs[0] * zoom) * w;\n        yp = y + (yp*zoom/max_zoom/buf_dim - gal_zoomer.zoom_offs[1] * zoom) * w;\n        if (view === 1) {\n          xp = round(xp);\n          yp = round(yp);\n        }\n        let r = 4 / (1 + gal_zoomer.max_zoom - gal_zoomer.zoom_level);\n        if (!solar_view) {\n          drawHollowCircle(xp + 0.5, yp + 0.5, Z.UI - 5, r, 0.5, [1,1,0,1], BLEND_ADDITIVE);\n          if (inputClick({\n            x: xp - SELECT_DIST,\n            y: yp - SELECT_DIST,\n            w: SELECT_DIST * 2,\n            h: SELECT_DIST * 2,\n          })) {\n            if (gal_zoomer.zoom_level < gal_zoomer.max_zoom) {\n              doZoom((xp - map_x0) / w, (yp - map_y0) / w,\n                gal_zoomer.max_zoom - gal_zoomer.zoom_level);\n            }\n            solarZoom(1);\n          }\n        }\n\n        galaxy.getStarData(star);\n      }\n      let solar_system = solar_override_system || star && star.solar_system;\n      last_solar_system = solar_system || null;\n      if (solar_system) {\n        let { planets, star_data, name } = solar_system;\n        if (!hide_solar) {\n          overlayText(`${name || (star && star.id ? `Star #${star.id}` : '') || 'Override Star'}` +\n            `, Type: ${star_data.label}`);\n\n          for (let ii = 0; ii < planets.length; ++ii) {\n            let planet = planets[ii];\n            if (!planet_view || selected_planet_index === ii) {\n              overlayText(`${!planet_view && selected_planet_index === ii ? '*' : ' '}` +\n                ` Planet #${ii+1}: Class ${planet.type.name}`);\n            }\n          }\n        }\n        let do_solar_view = eff_solar_view ? eff_solar_view :\n          debugDefineIsSet('AUTOSOLAR') && gal_zoomer.zoom_level > 15.5 ? 1 : 0;\n        if (hide_solar) {\n          do_solar_view = 0;\n        }\n        if (do_solar_view) {\n          let selected_planet = drawSolarSystem(solar_system, map_x0, map_y0, Z.SOLAR, w, w, xp, yp, do_solar_view);\n          last_selected_planet = selected_planet;\n          if (solar_view) {\n            let do_planet_view = eff_planet_view ? min(eff_planet_view, 1) : 0;\n            if (do_planet_view && selected_planet_index !== null && (\n              selected_planet || planet_override && planet_override_planet\n            )) {\n              globe_view = {\n                pos: [map_x0 + w/2, map_y0 + w/2],\n                r: PLANET_FULL_RADIUS * do_planet_view * 0.87,\n              };\n              drawPlanet(solar_system,\n                selected_planet || {\n                  idx: 0,\n                  x: 0, y: 0, z: Z.SOLAR,\n                },\n                map_x0,\n                map_y0,\n                Z.PLANET,\n                w, w,\n                do_planet_view);\n\n            } else {\n              if (!selected_planet) {\n                selected_planet_index = null;\n                planet_view = 0;\n              }\n            }\n          }\n        }\n      } else if (star) {\n        overlayText(`Star #${star.id}`);\n      }\n\n      if (eff_planet_view > 1) {\n        assert(solar_system);\n        assert(selected_planet_index !== null);\n        let { planets } = solar_system;\n        let planet = planet_override ? planet_override_planet : planets[selected_planet_index];\n        if (!planet) {\n          planet_view = 0;\n          if (planet_zoomer.target_zoom_level) {\n            planet_zoomer.resetZoom(0, 0, 0);\n          }\n        } else {\n          let ww = planet_zoom * w;\n          planetMapMode(planet,\n            map_x0 + (0 - planet_zoomer.zoom_offs[0]) * ww,\n            map_y0 + (0 - planet_zoomer.zoom_offs[1]) * ww,\n            Z.PLANET_MAP,\n            ww,\n            clamp(eff_planet_view - 1, 0, 1),\n            planet_zoomer.zoom_level);\n        }\n      }\n    }\n\n    soundscape.tick(EFF_ZOOM_TO_SOUNDSCAPE[eff_zoom] || 0);\n\n    if (debugDefineIsSet('SOUNDSCAPE')) {\n      let text = soundscape.debug();\n      text.unshift(`Zoom level = ${eff_zoom}`);\n      text.forEach(overlayText);\n    }\n\n    if (inputClick({\n      x: -Infinity,\n      y: -Infinity,\n      w: Infinity,\n      h: Infinity,\n    })) {\n      use_mouse_pos = true;\n      mousePos(mouse_pos);\n\n      let zoom_dir = solar_view && selected_planet_index === null ? -1 : 1;\n      if (globe_view) {\n        zoom_dir = v2dist(mouse_pos, globe_view.pos) < globe_view.r ? 1 : -1;\n      }\n\n      doZoom((mouse_pos[0] - map_x0) / w, (mouse_pos[1] - map_y0) / w,\n        zoom_dir);\n    }\n\n    drawRect(overlay_x - 2, 0, overlay_x + overlay_w + 2, overlay_y, z - 1, color_text_backdrop);\n\n\n    if (debugDefineIsSet('ATTRACT') && !netDisconnected()) {\n      engine.postRender(saveSnapshot);\n    }\n  }\n\n  function testInit(dt: number): void {\n    engine.setState(test);\n    test(dt);\n  }\n\n  engine.setState(testInit);\n}\n","import { GlovSoundSetUp, soundLoad, soundPlay, soundResumed } from 'glov/client/sound';\nimport { TSMap } from 'glov/common/types';\nimport { clamp } from 'glov/common/util';\n\nconst { floor, random } = Math;\n\nconst FADE_TIME = 1000;\n\nexport type SoundscapeParamLevel = string[][];\nexport type SimpleSoundscapeParam = {\n  prefix: string;\n  levels: SoundscapeParamLevel[];\n};\n\ntype SoundscapeSound = {\n  soundname: string;\n};\ntype SoundscapeLevel = SoundscapeSound[][];\n\nexport class SimpleSoundscape {\n  levels: SoundscapeLevel[];\n  constructor(param: SimpleSoundscapeParam) {\n    let levels: SoundscapeLevel[] = this.levels = [];\n    for (let ii = 0; ii < param.levels.length; ++ii) {\n      let level_in = param.levels[ii];\n      let level: SoundscapeLevel = [];\n      for (let jj = 0; jj < level_in.length; ++jj) {\n        let options_in = level_in[jj];\n        let options: SoundscapeSound[] = [];\n        for (let kk = 0; kk < options_in.length; ++kk) {\n          let basename = options_in[kk];\n          let soundname = `${param.prefix}${basename}`;\n          soundLoad(soundname, { loop: true });\n          let sound: SoundscapeSound = {\n            soundname,\n          };\n          options.push(sound);\n        }\n        level.push(options);\n      }\n      levels.push(level);\n    }\n  }\n  last_level_idx = -1;\n  playing_sounds: TSMap<GlovSoundSetUp> = {};\n  last_time = 0;\n  level_debug = -1;\n  tick(level_idx: number): void {\n    this.level_debug = level_idx;\n    if (!soundResumed()) {\n      return;\n    }\n    level_idx = clamp(level_idx, 0, this.levels.length - 1);\n    let seen: TSMap<true> = {};\n    let level = this.levels[level_idx];\n    let complete_rebuild = level_idx !== this.last_level_idx;\n    let new_stems = complete_rebuild;\n    let sync_to: GlovSoundSetUp | null = null;\n    if (!complete_rebuild) {\n      let keys = Object.keys(this.playing_sounds);\n      if (keys.length) {\n        let sound = this.playing_sounds[keys[0]]!;\n        sync_to = sound;\n        let new_time = sound.location();\n        if (new_time < this.last_time) {\n          // looped\n          new_stems = true;\n        }\n        this.last_time = new_time;\n      }\n    }\n\n    if (complete_rebuild || new_stems) {\n      this.last_level_idx = level_idx;\n      let new_sounds: GlovSoundSetUp[] = [];\n      for (let ii = 0; ii < level.length; ++ii) {\n        let options = level[ii];\n        let option = options[floor(random() * options.length)];\n        if (option) {\n          let existing = this.playing_sounds[option.soundname];\n          if (!existing) {\n            let sound = soundPlay(option.soundname, 0.0001);\n            if (sound) {\n              sound.fade(1, FADE_TIME);\n              this.playing_sounds[option.soundname] = sound;\n              new_sounds.push(sound);\n            }\n          } else if (!sync_to) {\n            sync_to = existing;\n          }\n          seen[option.soundname] = true;\n        }\n      }\n\n      for (let key in this.playing_sounds) {\n        if (!seen[key]) {\n          let sound = this.playing_sounds[key]!;\n          if (!sync_to) {\n            sync_to = sound;\n          }\n          delete this.playing_sounds[key];\n          sound.fade(0, FADE_TIME);\n        }\n      }\n      if (sync_to) {\n        let loc = this.last_time = sync_to.location();\n        for (let ii = 0; ii < new_sounds.length; ++ii) {\n          new_sounds[ii].location(loc);\n        }\n      }\n    }\n  }\n  debug(): string[] {\n    let keys = Object.keys(this.playing_sounds);\n    let ret: string[] = [];\n    ret.push(`Level ${this.last_level_idx} (desired: ${this.level_debug})`);\n    if (keys.length) {\n      let sound = this.playing_sounds[keys[0]]!;\n      ret.push(`Time = ${this.last_time.toFixed(1)} / ${sound.duration().toFixed(1)}`);\n    }\n    ret = ret.concat(keys.map((key) => {\n      let sound = this.playing_sounds[key]!;\n      let delta = (sound.location() - this.last_time).toFixed(3);\n      if (delta[0] !== '-') {\n        delta = `+${delta}`;\n      }\n      return `${key}: ${delta}`;\n    }));\n    return ret;\n  }\n}\n","export const BIT_RARITY_MASK = (1<<0) | (1<<1);\nexport const BIT_SAME_LOOSE = 1<<2;\nexport const BIT_DETAIL_IDX_SHIFT = 3; // 5 bits\n\nimport assert from 'assert';\nimport { getFrameIndex } from 'glov/client/engine';\nimport { randSimpleSpatial } from 'glov/client/rand_fast';\nimport { Texture } from 'glov/client/sprites';\nimport {\n  TEXTURE_FORMAT,\n  textureLoad,\n} from 'glov/client/textures';\nimport {\n  mashString,\n  randCreate,\n} from 'glov/common/rand_alea';\nimport { KeysMatching, TSMap } from 'glov/common/types';\nimport {\n  clamp,\n  defaults,\n  lerp,\n  nextHighestPowerOfTwo,\n} from 'glov/common/util';\nimport {\n  ROVec4,\n  vec2,\n  vec3,\n  vec4,\n} from 'glov/common/vmath';\nimport SimplexNoise from 'simplex-noise';\nimport {\n  BIOMES,\n  BIOMES_SAME_LOOSE,\n  Biome,\n} from './biomes';\nimport { Star } from './galaxy';\nimport {\n  StarType,\n  starTypeData,\n  starTypeFromID,\n} from './star_types';\n\nconst { abs, atan2, floor, max, min, round, sqrt, PI, pow } = Math;\n\nlet rand = [\n  randCreate(0),\n  randCreate(0),\n  randCreate(0),\n  randCreate(0),\n];\n\nlet planet_gen_layer: number;\n\n// returns roughly 0.4...0.7 with default settings\nlet sampleBiomeMap: () => number;\n\ntype WeightFunc = (x: number, y: number, h: number) => number;\nfunction weightDefault(): number {\n  return 0.5;\n}\n\nfunction weightBiomeRange(mn: number, mx: number, weight: number): WeightFunc {\n  return function (x: number, y: number, h: number): number {\n    let v = sampleBiomeMap();\n    return v > mn && v < mx ? weight : 0;\n  };\n}\n\ntype ColorTable = number[];\ntype BiomeTableEntry = {\n  weight_func: WeightFunc;\n  color_table: ColorTable;\n};\ntype BiomeTable = BiomeTableEntry[];\n\ntype VariationEntry = {\n  weight: number;\n  min_layer?: number;\n  offs?: number;\n  freqx?: number;\n  freqy?: number;\n  biome: Biome;\n};\nconst BOTTOM_LAYER = 5; // PLANET_PIXELART_LEVEL + MAP_SUBDIVIDE\nconst BIOME_VARIATION: Partial<Record<Biome, VariationEntry[]>> = {\n  [BIOMES.GREEN_PLAINS]: [{\n    weight: 0.01,\n    biome: BIOMES.GREEN_FOREST,\n  }, {\n    min_layer: BOTTOM_LAYER - 1,\n    offs: 1,\n    weight: 0.05,\n    freqx: 111,\n    freqy: 111,\n    biome: BIOMES.WATER_SHALLOW,\n  }],\n  [BIOMES.DESERT]: [{\n    weight: 0.00018,\n    biome: BIOMES.WATER_SHALLOW,\n  }],\n  [BIOMES.GREEN_FOREST]: [{\n    weight: 0.00018,\n    biome: BIOMES.WATER_SHALLOW,\n  }, {\n    min_layer: BOTTOM_LAYER - 1,\n    offs: 1,\n    weight: 0.05,\n    freqx: 111,\n    freqy: 111,\n    biome: BIOMES.GREEN_PLAINS,\n  }],\n  [BIOMES.DIRT_RED]: [{\n    weight: 0.002,\n    biome: BIOMES.DEAD_FOREST,\n  }],\n  [BIOMES.FROZEN_PLAINS]: [{\n    min_layer: BOTTOM_LAYER - 1,\n    offs: 1,\n    weight: 0.08,\n    freqx: 111,\n    freqy: 111,\n    biome: BIOMES.FROZEN_OCEAN,\n  }],\n  [BIOMES.MOLTEN_PLAINS]: [{\n    //weight: 0.00018,\n    min_layer: BOTTOM_LAYER - 1,\n    offs: 1,\n    weight: 0.06,\n    freqx: 133,\n    freqy: 171,\n    biome: BIOMES.MOLTEN_LAVAFLOW,\n  }],\n  [BIOMES.MOLTEN_MOUNTAINS]: [{\n    weight: 0.00018,\n    biome: BIOMES.MOLTEN_LAVAFLOW,\n  }],\n  [BIOMES.DIRT_DARK]: [{\n    weight: 0.00018,\n    biome: BIOMES.DIRT,\n  }],\n  [BIOMES.DIRT]: [{\n    min_layer: BOTTOM_LAYER - 1,\n    offs: 1,\n    weight: 0.06,\n    freqx: 133,\n    freqy: 171,\n    biome: BIOMES.DIRT_DARK,\n  }],\n};\n\ntype BiomeDetails = {\n  odds_none: number;\n  odds_common: number;\n  odds_uncommon: number;\n  // odds_rare: number;\n  // odds_total: number;\n};\nfunction procBiomeDetails(\n  details: Partial<Record<Biome | 'default', BiomeDetails & { odds_rare: number }>>\n): Record<Biome | 'default', BiomeDetails> {\n  let ret: Partial<Record<Biome, BiomeDetails>> = {};\n  let def: BiomeDetails;\n  for (let key in details) {\n    let entry = details[key]!;\n    let odds_total = entry.odds_none + entry.odds_common + entry.odds_uncommon + entry.odds_rare;\n    let newentry: BiomeDetails = {\n      odds_none: (entry.odds_none) / odds_total,\n      odds_common: (entry.odds_none + entry.odds_common) / odds_total,\n      odds_uncommon: (entry.odds_none + entry.odds_common + entry.odds_uncommon) / odds_total,\n    };\n    if (key === 'default') {\n      def = newentry;\n    } else {\n      ret[key] = newentry;\n    }\n  }\n  assert(def!);\n  for (let key in BIOMES) {\n    let b: Biome = BIOMES[key as keyof typeof BIOMES];\n    if (!ret[b]) {\n      ret[b] = def;\n    }\n  }\n  return ret as Record<Biome | 'default', BiomeDetails>;\n}\nconst BIOME_DETAILS: Record<Biome, BiomeDetails> = procBiomeDetails({\n  default: {\n    odds_none: 2000,\n    odds_common: 27,\n    odds_uncommon: 9,\n    odds_rare: 1,\n  },\n  [BIOMES.GREEN_FOREST]: {\n    odds_none: 4000,\n    odds_common: 8,\n    odds_uncommon: 4,\n    odds_rare: 2,\n  },\n});\n\nconst color_table_frozen = [\n  0.23, BIOMES.FROZEN_OCEAN,\n  0.77, BIOMES.FROZEN_PLAINS,\n  1, BIOMES.FROZEN_MOUNTAINS,\n];\n\nconst color_table_earthlike = [\n  0.4, BIOMES.WATER_DEEP,\n  0.5, BIOMES.WATER_SHALLOW,\n  0.65, BIOMES.GREEN_PLAINS,\n  0.75, BIOMES.MOUNTAINS,\n  1, BIOMES.MOUNTAINS_SNOW,\n];\nconst color_table_earthlike_forest = [\n  0.4, BIOMES.WATER_DEEP,\n  0.5, BIOMES.WATER_SHALLOW,\n  0.52, BIOMES.GREEN_PLAINS,\n  0.64, BIOMES.GREEN_FOREST,\n  0.65, BIOMES.GREEN_PLAINS,\n  0.75, BIOMES.MOUNTAINS,\n  1, BIOMES.MOUNTAINS_SNOW,\n];\nconst color_table_earthlike_desert = [\n  0.4, BIOMES.WATER_DEEP,\n  0.5, BIOMES.WATER_SHALLOW,\n  0.65, BIOMES.DESERT,\n  0.75, BIOMES.MOUNTAINS,\n  1, BIOMES.MOUNTAINS_SNOW,\n];\n\nconst biome_entry_earthlike: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: color_table_earthlike,\n};\nconst biome_entry_icecaps: BiomeTableEntry = {\n  weight_func: function (x: number, y: number, h: number): number {\n    let d = 1 - min(y, 1 - y) * 5;\n    return d + (h - 0.5) * 1.8;\n  },\n  color_table: color_table_frozen,\n};\nconst biome_table_earthlike: BiomeTable = [\n  biome_entry_earthlike,\n  biome_entry_icecaps,\n  {\n    weight_func: weightBiomeRange(0.6, 1, 0.55),\n    color_table: color_table_earthlike_forest,\n  },\n  {\n    weight_func: function (x: number, y: number, h: number): number {\n      if (planet_gen_layer === 0) {\n        // too noisy on this layer\n        return 0;\n      }\n      let v = sampleBiomeMap();\n      let d = 1 - abs(y - 0.5) * 8;\n      return d - h * 4 + 2.5 + v - 0.5;\n    },\n    color_table: color_table_earthlike_desert,\n  },\n];\n\nconst biome_entry_earthlike_islands: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.6, BIOMES.WATER_DEEP,\n    0.7, BIOMES.WATER_SHALLOW,\n    0.8, BIOMES.GREEN_FOREST,\n    1, BIOMES.GREEN_PLAINS,\n  ]\n};\nconst biome_table_earthlike_islands = [biome_entry_earthlike_islands];\n\nconst biome_entry_earthlike_pangea: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.25, BIOMES.WATER_DEEP,\n    0.3, BIOMES.WATER_SHALLOW,\n    0.68, BIOMES.GREEN_FOREST,\n    0.75, BIOMES.GREEN_PLAINS,\n    1, BIOMES.MOUNTAINS,\n  ]\n};\nconst biome_table_earthlike_pangea = [\n  biome_entry_earthlike_pangea,\n  biome_entry_icecaps,\n];\n\nconst biome_entry_water_world: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.5, BIOMES.WATER_DEEP,\n    0.8, BIOMES.WATER_SHALLOW,\n    1, BIOMES.WATER_DEEP,\n  ]\n};\nconst biome_table_water_world = [biome_entry_water_world];\n\nconst biome_entry_low_life: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.3, BIOMES.WATER_SHALLOW,\n    0.7, BIOMES.DIRT_RED,\n    1, BIOMES.DEAD_FOREST,\n  ]\n};\nconst biome_table_low_life = [biome_entry_low_life];\n\nconst biome_entry_molten: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.25, BIOMES.MOLTEN_MOUNTAINS,\n    0.46, BIOMES.MOLTEN_PLAINS,\n    0.54, BIOMES.MOLTEN_LAVAFLOW,\n    0.75, BIOMES.MOLTEN_PLAINS,\n    1, BIOMES.MOLTEN_MOUNTAINS,\n  ]\n};\nconst biome_table_molten = [biome_entry_molten];\n\nconst biome_entry_molten_small: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.4, BIOMES.MOLTEN_PLAINS,\n    0.6, BIOMES.MOLTEN_LAVAFLOW,\n    1, BIOMES.MOLTEN_MOUNTAINS,\n  ]\n};\nconst biome_table_molten_small = [biome_entry_molten_small];\n\nconst biome_entry_gray: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.25, BIOMES.MOONROCK1,\n    0.5, BIOMES.MOONROCK2,\n    0.75, BIOMES.MOONROCK3,\n    1, BIOMES.MOONROCK4,\n  ]\n};\nconst biome_table_gray = [biome_entry_gray];\n\nconst biome_entry_frozen: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: color_table_frozen,\n};\nconst biome_table_frozen = [biome_entry_frozen];\n\n// saturn-like, greys and oranges\nconst biome_entry_gasgiant1: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.2, BIOMES.GAS_ORANGE_LIGHT,\n    0.35, BIOMES.GAS_ORANGE_DARK,\n    0.5, BIOMES.GAS_GRAY,\n    0.65, BIOMES.GAS_ORANGE_LIGHT,\n    0.8, BIOMES.GAS_ORANGE_DARK,\n    1, BIOMES.GAS_GRAY,\n  ]\n};\nconst biome_table_gasgiant1 = [biome_entry_gasgiant1];\n\nconst biome_entry_dirt: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.5, BIOMES.DIRT,\n    1, BIOMES.DIRT_DARK,\n  ]\n};\nconst biome_table_dirt = [biome_entry_dirt];\n\n// purples\nconst biome_entry_gasgiant2: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.2, BIOMES.GAS_PURPLE_LIGHT,\n    0.4, BIOMES.GAS_PURPLE_DARK,\n    0.6, BIOMES.GAS_PURPLE_LIGHT,\n    0.8, BIOMES.GAS_PURPLE_DARK,\n    1, BIOMES.GAS_PURPLE_LIGHT,\n  ]\n};\nconst biome_table_gasgiant2 = [biome_entry_gasgiant2];\n\n// reds\nconst biome_entry_gasgiant3: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.2, BIOMES.GAS_RED,\n    0.4, BIOMES.GAS_YELLOW_RED,\n    0.6, BIOMES.GAS_RED,\n    0.8, BIOMES.GAS_YELLOW_RED,\n    1, BIOMES.GAS_RED,\n  ]\n};\nconst biome_table_gasgiant3 = [biome_entry_gasgiant3];\n\n// blues\nconst biome_entry_gasgiant4: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.2, BIOMES.GAS_BLUE_MED,\n    0.35, BIOMES.GAS_BLUE_LIGHT,\n    0.5, BIOMES.GAS_BLUE_DARK,\n    0.65, BIOMES.GAS_BLUE_MED,\n    0.8, BIOMES.GAS_BLUE_LIGHT,\n    1, BIOMES.GAS_BLUE_DARK,\n  ]\n};\nconst biome_table_gasgiant4 = [biome_entry_gasgiant4];\n\n// yellows\nconst biome_entry_gasgiant5: BiomeTableEntry = {\n  weight_func: weightDefault,\n  color_table: [\n    0.2, BIOMES.GAS_YELLOW,\n    0.35, BIOMES.GAS_YELLOW_RED,\n    0.5, BIOMES.GAS_ORANGE_LIGHT,\n    0.65, BIOMES.GAS_YELLOW,\n    0.8, BIOMES.GAS_YELLOW_RED,\n    1, BIOMES.GAS_ORANGE_LIGHT,\n  ]\n};\nconst biome_table_gasgiant5 = [biome_entry_gasgiant5];\n\nexport type NoiseOptRange = {\n  min: number;\n  max: number;\n  freq: number;\n  mul?: number; // calculated\n  add?: number;\n};\ntype NoiseOptRangeRT = Required<NoiseOptRange>;\nexport type NoiseOpts = {\n  frequency: number | NoiseOptRange;\n  amplitude: number;\n  persistence: number | NoiseOptRange;\n  lacunarity: number | NoiseOptRange;\n  octaves: number;\n  domain_warp: number;\n  warp_freq: number;\n  warp_amp: number;\n  skew_x: number;\n  key?: string;\n};\nexport type NoiseOptsRangeField = KeysMatching<NoiseOpts, NoiseOptRange | number>;\nexport type NoiseOptsNumberField = KeysMatching<NoiseOpts, number>;\n\nconst noise_base: NoiseOpts = {\n  frequency: 2,\n  amplitude: 1,\n  persistence: 0.5,\n  lacunarity: { min: 1.6, max: 2.8, freq: 0.3 },\n  octaves: 6,\n  domain_warp: 0,\n  warp_freq: 1,\n  warp_amp: 0.1,\n  skew_x: 1,\n};\n\nfunction noiseMod(opts: Partial<NoiseOpts>, base?: NoiseOpts): NoiseOpts {\n  base = base || noise_base;\n  return defaults(opts, base || noise_base);\n}\n\nconst noise_biome_base: NoiseOpts = noiseMod({\n  // note: no NoiseOptRange supported\n  lacunarity: 2.0,\n});\n\nconst noise_gasgiant = noiseMod({\n  skew_x: 0.2,\n  domain_warp: 1,\n  warp_amp: 0.1,\n});\n\nconst noise_gasgiant_swirly = noiseMod({\n  skew_x: 0.2,\n  domain_warp: 1,\n  warp_amp: 0.1,\n  lacunarity: { min: 1.6, max: 2.8, freq: 1.3 },\n});\n\nconst noise_molten = noiseMod({\n  lacunarity: 3.0,\n  octaves: 7,\n  domain_warp: 0,\n  warp_amp: 0.1,\n});\n\nconst noise_dirt = noiseMod({\n  domain_warp: 1,\n  warp_amp: 0.3,\n});\n\nconst noise_low_life = noiseMod({\n  lacunarity: 4.5,\n  octaves: 5,\n});\n\nconst noise_waterworld = noiseMod({\n  skew_x: 0.5,\n  domain_warp: 1,\n  warp_amp: 0.3,\n});\n\nexport const PLANET_TYPE_NAMES = ['D', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'T', 'W', 'Y'] as const;\nexport type PlanetTypeName = typeof PLANET_TYPE_NAMES[number];\n\ntype PlanetType = {\n  name: PlanetTypeName;\n  size: [number, number];\n  bias?: number;\n  color?: ROVec4; // unused\n  biome_tables: BiomeTable[];\n  noise: NoiseOpts;\n  noise_biome?: NoiseOpts;\n};\nconst planet_types: PlanetType[] = [\n  // Class D (planetoid or moon with little to no atmosphere)\n  { name: 'D', size: [4,8], color: vec4(0.7,0.7,0.7,1), biome_tables: [biome_table_gray], noise: noise_base },\n  // Class H (generally uninhabitable)\n  { name: 'H', size: [6,10], color: vec4(0.3,0.4,0.5,1), biome_tables: [biome_table_gray], noise: noise_base },\n  // Class J (gas giant)\n  { name: 'J', size: [12,20], color: vec4(0.9,0.6,0,1),\n    biome_tables: [biome_table_gasgiant1, biome_table_gasgiant4],\n    noise: noise_gasgiant_swirly },\n  // Class K (habitable, as long as pressure domes are used)\n  { name: 'K', size: [8,12], color: vec4(0.5,0.3,0.2,1), biome_tables: [biome_table_dirt], noise: noise_dirt },\n  // Class L (marginally habitable, with vegetation but no animal life)\n  { name: 'L', size: [6,10], bias: 1, color: vec4(0.3,0.7,0.3,1),\n    biome_tables: [biome_table_frozen],\n    noise: noise_base },\n  // Class M (terrestrial)\n  { name: 'M', size: [9,12], color: vec4(0,1,0,1),\n    biome_tables: [biome_table_earthlike, biome_table_earthlike_islands, biome_table_earthlike_pangea],\n    noise: noise_base },\n  // Class N (sulfuric)\n  { name: 'N', size: [4,8], bias: -1, color: vec4(0.6,0.6,0,1),\n    biome_tables: [biome_table_molten_small],\n    noise: noise_molten },\n  // Class P (glacial)\n  { name: 'P', size: [4,14], bias: 1, color: vec4(0.5,0.7,1,1),\n    biome_tables: [biome_table_frozen],\n    noise: noise_base },\n  // Class R (a rogue planet, not as habitable as a terrestrial planet)\n  { name: 'R', size: [6,12], color: vec4(0.2,0.3,0.2,1), biome_tables: [biome_table_low_life], noise: noise_low_life },\n  // Class T (gas giant)\n  { name: 'T', size: [12,20], color: vec4(0.6,0.9,0,1),\n    biome_tables: [biome_table_gasgiant2, biome_table_gasgiant3, biome_table_gasgiant5],\n    noise: noise_gasgiant },\n  // Class W (water world)\n  { name: 'W', size: [8,18], color: vec4(0.3,0.3,1.0,1),\n    biome_tables: [biome_table_water_world],\n    noise: noise_waterworld },\n  // Class Y (toxic atmosphere, high temperatures)\n  { name: 'Y', size: [8,18], color: vec4(1,0.3,0,1), biome_tables: [biome_table_molten], noise: noise_base },\n];\n\nfunction randExp(idx: number, mn: number, mx: number): number {\n  let v = rand[idx].random();\n  v *= v;\n  return mn + (mx - mn) * v;\n}\n\nfunction typeFromName(name: PlanetTypeName): PlanetType {\n  for (let ii = 0; ii < planet_types.length; ++ii) {\n    if (planet_types[ii].name === name) {\n      return planet_types[ii];\n    }\n  }\n  assert(false);\n}\n\nexport function planetNoiseForType(name: PlanetTypeName): NoiseOpts {\n  let type = typeFromName(name);\n  return type.noise;\n}\n\nexport type PlanetOverrideParams = {\n  name?: PlanetTypeName;\n  size?: number;\n  seed?: number;\n  noise?: NoiseOpts;\n};\n\ntype RawData = {\n  raw_data: Uint8Array;\n  details?: Uint8Array & { planet_tex_id?: number; valid?: boolean };\n};\n\ntype TexPair = {\n  tex: Texture & RawData & { planet_tex_id?: number };\n  tex_id: number;\n  tex_idx: number; // for planet textures\n};\n\nexport class Planet {\n  type: PlanetType;\n  size: number;\n  orbit: number;\n  orbit_speed: number;\n  seed: number;\n  biome_table: BiomeTable;\n  tex_idx = 0;\n  work_frame = 0;\n  noise: NoiseOpts;\n  constructor(override_data?: PlanetOverrideParams) {\n    override_data = override_data || {};\n    this.type = override_data.name ?\n      typeFromName(override_data.name) :\n      planet_types[rand[2].range(planet_types.length)];\n    this.size = override_data.size || randExp(3, this.type.size[0], this.type.size[1]);\n    this.orbit = rand[0].floatBetween(0, PI*2) * 11;\n    this.orbit_speed = randExp(1, 0.1, 1);\n    this.seed = override_data.seed || rand[2].uint32();\n    let biome_tables = this.type.biome_tables;\n    this.biome_table = biome_tables[rand[1].range(biome_tables.length)];\n    this.noise = override_data && override_data.noise || this.type.noise;\n  }\n\n  texpairs: Partial<Record<number, TexPair>> = {};\n  declare getTexture: (\n    layer: number,\n    texture_size: number,\n    sublayer: number,\n    sub_x: number,\n    sub_y: number,\n    want_details: boolean,\n  ) => (Texture & RawData) | null;\n  declare getDetails: (\n    tex: Texture & RawData,\n    nmap: Uint8Array[],\n    texture_size: number,\n    sub_x: number,\n    sub_y: number,\n  ) => void;\n}\n\nlet noise: SimplexNoise[];\nlet noise_warp: SimplexNoise[];\nlet noise_skew_x: number;\nlet total_amplitude: number;\nlet noise_field: Record<NoiseOptsRangeField, SimplexNoise>;\nlet subopts: NoiseOpts;\nfunction initNoise(seed: number, subopts_in: NoiseOpts): void {\n  subopts = subopts_in;\n  noise = new Array(subopts.octaves + 2);\n  for (let ii = 0; ii < noise.length; ++ii) {\n    noise[ii] = new SimplexNoise(`${seed}n${ii}`);\n  }\n  noise_warp = new Array(subopts.domain_warp);\n  for (let ii = 0; ii < noise_warp.length; ++ii) {\n    noise_warp[ii] = new SimplexNoise(`${seed}w${ii}`);\n  }\n  total_amplitude = 0;  // Used for normalizing result to 0.0 - 1.0\n  let amp = subopts.amplitude;\n  let p = subopts.persistence && (subopts.persistence as NoiseOptRange).max || subopts.persistence as number;\n  for (let ii=0; ii<subopts.octaves; ii++) {\n    total_amplitude += amp;\n    amp *= p;\n  }\n  noise_field = {} as Record<NoiseOptsRangeField, SimplexNoise>;\n  let f: keyof NoiseOpts;\n  for (f in subopts) {\n    let v = subopts[f] as NoiseOptRange | number;\n    if (typeof v === 'object') {\n      let f2 = f as NoiseOptsRangeField;\n      noise_field[f2] = new SimplexNoise(`${seed}f${subopts.key!}${f2}`);\n      v.mul = (v.max - v.min) * 0.5;\n      v.add = v.min + v.mul;\n    }\n  }\n  noise_skew_x = subopts.skew_x * 2;\n}\n\nlet biome_subopts: NoiseOpts;\nlet biome_total_amplitude: number;\nfunction initBiomeNoise(subopts_in: NoiseOpts): void {\n  biome_subopts = subopts_in;\n  biome_total_amplitude = 0;  // Used for normalizing result to 0.0 - 1.0\n  let amp = subopts.amplitude;\n  let p = biome_subopts.persistence as number;\n  for (let ii=0; ii<biome_subopts.octaves; ii++) {\n    biome_total_amplitude += amp;\n    amp *= p;\n  }\n}\nlet sample_pos = vec2();\nfunction sampleBiomeMapAtPos(x: number, y: number): number {\n  sample_pos[0] = x * 2 + 77;\n  sample_pos[1] = y + 77;\n  let total = 0;\n  let amp = biome_subopts.amplitude;\n  let freq = biome_subopts.frequency as number;\n  let p = biome_subopts.persistence as number;\n  let lac = biome_subopts.lacunarity as number;\n  for (let i=0; i<biome_subopts.octaves; i++) {\n    total += (0.5 + 0.5 * noise[i].noise2D(sample_pos[0] * freq, sample_pos[1] * freq)) * amp;\n    amp *= p;\n    freq *= lac;\n  }\n  return total/biome_total_amplitude;\n}\nlet biome_map_pos = vec3(); // x, y, blend weight\nlet biome_value: number | null = null;\n// eslint-disable-next-line @typescript-eslint/no-shadow\nsampleBiomeMap = function sampleBiomeMap(): number {\n  if (biome_value === null) {\n    let v = sampleBiomeMapAtPos(biome_map_pos[0], biome_map_pos[1]);\n    let w = biome_map_pos[2];\n    if (w < 1) {\n      let v2 = sampleBiomeMapAtPos(biome_map_pos[0] - 1, biome_map_pos[1]);\n      v = lerp(w, v, v2);\n    }\n    biome_value = v;\n  }\n  return biome_value;\n};\n\n\n{\n  const MAX_TEXTURES = 20;\n  type TexPool = {\n    texs: Texture[];\n    tex_idx: number;\n  };\n  let tex_pools: TSMap<TexPool> = {};\n  let planet_tex_id = 0;\n\n  const PLANET_MIN_RES = 8;\n  const PLANET_MAX_RES = 256;\n  let tex_data_temp = new Uint8Array(PLANET_MAX_RES * PLANET_MAX_RES * 2);\n\n  function get(field: NoiseOptsRangeField): number {\n    let v = subopts[field] as NoiseOptRangeRT;\n    if (typeof v !== 'object') {\n      return v;\n    }\n    return v.add + v.mul * noise_field[field].noise2D(sample_pos[0] * v.freq, sample_pos[1] * v.freq);\n  }\n  function sample(x: number, y: number): number {\n    sample_pos[0] = x * noise_skew_x;\n    sample_pos[1] = y;\n    let warp_freq = subopts.warp_freq;\n    let warp_amp = subopts.warp_amp;\n    for (let ii = 0; ii < subopts.domain_warp; ++ii) {\n      let dx = noise_warp[ii].noise2D(sample_pos[0] * warp_freq, sample_pos[1] * warp_freq);\n      let dy = noise_warp[ii].noise2D((sample_pos[0] + 7) * warp_freq, sample_pos[1] * warp_freq);\n      sample_pos[0] += dx * warp_amp;\n      sample_pos[1] += dy * warp_amp;\n    }\n    let total = 0;\n    let amp = subopts.amplitude;\n    let freq = get('frequency');\n    let p = get('persistence');\n    let lac = get('lacunarity');\n    for (let i=0; i<subopts.octaves; i++) {\n      total += (0.5 + 0.5 * noise[i].noise2D(sample_pos[0] * freq, sample_pos[1] * freq)) * amp;\n      amp *= p;\n      freq *= lac;\n    }\n    return total/total_amplitude;\n  }\n\n  function colorIndex(table: ColorTable, value: number): number {\n    for (let ii = 0; ii < table.length; ii+=2) {\n      if (value <= table[ii]) {\n        return table[ii+1];\n      }\n    }\n    return table[table.length - 1];\n  }\n\n  Planet.prototype.getDetails = function (\n    tex: Texture & RawData,\n    nmap: Uint8Array[],\n    texture_size: number,\n    sub_x: number,\n    sub_y: number,\n  ): void {\n    let ret = tex.details;\n    if (!ret) {\n      ret = tex.details = new Uint8Array(texture_size * texture_size);\n    }\n    let ndata = [\n      0,0,0,\n      0,0,0,\n      0,0,0,\n    ];\n    function nget(xx: number, yy: number): number {\n      let nidx = 4;\n      if (yy < 0) {\n        nidx -= 3;\n        yy += texture_size;\n      } else if (yy >= texture_size) {\n        nidx += 3;\n        yy -= texture_size;\n      }\n      if (xx < 0) {\n        nidx--;\n        xx += texture_size;\n      } else if (xx >= texture_size) {\n        nidx++;\n        xx -= texture_size;\n      }\n      return nmap[nidx][yy * texture_size + xx];\n    }\n    let x0 = sub_x * texture_size;\n    let y0 = sub_y * texture_size;\n    for (let yy = 0, idx=0; yy < texture_size; ++yy) {\n      for (let jj = 0; jj < 3; ++jj) {\n        for (let ii = 0; ii < 2; ++ii) {\n          ndata[jj * 3 + ii + 1] = nget(ii - 1, yy - 1 + jj);\n        }\n      }\n      for (let xx = 0; xx < texture_size; ++xx, ++idx) {\n        for (let jj = 0; jj < 3; ++jj) {\n          // shift known data\n          ndata[jj*3] = ndata[jj*3+1];\n          ndata[jj*3+1] = ndata[jj*3+2];\n          // get new data\n          ndata[jj*3+2] = nget(xx + 1, yy - 1 + jj);\n        }\n        let my_v = ndata[4];\n        let all_same_loose = true;\n        for (let ii = 0; ii < 9; ++ii) {\n          if (ndata[ii] !== my_v) {\n            if (!BIOMES_SAME_LOOSE[my_v][ndata[ii]]) {\n              all_same_loose = false;\n              break;\n            }\n          }\n        }\n        let ret_bits = 0;\n        if (all_same_loose) {\n          ret_bits |= BIT_SAME_LOOSE;\n        }\n        let bd = BIOME_DETAILS[my_v];\n        let r = randSimpleSpatial(this.seed, x0 + xx, y0 + yy, 0);\n        if (r < bd.odds_none) {\n          // nothing\n        } else {\n          let v = floor(randSimpleSpatial(this.seed, x0 + xx, y0 + yy, 1) * 32);\n          let rarity = r < bd.odds_common ? 1 : r < bd.odds_uncommon ? 2 : 3;\n          ret_bits |= rarity | (v << BIT_DETAIL_IDX_SHIFT);\n        }\n\n        ret[idx] = ret_bits;\n      }\n    }\n    tex.details = ret;\n  };\n\n  Planet.prototype.getTexture = function (\n    layer: number,\n    texture_size: number,\n    sublayer: number,\n    sub_x: number,\n    sub_y: number,\n    want_details: boolean,\n  ): (Texture & RawData) | null {\n    if (layer !== 2) {\n      assert(!sublayer && !sub_x && !sub_y);\n    }\n    let tp_idx = layer + ((sublayer * 65536 + sub_y) * 65536) + sub_x;\n    let tp = this.texpairs[tp_idx];\n    if (tp && tp.tex.planet_tex_id === tp.tex_id) {\n      // tex is valid, what about details?\n      if (want_details) {\n        if ((!tp.tex.details || tp.tex.details.planet_tex_id !== tp.tex_id) && getFrameIndex() !== this.work_frame) {\n          if (tp.tex.details) {\n            tp.tex.details.valid = false;\n          }\n          let nmap = [];\n          let nready = true;\n          let hhh = pow(2, sublayer);\n          let www = hhh * 2;\n          outer: // eslint-disable-line no-labels\n          for (let dy = -1; dy <= 1; ++dy) {\n            for (let dx = -1; dx <= 1; ++dx) {\n              let elem = this.getTexture(layer, texture_size, sublayer,\n                (sub_x + dx + www) % www,\n                (sub_y + dy + hhh) % hhh, false);\n              if (!elem) {\n                nready = false;\n                break outer; // eslint-disable-line no-labels\n              }\n              nmap[(dy+1)*3+dx+1] = elem.raw_data;\n            }\n          }\n          if (nready && getFrameIndex() !== this.work_frame) {\n            this.getDetails(tp.tex, nmap, texture_size, sub_x, sub_y);\n            tp.tex.details!.planet_tex_id = tp.tex_id;\n            tp.tex.details!.valid = true;\n            this.work_frame = getFrameIndex();\n          }\n        }\n      }\n      return tp.tex;\n    }\n\n    if (getFrameIndex() === this.work_frame) {\n      return null;\n    }\n    this.work_frame = getFrameIndex();\n\n    // for (let ii = 0; ii < rand.length; ++ii) {\n    //   rand[ii].reseed(mashString(`${this.seed}_${ii}`));\n    // }\n\n    let tex_data = tp ? tp.tex.raw_data : tex_data_temp;\n\n    let biome_table = this.biome_table;\n    let planet_h = clamp(nextHighestPowerOfTwo(texture_size), PLANET_MIN_RES, PLANET_MAX_RES);\n    let planet_w = planet_h * 2;\n    let tex_h = planet_h;\n    let tex_w = planet_w;\n    let zoom = pow(2, sublayer);\n    if (sublayer) {\n      tex_w = tex_h;\n      planet_h *= zoom;\n      planet_w *= zoom;\n    }\n    assert(tex_data.length >= tex_h * tex_w);\n    initNoise(this.seed, this.noise);\n    initBiomeNoise(this.type.noise_biome || noise_biome_base);\n    planet_gen_layer = layer;\n    for (let idx=0, jj = 0; jj < tex_h; ++jj) {\n      let unif_y = (sub_y * tex_h + jj) / planet_h;\n      biome_map_pos[1] = unif_y;\n      // 0.1...0.2\n      let blend_offs = clamp((noise[noise.length-1].noise2D(unif_y*5, 0.5) + 1) * 0.05, 0, 0.1) + 0.1;\n      for (let ii = 0; ii < tex_w; ++ii, ++idx) {\n        let unif_x = (sub_x * tex_w + ii)/planet_w;\n        let v = sample(unif_x, unif_y);\n        biome_map_pos[0] = unif_x;\n        biome_value = null;\n        if (unif_x > 1 - blend_offs) {\n          let w = min((unif_x - (1 - blend_offs)) / 0.1, 1);\n          let v2 = sample(unif_x - 1, unif_y);\n          biome_map_pos[2] = w;\n          v = lerp(w, v, v2);\n          if (w > 0.5) {\n            // use this pos for biome funcs\n            unif_x--;\n          }\n        } else {\n          biome_map_pos[2] = 1;\n        }\n        let winner = 0;\n        let winner_weight = 0;\n        for (let kk = 0; kk < biome_table.length; ++kk) {\n          let entry = biome_table[kk];\n          let w = entry.weight_func(unif_x, unif_y, v);\n          if (w > winner_weight) {\n            winner_weight = w;\n            winner = kk;\n          }\n        }\n        let b = colorIndex(biome_table[winner].color_table, v);\n        let varilist = BIOME_VARIATION[b];\n        if (varilist) {\n          for (let kk = 0; kk < varilist.length; ++kk) {\n            let vari = varilist[kk];\n            if (sublayer >= (\n              vari.min_layer || BOTTOM_LAYER\n            )) {\n              if (!vari.freqx) {\n                if (randSimpleSpatial(this.seed, sub_x * tex_w + ii, sub_y * tex_h + jj, 2) < vari.weight) {\n                  b = vari.biome;\n                }\n              } else {\n                if (noise[noise.length-2].noise2D((unif_x + (vari.offs || 0))*2 * (vari.freqx || 7777),\n                  unif_y * (vari.freqy || 7777)) * 0.5 + 0.5 < vari.weight\n                ) {\n                  b = vari.biome;\n                }\n              }\n            }\n          }\n        }\n        tex_data[idx] = b;\n      }\n    }\n    let tex_key = sublayer === 0 ? `${tex_w}x${tex_h}` : 'planet';\n    let tex_pool = tex_pools[tex_key];\n    if (!tex_pool) {\n      tex_pool = tex_pools[tex_key] = { texs: [], tex_idx: 0 };\n    }\n    let tex: Texture;\n    let tex_idx: number;\n    if (sublayer === 0) {\n      // orrery view and planet globe view\n      // (basically) never two in the same frame, so just loop through the pool\n      tex_idx = tex_pool.tex_idx;\n      tex_pool.tex_idx = (tex_pool.tex_idx + 1) % MAX_TEXTURES;\n    } else {\n      // more complicated caching on the planet level;\n      // always the same resolution\n      if (tp) {\n        assert(tp.tex_idx !== undefined);\n        tex_idx = tp.tex_idx;\n        assert(tp.tex === tex_pool.texs[tex_idx]); // same texture, just needs updating\n      } else {\n        tex_idx = this.tex_idx++;\n      }\n    }\n    tex = tex_pool.texs[tex_idx];\n    if (tex) {\n      tex.updateData(tex_w, tex_h, tex_data);\n    } else {\n      tex = tex_pool.texs[tex_idx] = textureLoad({\n        name: `planet_${planet_tex_id}`,\n        format: TEXTURE_FORMAT.R8,\n        width: tex_w,\n        height: tex_h,\n        data: tex_data,\n        filter_min: gl.NEAREST,\n        filter_mag: gl.NEAREST,\n        wrap_s: sublayer === 0 ? gl.REPEAT : gl.CLAMP_TO_EDGE,\n        wrap_t: gl.CLAMP_TO_EDGE,\n      });\n    }\n    let raw_data = (tex_data === tex_data_temp) ? tex_data.slice(0, tex_w * tex_h) : tex_data;\n    let ret = tex as (Texture & { raw_data: Uint8Array });\n    ret.raw_data = raw_data;\n    tp = {\n      tex: ret,\n      tex_id: ++planet_tex_id,\n      tex_idx,\n    };\n    tp.tex.planet_tex_id = tp.tex_id;\n    if (tp.tex.details) {\n      tp.tex.details.valid = false;\n    }\n    this.texpairs[tp_idx] = tp;\n    return ret;\n  };\n}\n\nconst PMRES_LOW = 128;\nconst PMRES_HIGH = 256;\nconst PMBORDER = 16;\nlet pmtex: Texture | undefined;\nlet pmtex_hires: Texture | undefined;\nexport function planetMapTexture(high_res: boolean): Texture {\n  if (pmtex && !high_res) {\n    return pmtex;\n  }\n  if (pmtex_hires && high_res) {\n    return pmtex_hires;\n  }\n  const res = high_res ? PMRES_HIGH : PMRES_LOW;\n  let tex_data = new Uint8Array(res * res * 3);\n  let idx = 0;\n  let mid = res / 2;\n  const PMR = res / 2 - PMBORDER;\n  function encodeRadian(rad: number): number {\n    if (rad < 0) {\n      rad += PI * 2;\n    }\n    return clamp(round((rad - PI/2) / PI * 255), 0, 255);\n    //return round(rad / (PI * 2) * 255);\n  }\n  for (let yy = 0; yy < res; ++yy) {\n    let unif_y = (yy - mid) / PMR;\n    for (let xx = 0; xx < res; ++xx) {\n      let unif_x = (xx - mid) / PMR;\n      let dsq = unif_x * unif_x + unif_y * unif_y;\n      let r = sqrt(dsq);\n      let eff_r = max(1, r);\n      // calc latitude / longitude for texturing and lighting\n      let unif_z = r >= 1 ? 0 : sqrt(eff_r * eff_r - dsq);\n      let longitude = -atan2(unif_x, -unif_z);\n      let flat_uv_longitude = round((unif_x * 0.5 + 0.5) * 255);\n      let xz_len = sqrt(unif_x*unif_x + unif_z*unif_z);\n      let latitude = atan2(-unif_y, -xz_len);\n\n      // use a softened longitude to reduce texture sampling artifacts\n      // also /2 to sample from X at double resolution\n      tex_data[idx++] = round((flat_uv_longitude + encodeRadian(longitude)) / 4);\n\n      tex_data[idx++] = encodeRadian(latitude);\n      tex_data[idx++] = round(r / 2 * 255); // radius of 2D circle / distance field: 0 to 2\n    }\n  }\n  assert.equal(idx, tex_data.length);\n  let tex = textureLoad({\n    name: `pmtex${high_res ? 'hi' : 'lo'}`,\n    format: TEXTURE_FORMAT.RGB8,\n    width: res,\n    height: res,\n    data: tex_data,\n    filter_min: gl.LINEAR,\n    filter_mag: gl.LINEAR,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n  });\n  if (high_res) {\n    pmtex_hires = tex;\n  } else {\n    pmtex = tex;\n  }\n\n  return tex;\n}\n\nlet pmflattex: Texture;\nexport function planetMapFlatTexture(): Texture {\n  if (pmflattex) {\n    return pmflattex;\n  }\n  const res = PMRES_HIGH;\n  let tex_data = new Uint8Array(res * res * 3);\n  let idx = 0;\n  for (let yy = 0; yy < res; ++yy) {\n    // let unif_y = (yy - mid) / PMR;\n    for (let xx = 0; xx < res; ++xx) {\n      // let unif_x = (xx - mid) / PMR;\n\n      tex_data[idx++] = round(xx / res * 255);\n      tex_data[idx++] = round(yy / res * 255);\n      tex_data[idx++] = 0;\n    }\n  }\n  assert.equal(idx, tex_data.length);\n  let tex = textureLoad({\n    name: 'pmtexflat',\n    format: TEXTURE_FORMAT.RGB8,\n    width: res,\n    height: res,\n    data: tex_data,\n    filter_min: gl.NEAREST,\n    filter_mag: gl.NEAREST,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n  });\n  pmflattex = tex;\n  return tex;\n}\n\nfunction cmpSize(a: Planet, b: Planet): number {\n  return a.size - b.size;\n}\n\nexport class SolarSystem {\n\n  star_data: StarType;\n  name?: string;\n  planets: Planet[];\n  star_id: number;\n  constructor(global_seed: number, star: Pick<Star, 'id'>) {\n    let { /*x, y,*/ id } = star;\n    let classif = starTypeFromID(id);\n    let star_data = starTypeData(classif);\n    this.star_data = star_data;\n    this.star_id = id;\n    for (let ii = 0; ii < rand.length; ++ii) {\n      rand[ii].reseed(mashString(`${id}_${global_seed}_${ii}`));\n    }\n    let planets = [];\n    if (id === 98897686813) { // Sol\n      this.name = 'Sol';\n      planets.push(new Planet({ name: 'D', size: 4 })); // Mercury\n      planets.push(new Planet({ name: 'K', size: 6 })); // Venus\n      planets.push(new Planet({ name: 'M', size: 8, seed: 5 })); // Earth\n      planets.push(new Planet({ name: 'Y', size: 5 })); // Mars\n\n      planets.push(new Planet({ name: 'T', size: 16, seed: 1 })); // Jupiter\n      planets.push(new Planet({ name: 'J', size: 12, seed: 1 })); // Saturn\n\n      planets.push(new Planet({ name: 'P', size: 9 })); // Uranus\n      planets.push(new Planet({ name: 'W', size: 8 })); // Neptune\n    } else {\n      let num_planets = rand[0].range(4);\n      let chance = 0.5;\n      while (num_planets) {\n        planets.push(new Planet());\n        --num_planets;\n        if (!num_planets) {\n          if (rand[1].random() < chance) {\n            ++num_planets;\n            chance *= 0.9;\n          }\n        }\n      }\n      // split in two, sort by size, put bigger in the middle\n      let p1 = [];\n      let p2 = [];\n      for (let ii = 0; ii < planets.length; ++ii) {\n        let planet = planets[ii];\n        if (!planet.type.bias && rand[0].range(2) || planet.type.bias! < 0) {\n          p1.push(planet);\n        } else {\n          p2.push(planet);\n        }\n      }\n      p1.sort(cmpSize);\n      p2.sort(cmpSize).reverse();\n      planets = p1.concat(p2);\n    }\n    this.planets = planets;\n    // for (let ii = 0; ii < planets.length; ++ii) {\n    //   planets[ii].ord = ii;\n    // }\n  }\n}\n\nexport function solarSystemCreate(global_seed: number, star: Pick<Star, 'id'>): SolarSystem {\n  return new SolarSystem(global_seed, star);\n}\n\nexport function planetCreate(global_seed: number, star_id: number, params: PlanetOverrideParams): Planet {\n  for (let ii = 0; ii < rand.length; ++ii) {\n    rand[ii].reseed(mashString(`${star_id}_${global_seed}_${ii}`));\n  }\n  return new Planet(params);\n}\n","/* eslint no-multi-spaces:off, key-spacing:off */\nimport assert from 'assert';\nimport * as engine from 'glov/client/engine';\nimport { mashI53 } from 'glov/common/rand_alea';\nimport { TSMap } from 'glov/common/types';\nimport {\n  ROVec4,\n  rovec4,\n} from 'glov/common/vmath';\n\nconst colors = [\n  rovec4(0.816,1,1,1),\n  rovec4(0.98,0.204,0,1),\n  rovec4(1,0.467,0,1),\n  rovec4(1,1,0.408,1), // G\n  rovec4(1,1,0.8,1),\n  rovec4(0.922,1,1,1),\n  rovec4(0.875,1,1,1),\n  rovec4(0.816,1,1,1),\n];\n\nexport type StarType = {\n  label: string;\n  odds: number;\n  hue: number;\n  color: ROVec4;\n  astro_radius: number;\n  mass: number;\n  lumin: number;\n  game_radius: number;\n};\n// From http://www.atlasoftheuniverse.com/startype.html\n// label, odds, color index, astro_radius, mass, luminosity, game_radius\nconst sg_scale = 0.001 / (0.001 + 0.1 + 0.7 + 2 + 3.5 + 8 + 80);\nconst star_types: TSMap<StarType> = (function () {\n  let raw: TSMap<[string, number, number, number, number, number, number]> = {\n    O:   ['O',            0.001,          7,    10,  50,  100000, 30],\n    B:   ['B',            0.1,            6,     5,  10,    1000, 25],\n    A:   ['A',            0.7,            5,   1.7,   2,      20, 23],\n    F:   ['F',            2,              4,   1.3, 1.5,       4, 22],\n    G:   ['G',            3.5,            3,     1,   1,       1, 21],\n    K:   ['K',            8,              2,   0.8, 0.7,     0.2, 20],\n    M:   ['M',            80,             1,   0.3, 0.2,    0.01, 18],\n    gG:  ['Giant G',      0.4*(4/92),     3,    50,   5,    1000, 36],\n    gK:  ['Giant K',      0.4*(8/92),     2,    20, 3.5,     400, 33],\n    gM:  ['Giant M',      0.4*(80/92),    1,    10,   1,      50, 30],\n    D:   ['White Dwarf',  5,              6,  0.01, 1.4,    0.01,  6],\n    sgO: ['Supergiant O', sg_scale * 0.001, 7, 500,  70, 1000000, 40],\n    sgB: ['Supergiant B', sg_scale * 0.1, 6,   300,  60,   82000, 37],\n    sgA: ['Supergiant A', sg_scale * 0.7, 5,   120,  50,   60000, 35],\n    sgF: ['Supergiant F', sg_scale * 2,   4,   100,  35,   50000, 34],\n    sgG: ['Supergiant G', sg_scale * 3.5, 3,    80,  16,   44000, 33],\n    sgK: ['Supergiant K', sg_scale * 8,   2,    72,  12,   38000, 32],\n    sgM: ['Supergiant M', sg_scale * 80,  1,    30,  10,   30000, 30],\n  };\n  let ret: TSMap<StarType> = {};\n  for (let key in raw) {\n    let rd = raw[key]!;\n    ret[key] = {\n      label: rd[0],\n      odds: rd[1],\n      hue: rd[2],\n      color: colors[rd[2]],\n      astro_radius: rd[3],\n      mass: rd[4],\n      lumin: rd[5],\n      game_radius: rd[6],\n    };\n  }\n  return ret;\n}());\nconst star_types_total = (function () {\n  let ret = 0;\n  for (let key in star_types) {\n    ret += star_types[key]!.odds;\n  }\n  return ret;\n}());\n\nfunction starType(choice: number): string {\n  choice *= star_types_total;\n  for (let key in star_types) {\n    choice -= star_types[key]!.odds;\n    if (choice <= 0) {\n      return key;\n    }\n  }\n  assert(!engine.DEBUG);\n  return 'M';\n}\n\nexport function starTypeFromID(id: number): string {\n  return starType(mashI53(id));\n}\n\nexport function hueFromID(id: number): number {\n  return star_types[starType(mashI53(id))]!.hue;\n}\n\nexport function starTypeData(key: string): StarType {\n  return star_types[key]!;\n}\n\nexport function hueFromType(key: string): number {\n  return star_types[key]!.hue;\n}\n","import assert from 'assert';\nimport { mashString } from 'glov/common/rand_alea';\nimport { TSMap } from 'glov/common/types';\nimport { platformGetID } from './client_config';\nimport {\n  localStorageGet,\n  localStorageSet,\n} from './local_storage';\nimport {\n  netPostInit,\n  netSubs,\n  netUserId,\n} from './net';\nimport { wsclientSetExtraParam } from './wsclient';\n\nconst { floor } = Math;\n\nconst KEY_LOCAL_ID = 'abtests_id';\nconst KEY_TEST_PREFIX = 'abtest.';\n\nexport type ABTestDef = {\n  name: string;\n  values: string[];\n  allowed_values?: string[]; // optional set of (not current) values still allowed, if permanent\n  scope: 'user' | 'client';\n  permanent: boolean;\n  metrics?: string;\n  cb?: (value: string) => void;\n};\n\ntype ABTestState = ABTestDef & {\n  value: string | null;\n};\n\nfunction evaluateSplitGroup(state: ABTestState, id: string): void {\n  const { values, name } = state;\n  let local_key = `${KEY_TEST_PREFIX}${state.name}`;\n  let new_value: string | null = null;\n  if (state.permanent) {\n    let stored_value = localStorageGet(local_key);\n    if (stored_value && (\n      state.values.includes(stored_value) ||\n      state.allowed_values?.includes(stored_value)\n    )) {\n      new_value = stored_value;\n    }\n  }\n  if (!new_value) {\n    let idx = floor(mashString(`${name}:${id}`) / 0x100000000 * values.length);\n    new_value = values[idx];\n  }\n  state.value = new_value;\n  state.cb?.(state.value);\n  if (state.scope === 'client') {\n    // Store in case currently or future flagged as permanent\n    localStorageSet(local_key, state.value);\n  }\n}\n\nlet abtest_defs: TSMap<ABTestState> = {};\n\nlet metrics_string = '';\nlet metrics_and_platform_string = '';\nexport function abTestGetMetrics(): string {\n  return metrics_string;\n}\nexport function abTestGetMetricsAndPlatform(): string {\n  return metrics_and_platform_string;\n}\nfunction updateMetricsString(): void {\n  let data: string[] = [];\n  for (let key in abtest_defs) {\n    let def = abtest_defs[key]!;\n    if (def.metrics && def.value) {\n      data.push(`${def.metrics}${def.value}`);\n    }\n  }\n  metrics_string = data.join(',');\n  data.push(platformGetID());\n  metrics_and_platform_string = data.join(',');\n}\n\nfunction updateWSClient(): void {\n  let data = [];\n  for (let key in abtest_defs) {\n    let def = abtest_defs[key]!;\n    if (def.scope === 'client' && def.metrics) {\n      data.push(`${def.metrics}${def.value}`);\n    }\n  }\n  wsclientSetExtraParam('abt', data.join(','));\n}\n\nlet user_id: string | null = null;\n\nfunction evaluatePerUserABTests(): void {\n  assert(user_id);\n  for (let key in abtest_defs) {\n    let state = abtest_defs[key]!;\n    if (state.scope !== 'user') {\n      continue;\n    }\n    evaluateSplitGroup(state, user_id);\n  }\n  updateMetricsString();\n}\n\nfunction abTestPostNetInit(): void {\n  netSubs().on('login', function () {\n    user_id = netUserId() as string;\n    evaluatePerUserABTests();\n  });\n  netSubs().on('logout', function () {\n    user_id = null;\n  });\n}\n\nlet local_id: string;\n\nlet did_startup = false;\nfunction abTestStartup(): void {\n  if (did_startup) {\n    return;\n  }\n  did_startup = true;\n\n  local_id = localStorageGet(KEY_LOCAL_ID) || '';\n  if (!local_id) {\n    local_id = `id${Math.random()}`;\n    localStorageSet(KEY_LOCAL_ID, local_id);\n  }\n\n  netPostInit(abTestPostNetInit);\n}\n\nexport function abTestRegister(def: ABTestDef): void {\n  abTestStartup();\n  let state: ABTestState = {\n    ...def,\n    value: null,\n  };\n  abtest_defs[state.name] = state;\n  if (state.scope === 'client') {\n    evaluateSplitGroup(state, local_id);\n  }\n  if (state.scope === 'client' && state.metrics) {\n    // Should be registered _before_ initial connection/netInit, so connection metrics are counted\n    assert(!netSubs());\n    updateWSClient();\n    updateMetricsString();\n  }\n  if (state.scope === 'user') {\n    assert(!state.permanent); // user ids are already \"permanent\", just manage your split groups carefully\n    // Before first login, so it gets applied, and sends metrics\n    assert(!netSubs() || !netUserId());\n  }\n}\nexport function abTestGet(name: string): string {\n  let def = abtest_defs[name];\n  assert(def);\n  assert(def.value !== null);\n  return def.value;\n}\n","import assert from 'assert';\nimport { dataError } from 'glov/common/data_error';\nimport {\n  Vec4,\n  v4set,\n  vec4,\n} from 'glov/common/vmath';\nimport { engineStartupFunc } from './engine';\nimport { filewatchOn } from './filewatch';\nimport {\n  Sprite,\n  SpriteUIData,\n  Texture,\n  TextureOptions,\n  spriteCreate,\n} from './sprites';\nimport { textureError, textureLoad } from './textures';\nimport { webFSGetFile, webFSOnReady } from './webfs';\n\nimport type { TSMap } from 'glov/common/types';\n\ntype AutoAtlasBuildData = [string, number, number, number[], number[], number[] | undefined, number[] | undefined];\n\nlet load_opts: TSMap<TextureOptions> = {};\nlet hit_startup = false;\nexport function autoAtlasTextureOpts(name: string, opts: TextureOptions): void {\n  assert(!hit_startup);\n  load_opts[name] = opts;\n}\n\nconst uidata_error: SpriteUIData = {\n  rects: [[0,0,1,1]],\n  wh: [1],\n  hw: [1],\n  widths: [1],\n  heights: [1],\n  aspect: null,\n  total_w: 1,\n  total_h: 1,\n};\n\nfunction spriteMakeError(sprite: Sprite): void {\n  v4set(sprite.uvs as Vec4, 0, 0, 1, 1);\n  sprite.texs = [textureError()];\n  sprite.uidata = uidata_error;\n}\n\nclass AutoAtlasImp {\n  sprites: TSMap<Sprite & { autoatlas_used?: boolean }> = {};\n\n  // Create with dummy data, will load later\n  texs: Texture[] = [];\n  prealloc(): Sprite {\n    let sprite = spriteCreate({\n      texs: this.texs,\n      uvs: vec4(0, 0, 1, 1),\n    });\n    sprite.uidata = uidata_error;\n    return sprite;\n  }\n\n  did_tex_load = false;\n\n  verifySprites(seen: TSMap<true>): void {\n    let { sprites } = this;\n    for (let img_name in sprites) {\n      if (sprites[img_name]!.autoatlas_used && !seen[img_name] && img_name !== 'def') {\n        dataError(`AutoAtlas \"${this.atlas_name}\" does not contain image \"${img_name}\"`);\n        spriteMakeError(sprites[img_name]!);\n      }\n    }\n  }\n\n  doInit(): void {\n    let { sprites, atlas_name, texs } = this;\n    let atlas_data = webFSGetFile(`${atlas_name}.auat`, 'jsobj');\n    // Root default sprite, with frame-indexing\n    let root_sprite = sprites.def = this.prealloc();\n    let root_rects = [] as unknown as Vec4[] & TSMap<Vec4>;\n    let root_aspect: number[] = [];\n\n    // Make sprites for all named sprites\n    let { tiles, w, h } = atlas_data;\n    let seen: TSMap<true> = {};\n    for (let tile_id = 0; tile_id < tiles.length; ++tile_id) {\n      let [tile_name, x, y, ws, hs, padh, padv] = tiles[tile_id] as AutoAtlasBuildData;\n      seen[tile_name] = true;\n      let total_w = 0;\n      for (let jj = 0; jj < ws.length; ++jj) {\n        total_w += ws[jj];\n      }\n      let total_h = 0;\n      for (let jj = 0; jj < hs.length; ++jj) {\n        total_h += hs[jj];\n      }\n      root_aspect.push(total_w / total_h);\n      let sprite = sprites[tile_name];\n      if (!sprite) {\n        sprite = sprites[tile_name] = this.prealloc();\n      }\n      sprite.texs = texs;\n      let tile_uvs = sprite.uvs as Vec4;\n      v4set(tile_uvs, x/w, y/h, (x+total_w)/w, (y+total_h)/h);\n      root_rects.push(tile_uvs);\n      root_rects[tile_name] = tile_uvs;\n\n      let wh = [];\n      for (let ii = 0; ii < ws.length; ++ii) {\n        wh.push(ws[ii] / total_h);\n      }\n      let hw = [];\n      for (let ii = 0; ii < hs.length; ++ii) {\n        hw.push(hs[ii] / total_w);\n      }\n      let aspect = [];\n      let non_square = false;\n      let yy = y;\n      let rects = [];\n      for (let jj = 0; jj < hs.length; ++jj) {\n        let xx = x;\n        for (let ii = 0; ii < ws.length; ++ii) {\n          let r = vec4(xx / w, yy / h,\n            (xx + ws[ii]) / w, (yy + hs[jj]) / h);\n          rects.push(r);\n          let asp = ws[ii] / hs[jj];\n          if (asp !== 1) {\n            non_square = true;\n          }\n          aspect.push(asp);\n          xx += ws[ii];\n        }\n        yy += hs[jj];\n      }\n      sprite.uidata = {\n        widths: ws,\n        heights: hs,\n        wh,\n        hw,\n        rects,\n        aspect: non_square ? aspect : null,\n        padh,\n        padv,\n        total_w,\n        total_h,\n      };\n    }\n\n    root_sprite.uidata = {\n      rects: root_rects,\n      aspect: root_aspect,\n      total_h: h,\n      total_w: w,\n      // These should not be needed:\n      widths: null!,\n      heights: null!,\n      wh: null!,\n      hw: null!,\n    };\n\n    if (hit_startup) {\n      this.verifySprites(seen);\n    }\n\n    // Only issue texture load once at startup, not upon reload\n    if (this.did_tex_load) {\n      return;\n    }\n    this.did_tex_load = true;\n    engineStartupFunc(() => {\n      hit_startup = true;\n      let opts = load_opts[atlas_name] || {};\n      if (atlas_data.layers) {\n        for (let idx = 0; idx < atlas_data.layers; ++idx) {\n          let tex = textureLoad({\n            wrap_s: gl.CLAMP_TO_EDGE,\n            wrap_t: gl.CLAMP_TO_EDGE,\n            ...opts,\n            url: `img/atlas_${atlas_name}_${idx}.png`,\n          });\n          texs.push(tex);\n        }\n      } else {\n        let tex = textureLoad({\n          wrap_s: gl.CLAMP_TO_EDGE,\n          wrap_t: gl.CLAMP_TO_EDGE,\n          ...opts,\n          url: `img/atlas_${atlas_name}.png`,\n        });\n        texs.push(tex);\n      }\n      this.verifySprites(seen);\n    });\n  }\n\n  constructor(public atlas_name: string) {\n    webFSOnReady(this.doInit.bind(this));\n  }\n\n  get(img_name: string): Sprite {\n    let ret = this.sprites[img_name];\n    if (!ret) {\n      ret = this.sprites[img_name] = this.prealloc();\n      if (hit_startup) {\n        dataError(`AutoAtlas \"${this.atlas_name}\" does not contain image \"${img_name}\"`);\n        spriteMakeError(ret);\n      }\n    }\n    ret.autoatlas_used = true;\n    return ret;\n  }\n}\n\nlet atlases: TSMap<AutoAtlasImp>;\nfunction autoAtlasReload(filename: string): void {\n  filename = filename.slice(0, -5);\n  let atlas = atlases[filename];\n  if (!atlas) {\n    // bundled in app, but not loaded? what a waste, but, I guess, maybe fine?\n    // will happen when doing git updates on atlases that are not currently active\n    return;\n  }\n  atlas.doInit();\n}\n\nfunction autoAtlasGet(atlas_name: string): AutoAtlasImp {\n  if (!atlases) {\n    atlases = {};\n    filewatchOn('.auat', autoAtlasReload);\n  }\n  let atlas = atlases[atlas_name];\n  if (!atlas) {\n    atlas = atlases[atlas_name] = new AutoAtlasImp(atlas_name);\n  }\n  return atlas;\n}\n\nexport function autoAtlas(atlas_name: string, img_name: string): Sprite {\n  return autoAtlasGet(atlas_name).get(img_name);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Things that should be done before requiring or running any user-level code or other engine code\n\nrequire('./polyfill.js');\n\nlet debug = document.getElementById('debug');\nwindow.onerror = function (e, file, line, col, errorobj) {\n  let msg = String(e);\n  if (msg.startsWith('[object ')) {\n    try {\n      msg = JSON.stringify(e);\n    } catch (ignored) {\n      // ignored\n    }\n    msg = msg.slice(0, 600); // Not too huge\n  }\n  if (typeof errorobj === 'string') {\n    msg = `${msg} ${errorobj}`;\n  }\n  if (file || line > 0 || col > 0) {\n    msg += `\\n  at ${file}(${line}:${col})`;\n  }\n  let got_stack = false;\n  if (errorobj && errorobj.stack) {\n    got_stack = true;\n    msg = `${errorobj.stack}`;\n    if (errorobj.message) {\n      if (msg.indexOf(errorobj.message) === -1) {\n        msg = `${errorobj.message}\\n${msg}`;\n      }\n    }\n    let origin = document.location.origin || '';\n    if (origin) {\n      if (origin.slice(-1) !== '/') {\n        origin += '/';\n      }\n      msg = msg.split(origin).join(''); // replace\n    }\n    // fixup weird Firefox weirdness\n    msg = msg.replace(/\\[\\d+\\]<\\/?/g, '') // remove funny [123]/ at start of stack lines\n      .replace(/\\/</g, '') // remove funny /<s, they mess up people's copy and paste, look funny\n      .replace(/<?\\/<?/g, '/') // remove funny </s, they mess up people's copy and paste\n      .replace(/\\n\\//g, '\\n') // remove preceding slashes, not sure where those come from\n      .replace(/\\n([^ ])/g, '\\n  $1'); // add indentation if missing\n  }\n  if (msg.indexOf('Error:') === -1) {\n    msg = `Error: ${msg}`;\n  }\n  if (errorobj && errorobj.errortype) {\n    if (errorobj.errortype === 'unhandledrejection') {\n      msg = `Uncaught (in promise) ${msg}`;\n    }\n  }\n  if (errorobj) {\n    // Attempt to tack on any string members of the error object that may contain useful details\n    try {\n      if (typeof errorobj === 'object') {\n        for (let key in errorobj) {\n          if (typeof errorobj[key] === 'string') {\n            let value = errorobj[key];\n            if (key !== 'errortype' &&\n              !((key === 'stack' || key === 'message') && got_stack)\n            ) {\n              msg = `${msg}\\n${key}=${value}`;\n            }\n          }\n        }\n      }\n    } catch (ignored) {\n      // ignored\n    }\n  }\n  let show = true;\n  if (window.glov_error_report) {\n    show = window.glov_error_report(msg, file, line, col);\n  } else if (!window.glov_error_early) {\n    window.glov_error_early = { msg, file, line, col };\n  }\n  if (show) {\n    debug.innerText = `${msg}\\n\\nPlease report this error to the developer,` +\n      ' and then reload this page or restart the app.';\n  }\n};\nwindow.addEventListener('unhandledrejection', function (event) {\n  let errorobj = event.reason;\n  if (!errorobj) {\n    // Can't possibly get anything useful from this? `reject()` causes this, though, still useful to know?\n    return;\n  }\n  if (!errorobj || typeof errorobj !== 'object') {\n    errorobj = { stack: errorobj };\n  }\n  let file;\n  if (event.reason && event.reason.srcElement && event.reason.srcElement.src) {\n    file = event.reason.srcElement.src;\n  }\n  try {\n    errorobj.errortype = event.type;\n  } catch (ignored) {\n    // ignore, happens on Firefox\n  }\n  window.onerror(event.reason, file, 0, 0, errorobj);\n});\nwindow.debugmsg = function (msg, clear) {\n  if (clear) {\n    debug.innerText = msg;\n  } else {\n    debug.innerText += `${msg}\\n`;\n  }\n};\n\n// Placeholder profiler functions (in case shared/startup code calls them) until\n//   profiler is initialized/enabled.\n// eslint-disable-next-line @typescript-eslint/no-empty-function, func-name-matching\nwindow.profilerStart = window.profilerStop = window.profilerStopStart = function nop() {};\n","let ua = window.navigator.userAgent;\nexport let is_mac_osx = ua.match(/Mac OS X/);\nexport let is_ios = !window.MSStream && ua.match(/iPad|iPhone|iPod/);\nexport let is_ipad = Boolean(ua.match(/iPad/));\nexport let is_webkit = ua.match(/WebKit/i);\nexport let is_ios_safari = is_ios && is_webkit && !ua.match(/CriOS/i);\nexport let is_ios_chrome = is_ios && is_webkit && ua.match(/CriOS/i);\nlet m = ua.match(/OS (\\d+)(_\\d+)?(_\\d+)?\\s/);\n// Note: also set on Chrome on iOS\nexport let safari_version_major = (is_ios && m) ? Number(m[1] || '0') : 0;\nexport let safari_version_minor = (is_ios && m) ? Number(m[2] && m[2].slice(1) || '0') : 0;\nexport let is_windows_phone = ua.match(/windows phone/i);\nexport let is_android = !is_windows_phone && ua.match(/android/i);\nexport let is_firefox = ua.match(/Firefox/i);\nexport let is_itch_app = String(window.location.protocol).indexOf('itch') !== -1; // Note: itch.io APP, not web site\n\nexport let is_discrete_gpu = false;\n\nfunction init() {\n  try {\n    let canvas = document.createElement('canvas');\n    canvas.width = 4;\n    canvas.height = 4;\n    let gltest = canvas.getContext('webgl');\n    if (gltest) {\n      let debug_info = gltest.getExtension('WEBGL_debug_renderer_info');\n      if (debug_info) {\n        let renderer_unmasked = gltest.getParameter(debug_info.UNMASKED_RENDERER_WEBGL);\n        is_discrete_gpu = Boolean(renderer_unmasked && (\n          renderer_unmasked.match(/nvidia|radeon/i) ||\n          renderer_unmasked.match(/apple gpu/i) && is_mac_osx && !is_ios\n        ));\n      }\n    }\n  } catch (e) {\n    // ignored\n  }\n}\ninit();\n","/* eslint-disable import/order */\nconst camera2d = require('./camera2d.js');\nconst engine = require('./engine.js');\nconst { renderNeeded } = engine;\nconst glov_font = require('./font.js');\nconst { min } = Math;\nconst { scrollAreaCreate } = require('./scroll_area.js');\nconst ui = require('./ui.js');\nconst net = require('./net.js');\nconst {\n  dataErrorEx,\n  dataErrorQueueClear,\n  dataErrorQueueGet,\n} = require('glov/common/data_error.js');\nconst { plural } = require('glov/common/util.js');\nconst { vec4 } = require('glov/common/vmath.js');\n\nlet gbstate;\nlet server_error;\n\nZ.BUILD_ERRORS = Z.BUILD_ERRORS || 9900;\n\nfunction onGBState(state) {\n  gbstate = state;\n  renderNeeded();\n}\n\nfunction onServerError(err) {\n  server_error = err;\n  renderNeeded();\n}\n\nfunction onDataErrors(err_list) {\n  for (let ii = 0; ii < err_list.length; ++ii) {\n    dataErrorEx(err_list[ii]);\n  }\n  renderNeeded();\n}\n\nconst PAD = 4;\nconst color_panel = vec4(0,0,0,1);\nconst style_title = glov_font.styleColored(null, 0xFF2020ff);\nconst style = glov_font.styleColored(null, 0xDDDDDDff);\nconst style_task = glov_font.styleColored(null, 0x00DDDDff);\nconst style_job = glov_font.styleColored(null, 0x2020FFff);\nconst color_line = vec4(1,1,1,1);\n// eslint-disable-next-line no-control-regex\nconst strip_ansi = /\\u001b\\[(?:[0-9;]*)[0-9A-ORZcf-nqry=><]/g;\nlet scroll_area;\nfunction buildUITick() {\n  let data_errors = dataErrorQueueGet();\n  if (!gbstate && !server_error && !data_errors.length) {\n    return;\n  }\n  const x0 = camera2d.x0() + PAD;\n  const y0 = camera2d.y0() + PAD;\n  let z = Z.BUILD_ERRORS;\n  const w = camera2d.w() * 0.75;\n  const { font, title_font, font_height } = ui;\n  let x = x0;\n  let y = y0;\n\n  let error_count = (gbstate?.error_count || 0) + (server_error ? 1 : 0) + data_errors.length;\n  let warning_count = gbstate?.warning_count || 0;\n  title_font.drawSizedAligned(style_title, x, y, z, font_height, font.ALIGN.HCENTERFIT, w, 0,\n    `${error_count} ${plural(error_count, 'error')}, ` +\n    `${warning_count} ${plural(warning_count, 'warning')}`);\n  y += font_height + 1;\n  ui.drawLine(x0 + w * 0.3, y, x0 + w * 0.7, y, z, 0.5, true, color_line);\n  y += PAD;\n\n  if (!scroll_area) {\n    scroll_area = scrollAreaCreate({\n      z,\n      background_color: null,\n      auto_hide: true,\n    });\n  }\n\n  const max_h = camera2d.y1() - PAD - y;\n  let scroll_y_start = y;\n  scroll_area.begin({\n    x, y, w, h: max_h,\n  });\n  const sub_w = w - PAD - scroll_area.barWidth();\n  y = 0;\n  z = Z.UI;\n  let indent = 0;\n\n  function printLine(type, str) {\n    str = str.replace(strip_ansi, '');\n    y += font.drawSizedWrapped(style, x + indent, y, z, sub_w - indent, 0, font_height,\n      `${type}: ${str}`);\n  }\n\n  if (gbstate) {\n    for (let task_name in gbstate.tasks) {\n      let task = gbstate.tasks[task_name];\n      x = 0;\n      indent = 0;\n      font.drawSizedAligned(style_task, x, y, z, font_height, font.ALIGN.HLEFT, sub_w, 0,\n        `${task_name}:`);\n      y += font_height;\n      indent += font_height;\n      let printed_any = false;\n      for (let job_name in task.jobs) {\n        let job = task.jobs[job_name];\n        let { warnings, errors } = job;\n        if (job_name !== 'all') {\n          if (job_name.startsWith('source:')) {\n            job_name = job_name.slice(7);\n          }\n          y += font.drawSizedWrapped(style_job, indent, y, z, sub_w, 0, font_height,\n            job_name);\n        }\n        if (warnings) {\n          for (let ii = 0; ii < warnings.length; ++ii) {\n            printLine('Warning', warnings[ii]);\n            printed_any = true;\n          }\n        }\n        if (errors) {\n          for (let ii = 0; ii < errors.length; ++ii) {\n            printLine('Error', errors[ii]);\n            printed_any = true;\n          }\n        }\n      }\n      if (!printed_any && task.err) {\n        printLine('Error', task.err);\n      }\n      y += PAD;\n    }\n  }\n\n  if (server_error) {\n    x = indent = 0;\n    font.drawSizedAligned(style_task, x, y, z, font_height, font.ALIGN.HLEFT, sub_w, 0,\n      'Server Error:');\n    y += font_height;\n    x += font_height;\n    printLine('Server error', server_error);\n  }\n\n  for (let ii = 0; ii < data_errors.length; ++ii) {\n    let { msg } = data_errors[ii];\n    x = 0;\n    printLine('Data error', msg);\n  }\n\n  scroll_area.end(y);\n  y = scroll_y_start + min(max_h, y);\n\n  let button_h = font_height * 1.5;\n  if (ui.buttonText({\n    x: x0 + w - button_h,\n    y: y0, z: Z.BUILD_ERRORS + 1,\n    w: button_h, h: button_h,\n    text: 'X',\n  })) {\n    gbstate = null;\n    server_error = null;\n    dataErrorQueueClear();\n  }\n\n  ui.panel({\n    x: x0 - PAD, y: y0 - PAD, z: Z.BUILD_ERRORS - 1,\n    w: w + PAD * 2, h: y - y0 + PAD * 2,\n    color: color_panel,\n  });\n\n}\n\nexport function buildUIStartup() {\n  if (net.client && engine.DEBUG) {\n    net.client.onMsg('gbstate', onGBState);\n    net.client.onMsg('server_error', onServerError);\n    net.client.onMsg('data_errors', onDataErrors);\n    net.subs.on('connect', function () {\n      let pak = net.client.pak('gbstate_enable');\n      pak.writeBool(true);\n      pak.send();\n    });\n    engine.addTickFunc(buildUITick);\n  }\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint @typescript-eslint/no-shadow:off */\n\nconst assert = require('assert');\nconst engine = require('./engine.js');\n\nconst { max, floor, round } = Math;\n\nconst safearea_pad = new Float32Array(4); // left, right, top, bottom\n// 0: x0_real\n// 1: y0_real\n// 2: x1_real\n// 3: y1_real\n// 4: x_scale\n// 5: y_scale\n// 6: dom_to_canvas_ratio\n// 7: inverse viewport x_scale\n// 8: inverse viewport y_scale\n// 9: x0\n// 10: y0\n// 11: x1\n// 12: y1\n// 13: x1_real - x0_real (math done in double precision)\n// 14: y1_real - y0_real (math done in double precision)\nexport const data = new Float32Array(15);\n\nlet screen_width;\nlet screen_height;\n// Note: render_* not used by FRVR at this time\nlet render_width;\nlet render_height;\nexport let render_viewport_w;\nexport let render_viewport_h;\nexport let render_offset_x;\nlet render_offset_y_top;\nexport let render_offset_y_bottom;\n\nfunction reapply() {\n  if (render_width) {\n    data[4] = render_width / data[13];\n    data[5] = render_height / data[14];\n    data[7] = data[13] / render_viewport_w;\n    data[8] = data[14] / render_viewport_h;\n  } else {\n    data[4] = screen_width / data[13];\n    data[5] = screen_height / data[14];\n  }\n}\n\n// To get to coordinates used by OpenGL / canvas\nexport function virtualToCanvas(dst, src) {\n  dst[0] = (src[0] - data[0]) * data[4];\n  dst[1] = (src[1] - data[1]) * data[5];\n}\nexport function transformX(x) {\n  return (x - data[0]) * data[4];\n}\nexport function transformY(y) {\n  return (y - data[1]) * data[5];\n}\n\nexport function canvasToVirtual(dst, src) {\n  dst[0] = src[0] / data[4] + data[0];\n  dst[1] = src[1] / data[5] + data[1];\n}\n\nfunction safeScreenWidth() {\n  return max(1, screen_width - safearea_pad[0] - safearea_pad[1]);\n}\n\nfunction safeScreenHeight() {\n  return max(1, screen_height - safearea_pad[2] - safearea_pad[3]);\n}\n\n// Sets the 2D \"camera\" used to translate sprite positions to screen space.  Affects sprites queued\n//  after this call\nexport function set(x0, y0, x1, y1, ignore_safe_area) {\n  assert(isFinite(x0));\n  assert(isFinite(y0));\n  assert(isFinite(x1));\n  assert(isFinite(y1));\n  if (ignore_safe_area || render_width) {\n    data[9] = data[0] = x0;\n    data[10] = data[1] = y0;\n    data[11] = data[2] = x1;\n    data[12] = data[3] = y1;\n    data[13] = x1 - x0;\n    data[14] = y1 - y0;\n  } else {\n    data[9] = x0;\n    data[10] = y0;\n    data[11] = x1;\n    data[12] = y1;\n    let wscale = (x1 - x0) / safeScreenWidth();\n    let hscale = (y1 - y0) / safeScreenHeight();\n    let x0_real = x0 - safearea_pad[0] * wscale;\n    let y0_real = y0 - safearea_pad[2] * hscale;\n    let x1_real = x1 + safearea_pad[1] * wscale;\n    let y1_real = y1 + safearea_pad[3] * hscale;\n    data[0] = x0_real;\n    data[1] = y0_real;\n    data[2] = x1_real;\n    data[3] = y1_real;\n    data[13] = x1_real - x0_real;\n    data[14] = y1_real - y0_real;\n  }\n\n  reapply();\n}\n\nexport function setSafeAreaPadding(left, right, top, bottom) {\n  safearea_pad[0] = round(left);\n  safearea_pad[1] = round(right);\n  safearea_pad[2] = round(top);\n  safearea_pad[3] = round(bottom);\n  // Called while updating screen width/height, reapply() should get called later\n}\n\nexport function safeAreaPadding() {\n  return safearea_pad;\n}\n\nconst stack = [];\nexport function push() {\n  stack.push(data.slice(0));\n}\nexport function pop() {\n  let old = stack.pop();\n  for (let ii = 0; ii < old.length; ++ii) {\n    data[ii] = old[ii];\n  }\n  reapply();\n}\n\nexport function domToCanvasRatio() {\n  return data[6];\n}\n\nexport function screenAspect() {\n  return safeScreenWidth() /\n    safeScreenHeight();\n}\n\n// Drawing area 0,0-w,h\n// But keep the aspect ratio of those things drawn to be correct\n// This may create a padding or margin on either top and bottom or sides of the screen\n// User should use constant values in this range for consistent UI on all devices\nexport function setAspectFixed(w, h) {\n  let pa = render_width ? 1 : engine.pixel_aspect;\n  let inv_aspect = h / pa / w;\n  let inv_desired_aspect;\n  let screen_w;\n  let screen_h;\n  if (render_width) {\n    screen_w = render_width;\n    screen_h = render_height;\n  } else {\n    screen_w = safeScreenWidth();\n    screen_h = safeScreenHeight();\n  }\n  inv_desired_aspect = screen_h / screen_w;\n  // ensure the left/top margin is integer screen pixels\n  // Note: the margin is, however, not integer virtual pixels, so anything\n  //   using an `integral` font and camera2d.x0()/etc will have artifacts\n  if (inv_aspect > inv_desired_aspect) {\n    let virtual_w = h / pa / inv_desired_aspect;\n    let virtual_to_screen = screen_w / virtual_w;\n    let margin = virtual_w - w;\n    let left_margin_screen_px = round(margin * virtual_to_screen / 2);\n    let left_margin = left_margin_screen_px / virtual_to_screen;\n    let right_margin = margin - left_margin;\n    set(-left_margin, 0, w + right_margin, h, false);\n  } else {\n    let virtual_h = w * pa * inv_desired_aspect;\n    let virtual_to_screen = screen_h / virtual_h;\n    let margin = virtual_h - h;\n    let top_margin_screen_px = round(margin * virtual_to_screen / 2);\n    let top_margin = top_margin_screen_px / virtual_to_screen;\n    let bot_margin = margin - top_margin;\n    set(0, -top_margin, w, h + bot_margin, false);\n  }\n}\n\nexport function setAspectFixedRespectPixelPerfect(w, h) {\n  if (render_width || !engine.render_pixel_perfect) {\n    return void setAspectFixed(w, h);\n  }\n\n  let pa = engine.pixel_aspect;\n  let inv_aspect = h / pa / w;\n  let screen_w = safeScreenWidth();\n  let screen_h = safeScreenHeight();\n  let inv_desired_aspect = screen_h / screen_w;\n  let my_viewport_w = screen_w;\n  if (inv_aspect > inv_desired_aspect) {\n    my_viewport_w = w * pa / h * screen_h;\n  }\n  let scalar = my_viewport_w / w;\n  let int_scalar = floor(scalar);\n  let fpart = scalar - int_scalar;\n  if (scalar > 1 && fpart <= engine.render_pixel_perfect) {\n    // do pixel perfect\n  } else {\n    return void setAspectFixed(w, h);\n  }\n  // TODO: pixel_aspect is probably not supported correctly\n  scalar = int_scalar;\n  let desired_width = w * scalar;\n  let margin = screen_w - desired_width;\n  let left_margin_screen_px = floor(margin / 2);\n  let virtual_w = screen_w / scalar;\n  let left_margin = left_margin_screen_px / scalar;\n  let right_margin = virtual_w - w - left_margin;\n  let desired_height = round(h * scalar / pa);\n  margin = screen_h - desired_height;\n  let top_margin_screen_px = floor(margin / 2);\n  let virtual_h = screen_h / scalar;\n  let top_margin = top_margin_screen_px / scalar;\n  let bot_margin = virtual_h - h - top_margin;\n\n  set(-left_margin, -top_margin, w + right_margin, h + bot_margin, false);\n}\n\n// Primary drawing area at least W x H\n// But keep the aspect ratio of those things drawn to be correct\n// Similar to setAspectFixed() but keeps (0,0) in the upper left (all padding\n//   is added to right and bottom)\n// Requires users to use camera2d.w()/ and camera2d.h() to determine reasonable\n//   UI positioning\nexport function setAspectFixed2(w, h) {\n  let pa = render_width ? 1 : engine.pixel_aspect;\n  let inv_aspect = h / pa / w;\n  let inv_desired_aspect;\n  if (render_width) {\n    inv_desired_aspect = render_height / render_width;\n  } else {\n    inv_desired_aspect = 1 / screenAspect();\n  }\n  if (inv_aspect > inv_desired_aspect) {\n    let margin = (h / pa / inv_desired_aspect - w);\n    set(0, 0, w + margin, h, false);\n  } else {\n    let margin = (w * pa * inv_desired_aspect - h);\n    set(0, 0, w, h + margin, false);\n  }\n}\n\nexport function zoom(x, y, factor) {\n  let inv_factor = 1.0 / factor;\n  set(\n    x - (x - data[0]) * inv_factor,\n    y - (y - data[1]) * inv_factor,\n    x + (data[2] - x) * inv_factor,\n    y + (data[3] - y) * inv_factor, true);\n}\n\nexport function shift(dx, dy) {\n  set(data[0] + dx, data[1] + dy, data[2] + dx, data[3] + dy, true);\n}\n\n// returns [x0,y0,x1,y1] to use as parameters set() such that src_rect in the\n// current view is now addressable by dest_rect (presumably something like\n// [0,0,vw,vh])\nexport function calcMap(out, src_rect, dest_rect) {\n  let cur_w = data[11] - data[9];\n  let cur_h = data[12] - data[10];\n  let vx0 = (src_rect[0] - data[9]) / cur_w;\n  let vy0 = (src_rect[1] - data[10]) / cur_h;\n  let vx1 = (src_rect[2] - data[9]) / cur_w;\n  let vy1 = (src_rect[3] - data[10]) / cur_h;\n  let vw = vx1 - vx0;\n  let vh = vy1 - vy0;\n  let dest_vw = dest_rect[2] - dest_rect[0];\n  let dest_vh = dest_rect[3] - dest_rect[1];\n  out[0] = dest_rect[0] - dest_vw / vw * vx0;\n  out[1] = dest_rect[1] - dest_vh / vh * vy0;\n  out[2] = dest_rect[2] + dest_vw / vw * (1 - vx1);\n  out[3] = dest_rect[3] + dest_vh / vh * (1 - vy1);\n  return out;\n}\n\nexport function setNormalized() {\n  set(0, 0, 1, 1, true);\n}\n\n// Sets virtual viewport equal to (DPI-aware) screen pixels\n//   (generally a bad idea, will not scale well without lots of app work)\nexport function setScreen(no_dpi_aware) {\n  if (render_width) {\n    set(0, 0, render_width, render_height);\n  } else if (no_dpi_aware) {\n    set(0, 0, safeScreenWidth(), safeScreenHeight());\n  } else {\n    set(0, 0, safeScreenWidth() / engine.dom_to_canvas_ratio, safeScreenHeight() / engine.dom_to_canvas_ratio);\n  }\n}\n\n// Sets virtual viewport equal to DOM coordinates, for debugging input events/etc\nexport function setDOMMapped() {\n  if (render_width) {\n    let f = 1 / engine.dom_to_canvas_ratio;\n    set(render_offset_x * f, render_offset_y_top * f,\n      (screen_width - render_offset_x) * f, (screen_height - render_offset_y_top) * f, true);\n  } else {\n    set(0, 0, screen_width / engine.dom_to_canvas_ratio, screen_height / engine.dom_to_canvas_ratio, true);\n  }\n}\n\nexport function x0Real() {\n  return data[0];\n}\nexport function y0Real() {\n  return data[1];\n}\nexport function x1Real() {\n  return data[2];\n}\nexport function y1Real() {\n  return data[3];\n}\nexport function wReal() {\n  return data[13];\n}\nexport function hReal() {\n  return data[14];\n}\nexport function x0() {\n  return data[9];\n}\nexport function y0() {\n  return data[10];\n}\nexport function x1() {\n  return data[11];\n}\nexport function y1() {\n  return data[12];\n}\nexport function w() {\n  return data[11] - data[9];\n}\nexport function h() {\n  return data[12] - data[10];\n}\nexport function xScale() {\n  return data[4];\n}\nexport function yScale() {\n  return data[5];\n}\n\nexport function htmlPos(x, y) {\n  if (render_width) {\n    return [\n      100 * (((x - data[0]) / data[7] + render_offset_x) / screen_width),\n      100 * (((y - data[1]) / data[8] + render_offset_y_top) / screen_height),\n    ];\n  } else {\n    return [\n      100 * (x - data[0]) / (data[2] - data[0]),\n      100 * (y - data[1]) / (data[3] - data[1]),\n    ];\n  }\n}\nexport function htmlSize(w, h) {\n  if (render_width) {\n    return [\n      100 * w / data[7] / screen_width,\n      100 * h / data[8] / screen_height,\n    ];\n  } else {\n    return [100 * w / (data[2] - data[0]), 100 * h / (data[3] - data[1])];\n  }\n}\n\nlet input_clipping;\nexport function setInputClipping(xywh) {\n  input_clipping = xywh;\n}\n\nexport function domToVirtual(dst, src) {\n  let ret = true;\n  if (input_clipping) {\n    if (src[0] < input_clipping[0] || src[0] > input_clipping[0] + input_clipping[2] ||\n      src[1] < input_clipping[1] || src[1] > input_clipping[1] + input_clipping[3]\n    ) {\n      ret = false;\n    }\n  }\n  if (render_width) {\n    dst[0] = (src[0] * data[6] - render_offset_x) * data[7] + data[0];\n    dst[1] = (src[1] * data[6] - render_offset_y_top) * data[8] + data[1];\n  } else {\n    dst[0] = src[0] * data[6] / data[4] + data[0];\n    dst[1] = src[1] * data[6] / data[5] + data[1];\n  }\n  return ret;\n}\n\nexport function domDeltaToVirtual(dst, src) {\n  if (render_width) {\n    dst[0] = src[0] * data[6] * data[7];\n    dst[1] = src[1] * data[6] * data[8];\n  } else {\n    dst[0] = src[0] * data[6] / data[4];\n    dst[1] = src[1] * data[6] / data[5];\n  }\n}\n\nlet input_clipping_virtual = new Float32Array(4);\nfunction updateVirtualInputClipping() {\n  domToVirtual(input_clipping_virtual, input_clipping);\n  //domDeltaToVirtual(input_clipping_virtual.slice(2), input_clipping.slice(2)) :\n  if (render_width) {\n    input_clipping_virtual[2] = input_clipping[2] * data[6] * data[7];\n    input_clipping_virtual[3] = input_clipping[3] * data[6] * data[8];\n  } else {\n    input_clipping_virtual[2] = input_clipping[2] * data[6] / data[4];\n    input_clipping_virtual[3] = input_clipping[3] * data[6] / data[5];\n  }\n}\n\n\n// To get to coordinates used by mouse events\nexport function virtualToDom(dst, src) {\n  if (render_width) {\n    dst[0] = (render_offset_x + (src[0] - data[0]) / data[7]) / data[6];\n    dst[1] = (render_offset_y_top + (src[1] - data[1]) / data[8]) / data[6];\n  } else {\n    dst[0] = (src[0] - data[0]) * data[4] / data[6];\n    dst[1] = (src[1] - data[1]) * data[5] / data[6];\n  }\n}\n\nlet font_pixel_scale = 0.84; // approx for palanquin; use 0.970 for PerfectVGA\nexport function setDOMFontPixelScale(scale) {\n  font_pixel_scale = scale;\n}\nexport function virtualToFontSize(height) {\n  if (render_width) {\n    return height / (data[6] * data[8]) * font_pixel_scale;\n  } else {\n    return height * data[5] / data[6] * font_pixel_scale;\n  }\n}\n\n// dst/src are x/y/w/h objects (e.g. from input system)\nexport function virtualToDomPosParam(dst, src) {\n  if (render_width) {\n    dst.x = (render_offset_x + (src.x - data[0]) / data[7]) / data[6];\n    dst.w = src.w / data[7] / data[6];\n    dst.y = (render_offset_y_top + (src.y - data[1]) / data[8]) / data[6];\n    dst.h = src.h / data[8] / data[6];\n  } else {\n    dst.x = (src.x - data[0]) * data[4] / data[6];\n    dst.w = src.w * data[4] / data[6];\n    dst.y = (src.y - data[1]) * data[5] / data[6];\n    dst.h = src.h * data[5] / data[6];\n  }\n  if (input_clipping) {\n    if (dst.x < input_clipping[0]) {\n      dst.w = max(0, dst.w - (input_clipping[0] - dst.x));\n      dst.x = input_clipping[0];\n    }\n    if (dst.y < input_clipping[1]) {\n      dst.h = max(0, dst.h - (input_clipping[1] - dst.y));\n      dst.y = input_clipping[1];\n    }\n    if (dst.x > input_clipping[0] + input_clipping[2]) {\n      dst.w = 0;\n    }\n    if (dst.y > input_clipping[1] + input_clipping[3]) {\n      dst.h = 0;\n    }\n  }\n}\n\nexport function clipTestRect(rect) {\n  if (!input_clipping) {\n    return true;\n  }\n  updateVirtualInputClipping();\n  let icv = input_clipping_virtual;\n  if (rect.x > icv[0] + icv[2] ||\n    rect.x + rect.w < icv[0] ||\n    rect.y > icv[1] + icv[3] ||\n    rect.y + rect.h < icv[1]\n  ) {\n    // fully clipped\n    return false;\n  }\n  if (rect.x < icv[0]) {\n    rect.w -= icv[0] - rect.x;\n    rect.x = icv[0];\n  }\n  if (rect.y < icv[1]) {\n    rect.h -= icv[1] - rect.y;\n    rect.y = icv[1];\n  }\n  if (rect.x + rect.w > icv[0] + icv[2]) {\n    rect.w = icv[0] + icv[2] - rect.x;\n  }\n  if (rect.y + rect.h > icv[1] + icv[3]) {\n    rect.h = icv[1] + icv[3] - rect.y;\n  }\n  return true;\n}\n\nexport function tickCamera2D() {\n  data[6] = engine.dom_to_canvas_ratio; /* dom_to_canvas_ratio */\n  screen_width = engine.width;\n  screen_height = engine.height;\n  let viewport = [0, 0, screen_width, screen_height];\n  if (engine.render_width) { // Note: render_* not used by FRVR at this time\n    render_width = engine.render_width;\n    render_height = engine.render_height;\n    // Find an offset so this rendered viewport is centered while preserving aspect ratio, just like setAspectFixed\n    let pa = engine.pixel_aspect;\n    let inv_aspect = render_height / pa / render_width;\n    let eff_screen_width = safeScreenWidth();\n    let eff_screen_height = safeScreenHeight();\n    let inv_desired_aspect = eff_screen_height / eff_screen_width;\n    if (inv_aspect > inv_desired_aspect) {\n      let margin = (render_height / inv_desired_aspect - render_width * pa) / 2 *\n        eff_screen_height / render_height;\n      render_offset_x = safearea_pad[0] + round(margin);\n      render_offset_y_top = safearea_pad[2];\n      render_offset_y_bottom = safearea_pad[3];\n      render_viewport_w = round(eff_screen_width - margin * 2);\n      render_viewport_h = eff_screen_height;\n    } else {\n      let margin = (render_width * inv_desired_aspect - render_height / pa) / 2 *\n        eff_screen_width / render_width;\n      render_offset_x = safearea_pad[0];\n      render_offset_y_top = safearea_pad[2] + round(margin);\n      render_offset_y_bottom = safearea_pad[3] + round(margin);\n      render_viewport_w = eff_screen_width;\n      render_viewport_h = round(eff_screen_height - margin * 2);\n    }\n    if (engine.render_pixel_perfect) {\n      let scalar = render_viewport_w / render_width;\n      let int_scalar = floor(scalar);\n      let fpart = scalar - int_scalar;\n      if (scalar > 1 && fpart <= engine.render_pixel_perfect) {\n        scalar = int_scalar;\n        let desired_width = render_width * scalar;\n        let xoffs = floor((render_viewport_w - desired_width)*0.5);\n        render_offset_x += xoffs;\n        render_viewport_w = desired_width;\n        let desired_height = round(render_height * scalar / pa);\n        let yoffs = render_viewport_h - desired_height;\n        let yoffs_top = floor(yoffs*0.5);\n        render_offset_y_top += yoffs_top;\n        render_offset_y_bottom += yoffs - yoffs_top;\n        render_viewport_h = desired_height;\n      }\n    }\n    viewport[2] = render_width;\n    viewport[3] = render_height;\n  } else {\n    render_width = render_height = 0;\n    render_offset_x = 0;\n    render_offset_y_top = 0;\n    render_offset_y_bottom = 0;\n  }\n\n  reapply();\n\n  // let screen_width = engine.width;\n  // let screen_height = engine.height;\n  // let screen_aspect = screen_width / screen_height;\n  // let view_aspect = game_width / game_height;\n  // if (screen_aspect > view_aspect) {\n  //   let viewport_width = game_height * screen_aspect;\n  //   let half_diff = (viewport_width - game_width) / 2;\n  //   viewportRectangle = [-half_diff, 0, game_width + half_diff, game_height];\n  // } else {\n  //   let viewport_height = game_width / screen_aspect;\n  //   let half_diff = (viewport_height - game_height) / 2;\n  //   viewportRectangle = [0, -half_diff, game_width, game_height + half_diff];\n  // }\n\n  engine.setViewport(viewport);\n}\n\nexport function startup() {\n  screen_width = engine.width;\n  screen_height = engine.height;\n  set(0, 0, engine.width, engine.height);\n  tickCamera2D();\n}\n","import assert from 'assert';\nimport {\n  PlatformDef,\n  PlatformID,\n  platformIsValid,\n  platformOverrideParameter,\n  platformParameter,\n} from 'glov/common/platform';\n\n// Platform\nassert(platformIsValid(window.conf_platform));\nexport const PLATFORM = window.conf_platform as PlatformID;\n\nlet override_platform = PLATFORM;\nexport function platformOverrideID(id: PlatformID): void {\n  override_platform = id;\n}\nexport function platformGetID(): PlatformID {\n  return override_platform;\n}\n\nexport function platformParameterGet<T extends keyof PlatformDef>(parameter: T): PlatformDef[T] {\n  return platformParameter(platformGetID(), parameter);\n}\n\nconst platform_devmode = platformParameter(PLATFORM, 'devmode');\nexport const MODE_DEVELOPMENT = platform_devmode === 'on' || platform_devmode === 'auto' &&\n  Boolean(String(document.location).match(/^https?:\\/\\/localhost/));\nexport const MODE_PRODUCTION = !MODE_DEVELOPMENT;\n\n// Abilities\nexport function getAbilityReload(): boolean {\n  return platformParameterGet('reload');\n}\nexport function setAbilityReload(value: boolean): void {\n  platformOverrideParameter('reload', platformParameterGet('reload') && value);\n}\n\nexport function getAbilityReloadUpdates(): boolean {\n  return platformParameterGet('reload_updates');\n}\nexport function setAbilityReloadUpdates(value: boolean): void {\n  platformOverrideParameter('reload_updates', platformParameterGet('reload_updates') && value);\n}\n\nlet ability_chat = true;\nexport function getAbilityChat(): boolean {\n  return ability_chat;\n}\nexport function setAbilityChat(value: boolean): void {\n  ability_chat = value;\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport assert from 'assert';\n// Must have NO internal dependencies, otherwise get circular dependencies between this, engine, and settings\nimport { cmdParseCreate } from 'glov/common/cmd_parse';\nimport * as local_storage from './local_storage';\nimport * as urlhash from './urlhash';\nexport let cmd_parse = cmdParseCreate({ storage: local_storage });\nexport let safearea = [-1,-1,-1,-1];\n\nfunction cmdDesc(cmd_data) {\n  return `**/${cmd_data.cmd}** - ${cmd_data.help}`;\n}\n\ncmd_parse.register({\n  cmd: 'help',\n  help: 'Searches commands',\n  func: function (str, resp_func) {\n    let list = cmd_parse.autoComplete('', this && this.access);\n    if (str) {\n      let str_cname = cmd_parse.canonical(str);\n      let str_lc = str.toLowerCase();\n      list = list.filter((cmd_data) => cmd_data.cname.indexOf(str_cname) !== -1 ||\n          cmd_data.help.toLowerCase().indexOf(str_lc) !== -1);\n    }\n    if (!list.length) {\n      return void resp_func(null, `No commands found matching \"${str}\"`);\n    }\n    resp_func(null, list.map(cmdDesc).join('\\n'));\n  }\n});\n\ncmd_parse.registerValue('safe_area', {\n  label: 'Safe Area',\n  type: cmd_parse.TYPE_STRING,\n  usage: 'Safe Area value: Use -1 for auto based on browser environment,\\n' +\n    'or 0-25 for percentage of screen size\\n' +\n    '  Usage: /safe_area [value]\\n' +\n    '  Usage: /safe_area horizontal,vertical\\n' +\n    '  Usage: /safe_area left,right,top,bottom',\n  default_value: '-1',\n  get: () => (safearea[0] === -1 ? '-1 (auto)' : safearea.join(',')),\n  set: (v) => {\n    v = String(v);\n    let keys = v.split(',');\n    if (v && keys.length === 1) {\n      safearea[0] = safearea[1] = safearea[2] = safearea[3] = Number(v);\n    } else if (keys.length === 2) {\n      safearea[0] = safearea[1] = Number(keys[0]);\n      safearea[2] = safearea[3] = Number(keys[1]);\n    } else if (keys.length === 4) {\n      for (let ii = 0; ii < 4; ++ii) {\n        safearea[ii] = Number(keys[ii]);\n      }\n    } else {\n      // error, ignore?\n    }\n    for (let ii = 0; ii < 4; ++ii) {\n      if (!isFinite(safearea[ii])) {\n        safearea[ii] = -1;\n      }\n    }\n  },\n  store: true,\n});\n\ncmd_parse.register({\n  cmd: 'webgl2_auto',\n  help: 'Resets WebGL2 auto-detection',\n  func: function (str, resp_func) {\n    let disable_data = local_storage.getJSON('webgl2_disable');\n    if (!disable_data) {\n      return resp_func(null, 'WebGL2 is already being auto-detected');\n    }\n    local_storage.setJSON('webgl2_disable', undefined);\n    return resp_func(null, 'WebGL2 was disabled, will attempt to use it again on the next load');\n  },\n});\n\ncmd_parse.register({\n  cmd: 'url',\n  help: 'Opens an internal URL',\n  func: function (str, resp_func) {\n    // execute out-of-tick to prevent fighting with other things that may updating the url at the end of frame\n    setTimeout(() => {\n      profilerStart('/url');\n      urlhash.go(str); // .goRoute(str) is also a reasonable implementation depending on the context\n      profilerStop('/url');\n    }, 1);\n  },\n});\n\ncmd_parse.register({\n  cmd: 'client_crash',\n  help: '(Debug) - Crash on the client',\n  access_show: ['sysadmin'],\n  func: function (str, resp_func) {\n    let foo;\n    foo.bar++;\n  }\n});\n\ncmd_parse.register({\n  cmd: 'client_assert',\n  help: '(Debug) - Fail an assert on the client',\n  access_show: ['sysadmin'],\n  func: function (str, resp_func) {\n    assert(false);\n  },\n});\n\ncmd_parse.register({\n  cmd: 'client_reject_now',\n  help: '(Debug) - Fail an unhandled promise rejection on the client (Error, sync)',\n  access_show: ['sysadmin'],\n  func: function (str, resp_func) {\n    // eslint-disable-next-line no-new\n    new Promise((resolve, reject) => {\n      reject(new Error('client_reject_now'));\n    });\n  },\n});\n","export const BUCKET_OPAQUE = 1; // sorted by state, depth writes, no blend\nexport const BUCKET_DECAL = 2; // sorted by state, no depth writes, blended\nexport const BUCKET_ALPHA = 3; // sorted by dist, blended\n\nexport const FACE_NONE = 0;\nexport const FACE_XY = 1<<0;\nexport const FACE_XYZ = 1<<1;\nexport const FACE_FRUSTUM = 1<<2;\nexport const FACE_CAMERA = 1<<3;\nexport const FACE_DEFAULT = FACE_XY|FACE_FRUSTUM;\nexport const FACE_CUSTOM = 1<<4;\n\n\nconst DYN_VERT_SIZE = 4*3;\nconst MAX_VERT_ELEM_COUNT = 65532 * DYN_VERT_SIZE; // strictly less than 65536, as index 65535 is special in WebGL2\n\nconst assert = require('assert');\nconst mat4LookAt = require('gl-mat4/lookAt');\nconst { log2, nextHighestPowerOfTwo } = require('glov/common/util.js');\nconst {\n  mat4,\n  v3addScale,\n  v3copy,\n  v3cross,\n  v3iNormalize,\n  v3scale,\n  v3sub,\n  vec3,\n  zero_vec,\n} = require('glov/common/vmath.js');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\nconst { engineStartupFunc, setGlobalMatrices } = engine;\nconst geom = require('./geom.js');\nconst { ceil, max, min } = Math;\nconst settings = require('./settings.js');\nconst {\n  SEMANTIC,\n  shaderCreate,\n  shadersBind,\n  shadersPrelink,\n} = require('./shaders.js');\nconst sprites = require('./sprites.js');\nconst {\n  BLEND_ALPHA,\n  blendModeReset,\n  blendModeSet,\n} = sprites;\nconst { textureCmpArray, textureBindArray } = require('./textures.js');\n\nsettings.register({\n  gl_polygon_offset_a: {\n    default_value: 0.1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0,100],\n    access_show: ['sysadmin'],\n  },\n  gl_polygon_offset_b: {\n    default_value: 4,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0,100],\n    access_show: ['sysadmin'],\n  },\n});\n\nlet mat_vp;\nlet mat_view = mat4();\n\nlet geom_stats;\nlet last_uid = 0;\nlet sprite_fshader;\nexport let sprite3d_vshader;\n\nconst sprite3d_shader_params = {};\n\nlet buckets = [\n  null,\n  [],\n  [],\n  [],\n];\n\nconst TRI_QUAD = new Uint16Array([1, 3, 0, 1, 2, 3]);\nconst TRI_QUAD_DOUBLE = new Uint16Array([1, 3, 0, 1, 2, 3, 0, 3, 1, 3, 2, 1]);\n\nlet dyn_freelist = [];\n\nfunction DynGeomData() {\n  // geometry data\n  this.num_tris = 0;\n  this.tris = null;\n  this.tri_pool_idx = 0;\n  this.num_verts = 0;\n  this.verts = null;\n  this.vert_pool_idx = 0;\n  // data for sorting/binding/etc\n  this.texs = null;\n  this.shader = null;\n  this.vshader = null;\n  this.shader_params = null;\n  this.blend = 0; // BLEND_ALPHA; only if bucket > BUCKET_OPAQUE\n  this.sort_z = 0;\n  this.uid = 0;\n}\n\nexport function dynGeomAlloc() {\n  let ret;\n  if (dyn_freelist.length) {\n    ret = dyn_freelist.pop();\n  } else {\n    ret = new DynGeomData();\n  }\n  return ret;\n}\n\nDynGeomData.prototype.queue = function (bucket, sort_z) {\n  assert(isFinite(sort_z));\n  assert(this.texs);\n  assert(this.shader);\n  assert(this.vshader);\n  this.sort_z = sort_z;\n  this.uid = ++last_uid;\n  ++geom_stats.dyn;\n  buckets[bucket].push(this);\n};\n\n// Pool for vert and index counts up to 16k\nlet vert_pool = new Array(15).join(',').split(',').map(() => []);\nvert_pool[0] = null;\nlet tri_pool = new Array(15).join(',').split(',').map(() => []);\ntri_pool[0] = null;\nconst POOL_UPPER_LIMIT = 4096;\n// Max size per vert count - use at most 1MB per pool (1MB/DYN_VERT_SIZE/4~=1<<14), max of POOL_UPPER_LIMIT entries\nconst VERT_POOL_MAX_SIZE = vert_pool.map((a, idx) => min(POOL_UPPER_LIMIT, 1<<(14-idx)));\n// Max size per index count - use at most 1MB per pool (1MB/3/2~=1<<17), max of POOL_UPPER_LIMIT entries\nconst TRI_POOL_MAX_SIZE = vert_pool.map((a, idx) => min(POOL_UPPER_LIMIT, 1<<(17-idx)));\n\nDynGeomData.prototype.allocVerts = function (num_verts) {\n  assert(num_verts * DYN_VERT_SIZE < MAX_VERT_ELEM_COUNT);\n  this.num_verts = num_verts;\n  let vert_pool_idx = log2(this.num_verts);\n  assert(vert_pool_idx > 0);\n  this.vert_pool_idx = vert_pool_idx;\n  let pool = vert_pool[this.vert_pool_idx];\n  if (pool && pool.length) {\n    this.verts = pool.pop();\n  } else {\n    let alloc_num_verts = pool ? nextHighestPowerOfTwo(num_verts) : num_verts;\n    this.verts = new Float32Array(DYN_VERT_SIZE * alloc_num_verts);\n  }\n};\n\nDynGeomData.prototype.allocTris = function (num_tris) {\n  this.num_tris = num_tris;\n  let tri_pool_idx = log2(this.num_tris);\n  assert(tri_pool_idx > 0);\n  this.tri_pool_idx = tri_pool_idx;\n  let pool = tri_pool[this.tri_pool_idx];\n  if (pool && pool.length) {\n    this.tris = pool.pop();\n  } else {\n    let alloc_num_tris = pool ? nextHighestPowerOfTwo(num_tris) : num_tris;\n    this.tris = new Uint16Array(3 * alloc_num_tris);\n  }\n};\n\nDynGeomData.prototype.alloc = function (num_verts, num_tris) {\n  this.allocVerts(num_verts);\n  this.allocTris(num_tris);\n};\n\nDynGeomData.prototype.allocQuad = function (doublesided) {\n  this.allocVerts(4);\n  this.tris = doublesided ? TRI_QUAD_DOUBLE : TRI_QUAD;\n  this.num_tris = this.tris.length / 3;\n  this.tri_pool_idx = 0;\n};\n\nDynGeomData.prototype.dispose = function () {\n  let pool = vert_pool[this.vert_pool_idx];\n  if (pool && pool.length < VERT_POOL_MAX_SIZE[this.vert_pool_idx]) {\n    pool.push(this.verts);\n  }\n  this.verts = null;\n  pool = tri_pool[this.tri_pool_idx];\n  if (pool && pool.length < TRI_POOL_MAX_SIZE[this.tri_pool_idx]) {\n    pool.push(this.tris);\n  }\n  this.tris = null;\n  dyn_freelist.push(this);\n};\n\nlet down = vec3();\nlet up = vec3();\nlet cam_down = vec3();\nlet cam_pos = vec3();\nlet right = vec3();\nlet forward = vec3();\nlet look_at_called = false;\nexport function dynGeomLookAt(cam_pos_in, target_pos, up_in) {\n  look_at_called = true;\n  v3copy(cam_pos, cam_pos_in);\n  v3copy(up, up_in);\n  v3scale(down, up, -1);\n  v3sub(forward, target_pos, cam_pos);\n  v3iNormalize(forward);\n  v3cross(right, forward, up);\n  v3iNormalize(right);\n  v3cross(cam_down, forward, right);\n  v3iNormalize(cam_down);\n  mat4LookAt(mat_view, cam_pos, target_pos, up);\n  setGlobalMatrices(mat_view);\n}\n\nlet temp = vec3();\nconst xaxis = vec3(1,0,0);\nlet target_right = vec3();\nexport function dynGeomSpriteSetup(params) {\n  assert(look_at_called); // Must call dynGeomLookAt each frame!\n  let {\n    pos, // 3D world position\n    shader, shader_params,\n    bucket,\n    facing,\n    vshader,\n  } = params;\n  bucket = bucket || BUCKET_ALPHA;\n  facing = facing === undefined ? FACE_DEFAULT : facing;\n  shader = shader || sprite_fshader;\n  vshader = vshader || sprite3d_vshader;\n  shader_params = shader_params || null;\n\n  let my_right;\n  let my_down;\n  if (facing === FACE_CUSTOM) {\n    my_right = params.face_right;\n    my_down = params.face_down;\n  } else if (facing & FACE_XY) {\n    my_right = right;\n    my_down = down;\n  } else if (facing & FACE_XYZ) {\n    my_right = right;\n    my_down = cam_down;\n  } else {\n    my_right = xaxis;\n    my_down = down;\n  }\n  if (my_right === right && (facing & FACE_CAMERA)) {\n    v3sub(temp, pos, cam_pos);\n    v3cross(target_right, temp, up);\n    my_right = v3iNormalize(target_right);\n  }\n\n  let sort_z = mat_vp[2] * pos[0] +\n    mat_vp[6] * pos[1] +\n    mat_vp[10] * pos[2] +\n    mat_vp[14];\n  return {\n    bucket,\n    my_right,\n    my_down,\n    sort_z,\n    shader,\n    vshader,\n    shader_params,\n  };\n}\nlet pos0 = vec3();\nexport function dynGeomQueueSprite(sprite, params) {\n  let {\n    bucket,\n    my_right,\n    my_down,\n    sort_z,\n    shader,\n    vshader,\n    shader_params,\n  } = dynGeomSpriteSetup(params);\n  let {\n    pos, // 3D world position\n    offs, // 2D offset (-x/-y is upper left), in world scale\n    size, // 2D w,h, in world scale\n    uvs,\n    blend,\n    color,\n    doublesided,\n  } = params;\n  let elem = dynGeomAlloc();\n  color = color || sprite.color;\n  offs = offs || zero_vec;\n  elem.shader = shader;\n  elem.vshader = vshader;\n  elem.shader_params = shader_params;\n  elem.texs = sprite.texs;\n  elem.blend = blend || BLEND_ALPHA;\n  doublesided = doublesided || false;\n\n  let { origin } = sprite;\n  let [w, h] = size;\n  v3addScale(pos0, pos, my_right, -origin[0] * w + offs[0]);\n  v3addScale(pos0, pos0, my_down, -origin[1] * h + offs[1]);\n\n  // TODO: rot?\n  elem.allocQuad(doublesided);\n  let { verts } = elem;\n  // upper left\n  verts[0] = pos0[0];\n  verts[1] = pos0[1];\n  verts[2] = pos0[2];\n  verts[4] = color[0];\n  verts[5] = color[1];\n  verts[6] = color[2];\n  verts[7] = color[3];\n  verts[8] = uvs[0];\n  verts[9] = uvs[1];\n\n  // lower left\n  verts[12] = pos0[0] + my_down[0] * h;\n  verts[13] = pos0[1] + my_down[1] * h;\n  verts[14] = pos0[2] + my_down[2] * h;\n  verts[16] = color[0];\n  verts[17] = color[1];\n  verts[18] = color[2];\n  verts[19] = color[3];\n  verts[20] = uvs[0];\n  verts[21] = uvs[3];\n\n  verts[24] = pos0[0] + my_right[0] * w + my_down[0] * h;\n  verts[25] = pos0[1] + my_right[1] * w + my_down[1] * h;\n  verts[26] = pos0[2] + my_right[2] * w + my_down[2] * h;\n  verts[28] = color[0];\n  verts[29] = color[1];\n  verts[30] = color[2];\n  verts[31] = color[3];\n  verts[32] = uvs[2];\n  verts[33] = uvs[3];\n\n  verts[36] = pos0[0] + my_right[0] * w;\n  verts[37] = pos0[1] + my_right[1] * w;\n  verts[38] = pos0[2] + my_right[2] * w;\n  verts[40] = color[0];\n  verts[41] = color[1];\n  verts[42] = color[2];\n  verts[43] = color[3];\n  verts[44] = uvs[2];\n  verts[45] = uvs[1];\n\n  elem.queue(bucket, sort_z);\n}\n\n\nlet batch_state;\nlet sprite_geom;\nlet sprite_buffer_vert; // Float32Array with DYN_VERT_SIZE floats per vert\nlet sprite_buffer_vert_cur = 0; // in floats\nlet sprite_buffer_idx; // Uint16Array with 3 entries per tri\nlet sprite_buffer_idx_cur = 0; // in indices\nlet sprite_buffer_idx_batch_start = 0;\n\nlet do_blending;\nlet last_bound_shader;\nlet last_bound_vshader;\nlet batches = [];\nfunction commit() {\n  if (sprite_buffer_idx_cur === sprite_buffer_idx_batch_start) {\n    return;\n  }\n  batches.push({\n    state: batch_state,\n    start: sprite_buffer_idx_batch_start,\n    end: sprite_buffer_idx_cur,\n  });\n  sprite_buffer_idx_batch_start = sprite_buffer_idx_cur;\n}\n\nfunction commitAndFlush() {\n  commit();\n  if (!batches.length) {\n    return;\n  }\n  assert(sprite_buffer_idx_cur);\n  sprite_geom.updateIndex(sprite_buffer_idx, sprite_buffer_idx_cur);\n  let num_verts = sprite_buffer_vert_cur/DYN_VERT_SIZE;\n  sprite_geom.update(sprite_buffer_vert, num_verts);\n  sprite_geom.bind();\n  geom_stats.tris += sprite_buffer_idx_cur / 3;\n  geom_stats.verts += num_verts;\n\n  for (let ii = 0; ii < batches.length; ++ii) {\n    let batch = batches[ii];\n    let { state, start, end } = batch;\n    if (last_bound_shader !== state.shader || last_bound_vshader !== state.vshader || state.shader_params) {\n      shadersBind(state.vshader, state.shader, state.shader_params || sprite3d_shader_params);\n      last_bound_shader = state.shader;\n      last_bound_vshader = state.vshader;\n    }\n    if (do_blending) {\n      blendModeSet(state.blend);\n    }\n    textureBindArray(state.texs);\n    ++geom_stats.draw_calls_dyn;\n    gl.drawElements(sprite_geom.mode, end - start, gl.UNSIGNED_SHORT, start * 2);\n  }\n\n  batches.length = 0;\n  sprite_buffer_vert_cur = 0;\n  sprite_buffer_idx_cur = 0;\n  sprite_buffer_idx_batch_start = 0;\n}\n\nfunction drawSetup(do_blend) {\n  do_blending = do_blend;\n  last_bound_shader = -1;\n  last_bound_vshader = -1;\n\n  if (!sprite_geom) {\n    sprite_geom = geom.create([\n      // needs to be multiple of 4 elements, for best performance\n      [SEMANTIC.POSITION, gl.FLOAT, 4, false], // 1 unused\n      [SEMANTIC.COLOR, gl.FLOAT, 4, false],\n      [SEMANTIC.TEXCOORD, gl.FLOAT, 4, false], // 2 unused\n    ], [], [], geom.TRIANGLES);\n    sprite_buffer_vert = new Float32Array(1024);\n    sprite_buffer_idx = new Uint16Array(1024);\n  }\n}\n\nfunction drawElem(elem) {\n  if (!batch_state ||\n    textureCmpArray(elem.texs, batch_state.texs) ||\n    elem.shader !== batch_state.shader ||\n    elem.vshader !== batch_state.vshader ||\n    elem.shader_params !== batch_state.shader_params ||\n    do_blending && elem.blend !== batch_state.blend\n  ) {\n    commit();\n    batch_state = elem;\n  }\n  let num_floats = elem.num_verts * DYN_VERT_SIZE;\n  if (sprite_buffer_vert_cur + num_floats > sprite_buffer_vert.length) {\n    commitAndFlush();\n    // batch_state left alone\n    if (sprite_buffer_vert.length !== MAX_VERT_ELEM_COUNT) {\n      let cur_tris = sprite_buffer_vert.length / DYN_VERT_SIZE / 3;\n      let new_length = min(max(num_floats, ceil(cur_tris * 1.25) * 3 * DYN_VERT_SIZE), MAX_VERT_ELEM_COUNT);\n      sprite_buffer_vert = new Float32Array(new_length);\n    }\n  }\n  let num_idxs = elem.num_tris * 3;\n  if (sprite_buffer_idx_cur + num_idxs > sprite_buffer_idx.length) {\n    commitAndFlush();\n    // batch_state left alone\n    let cur_tris = sprite_buffer_idx.length / 3;\n    let new_length = max(elem.tris.length, ceil(cur_tris * 1.25) * 3);\n    sprite_buffer_idx = new Uint16Array(new_length);\n  }\n\n  let vidx0 = sprite_buffer_vert_cur / DYN_VERT_SIZE;\n  if (elem.verts.length === num_floats) {\n    sprite_buffer_vert.set(elem.verts, sprite_buffer_vert_cur);\n    sprite_buffer_vert_cur += num_floats;\n  } else {\n    // Could also do elem.verts.subarray() if that is more efficient?\n    for (let ii = 0; ii < num_floats; ++ii) {\n      sprite_buffer_vert[sprite_buffer_vert_cur++] = elem.verts[ii];\n    }\n  }\n  for (let ii = 0; ii < num_idxs; ++ii) {\n    sprite_buffer_idx[sprite_buffer_idx_cur++] = vidx0 + elem.tris[ii];\n  }\n\n  // TODO: pool on freelist\n}\n\nfunction finishDraw() {\n  commitAndFlush();\n  blendModeReset();\n}\n\n// draws [start_idx, end_idx)\n// pools all drawn elements\nfunction queueDraw(do_blend, queue, start_idx, end_idx) {\n  drawSetup(do_blend);\n  for (let ii = start_idx; ii < end_idx; ++ii) {\n    let elem = queue[ii];\n    drawElem(elem);\n    elem.dispose();\n  }\n  finishDraw();\n}\n\n\n// TODO (later, in real-world test): compare changing sorting precedence\nfunction cmpOpaue(a, b) {\n  let d = a.vshader.id - b.vshader.id;\n  if (d) {\n    return d;\n  }\n  d = a.shader.id - b.shader.id;\n  if (d) {\n    return d;\n  }\n  d = textureCmpArray(a.texs, b.texs);\n  if (d) {\n    return d;\n  }\n  return a.uid - b.uid;\n}\n\nfunction cmpAlpha(a, b) {\n  let d = b.sort_z - a.sort_z;\n  if (d) {\n    return d;\n  }\n  return a.uid - b.uid;\n}\n\n// draw Opaque and Decal buckets\nexport function dynGeomDrawOpaque() {\n  profilerStartFunc();\n  let queue = buckets[BUCKET_OPAQUE];\n  if (queue.length) {\n    queue.sort(cmpOpaue);\n    queueDraw(false, queue, 0, queue.length);\n    queue.length = 0;\n  }\n  queue = buckets[BUCKET_DECAL];\n  if (queue.length) {\n    queue.sort(cmpOpaue);\n    gl.enable(gl.BLEND);\n    gl.depthMask(false); // no depth writes\n    gl.enable(gl.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(-settings.gl_polygon_offset_a, -settings.gl_polygon_offset_b);\n    queueDraw(true, queue, 0, queue.length);\n    queue.length = 0;\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.depthMask(true);\n    gl.disable(gl.BLEND);\n  }\n  profilerStopFunc();\n}\n\nexport function dynGeomDrawAlpha() {\n  profilerStartFunc();\n  assert(!buckets[BUCKET_OPAQUE].length); // nothing called dynGeomDrawOpaque?\n  assert(!buckets[BUCKET_DECAL].length);\n\n  // TODO: merge with draw_list\n  let queue = buckets[BUCKET_ALPHA];\n  if (queue.length) {\n    queue.sort(cmpAlpha);\n    queueDraw(true, queue, 0, queue.length);\n    queue.length = 0;\n  }\n  profilerStopFunc();\n}\n\nfunction dynGeomStartup() {\n  geom_stats = geom.stats;\n  sprite3d_vshader = shaderCreate('shaders/sprite3d.vp');\n  sprite_fshader = sprites.sprite_fshader;\n  shadersPrelink(sprite3d_vshader, sprite_fshader);\n  mat_vp = engine.mat_vp;\n}\nengineStartupFunc(dynGeomStartup);\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexports.create = editBoxCreate; // eslint-disable-line @typescript-eslint/no-use-before-define\n\nimport assert from 'assert';\nimport {\n  clamp,\n  trimEnd,\n} from 'glov/common/util';\nimport * as verify from 'glov/common/verify';\nimport { v2same } from 'glov/common/vmath';\nimport * as camera2d from './camera2d';\nimport * as engine from './engine';\nimport {\n  KEYS,\n  eatAllKeyboardInput,\n  inputClick,\n  inputTouchMode,\n  keyDownEdge,\n  keyUpEdge,\n  mouseConsumeClicks,\n  pointerLockEnter,\n  pointerLockExit,\n  pointerLocked,\n} from './input';\nimport { getStringIfLocalizable } from './localization';\nimport {\n  spotFocusCheck,\n  spotFocusSteal,\n  spotSuppressKBNav,\n  spotUnfocus,\n  spotlog,\n} from './spot';\nimport {\n  drawLine,\n  drawRect,\n  getUIElemData,\n  uiButtonWidth,\n  uiGetDOMElem,\n  uiGetDOMTabIndex,\n  uiGetFont,\n  uiTextHeight,\n} from './ui';\n\nconst { round } = Math;\n\nlet form_hook_registered = false;\nlet active_edit_box;\nlet active_edit_box_frame;\n\nlet this_frame_edit_boxes = [];\nlet last_frame_edit_boxes = [];\n\nexport function editBoxTick() {\n  let expected_last_frame = engine.frame_index - 1;\n  for (let ii = 0; ii < last_frame_edit_boxes.length; ++ii) {\n    let edit_box = last_frame_edit_boxes[ii];\n    if (edit_box.last_frame < expected_last_frame) {\n      edit_box.unrun();\n    }\n  }\n  last_frame_edit_boxes = this_frame_edit_boxes;\n  this_frame_edit_boxes = [];\n}\n\nfunction setActive(edit_box) {\n  active_edit_box = edit_box;\n  active_edit_box_frame = engine.frame_index;\n}\n\nexport function editBoxAnyActive() {\n  return active_edit_box && active_edit_box_frame >= engine.frame_index - 1;\n}\n\nlet osk_elem;\nlet osk_timeout;\nfunction showOnscreenKeyboardCleanup() {\n  if (osk_timeout) {\n    clearTimeout(osk_timeout);\n    osk_timeout = null;\n    document.body.removeChild(osk_elem);\n    osk_elem = null;\n  }\n}\nfunction showOnscreenKeyboardInEvent() {\n  // Derived from: https://stackoverflow.com/questions/71826145/show-keyboard-on-input-focus-without-user-action\n  if (!osk_elem) {\n    osk_elem = document.createElement('input');\n    osk_elem.setAttribute('type', 'search');\n    osk_elem.setAttribute('style', 'position: fixed; top: -100px; left: -100px;');\n    document.body.appendChild(osk_elem);\n    osk_timeout = setTimeout(showOnscreenKeyboardCleanup, 1000);\n  }\n  osk_elem.focus();\n}\n\nexport function showOnscreenKeyboard() {\n  return inputTouchMode() || true ? showOnscreenKeyboardInEvent : undefined;\n}\n\nfunction formHook(ev) {\n  ev.preventDefault();\n\n  if (!editBoxAnyActive()) {\n    return;\n  }\n  active_edit_box.submitted = true;\n  active_edit_box.updateText();\n  if (active_edit_box.pointer_lock && !active_edit_box.text) {\n    pointerLockEnter('edit_box_submit');\n  }\n}\n\nfunction charIdxToXY(text, offset) {\n  offset = clamp(offset, 0, text.length); // IE returns selectionStart/end out of bounds\n  let lines = text.split('\\n');\n  let linenum = 0;\n  while (linenum < lines.length) {\n    let line = lines[linenum];\n    if (offset <= line.length) {\n      return [offset, linenum];\n    }\n    offset -= line.length;\n    assert(offset > 0);\n    offset--; // newline\n    linenum++;\n  }\n  verify(false);\n  return [0, linenum];\n}\n\nlet last_key_id = 0;\n\nclass GlovUIEditBox {\n  constructor(params) {\n    this.key = `eb${++last_key_id}`;\n    this.x = 0;\n    this.y = 0;\n    this.z = Z.UI; // actually in DOM, so above everything!\n    this.w = uiButtonWidth();\n    this.type = 'text';\n    // this.h = uiButtonHeight();\n    this.font_height = uiTextHeight();\n    this.last_set_text = '';\n    this.text = '';\n    this.placeholder = '';\n    this.max_len = 0;\n    this.max_visual_size = null;\n    this.zindex = null;\n    this.uppercase = false;\n    this.initial_focus = false;\n    this.onetime_focus = false;\n    this.auto_unfocus = true;\n    this.focus_steal = false;\n    this.initial_select = false;\n    this.spellcheck = true;\n    this.esc_clears = true;\n    this.esc_unfocuses = true;\n    this.multiline = 0;\n    this.enforce_multiline = true;\n    this.suppress_up_down = false;\n    this.autocomplete = false;\n    this.center = false;\n    this.sticky_focus = true;\n    this.canvas_render = null;\n    this.applyParams(params);\n    assert.equal(typeof this.text, 'string');\n\n    this.last_autocomplete = null;\n    this.last_placeholder = null;\n    this.is_focused = false;\n    this.elem = null;\n    this.input = null;\n    this.submitted = false;\n    this.pointer_lock = false;\n    this.last_frame = 0;\n    this.out = {}; // Used by spotFocusCheck\n    this.last_valid_state = {\n      sel_start: 0,\n      sel_end: 0,\n    };\n    this.resetCSSCaching();\n    this.had_overflow = false;\n  }\n  resetCSSCaching() {\n    this.last_tab_index = -1;\n    this.last_font_size = '';\n    this.last_clip_path = '';\n  }\n  applyParams(params) {\n    if (!params) {\n      return;\n    }\n    for (let f in params) {\n      if (f !== 'text') {\n        this[f] = params[f];\n      }\n    }\n    if (params.text && params.text !== this.last_set_text) {\n      this.setText(params.text);\n    }\n    this.h = (this.multiline || 1) * this.font_height;\n  }\n  getSelection() {\n    return [charIdxToXY(this.text, this.input.selectionStart), charIdxToXY(this.text, this.input.selectionEnd)];\n  }\n  setSelectionRange(sel_start, sel_end) {\n    // if (this.type === 'number') {\n    //   this.input.type = 'text';\n    // }\n    this.input.setSelectionRange(sel_start, sel_end);\n    // if (this.type === 'number') {\n    //   this.input.type = 'number';\n    // }\n  }\n\n  updateText() {\n    const { input } = this;\n    if (!input) {\n      return;\n    }\n    let new_text = input.value;\n    let saved_new_text = new_text;\n    let sel_start = input.selectionStart;\n    let sel_end = input.selectionEnd;\n    if (new_text === this.text) {\n      this.last_valid_state.sel_start = sel_start;\n      this.last_valid_state.sel_end = sel_end;\n      return;\n    }\n    const { multiline, enforce_multiline, max_len, max_visual_size } = this;\n    // text has changed, validate\n    let valid = true;\n\n    let old_text = this.text;\n    function debug(msg) {\n      if (engine.defines.EDITBOX) {\n        console.log(`Editbox (multiline=${multiline}, max_len=${max_len}: ${engine.frame_index}: ${msg}`);\n        console.log(`  Old sel range = [${sel_start},${sel_end}]`);\n        console.log(`  New sel range = [${input.selectionStart},${input.selectionEnd}]`);\n        console.log(`  Old text         = ${JSON.stringify(old_text)}`);\n        console.log(`  Desired new text = ${JSON.stringify(saved_new_text)}`);\n        console.log(`  New text         = ${JSON.stringify(new_text)}`);\n      }\n    }\n\n    if (enforce_multiline && multiline && new_text.split('\\n').length > multiline) {\n      // If trimming would help, trim the text, and update, preserving current selection\n      // Otherwise, will revert to last good state\n      // does trimming help?\n      if (trimEnd(new_text).split('\\n').length <= multiline) {\n        while (new_text.split('\\n').length > multiline) {\n          if (new_text[new_text.length-1].match(/\\s/)) {\n            new_text = new_text.slice(0, -1);\n          }\n        }\n        if (this.text === new_text) {\n          // we presumably just trimmed off what they inserted, treat as error\n          // Except, if the new selection point is valid, they probably inserted\n          //   a blank line at the end (and a *different* one got trimmed), so\n          //   let that through\n          if (sel_end <= new_text.length) {\n            input.value = new_text;\n            this.setSelectionRange(sel_start, sel_end);\n            debug('trimming helped to keep selection');\n          } else {\n            valid = false;\n            debug('trimmed equal orig');\n          }\n        } else {\n          input.value = new_text;\n          this.setSelectionRange(sel_start, sel_end);\n          debug('trimming helped');\n        }\n      } else {\n        valid = false;\n        debug('trimmed too long');\n      }\n    }\n\n    if (max_len > 0 || max_visual_size) {\n      // If just max_visual_size, use infinite max_len\n      let eff_max_len = max_len || Infinity;\n      let lines = multiline ? new_text.split('\\n') : [new_text];\n      for (let ii = 0; ii < lines.length; ++ii) {\n        let line = lines[ii];\n        let over = line.length > eff_max_len;\n        let font = max_visual_size ? uiGetFont() : null;\n        if (max_visual_size && !over) {\n          over = font.getStringWidth(null, max_visual_size.font_height, line) > max_visual_size.width;\n        }\n        let trimmed = trimEnd(line);\n        let trim_over = over && trimmed.length > eff_max_len;\n        if (max_visual_size && over && !trim_over) {\n          trim_over = font.getStringWidth(null,\n            max_visual_size.font_height, trimmed) > max_visual_size.width;\n        }\n        if (max_visual_size && over && trim_over &&\n          // was it over by 2 or more characters?  Probably just pasted, do a truncate instead of reject\n          font.getStringWidth(null,\n            max_visual_size.font_height, line.slice(0, -2)) > max_visual_size.width\n        ) {\n          while (trimmed.length && font.getStringWidth(null,\n            max_visual_size.font_height, trimmed) > max_visual_size.width\n          ) {\n            trimmed = trimmed.slice(0, -1);\n            trim_over = false;\n          }\n        }\n\n        if (over) {\n          if (!trim_over) {\n            let old_line_end_pos = lines.slice(0, ii+1).join('\\n').length;\n            lines[ii] = trimmed;\n            let new_line_end_pos = lines.slice(0, ii+1).join('\\n').length;\n            new_text = lines.join('\\n');\n            let shift = old_line_end_pos - new_line_end_pos;\n            if (sel_start > old_line_end_pos) {\n              sel_start -= shift;\n            } else if (sel_start > new_line_end_pos) {\n              sel_start = new_line_end_pos;\n            }\n            if (sel_end >= old_line_end_pos) {\n              sel_end -= shift;\n            } else if (sel_end > new_line_end_pos) {\n              sel_end = new_line_end_pos;\n            }\n            input.value = new_text;\n            this.setSelectionRange(sel_start, sel_end);\n            debug('over but not trim_over; updating text and sel');\n          } else {\n            valid = false;\n            debug('invalid: over');\n          }\n        }\n      }\n    }\n    if (!valid) {\n      let old_was_invalid = false;\n      if (max_len > 0 || max_visual_size) {\n        let eff_max_len = max_len || Infinity;\n        let lines = multiline ? this.text.split('\\n') : [this.text];\n        for (let ii = 0; ii < lines.length; ++ii) {\n          let line = lines[ii];\n          if (line.length > eff_max_len) {\n            old_was_invalid = true;\n          }\n          if (max_visual_size && !old_was_invalid) {\n            old_was_invalid = uiGetFont().getStringWidth(null, max_visual_size.font_height, line) >\n              max_visual_size.width;\n          }\n        }\n      }\n      if (old_was_invalid) {\n        // we're invalid, but it was also invalid to start!  let edit through if shorter\n        if (new_text.length < this.text.length) {\n          valid = true;\n        }\n      }\n    }\n    if (!valid) {\n      // revert!\n      this.had_overflow = true;\n      input.value = this.text;\n      this.setSelectionRange(this.last_valid_state.sel_start, this.last_valid_state.sel_end);\n      debug(`invalid: reset sel range to [${this.last_valid_state.sel_start}, ${this.last_valid_state.sel_end}]`);\n    } else {\n      this.text = new_text;\n      this.last_valid_state.sel_start = sel_start;\n      this.last_valid_state.sel_end = sel_end;\n    }\n  }\n  getText() {\n    return this.text;\n  }\n  hadOverflow() {\n    let ret = this.had_overflow;\n    this.had_overflow = false;\n    return ret;\n  }\n  setText(new_text) {\n    new_text = String(new_text);\n\n    // sanitize if appropriate\n    const { max_len, max_visual_size, multiline } = this;\n    let font = max_visual_size ? uiGetFont() : null;\n    if (max_len > 0 && max_visual_size) {\n      let lines = multiline ? new_text.split('\\n') : [new_text];\n      for (let ii = 0; ii < lines.length; ++ii) {\n        let line = lines[ii];\n        if (max_len > 0) {\n          if (line.length > max_len) {\n            line = trimEnd(line);\n          }\n          if (line.length > max_len) {\n            line = line.slice(0, max_len);\n          }\n        }\n        if (max_visual_size) {\n          while (line.length && font.getStringWidth(null, max_visual_size.font_height, line) > max_visual_size.width) {\n            line = line.slice(0, line.length - 1);\n          }\n        }\n        lines[ii] = line;\n      }\n      new_text = lines.join('\\n');\n    }\n\n    let input = this.input;\n    if (input && input.value !== new_text) {\n      if (engine.defines.EDITBOX) {\n        console.log(`Editbox (multiline=${multiline}, max_len=${max_len}: ${engine.frame_index}: setText()`);\n        console.log(`  Sel range = [${input.selectionStart},${input.selectionEnd}]`);\n        console.log(`  Old text         = ${JSON.stringify(input.value)}`);\n        console.log(`  New text         = ${JSON.stringify(new_text)}`);\n      }\n      input.value = new_text;\n    }\n    this.text = new_text;\n    this.last_set_text = new_text;\n  }\n  focus() {\n    if (this.input) {\n      this.input.focus();\n      showOnscreenKeyboardCleanup();\n      if (this.select_on_focus) {\n        this.input.select();\n      }\n      setActive(this);\n    } else {\n      this.onetime_focus = true;\n    }\n    spotFocusSteal(this);\n    this.is_focused = true;\n    if (this.pointer_lock && pointerLocked()) {\n      pointerLockExit();\n    }\n  }\n  unfocus() {\n    spotUnfocus();\n  }\n  isFocused() { // call after .run()\n    return this.is_focused;\n  }\n\n  updateFocus(is_reset) {\n    let was_glov_focused = this.is_focused;\n    let spot_ret = spotFocusCheck(this);\n    let { focused } = spot_ret;\n    let dom_focused = this.input && document.activeElement === this.input;\n    if (was_glov_focused !== focused) {\n      // something external (from clicks/keys in GLOV) changed, apply it if it doesn't match\n      if (focused && !dom_focused) {\n        spotlog('GLOV focused, DOM not, focusing', this);\n        if (this.input) {\n          this.input.focus();\n          showOnscreenKeyboardCleanup();\n          if (this.select_on_focus) {\n            this.input.select();\n          }\n        } else {\n          this.onetime_focus = true;\n        }\n      }\n      if (!focused && dom_focused) {\n        spotlog('DOM focused, GLOV not, and changed, blurring', this);\n        this.input.blur();\n      }\n    } else if (dom_focused && !focused) {\n      spotlog('DOM focused, GLOV not, stealing', this);\n      spotFocusSteal(this);\n      if (this.input && this.select_on_focus) {\n        this.input.select();\n      }\n      focused = true;\n    } else if (!dom_focused && focused) {\n      if (is_reset) {\n        // Just appeared this frame, steal DOM focus\n        this.onetime_focus = true;\n        spotlog('GLOV focused, DOM not, new edit box, focusing', this);\n      } else if (document.activeElement === engine.canvas || document.activeElement === this.postspan) {\n        // focus explicitly on canvas or left our input element, lose focus\n        spotlog('GLOV focused, DOM canvas focused, unfocusing', this);\n        spotUnfocus();\n      } else {\n        // Leave it alone, it may be a browser pop-up such as for passwords\n      }\n    }\n\n    if (focused) {\n      setActive(this);\n      let key_opt = (this.pointer_lock && !this.text) ? { in_event_cb: pointerLockEnter } : null;\n      if ((this.esc_clears || this.esc_unfocuses) && keyUpEdge(KEYS.ESC, key_opt)) {\n        if (this.text && this.esc_clears) {\n          this.setText('');\n        } else {\n          spotUnfocus();\n          if (this.input) {\n            this.input.blur();\n          }\n          focused = false;\n          this.canceled = true;\n        }\n      }\n    }\n    this.is_focused = focused;\n    return spot_ret;\n  }\n\n  run(params) {\n    this.applyParams(params);\n    const {\n      canvas_render,\n      font_height,\n      multiline,\n      enforce_multiline,\n      max_len,\n    } = this;\n    if (this.focus_steal) {\n      this.focus_steal = false;\n      this.focus();\n      showOnscreenKeyboardCleanup();\n    }\n\n    let is_reset = false;\n    if (!verify(this.last_frame !== engine.frame_index)) {\n      // two calls on one frame (asserts in dev, silently do nothing otherwise?)\n      return null;\n    }\n    if (this.last_frame !== engine.frame_index - 1) {\n      // it's been more than a frame, we must have not been running, discard async events\n      this.submitted = false;\n      is_reset = true;\n    }\n    this.last_frame = engine.frame_index;\n\n    this.canceled = false;\n    let { allow_focus, focused } = this.updateFocus(is_reset);\n\n    if (focused) {\n      spotSuppressKBNav(true, Boolean(multiline || this.suppress_up_down));\n    }\n\n    const { text, x, y, z, w, h } = this;\n\n    let clipped_rect = {\n      x, y, w, h\n    };\n    if (allow_focus && !camera2d.clipTestRect(clipped_rect)) {\n      allow_focus = false;\n    }\n\n    this_frame_edit_boxes.push(this);\n    let elem = allow_focus && uiGetDOMElem(this.elem, true);\n    if (elem !== this.elem) {\n      this.resetCSSCaching();\n      if (elem) {\n        // new DOM element, initialize\n        if (!form_hook_registered) {\n          form_hook_registered = true;\n          let form = document.getElementById('dynform');\n          if (form) {\n            form.addEventListener('submit', formHook, true);\n          }\n        }\n        elem.textContent = '';\n        let input = document.createElement(multiline ? 'textarea' : 'input');\n        let classes = [];\n        if (canvas_render) {\n          classes.push('canvas_render');\n        }\n        if (multiline && max_len) {\n          classes.push('fixed');\n        }\n        if (this.center) {\n          classes.push('center');\n        }\n        input.className = classes.join(' ');\n        // Use 'tel' instead of 'number', as it supports changing the selection\n        let eff_type = this.type === 'number' ? 'tel' :\n          // Using 'search' gets around Android Chrome bug showing the password box all the time on regular inputs\n          this.type === 'text' && !this.autocomplete ? 'search' :\n          this.type;\n        input.setAttribute('type', eff_type);\n        if (eff_type === 'search' && this.type !== 'search') {\n          input.style['-webkit-appearance'] = 'none';\n        }\n        let placeholder = getStringIfLocalizable(this.placeholder);\n        input.setAttribute('placeholder', placeholder);\n        this.last_placeholder = placeholder;\n        if (max_len) {\n          if (multiline) {\n            input.setAttribute('cols', max_len);\n          } else {\n            input.setAttribute('maxLength', max_len);\n          }\n        }\n        if (multiline) {\n          input.setAttribute('rows', multiline);\n        }\n        elem.appendChild(input);\n        let span = document.createElement('span');\n        this.postspan = span;\n        elem.appendChild(span);\n        input.value = this.text;\n        if (this.uppercase) {\n          input.style['text-transform'] = 'uppercase';\n        }\n        this.input = input;\n        if (this.initial_focus || this.onetime_focus) {\n          input.focus();\n          showOnscreenKeyboardCleanup();\n          setActive(this);\n          this.onetime_focus = false;\n        }\n        if (this.initial_select) {\n          input.select();\n        }\n\n        if (multiline && enforce_multiline || max_len) {\n          // Do update _immediately_ so the DOM doesn't draw the invalid text, if possible\n          const onChange = (e) => {\n            this.updateText();\n            return true;\n          };\n          input.addEventListener('keyup', onChange);\n          input.addEventListener('keydown', onChange);\n          input.addEventListener('change', onChange);\n        }\n\n      } else {\n        this.input = null;\n      }\n      this.last_autocomplete = null;\n      this.last_placeholder = null;\n      this.submitted = false;\n      this.elem = elem;\n    } else {\n      if (this.input) {\n        this.updateText();\n        this.last_set_text = this.text;\n      }\n    }\n    if (elem) {\n      let pos = camera2d.htmlPos(x, y);\n      if (!this.spellcheck) {\n        elem.spellcheck = false;\n      }\n      elem.style.left = `${pos[0]}%`;\n      elem.style.top = `${pos[1]}%`;\n      let size = camera2d.htmlSize(w, h);\n      elem.style.width = `${size[0]}%`;\n      elem.style.height = `${size[1]}%`;\n\n      let clip_path = '';\n      if (clipped_rect.x !== x ||\n        clipped_rect.y !== y ||\n        clipped_rect.w !== w ||\n        clipped_rect.h !== h\n      ) {\n        // partially clipped\n        let x0 = `${(clipped_rect.x - x)/w*100}%`;\n        let x1 = `${(clipped_rect.x + clipped_rect.w - x)/w*100}%`;\n        let y0 = `${(clipped_rect.y - y)/h*100}%`;\n        let y1 = `${(clipped_rect.y + clipped_rect.w - y)/h*100}%`;\n        clip_path = `polygon(${x0} ${y0}, ${x1} ${y0}, ${x1} ${y1}, ${x0} ${y1})`;\n      } else {\n        clip_path = '';\n      }\n      if (clip_path !== this.last_clip_path) {\n        elem.style.clipPath = this.last_clip_path = clip_path;\n      }\n\n      let new_fontsize = `${camera2d.virtualToFontSize(font_height).toFixed(8)}px`;\n      if (new_fontsize !== this.last_font_size) {\n        this.last_font_size = new_fontsize;\n        // elem.style.fontSize = new_fontsize;\n        // Try slightly better smooth scaling from https://medium.com/autodesk-tlv/smooth-text-scaling-in-javascript-css-a817ae8cc4c9\n        const preciseFontSize = camera2d.virtualToFontSize(font_height);  // Desired font size\n        const roundedSize = Math.floor(preciseFontSize);\n        const s = preciseFontSize / roundedSize; // Remaining scale\n        elem.style.fontSize = `${roundedSize}px`;\n        //const translate = `translate(${pos.x}px, ${pos.y}px)`;\n        const scale = `translate(-50%, -50%)\n                       scale(${s})\n                       translate(50%, 50%)`;\n        this.input.style.width = `${(1/s*100).toFixed(8)}%`;\n        elem.style.transform = scale;\n      }\n\n\n      if (this.zindex) {\n        elem.style['z-index'] = this.zindex;\n      }\n      if (this.last_autocomplete !== this.autocomplete) {\n        this.last_autocomplete = this.autocomplete;\n        this.input.setAttribute('autocomplete', this.autocomplete || `auto_off_${Math.random()}`);\n      }\n      let placeholder = getStringIfLocalizable(this.placeholder);\n      if (this.last_placeholder !== placeholder) {\n        this.input.setAttribute('placeholder', placeholder);\n        this.last_placeholder = placeholder;\n      }\n\n\n      let tab_index1 = uiGetDOMTabIndex();\n      let tab_index2 = uiGetDOMTabIndex();\n      if (tab_index1 !== this.last_tab_index) {\n        this.last_tab_index = tab_index1;\n        this.input.setAttribute('tabindex', tab_index1);\n        this.postspan.setAttribute('tabindex', tab_index2);\n      }\n    } else {\n      this.resetCSSCaching();\n    }\n\n    if (focused) {\n      if (this.auto_unfocus) {\n        if (inputClick({ peek: true })) {\n          spotUnfocus();\n        }\n      }\n      // For IFRAMEs with `sandbox` not including `allow-form`, catch Enter ourselves\n      if (keyDownEdge(KEYS.ENTER)) {\n        this.submitted = true;\n      }\n      // keyboard input is handled by the INPUT element, but allow mouse events to trickle\n      eatAllKeyboardInput();\n    }\n    // Eat mouse events going to the edit box\n    mouseConsumeClicks({ x, y, w, h });\n\n    if (canvas_render) {\n      const { center } = this;\n      const { char_width, char_height, color_selection, color_caret, style_text } = canvas_render;\n      let font = uiGetFont();\n      let lines = text.split('\\n');\n      // draw text\n      // TODO: maybe apply clipper here?  caller necessarily needs to set max_len and multiline appropriately, though.\n      let line_width = [];\n      for (let ii = 0; ii < lines.length; ++ii) {\n        let line = lines[ii];\n        let line_w = font.draw({\n          style: style_text,\n          height: font_height,\n          x, y: y + ii * char_height, z: z + 0.8,\n          w,\n          text: line,\n          align: center ? font.ALIGN.HCENTER : undefined,\n        });\n        line_width.push(line_w);\n      }\n      if (focused) {\n        // draw selection\n        let selection = this.getSelection();\n        if (!v2same(selection[0], selection[1])) {\n          let first_row = selection[0][1];\n          let last_row = selection[1][1];\n          for (let jj = first_row; jj <= last_row; ++jj) {\n            let line = lines[jj];\n            let selx0 = jj === first_row ? selection[0][0] : 0;\n            let selx1 = jj === last_row ? selection[1][0] : line && line.length || 1;\n            let xoffs = center ? round((w - line_width[jj])/2) : 0;\n            drawRect(x + char_width*selx0-1 + xoffs, y + jj * char_height,\n              x + char_width*selx1 + xoffs, y + (jj + 1) * char_height, z + 0.75, color_selection);\n          }\n        } else {\n          // draw caret\n          let jj = selection[1][1];\n          let caret_x = x + char_width*selection[1][0] - 1;\n          if (center) {\n            caret_x += round((w - line_width[jj])/2);\n          }\n          drawLine(caret_x, y + char_height*jj,\n            caret_x, y + char_height*(jj + 1) - 1, z + 0.5, 1, 1, color_caret);\n        }\n      }\n    }\n\n    if (this.submitted) {\n      this.submitted = false;\n      return this.SUBMIT;\n    }\n    if (this.canceled) {\n      this.canceled = false;\n      return this.CANCEL;\n    }\n    return null;\n  }\n  unrun() {\n    // remove from DOM or hide\n    this.elem = null;\n    this.input = null;\n  }\n}\nGlovUIEditBox.prototype.SUBMIT = 'submit';\nGlovUIEditBox.prototype.CANCEL = 'cancel';\n\nexport function editBoxCreate(params) {\n  if (params.glov_initial_text !== undefined) {\n    params.text = params.glov_initial_text;\n  }\n  return new GlovUIEditBox(params);\n}\n\nexport function editBox(params, current) {\n  params.glov_initial_text = current;\n  let edit_box = getUIElemData('edit_box', params, editBoxCreate);\n  let result = edit_box.run(params);\n\n  return {\n    result,\n    text: edit_box.getText(),\n    edit_box,\n  };\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Some code from Turbulenz: Copyright (c) 2012-2013 Turbulenz Limited\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst engine = require('./engine.js');\nconst { renderWidth, renderHeight } = engine;\nconst { framebufferEnd, framebufferStart, framebufferTopOfFrame } = require('./framebuffer.js');\nconst geom = require('./geom.js');\nconst {\n  SEMANTIC,\n  shaderCreate,\n  shadersBind,\n  shadersPrelink,\n} = require('./shaders.js');\nconst { spriteQueueFn } = require('./sprites.js');\nconst { textureBindArray, textureWhite } = require('./textures.js');\nconst { vec3, vec4, v4set } = require('glov/common/vmath.js');\n\nconst shader_data = {\n  vp_copy: {\n    vp: 'shaders/effects_copy.vp',\n  },\n  copy: {\n    fp: 'shaders/effects_copy.fp',\n  },\n  pixely_expand: {\n    fp: 'shaders/pixely_expand.fp',\n  },\n  gaussian_blur: {\n    fp: 'shaders/effects_gaussian_blur.fp',\n  },\n  // bloom_merge: {\n  //   fp: 'shaders/effects_bloom_merge.fp',\n  // },\n  // bloom_threshold: {\n  //   fp: 'shaders/effects_bloom_threshold.fp',\n  // },\n  color_matrix: {\n    fp: 'shaders/effects_color_matrix.fp',\n  },\n  // distort: {\n  //   fp: 'shaders/effects_distort.fp',\n  // },\n};\n\nexport function registerShader(key, obj) {\n  shader_data[key] = obj;\n}\n\nfunction getShader(key) {\n  let elem = shader_data[key];\n  if (!elem.shader) {\n    if (elem.fp) {\n      elem.shader = shaderCreate(elem.fp);\n    } else {\n      elem.shader = shaderCreate(elem.vp);\n    }\n  }\n  return elem.shader;\n}\n\n\nlet inited = false;\nlet clip_space = vec4(2, 2, -1, -1);\nlet copy_uv_scale = vec4(1, 1, 0, 0);\nlet shader_params_default = {\n  clip_space,\n  copy_uv_scale,\n};\n// let shader_params_distort;\nlet shader_params_color_matrix;\n// let shader_params_bloom;\n// let shader_params_bloom_merge;\nlet shader_params_gaussian_blur;\nlet shader_params_pixely_expand;\nlet quad_geom;\nfunction startup() {\n  inited = true;\n\n  quad_geom = geom.create(\n    [[SEMANTIC.POSITION, gl.FLOAT, 2, false]],\n    new Float32Array([\n      0, 0,\n      1, 0,\n      1, 1,\n      0, 1,\n    ]), null, geom.QUADS); // TODO: use gl.TRIANGLE_STRIP instead, save index buffer binding\n\n  // shader_params_distort = {\n  //   clip_space,\n  //   copy_uv_scale,\n  //   strength: vec2(0, 0),\n  //   transform: new Float32Array([0, 0, 0, 0, 0, 0]),\n  //   invTransform: vec4(0, 0, 0, 0),\n  // };\n\n  shader_params_color_matrix = {\n    clip_space,\n    copy_uv_scale,\n    colorMatrix: new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n  };\n\n  // shader_params_bloom = {\n  //   clip_space,\n  //   copy_uv_scale,\n  //   bloomThreshold: 0,\n  //   thresholdCuttoff: 0,\n  // };\n\n  // shader_params_bloom_merge = {\n  //   clip_space,\n  //   copy_uv_scale,\n  //   bloomIntensity: 0,\n  //   bloomSaturation: 0,\n  //   originalIntensity: 0,\n  //   originalSaturation: 0,\n  // };\n\n  // Gaussian Blur effect (also used by bloom)\n  shader_params_gaussian_blur = {\n    clip_space,\n    copy_uv_scale,\n    sampleRadius: vec3(1, 1, 1),\n    Gauss: new Float32Array([0.93, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]),\n  };\n\n  shader_params_pixely_expand = {\n    clip_space,\n    copy_uv_scale,\n    orig_pixel_size: vec4(),\n  };\n}\n\nlet num_passes = 0;\nexport function effectsPassAdd() {\n  ++num_passes;\n}\nexport function effectsPassConsume() {\n  assert(num_passes);\n  --num_passes;\n}\n\nlet last_framebuffer_source;\nexport function effectsLastFramebuffer() {\n  return last_framebuffer_source;\n}\n\nfunction doEffect(fn) {\n  effectsPassConsume();\n  fn();\n}\n\nexport function effectsQueue(z, fn) {\n  effectsPassAdd();\n  spriteQueueFn(z, doEffect.bind(null, fn));\n}\n\nexport function effectsTopOfFrame() {\n  // In case of crash on previous frame\n  num_passes = 0;\n  framebufferTopOfFrame();\n}\n\nexport function effectsReset() {\n  assert.equal(num_passes, 0); // otherwise probably still have a framebuffer bound\n}\n\nexport function effectsIsFinal() {\n  return !num_passes;\n}\n\nexport function grayScaleMatrix(dst) {\n  dst[0] = 0.2126;\n  dst[1] = 0.2126;\n  dst[2] = 0.2126;\n  dst[3] = 0.7152;\n  dst[4] = 0.7152;\n  dst[5] = 0.7152;\n  dst[6] = 0.0722;\n  dst[7] = 0.0722;\n  dst[8] = 0.0722;\n  dst[9] = dst[10] = dst[11] = 0;\n}\n\nexport function sepiaMatrix(dst) {\n  dst[0] = 0.393;\n  dst[1] = 0.349;\n  dst[2] = 0.272;\n  dst[3] = 0.769;\n  dst[4] = 0.686;\n  dst[5] = 0.534;\n  dst[6] = 0.189;\n  dst[7] = 0.168;\n  dst[8] = 0.131;\n  dst[9] = dst[10] = dst[11] = 0;\n}\n\nexport function negativeMatrix(dst) {\n  dst[0] = dst[4] = dst[8] = -1;\n  dst[1] = dst[2] = dst[3] = dst[5] = dst[6] = dst[7] = 0;\n  dst[9] = dst[10] = dst[11] = 1;\n}\n\nexport function saturationMatrix(dst, saturationScale) {\n  let is = (1 - saturationScale);\n  dst[0] = (is * 0.2126) + saturationScale;\n  dst[1] = (is * 0.2126);\n  dst[2] = (is * 0.2126);\n  dst[3] = (is * 0.7152);\n  dst[4] = (is * 0.7152) + saturationScale;\n  dst[5] = (is * 0.7152);\n  dst[6] = (is * 0.0722);\n  dst[7] = (is * 0.0722);\n  dst[8] = (is * 0.0722) + saturationScale;\n  dst[9] = dst[10] = dst[11] = 0;\n}\n\nexport function hueMatrix(dst, angle) {\n  ////\n  //// Uncomment to calculate new coeffecients should luminance\n  //// values 0.2126 0.7152 0.0722 change.\n  //let lumR = 0.2126;\n  //let lumG = 0.7152;\n  //let lumB = 0.0722;\n  ////\n  //let r23 = Math.sqrt(2 / 3);\n  //let r12 = 1 / Math.sqrt(2);\n  //let r13 = 1 / Math.sqrt(3);\n  //let r16 = 1 / Math.sqrt(6);\n  //let M = [r23, 0, r13, -r16, r12, r13, -r16, -r12, r13, 0, 0, 0];\n  //let zx = (r23 * lumR) - (r16 * lumG) - (r16 * lumB);\n  //let zy =                (r12 * lumG) - (r12 * lumB);\n  //let zz = (r13 * lumR) + (r13 * lumG) + (r13 * lumB);\n  //let x = zx / zz;\n  //let y = zy / zz;\n  //let C = [1, 0, x, 0, 1, y, 0, 0, 1, 0, 0, 0];\n  //m43mul(M, M, C);\n  //console.log(\"Pre transform = \", M);\n  //let E = [1, 0, -x, 0, 1, -y, 0, 0, 1, 0, 0, 0];\n  //let N = [r23, -r16, -r16, 0, r12, -r12, r13, r13, r13, 0, 0, 0];\n  //m43mul(N, E, N);\n  //console.log(\"Post transform = \", N);\n  ////\n  //// Final matrix is then: m43Mul(Pre, [c, s, 0, -s, c, 0, 0, 0, 1, 0, 0, 0, ], Post);\n  //// for c = cos(angle), s = sin(angle)\n  ////\n  //let out = \"\";\n  //out += \"let c = Math.cos(angle);\\n\";\n  //out += \"let s = Math.sin(angle);\\n\";\n  //out += \"dst[0] = (\" + (N[0]*M[0]+N[3]*M[1]) + \" * c) + (\" + (N[3]*M[0]-N[0]*M[1]) + \" * s) + \" + lumR+\";\\n\";\n  //out += \"dst[1] = (\" + (-lumR)               + \" * c) + (\" + (N[4]*M[0]-N[1]*M[1]) + \" * s) + \" + lumR+\";\\n\";\n  //out += \"dst[2] = (\" + (-lumR)               + \" * c) + (\" + (N[5]*M[0]-N[2]*M[1]) + \" * s) + \" + lumR+\";\\n\";\n  //out += \"dst[3] = (\" + (-lumG)               + \" * c) + (\" + (N[3]*M[3]-N[0]*M[4]) + \" * s) + \" + lumG+\";\\n\";\n  //out += \"dst[4] = (\" + (N[1]*M[3]+N[4]*M[4]) + \" * c) + (\" + (N[4]*M[3]-N[1]*M[4]) + \" * s) + \" + lumG+\";\\n\";\n  //out += \"dst[5] = (\" + (-lumG)               + \" * c) + (\" + (N[5]*M[3]-N[2]*M[4]) + \" * s) + \" + lumG+\";\\n\";\n  //out += \"dst[6] = (\" + (-lumB)               + \" * c) + (\" + (N[3]*M[6]-N[0]*M[7]) + \" * s) + \" + lumB+\";\\n\";\n  //out += \"dst[7] = (\" + (-lumB)               + \" * c) + (\" + (N[4]*M[6]-N[1]*M[7]) + \" * s) + \" + lumB+\";\\n\";\n  //out += \"dst[8] = (\" + (N[2]*M[6]+N[5]*M[7]) + \" * c) + (\" + (N[5]*M[6]-N[2]*M[7]) + \" * s) + \" + lumB+\";\\n\";\n  //console.log(out);\n  let c = Math.cos(angle);\n  let s = Math.sin(angle);\n  dst[0] = (0.7874 * c) + (-0.3712362230889293 * s) + 0.2126;\n  dst[1] = (-0.2126 * c) + (0.20611404610069642 * s) + 0.2126;\n  dst[2] = (-0.2126 * c) + (-0.9485864922785551 * s) + 0.2126;\n  dst[3] = (-0.7152 * c) + (-0.4962902913954023 * s) + 0.7152;\n  dst[4] = (0.2848 * c) + (0.08105997779422341 * s) + 0.7152;\n  dst[5] = (-0.7152 * c) + (0.6584102469838492 * s) + 0.7152;\n  dst[6] = (-0.0722 * c) + (0.8675265144843316 * s) + 0.0722;\n  dst[7] = (-0.0722 * c) + (-0.28717402389491986 * s) + 0.0722;\n  dst[8] = (0.9278 * c) + (0.290176245294706 * s) + 0.0722;\n  dst[9] = dst[10] = dst[11] = 0;\n}\n\nexport function brightnessAddMatrix(dst, brightnessOffset) {\n  dst[0] = dst[4] = dst[8] = 1;\n  dst[1] = dst[2] = dst[3] = dst[5] = dst[6] = dst[7] = 0;\n  dst[9] = dst[10] = dst[11] = brightnessOffset;\n}\n\nexport function brightnessScaleMatrix(dst, scale) {\n  dst[0] = dst[4] = dst[8] = scale;\n  dst[1] = dst[2] = dst[3] = dst[5] = dst[6] = dst[7] = 0;\n  dst[9] = dst[10] = dst[11] = 0;\n}\n\nexport function additiveMatrix(dst, additiveRGB) {\n  dst[0] = dst[4] = dst[8] = 1;\n  dst[1] = dst[2] = dst[3] = dst[5] = dst[6] = dst[7] = 0;\n  dst[9] = additiveRGB[0];\n  dst[10] = additiveRGB[1];\n  dst[11] = additiveRGB[2];\n}\n\nexport function contrastMatrix(dst, contrastScale) {\n  dst[0] = dst[4] = dst[8] = contrastScale;\n  dst[1] = dst[2] = dst[3] = dst[5] = dst[6] = dst[7] = 0;\n  dst[9] = dst[10] = dst[11] = 0.5 * (1 - contrastScale);\n}\n\n// effect: { shader, params, texs, final }\nfunction applyEffect(effect, view_w, view_h) {\n  let final = effect.final !== false && effectsIsFinal() || effect.final;\n  if (effect.no_framebuffer) {\n    // neither starting nor ending a framebuffer, presumably something effectively additive\n    let viewport = engine.viewport;\n    let target_w = viewport[2];\n    let target_h = viewport[3];\n    view_w = view_w || target_w;\n    view_h = view_h || target_h;\n    clip_space[0] = 2.0 * view_w / target_w;\n    clip_space[1] = 2.0 * view_h / target_h;\n  } else if (effect.viewport) {\n    let { viewport } = effect;\n    let target_w = viewport[2];\n    let target_h = viewport[3];\n    view_w = view_w || target_w;\n    view_h = view_h || target_h;\n\n    clip_space[0] = 2.0 * view_w / target_w;\n    clip_space[1] = 2.0 * view_h / target_h;\n\n    framebufferStart({\n      clear: effect.clear,\n      clear_all: effect.clear_all,\n      clear_color: effect.clear_color,\n      viewport,\n      final,\n      need_depth: effect.need_depth_begin,\n    });\n  } else {\n    clip_space[0] = 2.0;\n    clip_space[1] = 2.0;\n    view_w = view_w || renderWidth();\n    view_h = view_h || renderHeight();\n\n    framebufferStart({\n      width: view_w, height: view_h,\n      final,\n      need_depth: effect.need_depth_begin,\n    });\n  }\n  // clip_space[2] = -1.0;\n  // clip_space[3] = -1.0;\n  // copy_uv_scale[0] = target_w / effect.coord_source.width;\n  // copy_uv_scale[1] = target_h / effect.coord_source.height;\n\n  shadersBind(getShader('vp_copy'), getShader(effect.shader), effect.params);\n  textureBindArray(effect.texs);\n  quad_geom.draw();\n}\n\n// // TODO: Update for RTBBCTT and port to new GLOV.js\n// function applyBloomTODO(params) {\n//   let source = params.source;\n//   let blur1 = params.blurTarget1;\n//   let blur2 = params.blurTarget2;\n//   let dest = params.destination;\n//   if (!source || !dest || !blur1 || !blur2 || !blur1.colorTexture0 ||\n//     !blur2.colorTexture0 || blur1 === blur2 || blur1 === dest ||\n//     source === blur1.colorTexture0 || source === dest.colorTexture0) {\n//     return false;\n//   }\n//\n//   let effectParams = this.effectParams;\n//   let techparams;\n//\n//   // Threshold copy.\n//   techparams = this.bloomThresholdParameters;\n//   effectParams.technique = this.bloomThresholdTechnique;\n//   effectParams.params = techparams;\n//\n//   techparams.bloomThreshold = (params.bloomThreshold !== undefined) ? params.bloomThreshold : 0.65;\n//   techparams.thresholdCutoff = Math.exp((params.thresholdCutoff !== undefined) ? params.thresholdCutoff : 3);\n//   techparams.inputTexture0 = source;\n//   effectParams.destination = blur1;\n//   this.applyEffect(effectParams);\n//\n//   // Gaussian blur.\n//   techparams = this.gaussianBlurParameters;\n//   effectParams.technique = this.gaussianBlurTechnique;\n//   effectParams.params = techparams;\n//\n//   let sampleRadius = (params.blurRadius || 20);\n//   techparams.sampleRadius[0] = sampleRadius / source.width;\n//   techparams.sampleRadius[1] = 0;\n//   techparams.sampleRadius[2] = 1;\n//   techparams.inputTexture0 = blur1.colorTexture0;\n//   effectParams.destination = blur2;\n//   this.applyEffect(effectParams);\n//\n//   techparams.sampleRadius[0] = 0;\n//   techparams.sampleRadius[1] = sampleRadius / source.height;\n//   techparams.sampleRadius[2] = 1;\n//   techparams.inputTexture0 = blur2.colorTexture0;\n//   effectParams.destination = blur1;\n//   this.applyEffect(effectParams);\n//\n//   // Merge.\n//   techparams = this.bloomMergeParameters;\n//   effectParams.technique = this.bloomMergeTechnique;\n//   effectParams.params = techparams;\n//\n//   techparams.bloomIntensity = (params.bloomIntensity !== undefined) ? params.bloomIntensity : 1.2;\n//   techparams.bloomSaturation = (params.bloomSaturation !== undefined) ? params.bloomSaturation : 1.2;\n//   techparams.originalIntensity = (params.originalIntensity !== undefined) ? params.originalIntensity : 1.0;\n//   techparams.originalSaturation = (params.originalSaturation !== undefined) ? params.originalSaturation : 1.0;\n//   techparams.inputTexture0 = source;\n//   techparams.inputTexture1 = blur1.colorTexture0;\n//   effectParams.destination = dest;\n//   this.applyEffect(effectParams);\n//\n//   return true;\n// }\n\nexport function applyCopy(params) {\n  if (!inited) {\n    startup();\n  }\n  let source = params.source;\n  if (!source) {\n    source = framebufferEnd({ filter_linear: params.filter_linear, need_depth: params.need_depth });\n    last_framebuffer_source = source;\n  }\n  params.shader = params.shader || 'copy';\n  params.params = params.params ? {\n    ...shader_params_default,\n    ...params.params,\n  } : shader_params_default;\n  if (Array.isArray(source)) {\n    params.texs = source;\n  } else {\n    params.texs = [source];\n  }\n  applyEffect(params);\n}\n\nexport function applyPixelyExpand(params) {\n  if (!inited) {\n    startup();\n  }\n  let source = params.source;\n  assert(!source); // would need linear/non-wrap sampler state set\n  if (!source) {\n    source = framebufferEnd({ filter_linear: true });\n    last_framebuffer_source = source;\n  }\n\n  // do horizontal blur for primary lines\n  let resx = source.width;\n  let resy = source.height;\n  let sampleRadius = (params.hblur || 0.25) / resx;\n  shader_params_gaussian_blur.sampleRadius[0] = sampleRadius;\n  shader_params_gaussian_blur.sampleRadius[1] = 0;\n  shader_params_gaussian_blur.sampleRadius[2] = 1;\n  applyEffect({\n    shader: 'gaussian_blur',\n    params: shader_params_gaussian_blur,\n    texs: [source],\n    final: false,\n  }, resx, resy);\n  let hblur = framebufferEnd({ filter_linear: true });\n\n  // do seperable gaussian blur for scanlines (using horizontal blur from above)\n  sampleRadius = (params.vblur || 0.75) / resy;\n  shader_params_gaussian_blur.sampleRadius[0] = 0;\n  shader_params_gaussian_blur.sampleRadius[1] = sampleRadius;\n  shader_params_gaussian_blur.sampleRadius[2] = 1;\n  applyEffect({\n    shader: 'gaussian_blur',\n    params: shader_params_gaussian_blur,\n    texs: [hblur],\n    final: false,\n  }, resx, resy);\n  let vblur = framebufferEnd({ filter_linear: true });\n\n  // combine at full res\n  v4set(shader_params_pixely_expand.orig_pixel_size,\n    source.width, source.height, 1/source.width, 1/source.height);\n\n  applyEffect({\n    shader: 'pixely_expand',\n    params: shader_params_pixely_expand,\n    texs: [source, hblur, vblur],\n\n    clear: params.clear,\n    clear_all: params.clear_all,\n    clear_color: params.clear_color,\n    viewport: params.viewport,\n  });\n}\n\nexport function applyGaussianBlur(params) {\n  if (!inited) {\n    startup();\n  }\n  let source = framebufferEnd({ filter_linear: true });\n  last_framebuffer_source = source;\n  let max_size = params.max_size || 512;\n  let min_size = params.min_size || 128;\n\n  // Quick shrink down to 512->256->128 (or other specified min/max size)\n  let inputTexture0 = source;\n\n  let viewport = engine.viewport;\n  let res = max_size;\n  while (res > viewport[2] || res > viewport[3]) {\n    res /= 2;\n  }\n\n  while (res > min_size) {\n    applyEffect({\n      shader: params.shader_copy || 'copy',\n      params: shader_params_default,\n      texs: [inputTexture0],\n      final: false,\n    }, res, res);\n    inputTexture0 = framebufferEnd({ filter_linear: true });\n    res /= 2;\n  }\n\n  // Do seperable blur\n  let sampleRadius = (params.blur || 1) / res;\n  shader_params_gaussian_blur.sampleRadius[0] = sampleRadius;\n  shader_params_gaussian_blur.sampleRadius[1] = 0;\n  shader_params_gaussian_blur.sampleRadius[2] = params.glow || 1;\n  applyEffect({\n    shader: 'gaussian_blur',\n    params: shader_params_gaussian_blur,\n    texs: [inputTexture0],\n    final: false,\n  }, res, res);\n  let blur = framebufferEnd({ filter_linear: true });\n\n  shader_params_gaussian_blur.sampleRadius[0] = 0;\n  shader_params_gaussian_blur.sampleRadius[1] = sampleRadius;\n  shader_params_gaussian_blur.sampleRadius[2] = params.glow || 1;\n  applyEffect({\n    shader: 'gaussian_blur',\n    params: shader_params_gaussian_blur,\n    texs: [blur],\n  });\n\n  return true;\n}\n\nexport function applyColorMatrix(params) {\n  if (!inited) {\n    startup();\n  }\n  let source = framebufferEnd({ filter_linear: true });\n  last_framebuffer_source = source;\n\n  let matrix = params.colorMatrix;\n  let mout = shader_params_color_matrix.colorMatrix;\n\n  mout[0] = matrix[0];\n  mout[1] = matrix[3];\n  mout[2] = matrix[6];\n  mout[3] = matrix[9];\n  mout[4] = matrix[1];\n  mout[5] = matrix[4];\n  mout[6] = matrix[7];\n  mout[7] = matrix[10];\n  mout[8] = matrix[2];\n  mout[9] = matrix[5];\n  mout[10] = matrix[8];\n  mout[11] = matrix[11];\n\n  applyEffect({\n    shader: 'color_matrix',\n    params: shader_params_color_matrix,\n    texs: [source],\n  });\n\n  return true;\n}\n\n// // TODO: Update for RTBBCTT and port to new GLOV.js\n// export function applyDistortTODO(params) {\n//   let source = params.source;\n//   let dest = params.destination;\n//   let distort = params.distortion;\n//   if (!source || !dest || !distort || !dest.colorTexture0 ||\n//     source === dest.colorTexture0 || distort === dest.colorTexture0) {\n//     return false;\n//   }\n//\n//   // input transform.\n//   //  a b tx\n//   //  c d ty\n//   let a;\n//   let b;\n//   let c;\n//   let d;\n//   let tx;\n//   let ty;\n//\n//   let transform = params.transform;\n//   if (transform) {\n//     // transform col-major.\n//     a = transform[0];\n//     b = transform[2];\n//     tx = transform[4];\n//     c = transform[1];\n//     d = transform[3];\n//     ty = transform[5];\n//   } else {\n//     a = d = 1;\n//     b = c = 0;\n//     tx = ty = 0;\n//   }\n//\n//   let effectParams = this.effectParams;\n//   let techparams = this.distortParameters;\n//   effectParams.technique = this.distortTechnique;\n//   effectParams.params = techparams;\n//\n//   // TODO: Cache 'transform', 'invTransform', etc in the code below\n//   techparams.transform[0] = a;\n//   techparams.transform[1] = b;\n//   techparams.transform[2] = tx;\n//   techparams.transform[3] = c;\n//   techparams.transform[4] = d;\n//   techparams.transform[5] = ty;\n//\n//   // Compute inverse transform to use in distort texture displacement..\n//   let idet = 1 / (a * d - b * c);\n//   let ia = techparams.invTransform[0] = (idet * d);\n//   let ib = techparams.invTransform[1] = (idet * -b);\n//   let ic = techparams.invTransform[2] = (idet * -c);\n//   let id = techparams.invTransform[3] = (idet * a);\n//\n//   // Compute max pixel offset after transform for normalisation.\n//   let x1 = ((ia + ib) * (ia + ib)) + ((ic + id) * (ic + id));\n//   let x2 = ((ia - ib) * (ia - ib)) + ((ic - id) * (ic - id));\n//   let x3 = ((-ia + ib) * (-ia + ib)) + ((-ic + id) * (-ic + id));\n//   let x4 = ((-ia - ib) * (-ia - ib)) + ((-ic - id) * (-ic - id));\n//   let xmax = 0.5 * Math.sqrt(Math.max(x1, x2, x3, x4));\n//\n//   let strength = (params.strength || 10);\n//   techparams.strength[0] = strength / (source.width * xmax);\n//   techparams.strength[1] = strength / (source.height * xmax);\n//\n//   techparams.inputTexture0 = source;\n//   techparams.distortTexture = distort; // linear / repeat\n//   effectParams.destination = dest;\n//   this.applyEffect(effectParams);\n//\n//   return true;\n// }\n\nexport function clearAlpha() {\n  let old_dt = gl.getParameter(gl.DEPTH_TEST);\n  if (old_dt) {\n    gl.disable(gl.DEPTH_TEST);\n  }\n  gl.colorMask(false, false, false, true);\n  applyCopy({ source: textureWhite(), no_framebuffer: true });\n  gl.colorMask(true, true, true, true);\n  if (old_dt) {\n    gl.enable(gl.DEPTH_TEST);\n  }\n}\n\nexport function effectsStartup(prelink_effects) {\n  prelink_effects.forEach((name) => {\n    shadersPrelink(getShader('vp_copy'), getShader(name));\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint-env browser */\n\n/* eslint-disable import/order */\nrequire('./bootstrap.js'); // Just in case it's not in app.js\n\nconst client_config = require('./client_config.js');\nexport let DEBUG = client_config.MODE_DEVELOPMENT;\n\nlet startup_funcs = [];\n\nexports.require = require; // For browser console debugging\n\nconst assert = require('assert');\nconst {\n  is_ios,\n  is_ios_chrome,\n  is_ios_safari,\n  is_ipad,\n  safari_version_major,\n  safari_version_minor,\n} = require('./browser.js');\nconst { buildUIStartup } = require('./build_ui.js');\nconst camera2d = require('./camera2d.js');\nconst cmds = require('./cmds.js');\nrequire('./engine_cmds.js');\nconst { dataErrorQueueEnable } = require('glov/common/data_error.js');\nconst effects = require('./effects.js');\nconst { effectsReset, effectsTopOfFrame, effectsIsFinal, effectsPassAdd, effectsPassConsume } = effects;\nconst {\n  errorReportDisable,\n  errorReportSetTimeAccum,\n  errorReportSetDetails,\n  glovErrorReportDisableSubmit,\n  glovErrorReportSetCrashCB,\n} = require('./error_report.js');\nconst glov_font = require('./font.js');\nconst { fontTick } = glov_font;\nconst { framebufferStart, framebufferEndOfFrame } = require('./framebuffer.js');\nconst { geomResetState, geomStartup } = require('./geom.js');\nconst input = require('./input.js');\nconst { inputAllowAllEvents } = require('./input.js');\nconst local_storage = require('./local_storage.js');\nconst mat3FromMat4 = require('gl-mat3/fromMat4');\nconst mat4Copy = require('gl-mat4/copy');\nconst mat4Invert = require('gl-mat4/invert');\nconst mat4Mul = require('gl-mat4/multiply');\nconst mat4Transpose = require('gl-mat4/transpose');\nconst mat4Perspective = require('gl-mat4/perspective');\nconst { asin, cos, floor, min, max, PI, round, sin, sqrt } = Math;\nconst { modelLoadCount, modelStartup } = require('./models.js');\nconst perf = require('./perf.js');\nconst { profilerFrameStart, profilerGarbageEstimate } = require('./profiler.js');\nconst { profilerUIStartup } = require('./profiler_ui.js');\nconst { perfCounterTick } = require('glov/common/perfcounters.js');\nconst settings = require('./settings.js');\nconst shaders = require('./shaders.js');\nconst {\n  shadersAddGlobal,\n  shadersHandleDefinesChanged,\n  shadersStartup,\n  shadersResetState,\n} = require('./shaders.js');\nconst { shaderDebugUIStartup } = require('./shader_debug_ui.js');\nconst { soundLoading, soundStartup, soundTick } = require('./sound.js');\nconst { spotEndInput } = require('./spot.js');\nconst {\n  blendModeReset,\n  spriteDraw,\n  spriteDrawReset,\n  spriteStartup,\n  spriteResetTopOfFrame,\n} = require('./sprites.js');\nconst {\n  textureBind,\n  textureDefaultFilters,\n  textureError,\n  textureLoadCount,\n  textureResetState,\n  textureStartup,\n  textureTick,\n} = require('./textures.js');\nconst glov_transition = require('./transition.js');\nconst {\n  drawRect,\n  internal: {\n    cleanupDOMElems,\n    uiEndFrame,\n    uiSetFonts,\n    uiStartup,\n    uiTick,\n  },\n  uiBindSounds,\n} = require('./ui.js');\nconst urlhash = require('./urlhash.js');\nconst { callEach, clamp, nearSame, ridx } = require('glov/common/util.js');\nconst verify = require('glov/common/verify.js');\nconst {\n  mat3, mat4,\n  mat4isFinite,\n  vec3, vec4, v3mulMat4, v3iNormalize, v4copy, v4same, v4scale, v4set,\n} = require('glov/common/vmath.js');\nconst { webFSStartup } = require('./webfs.js');\nconst { profanityStartupLate } = require('./words/profanity.js');\n\nexport let canvas;\nexport let webgl2;\nexport let glov_particles;\n\nexport let width;\nexport let height;\nlet width_3d;\nlet height_3d;\nexport let pixel_aspect = 1;\nexport let render_pixel_perfect = 0; // 1.0 uses integral pixel scalars, 0.5 does for half of the resolutions, etc\nexport let dom_to_canvas_ratio = window.devicePixelRatio || 1;\nexport let antialias;\nexport let antialias_unavailable;\n\nexport let game_width;\nexport let game_height;\nlet game_aspect;\n\nexport let render_width;\nexport let render_height;\n\n//eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport let defines = urlhash.register({ key: 'D', type: urlhash.TYPE_SET, change: definesChanged });\n\nurlhash.register({ key: 'nocoop' }); // needed if server is using request_utils:setupRequestHeaders\n\nexport let ZFAR;\nexport let ZNEAR;\nexport let fov_y = 1;\nexport let fov_x = 1;\n\nexport let mat_projection = mat4();\nexport let mat_view = mat4();\nlet mat_m = mat4();\nexport let mat_vp = mat4();\nlet mat_mv = mat4();\nlet mat_mv_no_skew = mat4();\nlet mat_mvp = mat4();\nlet mat_mv_inv_transform = mat3();\nlet mat_inv_view = mat3();\n// let projection_inverse = vec4();\n\nexport let light_diffuse = vec3(0.75, 0.75, 0.75);\nexport let light_ambient = vec3(0.25, 0.25, 0.25);\nexport let light_dir_ws = vec3(-1, -2, -3);\n\nexport let font;\nexport let app_state = null;\nexport const border_color = vec4(0, 0, 0, 1);\nexport let border_clear_color = vec4(0, 0, 0, 1);\n\nlet no_render = false;\nlet dirty_render = false;\nlet render_frames_needed = 3;\n\nexport function renderNeeded(frames) {\n  // default 3 frames - 1 gets eaten immediately, one to show the result of the input, one to get back to steady state\n  render_frames_needed = max(render_frames_needed, frames || 3);\n}\n\nexport function disableRender(new_value) {\n  no_render = new_value;\n  inputAllowAllEvents(no_render);\n  if (no_render) {\n    cleanupDOMElems();\n  }\n}\n\nlet view_space_globals = [];\nexport function addViewSpaceGlobal(name) {\n  let ws_name = `${name}_ws`;\n  let ws_vec = shaders.globals[ws_name];\n  assert(ws_vec);\n  assert.equal(ws_vec.length, 3);\n  let vs_name = `${name}_vs`;\n  let vs_vec = vec3();\n  shadersAddGlobal(vs_name, vs_vec);\n  view_space_globals.push({\n    vs: vs_vec,\n    ws: ws_vec,\n  });\n}\n\nlet mat_temp = mat4();\nexport function setGlobalMatrices(_mat_view) {\n  assert(mat4isFinite(_mat_view));\n  mat4Copy(mat_view, _mat_view);\n  mat4Mul(mat_vp, mat_projection, mat_view);\n  v3iNormalize(light_dir_ws);\n  for (let ii = 0; ii < view_space_globals.length; ++ii) {\n    let vsg = view_space_globals[ii];\n    v3mulMat4(vsg.vs, vsg.ws, mat_view);\n  }\n  mat4Invert(mat_temp, mat_view);\n  mat3FromMat4(mat_inv_view, mat_temp);\n}\n\n// Just set up mat_vp and mat_projection\nexport function setMatVP(_mat_view) {\n  assert(mat4isFinite(_mat_view));\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  setupProjection(fov_y, width_3d, height_3d, ZNEAR, ZFAR);\n  mat4Copy(mat_view, _mat_view);\n  mat4Mul(mat_vp, mat_projection, mat_view);\n}\n\nexport function setFOV(fov_min) {\n  let w = width_3d;\n  let h = height_3d;\n  let aspect = w / h;\n  if (aspect > game_aspect) {\n    fov_y = fov_min;\n    let rise = sin(fov_y / 2) / cos(fov_y / 2) * aspect;\n    fov_x = 2 * asin(rise / sqrt(rise * rise + 1));\n  } else {\n    // Calculate what fov_x would be if the screen was game_aspect, then derive fov_y from that\n    let rise = sin(fov_min / 2) / cos(fov_min / 2) * game_aspect;\n    fov_x = 2 * asin(rise / sqrt(rise * rise + 1));\n    // Old method, just apply fov to x (it's the same thing, if game_aspect is 1.0)\n    // fov_x = fov_min;\n    let rise2 = sin(fov_x / 2) / cos(fov_x / 2) / aspect;\n    fov_y = 2 * asin(rise2 / sqrt(rise2 * rise2 + 1));\n  }\n}\n\nexport function setGameDims(w, h) {\n  game_width = w;\n  game_height = h;\n  game_aspect = game_width / game_height;\n}\n\n// Didn't need this for a while, but got slow on iOS recently :(\n// Better when using FBOs for postprocessing now, though!\nconst postprocessing_reset_version = '5';\nexport let postprocessing = local_storage.get('glov_no_postprocessing') !== postprocessing_reset_version;\nexport function postprocessingAllow(allow) {\n  local_storage.set('glov_no_postprocessing', allow ? undefined : postprocessing_reset_version);\n  postprocessing = allow;\n}\n\nexport function glCheckError() {\n  let gl_err = gl.getError();\n  if (gl_err) {\n    console.error(gl_err);\n    throw new Error(gl_err);\n  }\n}\n\nexport function releaseCanvas() {\n  try {\n    if (gl) {\n      let ext = gl.getExtension('WEBGL_lose_context');\n      if (ext) {\n        ext.loseContext();\n      }\n    }\n  } catch (ignored) {\n    // nothing, it's fine\n  }\n}\n\nfunction reloadDefault() {\n  document.location.reload();\n}\n\nlet reload_func = reloadDefault;\n\nexport function engineSetReloadFunc(fn) {\n  reload_func = fn;\n}\n\nexport function reloadSafe() {\n  // Do not report any errors after this point\n  errorReportDisable();\n  // Release canvas to not leak memory on Firefox\n  releaseCanvas();\n\n  reload_func();\n}\nwindow.reloadSafe = reloadSafe;\n\nlet reloading_defines = {};\nexport function defineCausesReload(define) {\n  reloading_defines[define] = defines[define];\n}\ndefineCausesReload('FORCEWEBGL2');\ndefineCausesReload('NOWEBGL2');\nlet define_change_cbs = {};\nexport function defineOnChange(define, cb) {\n  let elem = define_change_cbs[define] = define_change_cbs[define] || {\n    value: defines[define],\n    cbs: [],\n  };\n  elem.cbs.push(cb);\n}\nexport function definesChanged() {\n  for (let key in reloading_defines) {\n    if (defines[key] !== reloading_defines[key]) {\n      urlhash.onURLChange(reloadSafe);\n      break;\n    }\n  }\n  for (let key in define_change_cbs) {\n    let elem = define_change_cbs[key];\n    if (defines[key] !== elem.value) {\n      callEach(elem.cbs);\n      elem.value = defines[key];\n    }\n  }\n  shadersHandleDefinesChanged();\n}\nexport function definesClearAll() {\n  let any_changed = false;\n  for (let key in defines) {\n    defines[key] = false;\n    any_changed = true;\n  }\n  if (any_changed) {\n    definesChanged();\n  }\n  return any_changed;\n}\n\nexport function debugDefineIsSet(define) {\n  return defines[define];\n}\n\nfunction normalizeRow(m, idx) {\n  let len = m[idx]*m[idx] + m[idx+1]*m[idx+1] + m[idx+2]*m[idx+2];\n  if (len > 0) {\n    len = 1 / sqrt(len);\n    m[idx] *= len;\n    m[idx+1] *= len;\n    m[idx+2] *= len;\n  }\n}\n\nexport function updateMatrices(mat_model) {\n  // PERFTODO: depending on rendering path, only some of these are needed (m + vp or just mvp)\n  mat4Copy(mat_m, mat_model);\n\n  mat4Mul(mat_mv, mat_view, mat_model);\n  mat4Mul(mat_mvp, mat_projection, mat_mv);\n  // TODO: Can expand and simplify all of this, especially below\n  // Compute the inverse transform of thee model_view matrix, discarding scale,\n  // to be used for getting normals into view space\n  mat4Copy(mat_temp, mat_model);\n  normalizeRow(mat_temp, 0);\n  normalizeRow(mat_temp, 4);\n  normalizeRow(mat_temp, 8);\n  mat4Mul(mat_mv_no_skew, mat_view, mat_temp);\n  mat4Invert(mat_temp, mat_mv_no_skew);\n  mat4Transpose(mat_temp, mat_temp);\n  mat3FromMat4(mat_mv_inv_transform, mat_temp);\n}\nexport let frame_timestamp = 0;\nexport function getFrameTimestamp() {\n  return frame_timestamp;\n}\n\nexport let frame_index = 0;\nexport function getFrameIndex() {\n  return frame_index;\n}\n\nexport let frame_dt = 0;\nexport function getFrameDt() {\n  return frame_dt;\n}\n\nexport let hrtime = 0;\n\n// Wall time, may contain large jumps, may be 0 or negative\nlet this_frame_time_actual = 0;\nexport function getFrameDtActual() {\n  return this_frame_time_actual;\n}\n\nlet after_loading_state = null;\nexport let is_loading = true;\nexport function setState(new_state) {\n  if (is_loading) {\n    after_loading_state = new_state;\n  } else {\n    app_state = new_state;\n  }\n  renderNeeded();\n}\n\nexport function stateActive(test_state) {\n  if (is_loading) {\n    return after_loading_state === test_state;\n  } else {\n    return app_state === test_state;\n  }\n}\n\nlet mspf = 1000;\nlet mspf_update_time = 0;\nlet mspf_frame_count = 0;\nlet last_tick_cpu = 0;\nlet mspf_tick = 1000;\n// let net_time = 1000;\nlet mspf_tick_accum = 0;\n// let net_time_accum = 0;\nlet garbage_estimate = 0;\nexport const PERF_HISTORY_SIZE = 128;\nexport let perf_state = window.glov_perf_state = {\n  fpsgraph: {\n    index: 0,\n    history: new Float32Array(PERF_HISTORY_SIZE * 2),\n  },\n  gpu_mem: {\n    tex: 0,\n    geom: 0,\n  },\n};\nlet fpsgraph = perf_state.fpsgraph;\n\nperf.addMetric({\n  name: 'fps',\n  show_stat: 'show_fps', // always, if we're showing any metrics\n  show_graph: 'fps_graph',\n  labels: {\n    'fps: ': () => (1000 / mspf).toFixed(1),\n    'ms/f: ': () => mspf.toFixed(0),\n    'cpu: ': () => mspf_tick.toFixed(0),\n    'gc/f: ': () => (garbage_estimate ? garbage_estimate.toFixed(1) : ''),\n    // 'net: ': () => net_time.toFixed(0),\n  },\n  data: fpsgraph, // contain .index and .history (stride of colors.length)\n  line_scale_top: 50,\n  colors: [\n    // vec4(0.161, 0.678, 1, 1), // net time\n    vec4(1, 0.925, 0.153, 1), // cpu/tick time\n    vec4(0, 0.894, 0.212, 1), // total time (GPU)\n  ],\n}, true);\n\nlet do_borders = true;\nlet do_viewport_postprocess = false;\nlet need_repos = 0;\n\nexport function resizing() {\n  return need_repos;\n}\n\nlet app_tick_functions = [];\nexport function addTickFunc(cb) {\n  app_tick_functions.push(cb);\n}\n\nexport function removeTickFunc(cb) {\n  let idx = app_tick_functions.indexOf(cb);\n  if (idx !== -1) {\n    app_tick_functions.splice(idx, 1);\n    return true;\n  }\n  return false;\n}\n\nlet post_tick = [];\nexport function postTick(opts) {\n  opts.ticks = opts.ticks || 1; // run in how many ticks?\n  opts.inactive = opts.inactive || false; // run even if inactive?\n  assert.equal(typeof opts.fn, 'function');\n  post_tick.push(opts);\n}\n\nlet pre_sprite_render = null;\nexport function preSpriteRender(fn) {\n  if (!pre_sprite_render) {\n    pre_sprite_render = [];\n  }\n  pre_sprite_render.push(fn);\n}\n\nlet post_render = null;\nexport function postRender(fn) {\n  if (!post_render) {\n    post_render = [];\n  }\n  post_render.push(fn);\n}\n\nfunction resetEffects() {\n  effectsReset();\n  framebufferEndOfFrame();\n}\n\nexport function renderWidth() {\n  return render_width || width;\n}\nexport function renderHeight() {\n  return render_height || height;\n}\n\nconst SAFARI_FULLSCREEN_ASPECT = (function () {\n  let screen = window.screen;\n  if (!is_ios_safari || !screen) {\n    return 0;\n  }\n  const SAFARI_DIMS = { // wxh : [fullscreen aspect]\n    // iPhone 12 Pro Max\n    '926,428': 926/428,\n    // iPhone 12\n    '844,390': 844/390,\n    // iPhone XR\n    // iPhone 11 Pro Max\n    // iPhone XS Max\n    // iPhone 11\n    '896,414': 896/414,\n    // iPhone 11 Pro\n    // iPhone X (probably)\n    '812,375': 812/375,\n    // iPhone 8 Plus\n    '736,414': 736/414,\n    // iPhone 6s+\n    // iPhone 6+\n    '716,414': 736/414, // (screen.availWidth reports 20 less)\n    // iPhone 8\n    // iPhone 7 (10.1)\n    // iPhone 7 (11.4)\n    '667,375': 667/375,\n    // iPhone 6s\n    // iPhone 6\n    '647,375': 667/375, // (screen.availWidth reports 20 less)\n    // iPhone 5s\n    '548,320': 568/320, // (screen.availWidth reports 20 less)\n  };\n  let key = `${max(screen.availWidth, screen.availHeight)},${min(screen.availWidth, screen.availHeight)}`;\n  return SAFARI_DIMS[key] || 0;\n}());\nfunction safariTopSafeArea(view_w, view_h) {\n  if (is_ios_safari && safari_version_major < 16) {\n    // Definitely needed on v14 and lower; seen this needed on v15.1 as well\n    // Detect if the URL bar is hidden, but should be a safe area\n    if (SAFARI_FULLSCREEN_ASPECT && nearSame(view_w/view_h, SAFARI_FULLSCREEN_ASPECT, 0.001)) {\n      // Note: if user has scaling enabled, the padding required might be different\n      //   but the same holds true for the safe area padding detected via CSS!\n      return 28; // seems to be visually around 50pts, but touch area of ~25 pts on all devices\n    }\n  }\n  return 0;\n}\nfunction isPortrait(view_w, view_h) {\n  return view_h >= view_w * 0.8;\n}\nlet kb_up_last_w = 0;\nlet kb_up_last_h = 0;\nlet kb_up_ret = false;\nlet kb_up_frame = 0;\nfunction isKeyboardUp(view_w, view_h) {\n  if (!view_w) {\n    return kb_up_ret;\n  }\n  if (!is_ios) {\n    // probably logic is still valid, but not currently needed in other browsers?\n    return false;\n  }\n  if (!nearSame(view_w, kb_up_last_w, 5)) {\n    // init, or just rotated, assume not up\n    kb_up_ret = false;\n  } else if (!nearSame(view_h, kb_up_last_h, 5)) {\n    // same width\n    if (view_h < kb_up_last_h) {\n      // shrunk\n      kb_up_ret = true;\n    } else if (view_h > kb_up_last_h) {\n      // expanded\n      kb_up_ret = false;\n    }\n  }\n  kb_up_last_w = view_w;\n  kb_up_last_h = view_h;\n  ++kb_up_frame;\n  if (kb_up_frame < 3) {\n    // window.innerHeight and related shrink during the first couple frames on iOS 12.1\n    //   if in landscape and there's a URL bar / other tabs open\n    kb_up_ret = false;\n  }\n  return kb_up_ret;\n}\nfunction safariBottomSafeArea(view_w, view_h) {\n  // iOS === 15.0 doesn't respect safe area; 15.1 is offset\n  if (is_ios_safari && safari_version_major === 15 && safari_version_minor < 2 &&\n    isKeyboardUp() &&\n    isPortrait(view_w, view_h)\n  ) {\n    if (safari_version_minor === 0) {\n      // unknown whether or not this is correct on iPad, assuming needed now to be safe\n      return 52;\n    } else if (safari_version_minor === 1) {\n      if (!is_ipad) {\n        return 8; // v15.1\n      }\n    }\n  }\n  if (is_ios_chrome && is_ipad && safari_version_major >= 13 &&\n    isKeyboardUp()\n  ) {\n    // seen specific issue resolved by this on at least: 13.2/4 14.0/1/5 15.1/5 16.0/1/2/3\n    // v17 doesn't seem to (always?) have a fixed offset, is also buggy with\n    //   scroll pos, so let's add some safe area so it's more likely to be visible\n    // Note: v12 has no visual viewport, so we can't tell if the keyboard is up\n    return 44;\n  }\n  return 0;\n}\n\n// Get safe area by examining safe-area-inset padded element\nfunction getSafeAreaFromDOM(out, safearea, view_w, view_h) {\n  if (safearea && safearea.offsetWidth && safearea.offsetHeight) {\n    out[0] = safearea.offsetLeft;\n    out[1] = view_w - safearea.offsetWidth - safearea.offsetLeft;\n    // \"view_h - window.innerHeight\" is for iOS 12\n    out[2] = max(safearea.offsetTop, view_h - window.innerHeight);\n    out[3] = view_h - safearea.offsetHeight - safearea.offsetTop;\n  }\n}\n\nlet last_canvas_width;\nlet last_canvas_height;\nlet last_body_height;\nlet safearea_elem;\nlet safearea_ignore_bottom = false;\nlet safearea_dom = vec4();\nlet safearea_canvas = vec4();\nlet last_safearea_canvas = vec4();\nfunction checkResize() {\n  profilerStart('checkResize');\n  // use VisualViewport on at least iOS Safari - deal with tabs and keyboard\n  //   shrinking the viewport without changing the window height\n  let vv = window.visualViewport;\n  let dom_to_pixels = window.devicePixelRatio || 1;\n  dom_to_canvas_ratio = dom_to_pixels * settings.render_scale_all;\n  let view_w = vv ? vv.width : window.innerWidth;\n  let view_h = vv ? vv.height :\n    is_ios_safari && window.pageYOffset ? document.documentElement.clientHeight : window.innerHeight;\n  if (view_h !== last_body_height) {\n    // set this *before* getting canvas and safearea_elem dims below\n    last_body_height = view_h;\n    if (document.body) {\n      document.body.style.height = `${view_h}px`;\n    }\n  }\n  // safearea_dom - left, right, top, bottom PADDING values\n  v4set(safearea_dom, 0, 0, 0, 0);\n  getSafeAreaFromDOM(safearea_dom, safearea_elem, view_w, view_h);\n  isKeyboardUp(view_w, view_h - safearea_dom[2] - safearea_dom[3]);\n  safearea_dom[2] = max(safearea_dom[2], safariTopSafeArea(view_w, view_h));\n  if (safearea_dom[3] && (\n    // iOS 15.0: Keyboard is up, but safe area is not being removed, remove it.\n    is_ios && isKeyboardUp() ||\n    // General: Possibly ignoring bottom safe area by app request, it seems not\n    //  useful on iPhones (does not adjust when keyboard is up, only obscured in\n    //  the middle, if obeying left/right safe area)\n    safearea_ignore_bottom\n  )) {\n    safearea_dom[3] = 0;\n  }\n  safearea_dom[3] = max(safearea_dom[3], safariBottomSafeArea(view_w, view_h));\n\n  let rect = canvas.getBoundingClientRect();\n  let new_width = round(rect.width * dom_to_canvas_ratio) || 1;\n  let new_height = round(rect.height * dom_to_canvas_ratio) || 1;\n\n  if (cmds.safearea[0] === -1) {\n    v4scale(safearea_canvas, safearea_dom, dom_to_canvas_ratio);\n  } else {\n    v4set(safearea_canvas,\n      new_width * clamp(cmds.safearea[0], 0, 25)/100,\n      new_width * clamp(cmds.safearea[1], 0, 25)/100,\n      new_height * clamp(cmds.safearea[2], 0, 25)/100,\n      new_height * clamp(cmds.safearea[3], 0, 25)/100);\n  }\n  if (!v4same(safearea_canvas, last_safearea_canvas)) {\n    v4copy(last_safearea_canvas, safearea_canvas);\n    camera2d.setSafeAreaPadding(safearea_canvas[0], safearea_canvas[1], safearea_canvas[2], safearea_canvas[3]);\n    need_repos = max(need_repos, 1);\n  }\n\n  if (new_width !== last_canvas_width || new_height !== last_canvas_height) {\n    window.pixel_scale = dom_to_canvas_ratio; // for debug\n    last_canvas_width = canvas.width = new_width || 1;\n    last_canvas_height = canvas.height = new_height || 1;\n\n    width = canvas.width;\n    height = canvas.height;\n\n    // For the next 10 frames, make sure font size is correct\n    need_repos = 10;\n    renderNeeded();\n  }\n  if (window.visualViewport && (is_ios_safari || true)) {\n    // Note: used to also have: || need_repos // or screen was just rotated / resized\n\n    // we have accurate view information, force scroll to top, always\n    // should maybe do this any time an edit box is not in focus as well\n    if (window.pageYOffset || window.document.body && window.document.body.scrollTop) {\n      window.scroll(0,0);\n    }\n  }\n  profilerStop('checkResize');\n}\n\nexport let viewport = vec4(0,0,1,1);\nexport function setViewport(xywh) {\n  v4copy(viewport, xywh);\n  gl.viewport(xywh[0], xywh[1], xywh[2], xywh[3]);\n}\n\nconst MAX_FRAME_TIME = 10000;\nlet frames_requested = 0;\nfunction requestFrame(user_time) {\n  let max_fps = settings.max_fps;\n  let desired_frames = (max_fps >= 250) ? 10 : 1;\n  if (frames_requested >= desired_frames) {\n    return;\n  }\n  if (defines.SLOWLOAD && is_loading) {\n    // Safari on CrossBrowserTesting needs this in order to have some time to load/decode audio data\n    // TODO: Instead, generally, if loading, compare last_tick_cpu vs dt, and if\n    //   we're not idle for at least half of the time and we have *internal*\n    //   loads (textures, sounds, models, NOT user code), delay so that we are.\n    max_fps = 2;\n  }\n  if (desired_frames > 1) {\n    // Ensure we have at least that many frames queued up at any point in time, so they\n    // can fire at less than the normal 4ms browser delay of setTimeout()\n    while (frames_requested < desired_frames) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      setTimeout(tick, 1);\n      frames_requested++;\n    }\n  } else if (max_fps && max_fps > settings.use_animation_frame) {\n    let desired_delay = min(MAX_FRAME_TIME, max(0, round(1000 / max_fps - (user_time || 0))));\n    frames_requested++;\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    setTimeout(tick, desired_delay);\n  } else {\n    frames_requested++;\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    requestAnimationFrame(tick);\n  }\n}\n\nlet mat_projection_10;\nexport let had_3d_this_frame;\nlet need_depth_this_frame;\n\nexport function clearHad3DThisFrame() {\n  had_3d_this_frame = false;\n}\n\nexport function needDepthIn2D() {\n  need_depth_this_frame = true;\n}\n\nexport function setupProjection(use_fov_y, use_width, use_height, znear, zfar) {\n  mat4Perspective(mat_projection, use_fov_y, use_width/use_height, znear, zfar);\n  mat_projection_10 = mat_projection[10];\n  // v4set(projection_inverse,\n  //   2 / (use_width * mat_projection[0]), // projection_matrix.m00),\n  //   2 / (use_height * mat_projection[5]), // projection_matrix.m11),\n  //   -(1 + mat_projection[8]) / mat_projection[0], // projection_matrix.m20) / projection_matrix.m00,\n  //   -(1 + mat_projection[9]) / mat_projection[5] // projection_matrix.m21) / projection_matrix.m11\n  // );\n}\n\nexport function setProjection(new_mat) {\n  mat4Copy(mat_projection, new_mat);\n  mat_projection_10 = mat_projection[10];\n}\n\nexport function setZRange(znear, zfar) {\n  ZNEAR = znear;\n  ZFAR = zfar;\n  if (had_3d_this_frame) {\n    setupProjection(fov_y, width_3d, height_3d, ZNEAR, ZFAR);\n  }\n}\n\nfunction set3DRenderResolution(w, h) {\n  width_3d = w;\n  height_3d = h;\n}\n\nlet want_render_scale_3d_this_frame;\nlet had_render_scale_3d_this_frame;\nexport function start3DRendering(opts) {\n  opts = opts || {};\n  if (opts.width) {\n    set3DRenderResolution(opts.width, opts.height);\n  }\n  setFOV(opts.fov || (settings.fov * PI / 180));\n  had_3d_this_frame = true;\n  need_depth_this_frame = false;\n  if (!opts.width && want_render_scale_3d_this_frame && !defines.NOCOPY) {\n    had_render_scale_3d_this_frame = true;\n    effectsPassAdd();\n  }\n  blendModeReset(true);\n  gl.enable(gl.BLEND);\n  gl.enable(gl.DEPTH_TEST);\n  gl.depthMask(true);\n  let backbuffer_width = width_3d;\n  let backbuffer_height = height_3d;\n  if (opts.viewport) {\n    // Rendering to a viewport within the backbuffer, and postprocessing must be\n    // UI-level and want to grab the whole thing.\n    backbuffer_width = render_width || width;\n    backbuffer_height = render_height || height;\n  }\n  framebufferStart({\n    width: backbuffer_width,\n    height: backbuffer_height,\n    final: effectsIsFinal(),\n    need_depth: opts.need_depth || true,\n    clear: true,\n    clear_all: opts.clear_all === undefined ? settings.render_scale_clear : opts.clear_all,\n    viewport: opts.viewport,\n  });\n\n  setupProjection(fov_y, width_3d, height_3d, ZNEAR, ZFAR);\n\n  gl.enable(gl.CULL_FACE);\n}\n\nfunction renderScaleFinish() {\n  if (defines.NOCOPY) {\n    gl.disable(gl.SCISSOR_TEST);\n    v4set(viewport, 0, 0, width, height);\n    gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n  } else {\n    effectsPassConsume();\n    if (settings.render_scale_mode === 2) {\n      effects.applyPixelyExpand({ final: effectsIsFinal(), clear: false });\n    } else {\n      effects.applyCopy({ filter_linear: settings.render_scale_mode === 0 });\n    }\n  }\n}\n\nexport function startSpriteRendering() {\n  gl.disable(gl.CULL_FACE);\n  blendModeReset(true);\n  gl.enable(gl.BLEND);\n  gl.disable(gl.DEPTH_TEST);\n  gl.depthMask(false);\n  spriteDrawReset();\n}\n\nexport function projectionZBias(dist, at_z) {\n  if (!dist) {\n    mat_projection[10] = mat_projection_10;\n    return;\n  }\n  //let e = 2 * ZFAR * ZNEAR / (ZFAR - ZNEAR) * (dist / (at_z * (at_z + dist)));\n  let e = 0.2 * (dist / (at_z * (at_z + dist)));\n  e = max(e, 2e-7);\n  mat_projection[10] = mat_projection_10 + e;\n}\n\nexport function fixNatives(is_startup) {\n  // If any browser extensions have added things to the Array prototype, remove them!\n  let b = [];\n  for (let a in b) {\n    console[is_startup ? 'log' : 'error'](`Found invasive enumerable property \"${a}\" on Array.prototype, removing...`);\n    let old_val = b[a];\n    errorReportSetDetails(`had_native_${a}`, typeof old_val);\n    delete Array.prototype[a];\n    // If this fails to work, perhaps try using Object.preventExtensions(Array.prototype) in an inline header script?\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Array.prototype, a, { value: old_val, enumerable: false });\n  }\n  for (let a in b) {\n    // Failed: code that iterates arrays will fail\n    assert(false, `Array.prototype has unremovable member ${a}`);\n  }\n}\n\nfunction resetState() {\n  // Only geomResetState appears to have been strictly needed to work around\n  //  a bug on Chrome 71, but doing the rest of this to be safe.\n  profilerStart('resetState');\n  profilerStart('textures');\n  textureResetState();\n  profilerStopStart('shaders');\n  shadersResetState();\n  profilerStopStart('geom;gl');\n  geomResetState();\n\n  // These should already be true:\n  blendModeReset(true);\n  // gl.disable(gl.BLEND);\n  gl.enable(gl.BLEND);\n  // gl.disable(gl.DEPTH_TEST);\n  gl.enable(gl.DEPTH_TEST);\n  // gl.depthMask(false);\n  gl.depthMask(true);\n  // gl.disable(gl.CULL_FACE);\n  gl.enable(gl.CULL_FACE);\n  // gl.depthFunc(gl.GEQUAL);\n  gl.depthFunc(gl.LEQUAL);\n  // gl.enable(gl.SCISSOR_TEST);\n  gl.disable(gl.SCISSOR_TEST);\n  // gl.cullFace(gl.FRONT);\n  gl.cullFace(gl.BACK);\n  gl.viewport(0, 0, width, height);\n  profilerStop();\n  profilerStop('resetState');\n}\n\nlet blurred = false;\nlet in_background = false;\nlet enter_background_cb = [];\nlet exit_background_cb = [];\nexport function isInBackground() {\n  return in_background;\n}\nexport function isInBackgroundOrBlurred() {\n  return in_background || blurred;\n}\nexport function onEnterBackground(fn) {\n  enter_background_cb.push(fn);\n}\nexport function onExitBackground(fn) {\n  exit_background_cb.push(fn);\n}\n\nexport function dirtyRenderSet(value) {\n  dirty_render = value;\n}\n\nexport const hrnow = window.performance && window.performance.now ?\n  window.performance.now.bind(window.performance) :\n  Date.now.bind(Date);\n\nlet last_tick = 0;\nlet last_tick_hr = 0;\nlet frame_limit_time_left = 0;\nfunction tick(timestamp) {\n  profilerFrameStart();\n  profilerStart('tick');\n  profilerStart('top');\n  frames_requested--;\n\n  if (render_frames_needed) {\n    --render_frames_needed;\n  }\n  if (dirty_render && !render_frames_needed) {\n    resetEffects();\n    input.tickInputInactive();\n    last_tick_cpu = 0;\n    for (let ii = post_tick.length - 1; ii >= 0; --ii) {\n      if (post_tick[ii].inactive && !--post_tick[ii].ticks) {\n        post_tick[ii].fn();\n        ridx(post_tick, ii);\n      }\n    }\n    requestFrame();\n    profilerStop();\n    return profilerStop('tick');\n  }\n\n\n  // if (timestamp < 1e12) { // high resolution timer\n  //   this ends up being a value way back in time, relative to what hrnow() returns,\n  //   and even back in time relative to input events already dispatched,\n  //   causing timing confusion, so ignore it, just call hrnow()\n  //   hrtime = timestamp;\n  // } else { // probably integer milliseconds since epoch, or nothing\n  hrtime = hrnow();\n  // }\n\n  let dt_raw = hrtime - last_tick_hr;\n  last_tick_hr = hrtime;\n  let max_fps = settings.max_fps;\n  if (max_fps && max_fps <= settings.use_animation_frame) {\n    // using requestAnimationFrame, need to apply max_fps ourselves\n    frame_limit_time_left -= dt_raw;\n    if (frame_limit_time_left > 0) {\n      // too early, skip this frame, do not count any of this time, pretend this frame never happened.\n      requestFrame();\n      profilerStop('top');\n      return profilerStop('tick');\n    }\n    let frame_time = min(MAX_FRAME_TIME, 1000 / max_fps - 0.1);\n    frame_limit_time_left += frame_time;\n    if (frame_limit_time_left < 0) {\n      // more than two frames passed, don't accumulate extra frames\n      frame_limit_time_left = 0;\n    }\n  }\n\n  let now = round(hrtime); // Code assumes integer milliseconds\n  if (!last_tick) {\n    last_tick = now;\n  }\n  this_frame_time_actual = now - last_tick;\n  let dt = min(max(this_frame_time_actual, 1), 250);\n  frame_dt = dt;\n  last_tick = now;\n  frame_timestamp += dt;\n  errorReportSetTimeAccum(frame_timestamp);\n\n  fixNatives(false);\n\n  // let this_net_time = wsclient.getNetTime();\n  // fpsgraph.history[(fpsgraph.index % PERF_HISTORY_SIZE) * 3 + 0] = this_net_time;\n  fpsgraph.history[(fpsgraph.index % PERF_HISTORY_SIZE) * 2 + 1] = this_frame_time_actual;\n  fpsgraph.index++;\n  fpsgraph.history[(fpsgraph.index % PERF_HISTORY_SIZE) * 2 + 0] = 0;\n\n  ++mspf_frame_count;\n  mspf_tick_accum += last_tick_cpu;\n  // net_time_accum += this_net_time;\n  if (now - mspf_update_time > settings.fps_window * 1000) {\n    if (!mspf_update_time) {\n      mspf_update_time = now;\n    } else {\n      mspf = (now - mspf_update_time) / mspf_frame_count;\n      mspf_tick = mspf_tick_accum / mspf_frame_count;\n      mspf_tick_accum = 0;\n      garbage_estimate = profilerGarbageEstimate() / 1024;\n      // net_time = net_time_accum / mspf_frame_count;\n      // net_time_accum = 0;\n      mspf_frame_count = 0;\n      mspf_update_time = now;\n    }\n  }\n\n  perfCounterTick(dt);\n\n  effectsTopOfFrame();\n\n  if (document.hidden || document.webkitHidden || no_render) {\n    resetEffects();\n    input.tickInputInactive();\n    last_tick_cpu = 0;\n    for (let ii = post_tick.length - 1; ii >= 0; --ii) {\n      if (post_tick[ii].inactive && !--post_tick[ii].ticks) {\n        post_tick[ii].fn();\n        ridx(post_tick, ii);\n      }\n    }\n    requestFrame();\n    profilerStop();\n    return profilerStop('tick');\n  }\n\n  ++frame_index;\n\n  if (in_background) {\n    in_background = false;\n    callEach(exit_background_cb);\n  }\n\n  checkResize();\n  had_3d_this_frame = false;\n  need_depth_this_frame = false;\n  want_render_scale_3d_this_frame = false;\n  had_render_scale_3d_this_frame = false;\n  if (render_width) {\n    // render_scale not supported with render_width, doesn't make much sense, just use render_width\n    set3DRenderResolution(render_width, render_height);\n    effectsPassAdd();\n  } else {\n    width_3d = max(1, round(width * settings.render_scale));\n    height_3d = max(1, round(height * settings.render_scale));\n    if (width_3d !== width) {\n      want_render_scale_3d_this_frame = true;\n    }\n  }\n\n  resetState();\n  spriteResetTopOfFrame();\n\n  textureBind(0, textureError());\n\n  fontTick();\n  camera2d.tickCamera2D();\n  glov_transition.render(dt);\n  camera2d.setAspectFixedRespectPixelPerfect(game_width, game_height);\n\n  profilerStopStart('mid');\n\n  soundTick(dt);\n  input.tickInput();\n  uiTick(dt);\n\n  if (need_repos) {\n    --need_repos;\n    let ul = [];\n    camera2d.virtualToDom(ul, [0,0]);\n    let lr = [];\n    camera2d.virtualToDom(lr, [game_width-1,game_height-1]);\n    let viewport2 = [ul[0], ul[1], lr[0], lr[1]];\n    let view_height = viewport2[3] - viewport2[1];\n    // default font size of 16 when at height of game_height\n    let font_size = min(256, max(2, floor(view_height/800 * 16)));\n    let elem_fullscreen = document.getElementById('fullscreen');\n    if (elem_fullscreen) {\n      elem_fullscreen.style['font-size'] = `${font_size}px`;\n    }\n  }\n\n  if (do_borders) {\n    // Borders\n    drawRect(camera2d.x0Real(), camera2d.y0Real(), camera2d.x1Real(), 0, Z.BORDERS, border_color);\n    drawRect(camera2d.x0Real(), game_height, camera2d.x1Real(), camera2d.y1Real(), Z.BORDERS, border_color);\n    drawRect(camera2d.x0Real(), 0, 0, game_height, Z.BORDERS, border_color);\n    drawRect(game_width, 0, camera2d.x1Real(), game_height, Z.BORDERS, border_color);\n  }\n\n  perf.draw();\n\n  profilerStopStart('app_state');\n  for (let ii = 0; ii < app_tick_functions.length; ++ii) {\n    app_tick_functions[ii](dt);\n  }\n  if (app_state) {\n    app_state(dt);\n  }\n\n  profilerStopStart('bottom');\n  spotEndInput();\n  glov_particles.tick(dt); // *after* app_tick, so newly added/killed particles can be queued into the draw list\n\n  if (had_3d_this_frame) {\n    if (had_render_scale_3d_this_frame) {\n      renderScaleFinish();\n    }\n  } else {\n    // delayed clear (and general GL init) until after app_state, app might change clear color\n    if (render_width) {\n      // assert(!effectsIsFinal());\n      framebufferStart({\n        width: render_width,\n        height: render_height,\n        clear: true,\n        clear_all: settings.render_scale_clear, // Not sure if this is ever faster in this case?\n        final: effectsIsFinal(),\n        need_depth: need_depth_this_frame,\n      });\n    } else {\n      framebufferStart({\n        width,\n        height,\n        clear: true,\n        final: effectsIsFinal(),\n        need_depth: need_depth_this_frame,\n      });\n    }\n  }\n\n  if (pre_sprite_render) {\n    callEach(pre_sprite_render, pre_sprite_render = null);\n  }\n\n  startSpriteRendering();\n  spriteDraw();\n\n  uiEndFrame();\n\n  if (post_render) {\n    callEach(post_render, post_render = null);\n  }\n\n  if (render_width) {\n    effectsPassConsume();\n    let final_viewport = [\n      camera2d.render_offset_x, camera2d.render_offset_y_bottom,\n      camera2d.render_viewport_w, camera2d.render_viewport_h\n    ];\n    let params = {\n      clear: true,\n      clear_all: true,\n      clear_color: border_clear_color,\n      viewport: final_viewport,\n    };\n    if (do_viewport_postprocess) {\n      effects.applyPixelyExpand(params);\n    } else {\n      effects.applyCopy(params);\n    }\n  }\n\n  input.endFrame();\n  resetEffects();\n  textureTick();\n\n  for (let ii = post_tick.length - 1; ii >= 0; --ii) {\n    if (!--post_tick[ii].ticks) {\n      post_tick[ii].fn();\n      ridx(post_tick, ii);\n    }\n  }\n\n  last_tick_cpu = hrnow() - now;\n  fpsgraph.history[(fpsgraph.index % PERF_HISTORY_SIZE) * 2 + 0] = last_tick_cpu;\n  requestFrame(hrnow() - hrtime);\n  profilerStop('bottom');\n  return profilerStop('tick');\n}\n\nfunction onBlur(evt) {\n  blurred = true;\n}\n\nfunction onFocus(evt) {\n  blurred = false;\n}\n\nfunction periodiclyRequestFrame() {\n  requestFrame();\n  setTimeout(periodiclyRequestFrame, 1000);\n\n  if (!in_background && blurred) {\n    let now = round(hrnow());\n    if (now - last_tick > 400) {\n      in_background = true;\n      callEach(enter_background_cb);\n    }\n  }\n}\n\n// Must be called out-of-frame (use setTimeout) if not at startup\nexport function setPixelyStrict(on) {\n  if (on) {\n    render_width = game_width;\n    render_height = game_height;\n  } else {\n    render_width = undefined;\n    render_height = undefined;\n  }\n}\n\nexport function getViewportPostprocess() {\n  return do_viewport_postprocess;\n}\nexport function setViewportPostprocess(viewport_postprocess) {\n  do_viewport_postprocess = viewport_postprocess;\n}\n\nexport function setFonts(new_font, title_font) {\n  font = new_font;\n  uiSetFonts(new_font, title_font);\n}\n\nexport function engineStartupFunc(func) {\n  if (startup_funcs) {\n    startup_funcs.push(func);\n  } else {\n    func();\n  }\n}\n\nexport function startup(params) {\n  fixNatives(true);\n\n  assert(window.glov_webfs, 'Failed to load fsdata.js');\n  webFSStartup(window.glov_webfs, urlhash.getURLBase());\n\n  canvas = document.getElementById('canvas');\n  safearea_elem = document.getElementById('safearea');\n\n  if (params.error_report === false) {\n    glovErrorReportDisableSubmit();\n  }\n\n  if (DEBUG) {\n    dataErrorQueueEnable(true);\n  }\n\n  if (DEBUG && !window.spector) {\n    // Add check to catch common error of `const FOO=10; for (let i=0; i < FOO.length; i++) {}`\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Number.prototype, 'length', {\n      get: function () {\n        assert(false, 'Numbers do not have a length property');\n        return undefined;\n      }\n    });\n  }\n\n  safearea_ignore_bottom = params.safearea_ignore_bottom || false;\n\n  // resize the canvas to fill browser window dynamically\n  window.addEventListener('resize', checkResize, false);\n  checkResize();\n\n  let is_pixely = params.pixely && params.pixely !== 'off';\n  antialias = params.antialias || !is_pixely && params.antialias !== false;\n  let powerPreference = params.high ? 'high-performance' : 'default';\n  let context_names = ['webgl2', 'webgl', 'experimental-webgl'];\n  let force_webgl1 = defines.NOWEBGL2;\n  let disable_data = local_storage.getJSON('webgl2_disable');\n  // Check if a previous, recent run had an error that hinted we should disable WebGL2\n  if (disable_data && disable_data.ua === navigator.userAgent && disable_data.ts > Date.now() - 7*24*60*60*1000) {\n    console.log('Disabling WebGL2 because a previous run encountered a related error');\n    force_webgl1 = true;\n  }\n  if (DEBUG && !(defines.FORCEWEBGL2 || params.force_webgl2)) {\n    let rc = local_storage.getJSON('run_count', 0) + 1;\n    local_storage.setJSON('run_count', rc);\n    if (rc % 2) {\n      force_webgl1 = true;\n    }\n  }\n  if (force_webgl1) {\n    context_names.splice(0, 1);\n  }\n  let context_opts = [\n    { antialias, powerPreference, alpha: false },\n    { powerPreference, alpha: false },\n    { antialias, alpha: false },\n    { alpha: false },\n    {},\n  ];\n  let good = false;\n  webgl2 = false;\n  for (let i = 0; !good && i < context_names.length; i += 1) {\n    for (let jj = 0; !good && jj < context_opts.length; ++jj) {\n      try {\n        window.gl = canvas.getContext(context_names[i], context_opts[jj]);\n        if (window.gl) {\n          if (context_names[i] === 'webgl2') {\n            webgl2 = true;\n          }\n          if (antialias && !context_opts[jj].antialias) {\n            antialias_unavailable = true;\n            antialias = false;\n          }\n          good = true;\n          break;\n        }\n      } catch (e) {\n        // ignore\n      }\n    }\n  }\n  if (!window.requestAnimationFrame) {\n    // SamsungBrowser/1.1 - apparently has WebGL, but not requestAnimationFrame; also not binary WebSockets\n    good = false;\n  }\n  if (good) {\n    // ensure at least basic shaders compile\n    let shaders_supported = shadersStartup({\n      light_diffuse,\n      light_dir_ws,\n      ambient: light_ambient,\n      mat_m: mat_m,\n      mat_mv: mat_mv,\n      mat_vp: mat_vp,\n      mvp: mat_mvp,\n      mv_inv_trans: mat_mv_inv_transform,\n      mat_inv_view: mat_inv_view,\n      view: mat_view,\n      projection: mat_projection,\n      // projection_inverse,\n    });\n    if (!shaders_supported) {\n      good = false;\n    }\n  }\n\n  if (!good) {\n    // eslint-disable-next-line no-alert\n    window.alert(`${\n      window.gl ?\n        'Error initializing WebGL.\\n' :\n        'Error initializing WebGL: your browser does not support WebGL or does not have it enabled.\\n'}` +\n      'Try completely closing and re-opening the app or browser.' +\n      '  If the problem persists, try restarting your device.');\n    document.getElementById('loading').style.visibility = 'hidden';\n    document.getElementById('nowebgl').style.visibility = 'visible';\n    return false;\n  }\n\n  glovErrorReportSetCrashCB(function () {\n    setTimeout(requestFrame, 1);\n  });\n\n  let nocanvas = document.getElementById('nocanvas');\n  if (verify(nocanvas)) {\n    // hide the interior of the <canvas> elements, so that the get.webgl.org link is not focusable!\n    nocanvas.style.visibility = 'hidden';\n  }\n  console.log(`Using WebGL${webgl2?2:1}`);\n\n  assert(gl);\n  canvas.focus();\n  setGameDims(params.game_width || 1280, params.game_height || 960);\n  ZNEAR = params.znear || 0.7;\n  ZFAR = params.zfar || 10000;\n  setPixelyStrict(params.pixely === 'strict');\n  if (params.viewport_postprocess) {\n    do_viewport_postprocess = true;\n  }\n  pixel_aspect = params.pixel_aspect || 1;\n  render_pixel_perfect = params.pixel_perfect || 0;\n\n  gl.depthFunc(gl.LEQUAL);\n  // gl.enable(gl.SCISSOR_TEST);\n  gl.cullFace(gl.BACK);\n  gl.clearColor(0, 0.1, 0.2, 1);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1); // Allow RGB texture data with non-mult-4 widths\n\n  textureStartup();\n  geomStartup();\n  addViewSpaceGlobal('light_dir');\n  camera2d.startup();\n  spriteStartup();\n  input.startup(canvas, params);\n  modelStartup();\n\n  window.addEventListener('blur', onBlur, false);\n  window.addEventListener('focus', onFocus, false);\n\n  /* eslint-disable global-require */\n  glov_particles = require('./particles.js').create();\n\n  if (is_pixely) {\n    textureDefaultFilters(gl.NEAREST, gl.NEAREST);\n    settings.runTimeDefault('render_scale_mode', 1);\n  } else {\n    textureDefaultFilters(gl.LINEAR_MIPMAP_LINEAR, gl.LINEAR);\n  }\n\n  assert(params.font);\n  // If not, something like:\n  // const font_info_04b03x2 = require('../img/font/04b03_8x2.json');\n  // const font_info_04b03x1 = require('../img/font/04b03_8x1.json');\n  // const font_info_palanquin32 = require('../img/font/palanquin32.json');\n  // if (params.pixely === 'strict') {\n  //   font = glov_font.create(font_info_04b03x1, 'font/04b03_8x1');\n  // } else if (is_pixely) {\n  //   font = glov_font.create(font_info_04b03x2, 'font/04b03_8x2');\n  // } else {\n  //   font = glov_font.create(font_info_palanquin32, 'font/palanquin32');\n  // }\n  params.font = font = glov_font.create(params.font.info, params.font.texture);\n  if (params.title_font) {\n    params.title_font = glov_font.create(params.title_font.info, params.title_font.texture);\n  }\n  uiStartup(params);\n\n  soundStartup(params.sound);\n  uiBindSounds(params.ui_sounds);\n\n  buildUIStartup();\n  shaderDebugUIStartup();\n  profilerUIStartup();\n\n  callEach(startup_funcs, startup_funcs = null);\n\n  camera2d.setAspectFixedRespectPixelPerfect(game_width, game_height);\n\n  if (params.state) {\n    setState(params.state);\n  }\n  if (params.do_borders !== undefined) {\n    do_borders = params.do_borders;\n  }\n  if (params.show_fps !== undefined) {\n    settings.show_fps = params.show_fps;\n  }\n  dirty_render = Boolean(params.dirty_render);\n\n  periodiclyRequestFrame();\n  return true;\n}\n\nlet custom_loads_pending = 0;\nexport function loadPendingDelta(delta) {\n  custom_loads_pending += delta;\n}\n\nexport function loadsPending() {\n  return textureLoadCount() + soundLoading() + modelLoadCount() + custom_loads_pending;\n}\n\nlet on_load_metrics = [];\nexport function onLoadMetrics(cb) {\n  on_load_metrics.push(cb);\n}\n\nonLoadMetrics((obj) => {\n  console.log([\n    'Load time summary',\n    `  ${obj.time_js_load}ms JS load`,\n    `  ${obj.time_js_init}ms JS init`,\n    `  ${obj.time_resource_load}ms resource load`,\n    `${obj.time_total}ms total`\n  ].join('\\n'));\n});\n\nfunction loadingFinished() {\n  let now = Date.now();\n  let time_js_load = window.time_load_onload - window.time_load_start;\n  let time_js_init = window.time_load_init - window.time_load_onload;\n  let time_resource_load = now - window.time_load_init;\n  let time_total = now - window.time_load_start;\n  callEach(on_load_metrics, null, {\n    time_js_load,\n    time_js_init,\n    time_resource_load,\n    time_total,\n  });\n  profanityStartupLate();\n}\n\nfunction loading() {\n  let load_count = loadsPending();\n  let elem_loading_text = document.getElementById('loading_text');\n  if (elem_loading_text) {\n    elem_loading_text.innerText = `Loading (${load_count})...`;\n  }\n  renderNeeded();\n  if (!load_count) {\n    is_loading = false;\n    app_state = after_loading_state;\n    // Clear after next frame, so something is rendered to the canvas\n    postTick({\n      ticks: 2,\n      fn: function () {\n        loadingFinished();\n        renderNeeded();\n        let loading_elem = document.getElementById('loading');\n        if (loading_elem) {\n          loading_elem.style.visibility = 'hidden';\n        }\n      }\n    });\n  }\n}\napp_state = loading;\n\nwindow.glov_engine = exports;\n","import * as cmd_parse_mod from 'glov/common/cmd_parse';\nimport { netDelayGet, netDelaySet } from 'glov/common/wscommon';\nimport { cmd_parse } from './cmds';\nimport * as engine from './engine';\nimport { errorReportDetailsString } from './error_report';\nimport { fetchDelaySet } from './fetch';\nimport { netClient, netDisconnected } from './net';\nimport { SEMANTIC } from './shaders';\nimport { textureGetAll } from './textures';\n\nwindow.cmd = function (str) {\n  cmd_parse.handle(null, str, cmd_parse_mod.defaultHandler);\n};\n\nfunction byteFormat(bytes) {\n  if (bytes > 850000) {\n    return `${(bytes/(1024*1024)).toFixed(2)}MB`;\n  }\n  if (bytes > 850) {\n    return `${(bytes/1024).toFixed(2)}KB`;\n  }\n  return `${bytes}B`;\n}\n\ncmd_parse.register({\n  cmd: 'texmem',\n  help: 'Displays texture memory usage',\n  func: function (str, resp_func) {\n    let all_textures = textureGetAll();\n    let keys = Object.keys(all_textures);\n    keys = keys.filter((a) => all_textures[a].gpu_mem > 1024);\n    keys.sort((a, b) => all_textures[a].gpu_mem - all_textures[b].gpu_mem);\n    resp_func(null, keys.map((a) => `${byteFormat(all_textures[a].gpu_mem)} ${a}`).join('\\n'));\n  }\n});\n\ncmd_parse.register({\n  cmd: 'gpumem',\n  help: 'Displays GPU memory usage summary',\n  func: function (str, resp_func) {\n    let { gpu_mem } = engine.perf_state;\n    resp_func(null, `${byteFormat(gpu_mem.geom)} Geo\\n${byteFormat(gpu_mem.tex)} Tex\\n${\n      byteFormat(gpu_mem.geom + gpu_mem.tex)} Total`);\n  }\n});\n\nfunction validDefine(str) {\n  if (SEMANTIC[str] !== undefined) {\n    return false;\n  }\n  return str.match(/^[A-Z][A-Z0-9_]*$/);\n}\n\ncmd_parse.register({\n  cmd: 'd',\n  help: 'Toggles a debug define',\n  func: function (str, resp_func) {\n    str = str.toUpperCase().trim();\n    if (!str) {\n      if (engine.definesClearAll()) {\n        return void resp_func(null, 'All debug defines cleared');\n      } else {\n        return void resp_func(null, 'No debug defines active');\n      }\n    }\n    if (!validDefine(str)) {\n      return void resp_func('Invalid define specified');\n    }\n    engine.defines[str] = !engine.defines[str];\n    resp_func(null, `D=${str} now ${engine.defines[str]?'SET':'unset'}`);\n    engine.definesChanged();\n  }\n});\n\ncmd_parse.register({\n  cmd: 'renderer',\n  help: 'Displays current renderer',\n  func: function (str, resp_func) {\n    resp_func(null, `Renderer=WebGL${engine.webgl2?2:1}`);\n  }\n});\n\ncmd_parse.registerValue('postprocessing', {\n  label: 'Postprocessing',\n  type: cmd_parse.TYPE_INT,\n  help: 'Enables/disables postprocessing',\n  get: () => (engine.postprocessing ? 1 : 0),\n  set: (v) => engine.postprocessingAllow(v),\n});\n\ncmd_parse.register({\n  cmd: 'net_delay',\n  help: 'Sets/shows network delay values',\n  usage: '$HELP\\n/net_delay time_base time_rand',\n  func: function (str, resp_func) {\n    if (str) {\n      let params = str.split(' ');\n      netDelaySet(Number(params[0]), Number(params[1]) || 0);\n      fetchDelaySet(Number(params[0]), Number(params[1]) || 0);\n    }\n    let cur = netDelayGet();\n    resp_func(null, `Client NetDelay: ${cur[0]}+${cur[1]}`);\n  }\n});\n\ncmd_parse.register({\n  cmd: 'error_report_details',\n  help: 'Shows details submitted with any error report',\n  access_show: ['hidden'],\n  func: function (str, resp_func) {\n    resp_func(null, errorReportDetailsString());\n  },\n});\n\ncmd_parse.register({\n  cmd: 'disconnect',\n  help: 'Forcibly disconnect WebSocket connection (Note: will auto-reconnect)',\n  prefix_usage_with_help: true,\n  usage: '/disconnect [disconnnect_duration [disconnect_delay]]',\n  func: function (str, resp_func) {\n    let socket = netClient()?.socket;\n    if (!socket) {\n      return void resp_func('No socket');\n    }\n    if (netDisconnected()) {\n      return void resp_func('Not connected');\n    }\n    let params = str.split(' ').map(Number);\n    let disconnect_duration = isFinite(params[0]) ? params[0] : 0;\n    let disconnect_delay = isFinite(params[1]) ? params[1] : 0;\n    netClient().retry_extra_delay = disconnect_duration;\n    if (disconnect_delay) {\n      setTimeout(socket.close.bind(socket), disconnect_delay);\n    } else {\n      socket.close();\n    }\n    resp_func();\n  },\n});\n\nexport function resetSettings() {\n  let results = cmd_parse.resetSettings();\n  if (engine.definesClearAll()) {\n    results.push('Debug defines cleared');\n  }\n  if (!results.length) {\n    return null;\n  }\n  results.push('Please restart the app or reload to page for the new settings to take effect.');\n  return results.join('\\n');\n}\n\ncmd_parse.register({\n  cmd: 'reset_settings',\n  help: 'Resets all settings and options to their defaults (Note: requires an app restart)',\n  func: function (str, resp_func) {\n    resp_func(null, resetSettings() || 'No stored settings to reset');\n  },\n});\n","import assert from 'assert';\nimport { setAbilityReloadUpdates } from './client_config';\nimport { netForceDisconnect } from './net';\nimport * as urlhash from './urlhash';\n\nimport type { CmdParse, CmdRespFunc } from 'glov/common/cmd_parse';\n\nexport interface EnvironmentConfig {\n  name: string;\n  link_base?: string;\n  api_path?: string;\n}\n\nlet all_environments: Partial<Record<string, EnvironmentConfig>> = {};\nlet current_environment: EnvironmentConfig | null = null;\nlet default_environment: EnvironmentConfig | null = null;\n\nlet link_base: string;    // Link base like http://foo.bar/ (with trailing slash)\nlet api_path: string;     // API base like http://foo.bar/api/ (with trailing slash)\nlet texture_base: string; // Texture base like http://foo.bar/ (with trailing slash)\n\nfunction applyEnvironment(): void {\n  link_base = (current_environment && current_environment.link_base) || urlhash.getURLBase();\n  api_path = (current_environment && current_environment.api_path) || `${link_base}api/`;\n  texture_base = link_base.replace('//localhost:', '//127.0.0.1:');\n}\n\n// Default initialization\napplyEnvironment();\n\nexport function getCurrentEnvironment<T extends EnvironmentConfig>(): T | null {\n  return current_environment as (T | null);\n}\nexport function setCurrentEnvironment(environment_name: string | undefined | null): void {\n  let prev_environment = current_environment;\n  current_environment = (environment_name && all_environments[environment_name]) || default_environment;\n  if (current_environment !== prev_environment) {\n    applyEnvironment();\n    setAbilityReloadUpdates(false);\n    netForceDisconnect();\n  }\n}\n\nexport function getLinkBase(): string {\n  return link_base;\n}\nexport function getAPIPath(): string {\n  return api_path;\n}\nexport function getExternalTextureURL(url: string): string {\n  return url.match(/^.{2,7}:/) ? url : `${texture_base}${url}`;\n}\n\nexport function environmentsInit<T extends EnvironmentConfig>(\n  environments: Array<T>,\n  cmd_parse: CmdParse | null,\n  default_environment_name?: string | undefined | null,\n): void {\n  all_environments = {};\n  let all_names = [];\n  for (let i = 0, len = environments.length; i < len; i++) {\n    let env = environments[i];\n    let env_name = env.name;\n    assert(env_name.length > 0);\n    all_environments[env_name] = env;\n    all_names.push(env_name);\n  }\n\n  current_environment = default_environment =\n    (default_environment_name && all_environments[default_environment_name]) || null;\n  applyEnvironment();\n\n  if (!all_names.some((name) => name.toLowerCase() === 'default')) {\n    all_names.push('default');\n  }\n  if (cmd_parse) {\n    cmd_parse.registerValue('environment', {\n      type: cmd_parse.TYPE_STRING,\n      help: 'Display or set the current client environment',\n      usage: 'Display the current client environment\\n  Usage: /environment\\n' +\n        `Set the current client environment (${all_names.join(', ')})\\n  Usage: /environment <environment_name>`,\n      label: 'Environment',\n      get: () => JSON.stringify(getCurrentEnvironment() || 'default', null, 2),\n      set: setCurrentEnvironment,\n      access_show: ['sysadmin'],\n    });\n\n    cmd_parse.register({\n      cmd: 'env',\n      help: 'Alias for /environment',\n      access_show: ['sysadmin'],\n      func: function (str: string, resp_func: CmdRespFunc) {\n        cmd_parse.handle(this, `environment ${str}`, resp_func);\n      },\n    });\n  }\n\n  if (document.location.pathname.match(/index\\.\\d+\\.\\d+\\.\\d+\\.html$/)) {\n    // this is a hashed, versioned, production index that is likely referencing older assets, do not do reload\n    setAbilityReloadUpdates(false);\n  }\n}\n","/* global location */\n\nexport let session_uid = `${String(Date.now()).slice(-8)}${String(Math.random()).slice(2,8)}`;\nlet error_report_details = {};\nlet error_report_dynamic_details = {};\n\nimport { getAPIPath } from 'glov/client/environments';\nimport { platformGetID } from './client_config';\nimport { fetch } from './fetch';\nimport { getStoragePrefix } from './local_storage';\nimport { unlocatePaths } from './locate_asset';\n\nlet error_report_disabled = false;\n\nexport function errorReportDisable() {\n  error_report_disabled = true;\n}\n\nlet ignore_promises = false;\nexport function errorReportIgnoreUncaughtPromises() {\n  ignore_promises = true;\n}\n\nexport function errorReportSetDetails(key, value) {\n  if (value) {\n    error_report_details[key] = escape(String(value));\n  } else {\n    delete error_report_details[key];\n  }\n}\nexport function errorReportSetDynamicDetails(key, fn) {\n  error_report_dynamic_details[key] = fn;\n}\n\nerrorReportSetDetails('build', BUILD_TIMESTAMP);\nerrorReportSetDetails('project', getStoragePrefix());\nerrorReportSetDetails('sesuid', session_uid);\nerrorReportSetDynamicDetails('platform', platformGetID);\nconst time_start = Date.now();\nerrorReportSetDetails('time_start', time_start);\nerrorReportSetDynamicDetails('url', function () {\n  return escape(location.href);\n});\nerrorReportSetDynamicDetails('time_up', function () {\n  return Date.now() - time_start;\n});\nlet time_accum = 0;\nexport function errorReportSetTimeAccum(new_value) {\n  time_accum = new_value;\n}\nerrorReportSetDynamicDetails('time_accum', function () {\n  return time_accum;\n});\n\nfunction getDynamicDetail(key) {\n  let value = error_report_dynamic_details[key]();\n  if (!value && value !== 0) {\n    return '';\n  }\n  return `&${key}=${value}`;\n}\nexport function errorReportDetailsString() {\n  return `&${Object.keys(error_report_details)\n    .map((k) => `${k}=${error_report_details[k]}`)\n    .join('&')}` +\n    `${Object.keys(error_report_dynamic_details).map(getDynamicDetail).join('')}`;\n}\n\nlet last_error_time = 0;\nlet crash_idx = 0;\nexport function hasCrashed() {\n  return crash_idx > 0;\n}\n\nexport function errorReportClear() {\n  last_error_time = 0;\n  window.debugmsg('', true);\n}\n\nlet submit_errors = true;\nexport function glovErrorReportDisableSubmit() {\n  submit_errors = false;\n}\n\nlet on_crash_cb = null;\nexport function glovErrorReportSetCrashCB(cb) {\n  on_crash_cb = cb;\n}\n\n// base like http://foo.com/bar/ (without index.html)\nlet reporting_api_path = 'http://www.dashingstrike.com/reports/api/';\nif (window.location.host.indexOf('localhost') !== -1 ||\n  window.location.host.indexOf('staging') !== -1/* ||\n  window.location.host.indexOf('pink') !== -1*/\n) {\n  reporting_api_path = 'http://staging.dashingstrike.com/reports/api/';\n  // reporting_api_path = 'http://localhost:4022/api/';\n}\nif (window.location.href.startsWith('https://')) {\n  reporting_api_path = reporting_api_path.replace(/^http:/, 'https:');\n}\n\nlet use_app_api_path = false;\nexport function reportingUseAppAPIPath() {\n  use_app_api_path = true;\n}\nexport function reportingAPIPath() {\n  return use_app_api_path ? getAPIPath() : reporting_api_path;\n}\n\n// Errors from plugins that we don't want to get reported to us, or show the user!\nlet filtered_errors = new RegExp([\n  // Generic error that shows up with no context, not useful, and probably coming from internal or extension scripts\n  '^Error: Script error\\\\.$',\n  // The exact phrase \"Script error.\\n  at (0:0)\" comes from our bootstap.js when we\n  //   receive the message 'Script Error.' and no stack.  This happens on the Mi Browser on Redmi phones\n  //   and doesn't seem to be indicative of any actual problem.\n  '^Error: Script error\\\\.\\n  at \\\\(0:0\\\\)$',\n  '^Error: null$',\n  // Ignoring null at null for similar reasons and because we get nothing useful from the reports.\n  '^Error: null\\n  at null\\\\(null:null\\\\)$',\n  'avast_submit',\n  'vc_request_action',\n  'getElementsByTagName\\\\(\\'video\\'\\\\)',\n  'document\\\\.getElementById\\\\(\"search\"\\\\)',\n  'change_ua',\n  'chrome-extension',\n  'setConnectedRobot',\n  'Failed to (?:start|stop) the audio device',\n  'zaloJSV2',\n  'getCookie is not defined',\n  'originalPrompt',\n  '_AutofillCallbackHandler',\n  'sytaxError',\n  'bannerNight',\n  'privateSpecialRepair',\n  '__gCrWeb',\n  '\\\\$wrap is not',\n  'wsWhitelisted',\n  '#darkcss',\n  'chrome://userjs',\n  'worker-hammerhead',\n  'ammerhead-browser',\n  'hammerhead',\n  'isFeatureBroken',\n  'PureRead',\n  'uv\\\\.handler\\\\.js',\n  'dashawn\\\\.cf',\n  'clearTransInfo', // WeChat\n  'firefoxSample',\n  'gourmetads',\n  'apstag', // Amazon Ad network on Safari\n  'otBannerSdk\\\\.js', // OneTrust (maybe when blocked by ad blocker/etc?)\n  'setOTDataLayer', // OneTrust\n  'otSDKStub', // OneTrust\n  'otTCF', // OneTrust\n  'pubads_20', // Some third-party ad provider\n  'ima3\\\\.js', // Google ads\n  'window\\\\.setDgResult', // likely from ad provider\n  'TranslateService',\n  'bdTransJSBridge',\n  'ciuvoSDK',\n  'stubScriptElement',\n  'chrome://internal',\n  'getElementById\\\\(\\'items\\'\\\\)',\n  'closeModal',\n  'WeixinJSBridge',\n  '/prebid', // Some third-party ad provider\n  'property: websredir', // unknown source, happens often for a couple users on Opera and Chrome\n  'property: googletag', // unknown source, Opera ad blocker?\n  'ResizeObserver loop', // unknown source, but isn't used by us\n  'nav_call_update_item_status',\n  'GetHTMLElementsAtPoint', // baiduboxapp\n  'ToolbarStatus',\n  'betal\\\\.org',\n  'changeNetWork', // mobile Vivo\n  'CookieDeprecationLabel', // gtag\n  '__firefox__',\n].join('|'));\n\nexport function glovErrorReport(is_fatal, msg, file, line, col) {\n  msg = unlocatePaths(msg);\n  console.error(msg);\n  if (on_crash_cb) {\n    on_crash_cb();\n  }\n  if (is_fatal) {\n    // Only doing filtering and such on fatal errors, as non-fatal errors are\n    // just logged and should not corrupt state.\n    if (msg.match(filtered_errors) || file && file.match(filtered_errors)) {\n      return false;\n    }\n    ++crash_idx;\n    let now = Date.now();\n    let dt = now - last_error_time;\n    last_error_time = now;\n    if (error_report_disabled) {\n      return false;\n    }\n    if (dt < 30*1000) {\n      // Less than 30 seconds since the last error, either we're erroring every\n      // frame, or this is a secondary error caused by the first, do not report it.\n      // Could maybe hash the error message and just report each message once, and\n      // flag errors as primary or secondary.\n      return false;\n    }\n  }\n  // Post to an error reporting endpoint that (probably) doesn't exist - it'll get in the logs anyway!\n  let url = reportingAPIPath(); // base like http://foo.com/bar/ (without index.html)\n  url += `${is_fatal ? 'errorReport' : 'errorLog'}?cidx=${crash_idx}&file=${escape(unlocatePaths(file))}` +\n    `&line=${line||0}&col=${col||0}` +\n    `&msg=${escape(msg)}${errorReportDetailsString()}`;\n  if (submit_errors) {\n    fetch({ method: 'POST', url }, () => { /* nop */ });\n\n    if (window.gtag) {\n      window.gtag('event', 'exception', {\n        description: msg,\n        fatal: is_fatal,\n      });\n    }\n  }\n  if (ignore_promises && msg.match(/Uncaught \\(in promise\\)/)) {\n    return false;\n  }\n  return true;\n}\n\nwindow.glov_error_report = glovErrorReport.bind(null, true);\n\nlet early_err = window.glov_error_early;\nif (early_err) {\n  window.glov_error_report(early_err.msg, early_err.file, early_err.line, early_err.col);\n}\n","import assert from 'assert';\nimport {\n  ERR_INVALID_PROVIDER,\n  ERR_NOT_AVAILABLE,\n  ERR_UNAUTHORIZED,\n} from 'glov/common/external_users_common';\nimport { ErrorCallback } from 'glov/common/types';\nimport { ExternalUserInfo } from './external_user_info';\nimport { registerExternalUserInfoProvider } from './social';\n\nexport interface LoginData {\n  provider: string;\n  external_id?: string;\n  validation_data?: string;\n}\n\nexport interface LoginOptions {\n  user_initiated: boolean;\n  email?: string;\n  password?: string;\n  do_creation?: boolean;\n  creation_display_name?: string | null;\n  external_login_data?: LoginData;\n}\n\nexport interface ExternalUsersClient {\n  getProvider(): string;\n  enabled(): boolean;\n  logIn(login_options: LoginOptions, cb: ErrorCallback<LoginData, string>): void;\n  logOut(): void;\n  sendActivationEmail?(email: string, cb: ErrorCallback<string, string>): void;\n  loggedIn(): boolean;\n  getCurrentUser(cb: ErrorCallback<ExternalUserInfo, string>): void;\n  getFriends?(cb: ErrorCallback<ExternalUserInfo[], string>): void;\n  getPartyId?(cb: ErrorCallback<string, string>): void;\n  sendRecoverEmail?(email: string, cb: ErrorCallback<string, string>): void;\n  checkEmailVerified?(cb: ErrorCallback<boolean, string>): void;\n}\n\nconst invalid_provider = {\n  getProvider(): string {\n    assert(false);\n  },\n  enabled(): boolean {\n    return false;\n  },\n  loggedIn(): boolean {\n    return false;\n  },\n  logIn(login_options: LoginOptions, cb: ErrorCallback<LoginData, string>): void {\n    cb(ERR_INVALID_PROVIDER);\n  },\n  logOut(): void {\n    // Nothing to do here\n  },\n  getCurrentUser(cb: ErrorCallback<ExternalUserInfo, string>): void {\n    cb(ERR_INVALID_PROVIDER);\n  },\n};\n\nlet setup_clients: Partial<Record<string, ExternalUsersClient>> = {};\nlet setup_auto_login_provider: string | undefined;\nlet setup_auto_login_fallback_provider: string | undefined;\nlet setup_email_pass_login_provider: string | undefined;\n\nfunction getClient(provider: string): ExternalUsersClient {\n  return setup_clients[provider] || invalid_provider;\n}\n\nexport function externalUsersEnabled(provider: string): boolean {\n  let client = setup_clients[provider];\n  return client && client.enabled() || false;\n}\n\nexport function externalUsersLoggedIn(provider: string): boolean {\n  let client = setup_clients[provider];\n  return client && client.loggedIn() || false;\n}\n\nexport function externalUsersAutoLoginProvider(): string | undefined {\n  return setup_auto_login_provider;\n}\n\nexport function externalUsersAutoLoginFallbackProvider(): string | undefined {\n  return setup_auto_login_fallback_provider;\n}\n\nexport function externalUsersEmailPassLoginProvider(): string | undefined {\n  return setup_email_pass_login_provider;\n}\n\nexport function externalUsersSendEmailConfirmation(email: string, cb: ErrorCallback<string, string>): void {\n  assert(setup_email_pass_login_provider);\n  const client = getClient(setup_email_pass_login_provider);\n  assert(client.sendActivationEmail);\n  client.sendActivationEmail(email, cb);\n}\n\nexport function externalUsersCheckEmailVerified(cb: ErrorCallback<boolean, string>): void {\n  assert(setup_email_pass_login_provider);\n  const client = getClient(setup_email_pass_login_provider);\n  assert(client.checkEmailVerified);\n  client.checkEmailVerified(cb);\n}\n\nexport function externalUsersSendRecoverEmail(email: string, cb: ErrorCallback<string, string>): void {\n  assert(setup_email_pass_login_provider);\n  const client = getClient(setup_email_pass_login_provider);\n  assert(client.sendRecoverEmail);\n  client.sendRecoverEmail(email, cb);\n}\n\nexport function externalUsersLogIn(\n  provider: string,\n  login_options: LoginOptions,\n  cb: ErrorCallback<LoginData, string>,\n): void {\n  getClient(provider).logIn(login_options, cb);\n}\n\nexport function externalUsersLogOut(provider?: string): void {\n  if (provider) {\n    getClient(provider).logOut();\n  } else {\n    for (const key in setup_clients) {\n      getClient(key).logOut();\n    }\n  }\n}\n\nexport function externalUsersCurrentUser(provider: string, cb: ErrorCallback<ExternalUserInfo, string>): void {\n  getClient(provider).getCurrentUser(cb);\n}\n\nexport function externalUsersFriends(provider: string, cb: ErrorCallback<ExternalUserInfo[], string>): void {\n  let client = getClient(provider);\n  if (client.getFriends) {\n    client.getFriends(cb);\n  } else {\n    cb(ERR_NOT_AVAILABLE);\n  }\n}\n\nexport function externalUsersPartyId(provider: string, cb: ErrorCallback<string, string>): void {\n  let client = getClient(provider);\n  if (client.getPartyId) {\n    client.getPartyId(cb);\n  } else {\n    cb(ERR_NOT_AVAILABLE);\n  }\n}\n\nexport function externalUsersSetupProvider(client: ExternalUsersClient): void {\n  let provider = client.getProvider();\n  setup_clients[provider] = client;\n  registerExternalUserInfoProvider(\n    provider,\n    function (cb) {\n      if (client.loggedIn()) {\n        client.getCurrentUser(cb);\n      } else {\n        cb(ERR_UNAUTHORIZED);\n      }\n    },\n    client.getFriends && function (cb) {\n      if (client.loggedIn()) {\n        client.getFriends!(cb);\n      } else {\n        cb(ERR_UNAUTHORIZED);\n      }\n    },\n  );\n}\n\nexport function externalUsersSetup(\n  clients: ExternalUsersClient[],\n  auto_login_provider?: string,\n  auto_login_fallback_provider?: string,\n  email_pass_login_provider?: string\n): void {\n  setup_auto_login_provider = auto_login_provider;\n  setup_auto_login_fallback_provider = auto_login_fallback_provider;\n  setup_email_pass_login_provider = email_pass_login_provider;\n  clients.forEach(externalUsersSetupProvider);\n}\n","/* global XMLHttpRequest */\n\nconst assert = require('assert');\n\nconst { random, round } = Math;\n\nexport const ERR_CONNECTION = 'ERR_CONNECTION';\nexport const ERR_TIMEOUT = 'ERR_TIMEOUT';\n\nlet fetch_delay = 0;\nlet fetch_delay_rand = 0;\nexport function fetchDelaySet(delay, rand) {\n  fetch_delay = delay;\n  fetch_delay_rand = rand;\n}\n\nconst regex_with_host = /\\/\\/[^/]+\\/([^?#]+)/;\nconst regex_no_host = /([^?#]+)/;\nfunction labelFromURL(url) {\n  let m = url.match(regex_with_host);\n  if (m) {\n    return m[1];\n  }\n  m = url.match(regex_no_host);\n  return m ? m[1] : url;\n}\n\nexport function fetch(params, cb) {\n  let is_done = false;\n  let timer;\n  function done(err, response) {\n    if (is_done) {\n      return;\n    }\n    is_done = true;\n    if (timer) {\n      clearTimeout(timer);\n    }\n    cb(err, response);\n  }\n  let { method, url, response_type, label, body, headers = {}, timeout } = params;\n  method = method || 'GET';\n  assert(url);\n  label = label || labelFromURL(url);\n  let xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n  if (timeout) {\n    // Expect XHR timeout to work\n    xhr.timeout = timeout;\n    // But, in case it doesn't fire, add a chained timeout at double the\n    //   time to make sure (double to give it a chance to\n    //   potentially fire a (late) success, in the case of stalls/hiccups/etc)\n    // Note: evidence `timeout` wasn't working was wrong - we were not attaching\n    //   a `ontimeout` handler.\n    timer = setTimeout(function () {\n      timer = setTimeout(function () {\n        profilerStart(`fetch_timeout:${label}`);\n        done(ERR_TIMEOUT);\n        profilerStop();\n      }, timeout);\n    }, timeout);\n  }\n  if (response_type && response_type !== 'json') {\n    xhr.responseType = response_type;\n  }\n  for (let header in headers) {\n    xhr.setRequestHeader(header, headers[header]);\n  }\n  xhr.onload = function () {\n    profilerStart(`fetch_onload:${label}`);\n    if ((xhr.status !== 0 && xhr.status < 200) || xhr.status >= 300) {\n      let text;\n      if (response_type !== 'arraybuffer') {\n        try {\n          text = xhr.responseText;\n        } catch (e) {\n          // ignored\n        }\n      }\n      done(String(xhr.status), text || '');\n    } else {\n      if (response_type === 'json') {\n        let text;\n        let obj;\n        try {\n          text = xhr.responseText;\n          obj = JSON.parse(text);\n        } catch (e) {\n          console.error(`Received invalid JSON response from ${url}: ${text || '<empty response>'}`);\n          // Probably internal server error or such as the server is restarting\n          done(e);\n          profilerStop();\n          return;\n        }\n        done(null, obj);\n      } else if (response_type === 'arraybuffer') {\n        if (xhr.response) {\n          done(null, xhr.response);\n        } else {\n          done('empty response');\n        }\n      } else {\n        done(null, xhr.responseText);\n      }\n    }\n    profilerStop();\n  };\n  xhr.onabort = xhr.onerror = () => {\n    profilerStart(`fetch_onerror:${label}`);\n    done(ERR_CONNECTION);\n    profilerStop();\n  };\n  xhr.ontimeout = function () {\n    profilerStart(`fetch_ontimeout:${label}`);\n    done(ERR_TIMEOUT);\n    profilerStop();\n  };\n  if (body !== undefined) {\n    if (typeof body === 'object') {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      body = JSON.stringify(body);\n    } else {\n      body = String(body);\n    }\n  }\n  if (fetch_delay || fetch_delay_rand) {\n    setTimeout(xhr.send.bind(xhr, body), fetch_delay + round(random() * fetch_delay_rand));\n  } else {\n    xhr.send(body);\n  }\n}\n","import assert from 'assert';\nimport { locateAssetDisableHashing } from './locate_asset';\n\nlet by_ext = {};\nlet by_match = [];\n\n// cb(filename)\nexport function filewatchOn(ext_or_search, cb) {\n  if (ext_or_search[0] === '.') {\n    assert(!by_ext[ext_or_search]);\n    by_ext[ext_or_search] = cb;\n  } else {\n    by_match.push([ext_or_search, cb]);\n  }\n}\n\nlet message_cb;\n// cb(message)\nexport function filewatchMessageHandler(cb) {\n  message_cb = cb;\n}\n\nfunction onFileChange(filename) {\n  console.log(`FileWatch change: ${filename}`);\n  locateAssetDisableHashing();\n  let ext_idx = filename.lastIndexOf('.');\n  let did_reload = false;\n  if (ext_idx !== -1) {\n    let ext = filename.slice(ext_idx);\n    if (by_ext[ext]) {\n      if (by_ext[ext](filename) !== false) {\n        did_reload = true;\n      }\n    }\n  }\n  for (let ii = 0; ii < by_match.length; ++ii) {\n    if (filename.match(by_match[ii][0])) {\n      if (by_match[ii][1](filename) !== false) {\n        did_reload = true;\n      }\n    }\n  }\n  if (message_cb && did_reload) {\n    message_cb(`Reloading: ${filename}`);\n  }\n}\n\nexport function filewatchTriggerChange(filename) {\n  onFileChange(filename);\n}\n\nexport function filewatchStartup(client) {\n  client.onMsg('filewatch', onFileChange);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint no-bitwise:off, complexity:off, @typescript-eslint/no-shadow:off */\n\nexports.style = fontStyle; // eslint-disable-line @typescript-eslint/no-use-before-define\nexports.styleColored = fontStyleColored; // eslint-disable-line @typescript-eslint/no-use-before-define\nexports.styleAlpha = fontStyleAlpha; // eslint-disable-line @typescript-eslint/no-use-before-define\nexports.create = fontCreate; // eslint-disable-line @typescript-eslint/no-use-before-define\n\nexport const ALIGN = {\n  HLEFT: 0,\n  HCENTER: 1,\n  HRIGHT: 2,\n  HMASK: 3,\n\n  VTOP: 0 << 2,\n  VCENTER: 1 << 2,\n  VBOTTOM: 2 << 2,\n  VMASK: 3 << 2,\n\n  HFIT: 1 << 4,\n  HWRAP: 1 << 5,\n\n  HCENTERFIT: 1 | (1 << 4),\n  HRIGHTFIT: 2 | (1 << 4),\n  HVCENTER: 1 | (1 << 2), // to avoid doing bitwise ops elsewhere\n  HVCENTERFIT: 1 | (1 << 2) | (1 << 4), // to avoid doing bitwise ops elsewhere\n};\n\n// line wrapping epsilon, don't wrap non-deterministically if scale and\n//  character widths are factors of display width.  Also allow a width\n//  calculated from .wrapLines() to be used as a width passed to draw*aligned()\nexport const EPSILON = 0.0000000001;\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst camera2d = require('./camera2d.js');\nconst { transformX, transformY } = require('./camera2d.js');\nconst engine = require('./engine.js');\nconst geom = require('./geom.js');\nconst { getStringFromLocalizable } = require('./localization.js');\nconst { cos, sin, max, min, round } = Math;\n// const settings = require('./settings.js');\nconst { shaderCreate, shadersPrelink } = require('./shaders.js');\nconst sprites = require('./sprites.js');\nconst { BLEND_ALPHA, BLEND_PREMULALPHA, spriteChainedStart, spriteChainedStop, spriteDataAlloc } = sprites;\nconst { textureLoad } = require('./textures.js');\nconst { clamp } = require('glov/common/util.js');\nconst {\n  v3scale,\n  v3set,\n  vec4,\n  v4copy,\n  v4scale,\n} = require('glov/common/vmath.js');\n\n/*\n\nfont_style = glov_font.style(null, {\n  color: 0xFFFFFFff,\n  outline_width: 0,\n  outline_color: 0x00000000,\n  glow_xoffs: 0,\n  glow_yoffs: 0,\n  glow_inner: 0,\n  glow_outer: 0,\n  glow_color: 0x000000ff,\n});\n\n */\n\n// typedef struct FontCharInfo {\n//   int c;\n//   float x0;\n//   float y0;\n//   int w;\n//   int h;\n//   int imgIdx;\n// } FontCharInfo;\n\n// typedef struct FontInfo {\n//   AS_NAME(CharInfo) FontCharInfo **char_infos;\n//   int font_size;\n//   float x0;\n//   float y0;\n//   int imageW;\n//   int imageH;\n//   int spread;\n// } FontInfo;\n\n// export const COLOR_MODE = {\n//   SINGLE: 0,\n//   GRADIENT: 1,\n// };\n\nconst ALIGN_NEEDS_WIDTH = ALIGN.HMASK | ALIGN.HFIT;\n\n\n// typedef struct GlovFontStyle\n// {\n//   // These members will never be changed (safe to initialize with GlovFontStyle foo = {1.0, 0xfff, etc};\n//   float outline_width;\n//   U32 outline_color;\n//   // Glow: can be used for a dropshadow as well\n//   //   inner can be negative to have the glow be less opaque (can also just change the alpha of the glow color)\n//   //   a glow would be e.g. (0, 0, -1, 5)\n//   //   a dropshadow would be e.g. (3.25, 3.25, -2.5, 5)\n//   float glow_xoffs;\n//   float glow_yoffs;\n//   float glow_inner;\n//   float glow_outer;\n//   U32 glow_color;\n//   U32 color; // upper left, or single color\n//   // U32 colorUR; // upper right\n//   // U32 colorLR; // lower right\n//   // U32 colorLL; // lower left\n//   // GlovFontColorMode color_mode;\n// } GlovFontStyle;\n\n/* Default GlovFontStyle:\n  font_style = {\n    outline_width: 0, outline_color: 0x00000000,\n    glow_xoffs: 0, glow_yoffs: 0, glow_inner: 0, glow_outer: 0, glow_color: 0x00000000,\n    color: 0xFFFFFFff\n  };\n\n  // font_style = {\n  //   outline_width: 0, outline_color: 0x00000000,\n  //   glow_xoffs: 0, glow_yoffs: 0, glow_inner: 0, glow_outer: 0, glow_color: 0x00000000,\n  //   // Color gradient: UL, UR, LR, LL\n  //   color: 0xFFFFFFff, colorUR: 0xFFFFFFff, colorLR: 0x000000ff, colorLL: 0x000000ff,\n  //   color_mode: glov_font.COLOR_MODE.GRADIENT,\n  // };\n*/\n\nfunction GlovFontStyle() {\n  // Not calling `vec4()` directly, since this constructor may be called during\n  //   initialization before our local `vec4` has been assigned.\n  this.color_vec4 = new Float32Array([1,1,1,1]); // Matches GlovFontStyle.prototype.color below\n}\nGlovFontStyle.prototype.outline_width = 0;\nGlovFontStyle.prototype.outline_color = 0x00000000;\nGlovFontStyle.prototype.glow_xoffs = 0;\nGlovFontStyle.prototype.glow_yoffs = 0;\nGlovFontStyle.prototype.glow_inner = 0;\nGlovFontStyle.prototype.glow_outer = 0;\nGlovFontStyle.prototype.glow_color = 0x00000000;\nGlovFontStyle.prototype.color = 0xFFFFFFff;\n// GlovFontStyle.prototype.colorUR = 0;\n// GlovFontStyle.prototype.colorLR = 0;\n// GlovFontStyle.prototype.colorLL = 0;\n// GlovFontStyle.prototype.color_mode = COLOR_MODE.SINGLE;\nGlovFontStyle.prototype.hash = 0; // filled dynamically\n\nexport const font_shaders = {};\n\nexport function intColorFromVec4Color(v) {\n  return ((v[0] * 255 | 0) << 24) |\n    ((v[1] * 255 | 0) << 16) |\n    ((v[2] * 255 | 0) << 8) |\n    ((v[3] * 255 | 0));\n}\n\nexport function vec4ColorFromIntColor(v, c) {\n  v[0] = ((c >> 24) & 0xFF) / 255;\n  v[1] = ((c >> 16) & 0xFF) / 255;\n  v[2] = ((c >> 8) & 0xFF) / 255;\n  v[3] = (c & 0xFF) / 255;\n  return v;\n}\n\nfunction vec4ColorFromIntColorPreMultiplied(v, c) {\n  let a = v[3] = (c & 0xFF) / 255;\n  a *= (1/255);\n  v[0] = ((c >> 24) & 0xFF) * a;\n  v[1] = ((c >> 16) & 0xFF) * a;\n  v[2] = ((c >> 8) & 0xFF) * a;\n}\n\nexport const glov_font_default_style = new GlovFontStyle();\n\nexport function fontStyle(font_style, fields) {\n  let ret = new GlovFontStyle();\n  let { color_vec4 } = ret;\n  if (font_style) {\n    for (let f in font_style) {\n      ret[f] = font_style[f];\n    }\n  }\n  for (let f in fields) {\n    ret[f] = fields[f];\n  }\n  ret.color_vec4 = color_vec4; // Restore\n  vec4ColorFromIntColor(ret.color_vec4, ret.color);\n  ret.hash = 0;\n  return ret;\n}\n\nexport function fontStyleColored(font_style, color) {\n  return fontStyle(font_style, {\n    color\n  });\n}\n\nexport function fontStyleOutlined(font_style, outline_width, outline_color) {\n  let parent = font_style || glov_font_default_style;\n  outline_color = outline_color || parent.color;\n  return fontStyle(font_style, {\n    outline_width,\n    outline_color,\n  });\n}\n\nexport function fontStyleBold(font_style, outline_width) {\n  let parent = font_style || glov_font_default_style;\n  let outline_color = parent.color;\n  if (font_style.outline_width) {\n    // move to glow\n    let glow_w = outline_width + font_style.outline_width;\n    return fontStyle(font_style, {\n      outline_width,\n      outline_color,\n      glow_xoffs: 0,\n      glow_yoffs: 0,\n      glow_color: font_style.outline_color,\n      glow_inner: glow_w - 0.25,\n      glow_outer: glow_w + 0.25,\n    });\n  } else {\n    // just add outline\n    return fontStyle(font_style, {\n      outline_width,\n      outline_color,\n    });\n  }\n\n}\n\nfunction colorAlpha(color, alpha) {\n  alpha = clamp(round((color & 0xFF) * alpha), 0, 255);\n  return color & 0xFFFFFF00 | alpha;\n}\n\nexport function fontStyleAlpha(font_style, alpha) {\n  return fontStyle(font_style, {\n    color: colorAlpha((font_style || glov_font_default_style).color, alpha),\n    outline_color: colorAlpha((font_style || glov_font_default_style).outline_color, alpha),\n    glow_color: colorAlpha((font_style || glov_font_default_style).glow_color, alpha),\n  });\n}\n\n// Returns a Float64, so pretty much anything is fine\nexport function fontStyleHash(style) {\n  if (!style.hash) {\n    style.hash = style.color +\n      style.outline_width * 1007 +\n      style.outline_color * 3 +\n      style.glow_xoffs * 10007 +\n      style.glow_yoffs * 100007 +\n      style.glow_inner * 1000007 +\n      style.glow_outer * 10000007 +\n      style.glow_color * 7;\n  }\n  return style.hash;\n}\n\n\nlet tech_params = null;\nlet tech_params_dirty = false;\nlet tech_params_cache = [];\nlet tech_params_cache_idx = 0;\nlet tech_params_pool = [];\nlet tech_params_pool_idx = 0;\nlet temp_color = vec4();\nlet geom_stats;\n\nlet dsp = {}; // drawScaled param\n\nfunction techParamsAlloc() {\n  if (tech_params_pool_idx === tech_params_pool.length) {\n    tech_params_pool.push({\n      param0: vec4(),\n      outline_color: vec4(),\n      glow_color: vec4(),\n      glow_params: vec4(),\n    });\n  }\n  tech_params = tech_params_pool[tech_params_pool_idx++];\n}\n\nfunction fontStartup() {\n  if (tech_params) {\n    return;\n  }\n\n  geom_stats = geom.stats;\n\n  techParamsAlloc();\n}\n\nfunction techParamsSet(param, value) {\n  let tpv = tech_params[param];\n  // not dirty, if anything changes, we need a new object!\n  if (!tech_params_dirty) {\n    if (tpv[0] !== value[0] || tpv[1] !== value[1] || tpv[2] !== value[2] || tpv[3] !== value[3]) {\n      // clone old values before modifying\n      let old_tech_params = tech_params;\n      techParamsAlloc();\n      v4copy(tech_params.param0, old_tech_params.param0);\n      v4copy(tech_params.outline_color, old_tech_params.outline_color);\n      v4copy(tech_params.glow_color, old_tech_params.glow_color);\n      v4copy(tech_params.glow_params, old_tech_params.glow_params);\n      geom_stats.font_params++;\n      tech_params_dirty = true;\n      tpv = tech_params[param];\n    } else {\n      // identical, do nothing\n      return;\n    }\n  }\n  if (tech_params_dirty) {\n    // just set\n    tpv[0] = value[0];\n    tpv[1] = value[1];\n    tpv[2] = value[2];\n    tpv[3] = value[3];\n    // return;\n  }\n}\n\nconst SHADER_KEYS = ['param0', 'outline_color', 'glow_color', 'glow_params'];\nfunction sameTP(as) {\n  for (let jj = 0; jj < 4; ++jj) {\n    let key = SHADER_KEYS[jj];\n    let v1 = tech_params[key];\n    let v2 = as[key];\n    for (let ii = 0; ii < 4; ++ii) {\n      if (v1[ii] !== v2[ii]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction techParamsGet() {\n  if (!tech_params_dirty) {\n    return tech_params;\n  }\n  tech_params_dirty = false;\n  for (let ii = 0; ii < tech_params_cache.length; ++ii) {\n    if (sameTP(tech_params_cache[ii])) {\n      // Found a match in the cache, use that instead\n      if (tech_params === tech_params_pool[tech_params_pool_idx-1]) {\n        // and this was just pulled off the pool, put it back on\n        tech_params_pool_idx--;\n      }\n      tech_params = tech_params_cache[ii];\n      if (tech_params_cache_idx === ii) {\n        // about to be overwritten\n        tech_params_cache_idx = (tech_params_cache_idx + 1) % 4;\n      }\n      --geom_stats.font_params;\n      return tech_params;\n    }\n  }\n  tech_params_cache[tech_params_cache_idx] = tech_params;\n  tech_params_cache_idx = (tech_params_cache_idx + 1) % 4;\n  return tech_params;\n}\n\nfunction GlovFont(font_info, texture_name) {\n  assert(font_info.font_size !== 0); // Got lost somewhere\n\n  this.texture = textureLoad({\n    url: `img/${texture_name}.png`,\n    filter_min: font_info.noFilter ? gl.NEAREST : gl.LINEAR,\n    filter_mag: font_info.noFilter ? gl.NEAREST : gl.LINEAR,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n  });\n  this.textures = [this.texture];\n  this.integral = Boolean(font_info.noFilter); // TODO: often only want this for pixely = strict modes?\n  this.hard_cutoff = this.integral; // Maybe only if also pixely-strict?\n\n  this.font_info = font_info;\n  this.font_size = font_info.font_size;\n  this.inv_font_size = 1 / font_info.font_size;\n  this.shader = font_shaders.font_aa;\n  this.tex_w = font_info.imageW;\n  this.tex_h = font_info.imageH;\n\n  // Calculate inverse scale, fixup 0s\n  for (let ii = 0; ii < font_info.char_infos.length; ++ii) {\n    let char_info = font_info.char_infos[ii];\n    char_info.scale = 1 / (char_info.sc || 1);\n    char_info.w = char_info.w || 0;\n  }\n\n  // build lookup\n  this.char_infos = [];\n  for (let ii = 0; ii < font_info.char_infos.length; ++ii) {\n    let char_info = font_info.char_infos[ii];\n    this.char_infos[char_info.c] = char_info;\n    char_info.xpad = char_info.xpad || 0;\n    char_info.yoffs = char_info.yoffs || 0;\n    char_info.w_pad_scale = (char_info.w + char_info.xpad) * char_info.scale;\n  }\n  this.replacement_character = this.infoFromChar(0xFFFD);\n  if (!this.replacement_character) {\n    this.replacement_character = this.infoFromChar(63); // '?'\n  }\n  this.whitespace_character = this.infoFromChar(13);\n\n  this.default_style = new GlovFontStyle();\n  this.applied_style = new GlovFontStyle();\n\n  fontStartup();\n}\n\n// General draw functions return width\n// Pass NULL for style to use default style\n// If the function takes a color, this overrides the color on the style\nGlovFont.prototype.drawSizedColor = function (style, x, y, z, size, color, text) {\n  return this.drawSized(fontStyleColored(style, color), x, y, z, size, text);\n};\nGlovFont.prototype.drawSized = function (style, x, y, z, size, text) {\n  dsp.style = style;\n  dsp.x = x;\n  dsp.y = y;\n  dsp.z = z;\n  dsp.xsc = size * this.inv_font_size;\n  dsp.ysc = size * this.inv_font_size;\n  dsp.text = text;\n  return this.drawScaled();\n};\n\nGlovFont.prototype.drawSizedAligned = function (style, x, y, z, size, align, w, h, text) {\n  profilerStartFunc();\n  text = getStringFromLocalizable(text);\n\n  if (align & ALIGN.HWRAP) {\n    let drawn_height = this.drawSizedAlignedWrapped(style, x, y, z, 0, size, align & ~ALIGN.HWRAP, w, h, text);\n    profilerStopFunc();\n    return drawn_height;\n  }\n  let x_size = size;\n  let y_size = size;\n  if (align & ALIGN_NEEDS_WIDTH) {\n    let width = this.getStringWidth(style, x_size, text);\n    if ((align & ALIGN.HFIT) && width > w + EPSILON) {\n      let scale = w / width;\n      x_size *= scale;\n      width = w;\n      // Additionally, if we're really squishing things horizontally, shrink the font size\n      // and offset to be centered.\n      if (scale < 0.5) {\n        if ((align & ALIGN.VMASK) !== ALIGN.VCENTER && (align & ALIGN.VMASK) !== ALIGN.VBOTTOM) {\n          // Offset to be roughly centered in the original line bounds\n          y += (y_size - (y_size * scale * 2)) * 0.5;\n        }\n        y_size *= scale * 2;\n      }\n    }\n    switch (align & ALIGN.HMASK) { // eslint-disable-line default-case\n      case ALIGN.HCENTER:\n        x += (w - width) * 0.5;\n        if (this.integral) {\n          x = round(x);\n        }\n        break;\n      case ALIGN.HRIGHT:\n        x += w - width;\n        break;\n    }\n  }\n  switch (align & ALIGN.VMASK) { // eslint-disable-line default-case\n    case ALIGN.VCENTER:\n      y += (h - y_size) * 0.5;\n      if (this.integral) {\n        y = round(y);\n      }\n      break;\n    case ALIGN.VBOTTOM:\n      y += h - y_size;\n      break;\n  }\n\n  let xsc = x_size * this.inv_font_size;\n  let ysc = y_size * this.inv_font_size;\n  dsp.style = style;\n  dsp.x = x;\n  dsp.y = y;\n  dsp.z = z;\n  dsp.xsc = xsc;\n  dsp.ysc = ysc;\n  dsp.text = text;\n  let drawn_width = this.drawScaled();\n  profilerStopFunc();\n  return drawn_width;\n};\n\nlet tile_state = 0;\nlet chained_outside = false;\n\nGlovFont.prototype.drawSizedAlignedWrapped = function (style, x, y, z, indent, size, align, w, h, text) {\n  text = getStringFromLocalizable(text);\n  assert(w > 0);\n  assert(typeof h !== 'string'); // Old API did not have `indent` parameter\n  let lines = [];\n  let line_xoffs = [];\n  lines.length = this.wrapLines(style, w, indent, size, text, align, (xoffs, linenum, line) => {\n    line_xoffs[linenum] = xoffs;\n    lines[linenum] = line;\n  });\n\n  let yoffs = 0;\n  let height = size * lines.length;\n  let valign = align & ALIGN.VMASK;\n  switch (valign) { // eslint-disable-line default-case\n    case ALIGN.VCENTER:\n      yoffs = (h - height) / 2;\n      if (this.integral) {\n        yoffs |= 0;\n      }\n      break;\n    case ALIGN.VBOTTOM:\n      yoffs = h - height;\n      break;\n  }\n  align &= ~ALIGN.VMASK;\n\n  chained_outside = true;\n  tile_state = 0;\n  spriteChainedStart();\n  for (let ii = 0; ii < lines.length; ++ii) {\n    let line = lines[ii];\n    if (line && line.trim()) {\n      this.drawSizedAligned(style, x + line_xoffs[ii], y + yoffs, z, size, align, w - line_xoffs[ii], 0, line);\n    }\n    yoffs += size;\n  }\n  chained_outside = false;\n  spriteChainedStop();\n  return valign === ALIGN.VBOTTOM ? height : yoffs;\n};\n\n// returns height\nGlovFont.prototype.drawSizedColorWrapped = function (style, x, y, z, w, indent, size, color, text) {\n  return this.drawScaledWrapped(fontStyleColored(style, color), x, y, z, w,\n    indent, size * this.inv_font_size, size * this.inv_font_size, text);\n};\nGlovFont.prototype.drawSizedWrapped = function (style, x, y, z, w, indent, size, text) {\n  return this.drawScaledWrapped(style, x, y, z, w,\n    indent, size * this.inv_font_size, size * this.inv_font_size, text);\n};\n\nlet default_size = 24;\nexport function fontSetDefaultSize(h) {\n  default_size = h;\n}\n\nlet font_rot = 0;\nlet font_rot_cos = 0;\nlet font_rot_sin = 0;\nlet font_rot_origin_x = 0;\nlet font_rot_origin_y = 0;\nexport function fontRotate(rot, rot_origin_x, rot_origin_y) {\n  font_rot = rot;\n  font_rot_cos = cos(rot);\n  font_rot_sin = sin(rot);\n  font_rot_origin_x = transformX(rot_origin_x);\n  font_rot_origin_y = transformY(rot_origin_y);\n}\n\nGlovFont.prototype.draw = function (param) {\n  let { style, color, alpha, x, y, z, size, w, h, align, text, indent, rot } = param;\n  if (color) {\n    style = fontStyleColored(style, color);\n  }\n  if (alpha !== undefined) {\n    style = fontStyleAlpha(style, alpha);\n  }\n  indent = indent || 0;\n  size = size || default_size;\n  z = z || Z.UI;\n  if (rot) {\n    // TODO: x/y should be calculated w.r.t. w/h if align is specified\n    fontRotate(rot, x, y);\n  }\n  let ret;\n  if (align) {\n    if (align & ALIGN.HWRAP) {\n      ret = this.drawSizedAlignedWrapped(style, x, y, z, indent, size, align & ~ALIGN.HWRAP, w, h, text);\n    } else {\n      ret = this.drawSizedAligned(style, x, y, z, size, align, w || 0, h || 0, text);\n    }\n  } else {\n    ret = this.drawSized(style, x, y, z, size, text);\n  }\n  if (rot) {\n    fontRotate(0);\n  }\n  return ret;\n};\n\n// line_cb(x0, int linenum, const char *line, x1)\nGlovFont.prototype.wrapLines = function (style, w, indent, size, text, align, line_cb) {\n  assert(typeof style !== 'number'); // old API did not have `style` parameter\n  this.applyStyle(style);\n  return this.wrapLinesScaled(w, indent, size * this.inv_font_size, text, align, line_cb);\n};\n\nGlovFont.prototype.numLines = function (style, w, indent, size, text) {\n  return this.wrapLines(style, w, indent, size, text, 0);\n};\n\nGlovFont.prototype.dims = function (style, w, indent, size, text) {\n  let max_x1 = 0;\n  function lineCallback(ignored1, ignored2, line, x1) {\n    max_x1 = max(max_x1, x1);\n  }\n  let numlines = this.wrapLines(style, w, indent, size, text, 0, lineCallback);\n  return {\n    w: max_x1,\n    h: numlines * size,\n    numlines,\n  };\n};\n\nlet unicode_replacement_chars;\nGlovFont.prototype.infoFromChar = function (c) {\n  let ret = this.char_infos[c];\n  if (ret) {\n    return ret;\n  }\n  if (c >= 9 && c <= 13) { // characters that String.trim() strip\n    return this.whitespace_character;\n  }\n  if (unicode_replacement_chars) {\n    let ascii = unicode_replacement_chars[c];\n    if (ascii) {\n      ret = this.char_infos[ascii];\n      if (ret) {\n        return ret;\n      }\n    }\n  }\n  // no char info, not whitespace, show replacement even if ascii, control code\n  return this.replacement_character;\n};\n\nGlovFont.prototype.getCharacterWidth = function (style, x_size, c) {\n  assert.equal(typeof c, 'number');\n  this.applyStyle(style);\n  let char_info = this.infoFromChar(c);\n  let xsc = x_size * this.inv_font_size;\n  let x_advance = this.calcXAdvance(xsc);\n  if (char_info) {\n    return char_info.w_pad_scale * xsc + x_advance;\n  }\n  return 0;\n};\n\nGlovFont.prototype.getStringWidth = function (style, x_size, text) {\n  text = getStringFromLocalizable(text);\n\n  this.applyStyle(style);\n  let ret=0;\n  let xsc = x_size * this.inv_font_size;\n  let x_advance = this.calcXAdvance(xsc);\n  for (let ii = 0; ii < text.length; ++ii) {\n    let c = text.charCodeAt(ii);\n    let char_info = this.infoFromChar(c);\n    if (char_info) {\n      ret += char_info.w_pad_scale * xsc + x_advance;\n    }\n  }\n  return ret;\n};\n\nGlovFont.prototype.getSpaceSize = function (xsc) {\n  let space_info = this.infoFromChar(32); // ' '\n  return (space_info ? (space_info.w + space_info.xpad) * space_info.scale : this.font_size) * xsc;\n};\n\nfunction endsWord(char_code) {\n  return char_code === 32 || // ' '\n    char_code === 0 || // end of string\n    char_code === 10 || // '\\n'\n    char_code === 9; // '\\t'\n}\n\n// line_cb(x0, int linenum, const char *line, x1)\nGlovFont.prototype.wrapLinesScaled = function (w, indent, xsc, text, align, line_cb) {\n  text = getStringFromLocalizable(text);\n  assert(typeof align !== 'function'); // Old API had one less parameter\n  const len = text.length;\n  const max_word_w = w - indent + EPSILON;\n  // \"fit\" mode: instead of breaking the too-long word, output it on a line of its own\n  const hard_wrap_mode_fit = align & ALIGN.HFIT;\n  const x_advance = this.calcXAdvance(xsc);\n  const space_size = this.getSpaceSize(xsc) + x_advance;\n  let idx = 0;\n  let line_start = 0;\n  let line_x0 = 0;\n  let line_x1 = 0;\n  let line_end = -1;\n  let word_start = 0;\n  let word_x0 = 0;\n  let word_w = 0;\n  let word_slice = -1;\n  let word_slice_w = 0;\n  let linenum = 0;\n\n  function flushLine() {\n    if (line_end !== -1 && line_cb) {\n      line_cb(line_x0, linenum, text.slice(line_start, line_end), line_x1);\n    }\n    linenum++;\n    line_x0 = indent;\n    line_x1 = -1;\n    line_start = word_start;\n    line_end = -1;\n    word_x0 = line_x0;\n  }\n\n  do {\n    let c = idx < len ? text.charCodeAt(idx) || 0xFFFD : 0;\n    if (endsWord(c)) {\n      if (word_start !== idx) {\n        let need_line_flush = false;\n        // flush word, take care of space on next loop\n        if (word_x0 + word_w <= w + EPSILON) {\n          // fits fine, add to line, start new word\n        } else if (word_w > max_word_w && !hard_wrap_mode_fit) {\n          // even just this word alone won't fit, needs a hard wrap\n          // output what fits on this line, then continue to next line\n          need_line_flush = true;\n          if (word_slice === -1) {\n            // not even a single letter fits on this line\n            if (line_end !== -1) {\n              // wrap to a new line if not already\n              flushLine();\n            }\n            // just output one letter, start new word from second letter\n            idx = line_start + 1;\n            word_w = max_word_w; // underestimate\n          } else {\n            // output what fits on this line so far\n            idx = word_slice;\n            word_w = word_slice_w;\n          }\n        } else {\n          // won't fit, but fits on next line, soft wrap\n          if (line_end !== -1 || indent < 0 && line_x0 !== indent) {\n            flushLine();\n          }\n        }\n        //addWord();\n        line_end = idx;\n        line_x1 = word_x0 + word_w;\n        word_x0 = line_x1;\n        word_w = 0;\n        word_start = idx;\n        word_slice = -1;\n\n        if (need_line_flush) {\n          flushLine();\n        }\n\n        // we're now either still pointing at the space, or rewound to an earlier point\n        continue;\n      } else if (c) {\n        // process the space\n        word_start = idx + 1;\n        word_x0 += space_size;\n        if (c === 10) { // \\n\n          flushLine();\n        }\n      }\n    } else {\n      let char_info = this.infoFromChar(c);\n      if (char_info) {\n        let char_w = char_info.w_pad_scale * xsc + x_advance;\n        word_w += char_w;\n        if (word_x0 + word_w <= w + EPSILON) { // would partially fit up to and including this letter\n          word_slice = idx + 1;\n          word_slice_w = word_w;\n        }\n      }\n    }\n    ++idx;\n  } while (idx <= len);\n  if (line_end !== -1) {\n    line_x1 = word_x0; // include size of trailing whitespace\n    flushLine();\n  } else if (word_x0 !== line_x1) {\n    line_x1 = word_x0; // include size of trailing whitespace, if any\n    if (line_cb) {\n      line_cb(line_x0, linenum, '', line_x1);\n    }\n  }\n\n  return linenum;\n};\n\nGlovFont.prototype.drawScaledWrapped = function (style, x, y, z, w, indent, xsc, ysc, text) {\n  if (text === null || text === undefined) {\n    text = '(null)';\n  }\n  assert(w > 0);\n  this.applyStyle(style);\n  // This function returns height instead of width, so leave the maximum width encountered here for caller\n  this.last_width = 0;\n  dsp.style = style;\n  dsp.z = z;\n  dsp.xsc = xsc;\n  dsp.ysc = ysc;\n  let num_lines = this.wrapLinesScaled(w, indent, xsc, text, 0, (xoffs, linenum, line, x1) => {\n    dsp.x = x + xoffs;\n    dsp.y = y + this.font_size * ysc * linenum;\n    dsp.text = line;\n    this.drawScaled();\n    this.last_width = max(this.last_width, x1);\n  });\n  return num_lines * this.font_size * ysc;\n};\n\nGlovFont.prototype.calcXAdvance = function (xsc) {\n  // Assume called: applyStyle(style);\n\n  // scale all supplied values by this so that if we swap in a font with twice the resolution (and twice the spread)\n  //   things look almost identical, just crisper\n  let font_texel_scale = this.font_size / 32;\n  // As a compromise, -2 bias here seems to work well\n  let x_advance = round(xsc * font_texel_scale * max(this.applied_style.outline_width - 2, 0));\n  // As a compromise, there's a -3 bias in there, so it only kicks in under extreme circumstances\n  x_advance = max(x_advance, xsc * font_texel_scale *\n    max(this.applied_style.glow_outer - this.applied_style.glow_xoffs - 3, 0));\n  return x_advance;\n};\n\n//////////////////////////////////////////////////////////////////////////\n// Main implementation\n\nconst temp_vec4_param0 = vec4();\nconst temp_vec4_glow_params = vec4();\nconst padding4 = vec4();\nconst padding_in_font_space = vec4();\nGlovFont.prototype.drawScaled = function () {\n  let { style, x: _x, y, z, xsc, ysc, text } = dsp;\n  profilerStartFunc();\n  text = getStringFromLocalizable(text);\n  let x = _x;\n  assert(isFinite(x));\n  assert(isFinite(y));\n  assert(isFinite(z));\n  let font_info = this.font_info;\n  // Debug: show expect area of glyphs\n  // require('./ui.js').drawRect(_x, y,\n  //   _x + xsc * font_size * 20, y + ysc * font_size,\n  //   1000, [1, 0, 1, 0.5]);\n  y += (font_info.y_offset || 0) * ysc;\n  let texs = this.textures;\n  if (text === null || text === undefined) {\n    text = '(null)';\n  }\n  const len = text.length;\n  if (xsc === 0 || ysc === 0) {\n    profilerStopFunc();\n    return 0;\n  }\n\n  geom_stats.font_calls++;\n\n  this.applyStyle(style);\n\n  let blend_mode = engine.defines.NOPREMUL ? BLEND_ALPHA : BLEND_PREMULALPHA;\n\n  const avg_scale_font = (xsc + ysc) * 0.5;\n  const camera_xscale = camera2d.data[4];\n  const camera_yscale = camera2d.data[5];\n  let avg_scale_combined = (xsc * camera_xscale + ysc * camera_yscale) * 0.5;\n  // Not doing this here, because render_scale_all is not currently reflected in camera_x/yscale\n  // avg_scale_combined *= settings.render_scale_all;\n\n  // scale all supplied values by this so that if we swap in a font with twice the resolution (and twice the spread)\n  //   things look almost identical, just crisper\n  let x_advance = this.calcXAdvance(xsc);\n  let font_texel_scale = this.font_size / 32;\n  if (!chained_outside) {\n    tile_state = 0;\n  }\n\n  let applied_style = this.applied_style;\n\n  // Calculate anti-aliasing values\n  let delta_per_source_pixel = 0.5 / font_info.spread;\n  let delta_per_dest_pixel = delta_per_source_pixel / avg_scale_combined;\n  let value = v3set(temp_vec4_param0,\n    1 / delta_per_dest_pixel, // AA Mult and Outline Mult\n    -0.5 / delta_per_dest_pixel + 0.5, // AA Add\n    // Outline Add\n    min(0, -0.5 / delta_per_dest_pixel + 0.5 + applied_style.outline_width*font_texel_scale*avg_scale_combined),\n    // 0, // Unused\n  );\n  let padding1 = max(0, applied_style.outline_width*font_texel_scale*avg_scale_font);\n  const outer_scaled = applied_style.glow_outer*font_texel_scale;\n  let glow_xoffs = applied_style.glow_xoffs*font_texel_scale*xsc;\n  let glow_yoffs = applied_style.glow_yoffs*font_texel_scale*ysc;\n  padding4[0] = max(outer_scaled*xsc - glow_xoffs, padding1);\n  padding4[2] = max(outer_scaled*xsc + glow_xoffs, padding1);\n  padding4[1] = max(outer_scaled*ysc - glow_yoffs, padding1);\n  padding4[3] = max(outer_scaled*ysc + glow_yoffs, padding1);\n\n  if (this.hard_cutoff) {\n    value[0] *= 512;\n    value[1] = value[1] * 512 - 255.5;\n    value[2] = value[2] * 512 - 255.5;\n  }\n  techParamsSet('param0', value);\n\n  let value2 = temp_vec4_glow_params;\n  // Glow mult\n  if (applied_style.glow_outer) {\n    value2[2] = 1 / ((applied_style.glow_outer - applied_style.glow_inner) * delta_per_source_pixel * font_texel_scale);\n    value2[3] = min(0, -(0.5 - applied_style.glow_outer * delta_per_source_pixel * font_texel_scale) /\n      ((applied_style.glow_outer - applied_style.glow_inner) * delta_per_source_pixel * font_texel_scale));\n  } else {\n    // Avoid sending `Infinity` to GPU\n    value2[2] = value2[3] = 0;\n  }\n\n  v4scale(padding_in_font_space, padding4, 1 / avg_scale_font);\n  for (let ii = 0; ii < 4; ++ii) {\n    if (padding_in_font_space[ii] > font_info.spread) {\n      // Not enough buffer\n      let sc = font_info.spread / padding_in_font_space[ii];\n      padding4[ii] *= sc;\n      padding_in_font_space[ii] *= sc;\n    }\n  }\n\n  // Choose appropriate z advance so that character are drawn left to right (or RTL if the glow is on the other side)\n  // same Z should be drawn in queue order, so not needed\n  const z_advance = applied_style.glow_xoffs < 0 ? -0.0001 : 0; // 0.0001;\n  if (!z_advance) {\n    if (!chained_outside) {\n      spriteChainedStart();\n    }\n  } else {\n    if (chained_outside) {\n      spriteChainedStop();\n    }\n  }\n\n  const has_glow_offs = applied_style.glow_xoffs || applied_style.glow_yoffs;\n  if (!has_glow_offs) {\n    value2[0] = value2[1] = 0;\n    techParamsSet('glow_params', value2);\n    techParamsGet();\n  }\n\n  // For non-1:1 aspect ration rendering, need to scale our coordinates' padding differently in each axis\n  let rel_x_scale = xsc / avg_scale_font;\n  let rel_y_scale = ysc / avg_scale_font;\n\n  let sort_y = transformY(y);\n  let color = applied_style.color_vec4;\n  let shader = this.shader;\n  let turx;\n  let tury;\n  let tllx;\n  let tlly;\n\n  for (let i=0; i<len; i++) {\n    const c = text.charCodeAt(i);\n    if (c === 9) { // '\\t'.charCodeAt(0)) {\n      let tabsize = xsc * this.font_size * 4;\n      x = ((((x - _x) / tabsize) | 0) + 1) * tabsize + _x;\n    } else {\n      let char_info = this.infoFromChar(c);\n      if (char_info) {\n        let char_scale = char_info.scale;\n        let xsc2 = xsc * char_scale;\n        if (char_info.w) {\n          let ysc2 = ysc * char_scale;\n          let pad_scale = 1 / char_scale;\n          let tile_width = this.tex_w;\n          let tile_height = this.tex_h;\n          // Lazy update params here\n          if (has_glow_offs && char_scale !== tile_state) {\n            value2[0] = -applied_style.glow_xoffs * font_texel_scale * pad_scale / tile_width;\n            value2[1] = -applied_style.glow_yoffs * font_texel_scale * pad_scale / tile_height;\n            techParamsSet('glow_params', value2);\n            if (!z_advance) {\n              spriteChainedStop();\n              spriteChainedStart();\n            }\n            techParamsGet();\n            tile_state = char_scale;\n          }\n\n          let u0 = (char_info.x0 - padding_in_font_space[0] * pad_scale) / tile_width;\n          let u1 = (char_info.x0 + char_info.w + padding_in_font_space[2] * pad_scale) / tile_width;\n          let v0 = (char_info.y0 - padding_in_font_space[1] * pad_scale) / tile_height;\n          let v1 = (char_info.y0 + char_info.h + padding_in_font_space[3] * pad_scale) / tile_height;\n\n          let w = char_info.w * xsc2 + (padding4[0] + padding4[2]) * rel_x_scale;\n          let h = char_info.h * ysc2 + (padding4[1] + padding4[3]) * rel_y_scale;\n\n          let xx = x - rel_x_scale * padding4[0];\n          let yy = y - rel_y_scale * padding4[1] + char_info.yoffs * ysc2;\n          // Below is inlined/optimized version of:\n          // spriteQueueRaw(\n          //   texs,\n          //   xx, yy,\n          //   z + z_advance * i, w, h,\n          //   u0, v0, u1, v1,\n          //   color,\n          //   shader, tech_params, blend_mode).y = sort_y;\n\n          let y1 = yy + h;\n          let x1 = xx + w;\n          let zz = z + z_advance * i;\n\n          let tulx = transformX(xx);\n          let tuly = transformY(yy);\n          let tlrx = transformX(x1);\n          let tlry = transformY(y1);\n          if (font_rot) {\n            let tw = tlrx - tulx;\n            let th = tlry - tuly;\n            let relxoffs = tulx - font_rot_origin_x;\n            let relyoffs = tuly - font_rot_origin_y;\n            tulx = font_rot_origin_x + relxoffs * font_rot_cos - relyoffs * font_rot_sin;\n            tuly = font_rot_origin_y + relxoffs * font_rot_sin + relyoffs * font_rot_cos;\n            let cosw = font_rot_cos * tw;\n            let sinw = font_rot_sin * tw;\n            let sinh = font_rot_sin * th;\n            let cosh = font_rot_cos * th;\n            turx = tulx + cosw;\n            tury = tuly + sinw;\n            tllx = tulx - sinh;\n            tlly = tuly + cosh;\n            tlrx = tulx + cosw - sinh;\n            tlry = tuly + sinw + cosh;\n          } else {\n            turx = tlrx;\n            tury = tuly;\n            tllx = tulx;\n            tlly = tlry;\n          }\n\n          let elem = spriteDataAlloc(texs, shader, tech_params, blend_mode);\n          let data = elem.data;\n          data[0] = tulx;\n          data[1] = tuly;\n          data[2] = color[0];\n          data[3] = color[1];\n          data[4] = color[2];\n          data[5] = color[3];\n          data[6] = u0;\n          data[7] = v0;\n\n          data[8] = tllx;\n          data[9] = tlly;\n          data[10] = color[0];\n          data[11] = color[1];\n          data[12] = color[2];\n          data[13] = color[3];\n          data[14] = u0;\n          data[15] = v1;\n\n          data[16] = tlrx;\n          data[17] = tlry;\n          data[18] = color[0];\n          data[19] = color[1];\n          data[20] = color[2];\n          data[21] = color[3];\n          data[22] = u1;\n          data[23] = v1;\n\n          data[24] = turx;\n          data[25] = tury;\n          data[26] = color[0];\n          data[27] = color[1];\n          data[28] = color[2];\n          data[29] = color[3];\n          data[30] = u1;\n          data[31] = v0;\n\n          elem.x = tulx;\n          elem.y = sort_y;\n          elem.queue(zz);\n\n          // require('./ui.js').drawRect(xx, yy, x1, y1, 1000, [i & 1, (i & 2)>>1, (i & 4)>>2, 0.5]);\n        }\n\n        x += (char_info.w + char_info.xpad) * xsc2 + x_advance;\n      }\n    }\n  }\n  if (!z_advance) {\n    if (!chained_outside) {\n      spriteChainedStop();\n    }\n  } else {\n    if (chained_outside) {\n      spriteChainedStart();\n    }\n  }\n  profilerStopFunc();\n  return x - _x;\n};\n\nGlovFont.prototype.determineShader = function () {\n  let outline = this.applied_style.outline_width && (this.applied_style.outline_color & 0xff);\n  let glow = this.applied_style.glow_outer > 0 && (this.applied_style.glow_color & 0xff);\n  if (outline) {\n    if (glow) {\n      this.shader = font_shaders.font_aa_outline_glow;\n    } else {\n      this.shader = font_shaders.font_aa_outline;\n    }\n  } else if (glow) {\n    this.shader = font_shaders.font_aa_glow;\n  } else {\n    this.shader = font_shaders.font_aa;\n  }\n};\n\nGlovFont.prototype.applyStyle = function (style) {\n  if (!style) {\n    style = this.default_style;\n  }\n  if (engine.defines.NOPREMUL) {\n    // outline\n    vec4ColorFromIntColor(temp_color, style.outline_color);\n    techParamsSet('outline_color', temp_color);\n\n    // glow\n    vec4ColorFromIntColor(temp_color, style.glow_color);\n    techParamsSet('glow_color', temp_color);\n  } else {\n    // outline\n    vec4ColorFromIntColorPreMultiplied(temp_color, style.outline_color);\n    techParamsSet('outline_color', temp_color);\n\n    // glow\n    vec4ColorFromIntColorPreMultiplied(temp_color, style.glow_color);\n    techParamsSet('glow_color', temp_color);\n  }\n\n  // everything else\n  this.applied_style.outline_width = style.outline_width;\n  this.applied_style.outline_color = style.outline_color;\n  this.applied_style.glow_xoffs = style.glow_xoffs;\n  this.applied_style.glow_yoffs = style.glow_yoffs;\n  this.applied_style.glow_inner = style.glow_inner;\n  this.applied_style.glow_outer = style.glow_outer;\n  this.applied_style.glow_color = style.glow_color;\n  this.applied_style.color = style.color;\n  if (engine.defines.NOPREMUL) {\n    v4copy(this.applied_style.color_vec4, style.color_vec4);\n  } else {\n    let alpha = this.applied_style.color_vec4[3] = style.color_vec4[3];\n    v3scale(this.applied_style.color_vec4, style.color_vec4, alpha);\n  }\n  // this.applied_style.colorUR = style.colorUR;\n  // this.applied_style.colorLR = style.colorLR;\n  // this.applied_style.colorLL = style.colorLL;\n  // this.applied_style.color_mode = style.color_mode;\n\n  // if (this.applied_style.color_mode === COLOR_MODE.SINGLE) {\n  //   this.applied_style.colorUR = this.applied_style.colorLL = this.applied_style.colorLR = this.applied_style.color;\n  // }\n\n  this.determineShader();\n};\n\n// Replicate constants and utility functions on all font instances as well\n// GlovFont.prototype.COLOR_MODE = COLOR_MODE;\nGlovFont.prototype.ALIGN = ALIGN;\nGlovFont.prototype.style = fontStyle;\nGlovFont.prototype.styleAlpha = fontStyleAlpha;\nGlovFont.prototype.styleColored = fontStyleColored;\n\nfunction fontShadersInit() {\n  if (font_shaders.font_aa) {\n    return;\n  }\n  font_shaders.font_aa = shaderCreate('shaders/font_aa.fp');\n  font_shaders.font_aa_glow = shaderCreate('shaders/font_aa_glow.fp');\n  font_shaders.font_aa_outline = shaderCreate('shaders/font_aa_outline.fp');\n  font_shaders.font_aa_outline_glow = shaderCreate('shaders/font_aa_outline_glow.fp');\n  shadersPrelink(sprites.sprite_vshader, font_shaders.font_aa);\n  shadersPrelink(sprites.sprite_vshader, font_shaders.font_aa_glow);\n  shadersPrelink(sprites.sprite_vshader, font_shaders.font_aa_outline);\n  shadersPrelink(sprites.sprite_vshader, font_shaders.font_aa_outline_glow);\n}\n\nexport function fontCreate(font_info, texture_name) {\n  fontShadersInit();\n  return new GlovFont(font_info, texture_name);\n}\n\nexport function fontTick() {\n  tech_params_cache_idx = 0;\n  tech_params_cache.length = 0;\n  tech_params_pool_idx = 0;\n  techParamsAlloc();\n}\n\nexport function fontSetReplacementChars(replacement_chars) {\n  unicode_replacement_chars = replacement_chars;\n}\n","const assert = require('assert');\nconst { nop } = require('glov/common/util');\nconst { is_ios } = require('./browser.js');\nconst { cmd_parse } = require('./cmds.js');\nconst { applyCopy } = require('./effects.js');\nconst engine = require('./engine.js');\nconst { renderWidth, renderHeight } = engine;\nconst perf = require('./perf.js');\nconst settings = require('./settings.js');\nconst {\n  TEXTURE_FORMAT,\n  textureCreateForCapture,\n  textureCreateForDepthCapture,\n} = require('./textures.js');\n\nlet last_num_passes = 0;\nlet num_passes = 0;\n\nlet temporary_textures = {};\nlet temporary_depthbuffers = {};\nlet temporary_depthtextures = {};\n\nlet reset_fbos = false;\nfunction resetFBOs() {\n  reset_fbos = true;\n}\n\nlet skip_release = false;\nexport function framebufferSkipRelease() {\n  // Skip releases for one frame, we're making a temporary change for a screenshot/etc\n  skip_release = true;\n}\n\nlet last_temp_idx = 0;\nfunction getTemporaryTexture(w, h, possibly_fbo) {\n  let key = `${w}_${h}`;\n  let is_fbo = possibly_fbo && settings.use_fbos;\n  if (is_fbo) {\n    key += '_fbo';\n  }\n  let temp = temporary_textures[key];\n  if (!temp) {\n    temp = temporary_textures[key] = { list: [], idx: 0 };\n  }\n  if (temp.idx >= temp.list.length) {\n    let tex = textureCreateForCapture(`temp_${key}_${++last_temp_idx}`);\n    if (is_fbo) {\n      tex.allocFBO(w, h);\n      assert(tex.fbo);\n    }\n    temp.list.push(tex);\n  }\n  let tex = temp.list[temp.idx++];\n  if (is_fbo) {\n    assert(tex.fbo);\n  }\n  return tex;\n}\n\nfunction bindTemporaryDepthbuffer(w, h) {\n  let key = `${w}_${h}`;\n  let temp = temporary_depthbuffers[key];\n  if (!temp) {\n    temp = temporary_depthbuffers[key] = { list: [], idx: 0 };\n  }\n  if (temp.idx >= temp.list.length) {\n    let depth_buffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, depth_buffer);\n    let attachment;\n    if (settings.fbo_depth16) {\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h);\n      attachment = gl.DEPTH_ATTACHMENT;\n    } else {\n      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h);\n      attachment = gl.DEPTH_STENCIL_ATTACHMENT;\n    }\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    temp.list.push({ depth_buffer, attachment });\n  }\n  let { depth_buffer, attachment } = temp.list[temp.idx++];\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, depth_buffer);\n}\n\nfunction bindTemporaryDepthbufferTexture(w, h) {\n  let key = `${w}_${h}`;\n  let temp = temporary_depthtextures[key];\n  if (!temp) {\n    temp = temporary_depthtextures[key] = { list: [], idx: 0 };\n  }\n  if (temp.idx >= temp.list.length) {\n    let tex = textureCreateForDepthCapture(`temp_${key}_${++last_temp_idx}`,\n      settings.fbo_depth16 ? TEXTURE_FORMAT.DEPTH16 : TEXTURE_FORMAT.DEPTH24);\n    tex.allocDepth(w, h);\n    let attachment = settings.fbo_depth16 ? gl.DEPTH_ATTACHMENT : gl.DEPTH_STENCIL_ATTACHMENT;\n\n    temp.list.push({ tex, attachment });\n  }\n  let { tex, attachment } = temp.list[temp.idx++];\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, tex.handle, 0);\n  return tex;\n}\n\nexport function temporaryTextureClaim(tex) {\n  for (let key in temporary_textures) {\n    let temp = temporary_textures[key];\n    let idx = temp.list.indexOf(tex);\n    if (idx !== -1) {\n      temp.list.splice(idx, 1);\n      if (temp.idx > idx) {\n        --temp.idx;\n      }\n      return;\n    }\n  }\n  assert(false);\n}\n\n// Call tex.captureEnd when done\nfunction framebufferCaptureStart(tex, w, h, possibly_fbo) {\n  assert.equal(engine.viewport[0], 0); // maybe allow/require setting viewport *after* starting capture instead?\n  assert.equal(engine.viewport[1], 0);\n  if (!w) {\n    w = renderWidth();\n    h = renderHeight();\n  }\n  if (!tex) {\n    tex = getTemporaryTexture(w, h, possibly_fbo);\n  }\n  tex.captureStart(w, h);\n  return tex;\n}\n\n// Does a capture directly from the framebuffer regardless of current use_fbos setting\n// Warning: Slow on iOS\nexport function framebufferCapture(tex, w, h, filter_linear, wrap) {\n  tex = framebufferCaptureStart(tex, w, h, false);\n  tex.captureEnd(filter_linear, wrap);\n  return tex;\n}\n\n\nlet cur_tex;\nlet cur_depth;\nexport function framebufferStart(opts) {\n  assert(!cur_tex);\n  assert(!cur_depth);\n  let { width, height, viewport, final, clear, need_depth, clear_all, clear_color, force_tex } = opts;\n  if (!width) {\n    width = renderWidth();\n    height = renderHeight();\n  }\n  ++num_passes;\n  cur_depth = null;\n  if (force_tex) {\n    assert(viewport);\n    cur_tex = force_tex;\n    cur_tex.captureStart();\n  } else if (!final) {\n    cur_tex = framebufferCaptureStart(null, width, height, true);\n    if (settings.use_fbos) {\n      assert(cur_tex.fbo);\n      if (need_depth) {\n        if (need_depth === 'texture') {\n          cur_depth = bindTemporaryDepthbufferTexture(width, height);\n        } else {\n          bindTemporaryDepthbuffer(width, height);\n        }\n      } else {\n        // testing: force unbind, in case one was left bound\n        // gl.framebufferRenderbuffer(gl.FRAMEBUFFER, settings.fbo_depth16 ?\n        //   gl.DEPTH_ATTACHMENT : gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, null);\n      }\n    }\n  }\n  if (clear_color) {\n    gl.clearColor(clear_color[0], clear_color[1], clear_color[2], clear_color[3]);\n  }\n  if (clear && clear_all) {\n    // full clear, before setting viewport\n    gl.disable(gl.SCISSOR_TEST);\n    gl.clear(gl.COLOR_BUFFER_BIT | (need_depth ? gl.DEPTH_BUFFER_BIT : 0));\n  }\n  let need_scissor;\n  if (viewport) {\n    engine.setViewport(viewport);\n    need_scissor = viewport[0] || viewport[1] || viewport[2] !== engine.width || viewport[3] !== engine.height;\n    if (clear_all) { // not sure this logically follows, but we want this anywhere we're clearing all currently\n      need_scissor = false;\n    }\n  } else {\n    engine.setViewport([0, 0, width, height]);\n    need_scissor = width !== engine.width;\n  }\n  if (need_scissor) { // Note: previously `&& !settings.use_fbos`, but that seems wrong, why was it there?\n    gl.enable(gl.SCISSOR_TEST);\n    if (viewport) {\n      gl.scissor(viewport[0], viewport[1], viewport[2], viewport[3]);\n    } else {\n      gl.scissor(0, 0, width, height);\n    }\n  } else {\n    gl.disable(gl.SCISSOR_TEST);\n  }\n  if (clear && !clear_all) {\n    gl.clear(gl.COLOR_BUFFER_BIT | (need_depth ? gl.DEPTH_BUFFER_BIT : 0));\n  }\n}\n\nexport function framebufferEnd(opts) {\n  assert(cur_tex);\n  opts = opts || {};\n  let { filter_linear, wrap, need_depth } = opts;\n  assert.equal(Boolean(cur_depth), need_depth === 'texture');\n\n  cur_tex.captureEnd(filter_linear, wrap);\n  // Capture end for depth texture?  Nope, only works with FBOs in WebGL!\n\n  let ret;\n  if (cur_depth) {\n    ret = [cur_tex, cur_depth];\n  } else {\n    ret = cur_tex;\n  }\n  cur_tex = null;\n  cur_depth = null;\n\n  return ret;\n}\n\nexport function framebufferTopOfFrame() {\n  // In case of crash on previous frame\n  cur_tex = null;\n  cur_depth = null;\n}\n\nexport function framebufferEndOfFrame() {\n  assert(!cur_tex);\n  last_num_passes = num_passes;\n  num_passes = 0;\n  skip_release = skip_release && !reset_fbos;\n\n  for (let key in temporary_textures) {\n    let temp = temporary_textures[key];\n    if (reset_fbos) {\n      // Release all textures\n      temp.idx = 0;\n    }\n    // Release unused textures\n    if (!skip_release) {\n      while (temp.list.length > temp.idx) {\n        temp.list.pop().destroy();\n      }\n    }\n    if (!temp.list.length) {\n      delete temporary_textures[key];\n    } else {\n      temp.idx = 0;\n    }\n  }\n  for (let key in temporary_depthbuffers) {\n    let temp = temporary_depthbuffers[key];\n    if (reset_fbos) {\n      // Release all renderbuffers\n      temp.idx = 0;\n    }\n    // Release unused renderbuffers\n    if (!skip_release) {\n      while (temp.list.length > temp.idx) {\n        let { depth_buffer } = temp.list.pop();\n        // TODO: can this still be bound to a framebuffer? unlikely, but possible?\n        gl.deleteRenderbuffer(depth_buffer);\n      }\n    }\n    if (!temp.list.length) {\n      delete temporary_depthbuffers[key];\n    } else {\n      temp.idx = 0;\n    }\n  }\n  for (let key in temporary_depthtextures) {\n    let temp = temporary_depthtextures[key];\n    if (reset_fbos) {\n      // Release all depth textures\n      temp.idx = 0;\n    }\n    // Release unused depth textures\n    if (!skip_release) {\n      while (temp.list.length > temp.idx) {\n        let { tex } = temp.list.pop();\n        tex.destroy();\n      }\n    }\n    if (!temp.list.length) {\n      delete temporary_depthtextures[key];\n    } else {\n      temp.idx = 0;\n    }\n  }\n  reset_fbos = false;\n  skip_release = false;\n}\n\nexport function framebufferUpdateCanvasForCapture() {\n  if (cur_tex && settings.use_fbos) {\n    assert(cur_tex.fbo);\n    let saved_tex = cur_tex;\n    let saved_viewport = engine.viewport.slice(0);\n    // copy to canvas\n    framebufferEnd();\n    applyCopy({\n      source: saved_tex,\n      final: true,\n      viewport: saved_viewport,\n    });\n    // resume rendering to framebuffer\n    framebufferStart({\n      force_tex: saved_tex,\n      viewport: saved_viewport,\n    });\n    return saved_tex; // just for .width/height\n  } else {\n    return { width: engine.viewport[2], height: engine.viewport[3] };\n  }\n}\n\nlet clipboard_copy_supported = true;\n// Note: Adding this doesn't seem to help, except to get a clean error in\n//   contexts explicitly denying clipboard access (Discord)\nfunction clipboardGetPermission(next) {\n  if (!navigator.permissions?.query) {\n    return void next();\n  }\n  let didnext = false;\n  function onceNext(result) {\n    if (didnext) {\n      return;\n    }\n    didnext = true;\n    if (result && result.state && result.state === 'denied') {\n      clipboard_copy_supported = false;\n      next('ERR_CLIPBOARD_ACCESS_DENIED');\n    } else {\n      next();\n    }\n  }\n  try {\n    navigator.permissions.query({\n      name: 'clipboard-write'\n    }).then(onceNext, onceNext);\n  } catch (e) {\n    onceNext();\n  }\n}\n// Do this once at startup to set clipboard_copy_supported=false if we're in\n//   a context that explicitly denies clipboard access (Discord)\nclipboardGetPermission(nop);\n\nexport function copyCanvasToClipboard() {\n  if (clipboard_copy_supported === false) {\n    return;\n  }\n  function onError(err) {\n    console.error('Error copying to clipboard:', err);\n    clipboard_copy_supported = false;\n  }\n  engine.postRender(function () {\n    let dims = framebufferUpdateCanvasForCapture();\n    let canvas = engine.canvas;\n    if (dims.width !== canvas.width) {\n      canvas = document.createElement('canvas');\n      canvas.width = dims.width;\n      canvas.height = dims.height;\n      let ctx = canvas.getContext('2d');\n      ctx.drawImage(engine.canvas, 0, engine.canvas.height - dims.height, dims.width, dims.height,\n        0, 0, dims.width, dims.height);\n    }\n    if (!canvas.toBlob) { // iOS 10\n      return void onError('ERR_UNSUPPORTED');\n    }\n    canvas.toBlob((blob) => {\n      clipboardGetPermission((perm_err) => {\n        if (perm_err) {\n          return void onError(perm_err);\n        }\n        try {\n          /* globals navigator, ClipboardItem */\n          let maybe_promise = navigator.clipboard.write([\n            new ClipboardItem({\n              'image/png': blob\n            })\n          ]);\n          if (maybe_promise && maybe_promise.catch) {\n            maybe_promise.catch(onError);\n          }\n          // success\n        } catch (err) {\n          onError(err);\n        }\n      });\n    }, 'image/png');\n  });\n  // Also needs to add a postprocessing function to trigger offscreen rendering this frame\n}\n\nsettings.register({\n  show_passes: {\n    label: 'Show Postprocessing Passes',\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n  use_fbos: {\n    label: 'Use Framebuffer Objects for postprocessing',\n    default_value: is_ios ? 1 : 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    ver: 1,\n  },\n  fbo_depth16: { // This had no effect on performance, tested on iPhone, Xperia or Intel GPU\n    label: 'Use 16-bit depth buffers for offscreen rendering',\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    on_change: resetFBOs,\n  },\n  fbo_rgba: { // This had no effect on performance, tested on iPhone, Xperia or Intel GPU\n    label: 'Use RGBA color buffers for offscreen rendering',\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    on_change: resetFBOs,\n  },\n});\nreset_fbos = false; // in case it was flagged while registering settings\n\nperf.addMetric({\n  name: 'passes',\n  show_stat: 'show_passes',\n  labels: {\n    'passes: ': () => last_num_passes.toString(),\n  },\n});\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint no-bitwise:off */\n\nconst assert = require('assert');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\nconst perf = require('./perf.js');\nconst settings = require('./settings.js');\nconst { MAX_SEMANTIC } = require('./shaders.js');\nconst { ceil, max, min } = Math;\n\nexport const TRIANGLES = 4;\nexport const TRIANGLE_FAN = 6;\nexport const QUADS = 7;\n\nconst MAX_VERT_COUNT = 65536 - 4; // WebGL2 treats 65535 as \"primitive restart\" and also dies on iOS 15\n\nsettings.register({\n  show_render_stats: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n});\n\nexport let stats = {\n  draw_calls: 0,\n  draw_calls_geom: 0,\n  draw_calls_sprite: 0,\n  draw_calls_dyn: 0,\n  tris: 0,\n  verts: 0,\n  sprites: 0,\n  dyn: 0,\n  sprite_sort_elems: 0,\n  sprite_sort_cmps: 0,\n  font_calls: 0,\n  font_params: 0,\n};\nlet last_stats = {};\nlet perf_labels = {};\nfor (let key in stats) {\n  perf_labels[`${key}: `] = () => String(last_stats[key]);\n}\nperf.addMetric({\n  name: 'render_stats',\n  show_stat: 'show_render_stats',\n  show_all: true,\n  labels: perf_labels,\n});\n\n\nconst gl_byte_size = {\n  0x1400: 1, // GL_BYTE\n  0x1401: 1, // GL_UNSIGNED_BYTE\n  0x1402: 2, // GL_SHORT\n  0x1403: 2, // GL_UNSIGNED_SHORT\n  0x1406: 4, // GL_FLOAT\n};\n\n// let unit_buf;\n// let unit_buf_len = 0;\n\nlet bound_geom;\n\nlet bound_array_buf = null;\nlet bound_index_buf = null;\n\nlet quad_index_buf;\nlet quad_index_buf_len = 0;\n\nfunction deleteBuffer(handle) {\n  if (!handle) {\n    return;\n  }\n  if (bound_array_buf === handle) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    bound_array_buf = null;\n  }\n  if (bound_index_buf === handle) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    bound_index_buf = null;\n  }\n  gl.deleteBuffer(handle);\n}\n\nlet attrib_enabled = 0;\nfunction enableVertexAttribArray(bits) {\n  if (bits === attrib_enabled) {\n    return;\n  }\n  let disable_mask = (attrib_enabled & (~bits));\n  let enable_mask = ((~attrib_enabled) & bits);\n  attrib_enabled = bits;\n\n  if (disable_mask) {\n    let n = 0;\n    do {\n      if (disable_mask & 1) {\n        gl.disableVertexAttribArray(n);\n      }\n      n++;\n      disable_mask >>= 1;\n    } while (disable_mask);\n  }\n\n  if (enable_mask) {\n    let n = 0;\n    do {\n      if (enable_mask & 1) {\n        gl.enableVertexAttribArray(n);\n      }\n      n++;\n      enable_mask >>= 1;\n    } while (enable_mask);\n  }\n}\n\n// function bindUnitBuf(arr_idx, len) {\n//   if (len > unit_buf_len) {\n//     deleteBuffer(unit_buf);\n//     unit_buf = gl.createBuffer();\n//     unit_buf_len = max(ceil(unit_buf_len * 1.5), len);\n//     gl.bindBuffer(gl.ARRAY_BUFFER, unit_buf);\n//     bound_array_buf = unit_buf;\n//     let arr = new Uint8Array(unit_buf_len * 4);\n//     for (let ii = 0; ii < unit_buf_len * 4; ++ii) {\n//       arr[ii] = 255;\n//     }\n//     gl.bufferData(gl.ARRAY_BUFFER, arr, gl.STATIC_DRAW);\n//   } else {\n//     if (bound_array_buf !== unit_buf) {\n//       gl.bindBuffer(gl.ARRAY_BUFFER, unit_buf);\n//       bound_array_buf = unit_buf;\n//     }\n//   }\n//   gl.vertexAttribPointer(arr_idx, 4, gl.UNSIGNED_BYTE, true, 0, 0);\n// }\n\n// Verts should be ordered counter-clockwise from the upper left\nfunction getQuadIndexBuf(quad_count) {\n  assert(quad_count <= MAX_VERT_COUNT/4);\n  // If not, need to split into multiple vertex and index buffers (fairly easy),\n  //   or use the OES_element_index_uint extension (trivial, but probably slower, maybe not supported on mobile?)\n  if (quad_count * 6 > quad_index_buf_len) {\n    if (!quad_index_buf) {\n      quad_index_buf = gl.createBuffer();\n    } else {\n      // freeing old one\n      engine.perf_state.gpu_mem.geom -= quad_index_buf_len * 2;\n    }\n    quad_index_buf_len = min(max(ceil(quad_index_buf_len * 1.5), quad_count * 6), MAX_VERT_COUNT*6/4);\n    if (bound_index_buf !== quad_index_buf) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, quad_index_buf);\n      bound_index_buf = quad_index_buf;\n    }\n    let arr = new Uint16Array(quad_index_buf_len);\n    let vidx = 0;\n    for (let ii = 0; ii < quad_index_buf_len;) {\n      arr[ii++] = vidx + 1;\n      arr[ii++] = vidx + 3;\n      arr[ii++] = vidx++; // 0\n      arr[ii++] = vidx++; // 1\n      arr[ii++] = vidx++; // 2\n      arr[ii++] = vidx++; // 3\n    }\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arr, gl.STATIC_DRAW);\n    engine.perf_state.gpu_mem.geom += quad_index_buf_len * 2;\n  }\n  return quad_index_buf;\n}\n\nexport function geomCreateIndices(idxs) {\n  let ret = {\n    ibo: gl.createBuffer(),\n    ibo_size: idxs.length,\n  };\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ret.ibo);\n  bound_index_buf = ret.ibo;\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, idxs, gl.STATIC_DRAW);\n  engine.perf_state.gpu_mem.geom += idxs.length * 2;\n  return ret;\n}\n\nfunction formatInfo(format) {\n  if (!format.info) {\n    let stride = 0;\n    let elem_count = 0;\n    let used_attribs = 0;\n    let common_byte_size = 0;\n    for (let ii = 0; ii < format.length; ++ii) {\n      let fmt = format[ii];\n      let sem = fmt[0];\n      let gltype = fmt[1];\n      let count = fmt[2];\n      used_attribs |= (1 << sem);\n      let byte_size = gl_byte_size[gltype];\n      assert(byte_size);\n      assert(!common_byte_size || byte_size === common_byte_size);\n      common_byte_size = byte_size;\n      fmt[3] = fmt[3] || false;\n      fmt[4] = byte_size;\n      stride += count * byte_size;\n      elem_count += count;\n    }\n    format.info = {\n      stride, elem_count, used_attribs, common_byte_size\n    };\n  }\n  return format.info;\n}\n\n// format is [shaders.SEMANTIC.foo, gl.FLOAT/UNSIGNED_BYTE/etc, count, normalized]\nfunction Geom(format, verts, idxs, mode) {\n  this.mode = mode || TRIANGLES;\n  this.format = format;\n  let info = this.format_info = formatInfo(format);\n  this.stride = info.stride;\n  this.used_attribs = info.used_attribs;\n\n  this.vert_count = verts.length / this.format_info.elem_count;\n  this.vert_gpu_mem = verts.length * this.format_info.common_byte_size;\n  if (verts.length) {\n    this.vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n    bound_array_buf = this.vbo;\n    gl.bufferData(gl.ARRAY_BUFFER, verts, gl.STATIC_DRAW);\n    engine.perf_state.gpu_mem.geom += this.vert_gpu_mem;\n  }\n  this.orig_mode = mode;\n  if (idxs) {\n    if (idxs.ibo) {\n      this.ibo = idxs.ibo;\n      this.ibo_owned = false;\n      this.ibo_size = idxs.ibo_size;\n    } else if (idxs.length) {\n      this.ibo = gl.createBuffer();\n      this.ibo_owned = true;\n      this.ibo_size = idxs.length;\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n      bound_index_buf = this.ibo;\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, idxs, gl.STATIC_DRAW);\n      engine.perf_state.gpu_mem.geom += idxs.length * 2;\n    } else {\n      // presumably updated later with .updateIndex\n      this.ibo = null;\n      this.ibo_owned = true;\n      this.ibo_size = 0;\n    }\n  } else if (mode === QUADS) {\n    assert.equal(this.vert_count % 4, 0);\n    let quad_count = this.vert_count / 4;\n    // PERFTODO: Use GL_QUADS_OES extension\n    this.ibo = getQuadIndexBuf(quad_count);\n    this.ibo_owned = false;\n    this.ibo_size = quad_count * 6;\n    this.mode = TRIANGLES;\n  } else if (mode === TRIANGLE_FAN) {\n    this.mode = TRIANGLE_FAN;\n  } else {\n    this.ibo = null;\n    this.ibo_owned = false;\n  }\n  this.updateTriCount();\n}\n\nfunction trianglesFromMode(mode, eff_vert_count) {\n  if (mode === TRIANGLES) {\n    return eff_vert_count / 3;\n  } else if (mode === TRIANGLE_FAN) {\n    return eff_vert_count - 2;\n  } else {\n    assert(!eff_vert_count);\n    return 0;\n  }\n}\n\nGeom.prototype.updateTriCount = function () {\n  let eff_vert_count = this.ibo ? this.ibo_size : this.vert_count;\n  this.tri_count = trianglesFromMode(this.mode, eff_vert_count);\n};\n\nGeom.prototype.updateIndex = function (idxs, num_idxs) {\n  assert.equal(this.ibo_owned, true);\n  if (num_idxs > this.ibo_size) {\n    if (bound_geom === this) {\n      bound_geom = null;\n    }\n    engine.perf_state.gpu_mem.geom -= this.ibo_size * 2;\n    deleteBuffer(this.ibo);\n    this.ibo_size = idxs.length;\n    this.ibo = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n    bound_index_buf = this.ibo;\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, idxs, gl.DYNAMIC_DRAW);\n    engine.perf_state.gpu_mem.geom += idxs.length * 2;\n  } else {\n    // Fits\n    if (bound_index_buf !== this.ibo) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n      bound_index_buf = this.ibo;\n    }\n    gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, idxs.subarray(0, num_idxs));\n  }\n  this.updateTriCount();\n};\n\nGeom.prototype.updateSub = function (offset, verts) {\n  if (bound_array_buf !== this.vbo) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n    bound_array_buf = this.vbo;\n  }\n  gl.bufferSubData(gl.ARRAY_BUFFER, offset, verts);\n};\n\nGeom.prototype.update = function (verts, num_verts) {\n  if (num_verts > this.vert_count) {\n    if (bound_geom === this) {\n      bound_geom = null;\n    }\n    engine.perf_state.gpu_mem.geom -= this.vert_gpu_mem;\n    deleteBuffer(this.vbo);\n    // Note: matching size, ignoring num_verts\n    this.vert_count = verts.length / this.format_info.elem_count;\n    this.vert_gpu_mem = verts.length * this.format_info.common_byte_size;\n    this.vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n    bound_array_buf = this.vbo;\n    gl.bufferData(gl.ARRAY_BUFFER, verts, gl.DYNAMIC_DRAW);\n    engine.perf_state.gpu_mem.geom += this.vert_gpu_mem;\n  } else {\n    // Fits\n    if (bound_array_buf !== this.vbo) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n      bound_array_buf = this.vbo;\n    }\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, verts.subarray(0, num_verts * this.format_info.elem_count));\n    // gl.bufferData(gl.ARRAY_BUFFER, verts, gl.DYNAMIC_DRAW);\n  }\n  if (this.orig_mode === QUADS) {\n    assert.equal(this.ibo_owned, false);\n    let quad_count = num_verts / 4;\n    this.ibo = getQuadIndexBuf(quad_count);\n    this.ibo_size = quad_count * 6;\n  }\n  this.updateTriCount();\n};\n\nGeom.prototype.dispose = function () {\n  if (this.ibo_owned) {\n    deleteBuffer(this.ibo);\n  }\n  this.ibo = null;\n  deleteBuffer(this.vbo);\n  this.vbo = null;\n  engine.perf_state.gpu_mem.geom -= this.vert_gpu_mem;\n  this.vert_gpu_mem = 0;\n};\n\nlet bound_attribs = (function () {\n  let r = [];\n  for (let ii = 0; ii < 16; ++ii) {\n    r.push({\n      vbo: null,\n      offset: 0,\n    });\n  }\n  return r;\n}());\n\nexport function geomResetState() {\n  // Resetting this avoids a state management bug on Chrome 71-73 on Redmi 6A -\n  //   it seems the browser was leaving something bound at a low level, perhaps\n  //   from generating mipmaps or something?\n  bound_geom = null;\n  bound_index_buf = null;\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  bound_array_buf = null;\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  for (let ii = 0; ii < MAX_SEMANTIC; ++ii) {\n    gl.disableVertexAttribArray(ii);\n  }\n  attrib_enabled = 0;\n  for (let ii = 0; ii < bound_attribs.length; ++ii) {\n    bound_attribs[ii].vbo = null;\n  }\n  // Also resetting stats for metrics here, but could do that separately if needed\n  stats.draw_calls = stats.draw_calls_geom + stats.draw_calls_sprite;\n  for (let key in stats) {\n    last_stats[key] = stats[key];\n    stats[key] = 0;\n  }\n}\n\nGeom.prototype.bind = function () {\n  if (bound_geom !== this) {\n    bound_geom = this;\n    let vbo = this.vbo;\n\n    let offset = 0;\n    for (let ii = 0; ii < this.format.length; ++ii) {\n      let fmt = this.format[ii];\n      let count = fmt[2];\n      let byte_size = fmt[4];\n      let sem = fmt[0];\n      if (bound_attribs[sem].vbo === vbo) { //  && bound_attribs[sem].offset = offset\n        // already bound\n      } else {\n        if (bound_array_buf !== vbo) {\n          gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n          bound_array_buf = vbo;\n        }\n        let gltype = fmt[1];\n        let normalized = fmt[3];\n        gl.vertexAttribPointer(sem, count, gltype, normalized, this.stride, offset);\n        bound_attribs[sem].vbo = bound_array_buf;\n        // bound_attribs[sem].offset = offset;\n      }\n      offset += count * byte_size;\n    }\n    // if (!used[1]) { // COLOR\n    //   used_attribs |= 1 << shader.semantics.COLOR;\n    //   bindUnitBuf(1, this.vert_count);\n    // }\n    enableVertexAttribArray(this.used_attribs);\n  }\n\n  if (this.ibo && bound_index_buf !== this.ibo) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n    bound_index_buf = this.ibo;\n  }\n};\nGeom.prototype.draw = function () {\n  this.bind();\n  ++stats.draw_calls_geom;\n  stats.tris += this.tri_count;\n  stats.verts += this.vert_count;\n  if (this.ibo) {\n    gl.drawElements(this.mode, this.ibo_size, gl.UNSIGNED_SHORT, 0);\n  } else {\n    gl.drawArrays(this.mode, 0, this.vert_count);\n  }\n};\nGeom.prototype.drawSub = function (start, tri_count) {\n  assert.equal(this.mode, TRIANGLES);\n  this.bind();\n  ++stats.draw_calls_geom;\n  if (this.ibo) {\n    stats.tris += tri_count;\n    stats.verts += tri_count*2; // assumes quads\n    gl.drawElements(this.mode, tri_count * 3, gl.UNSIGNED_SHORT, start * 2);\n  } else {\n    gl.drawArrays(this.mode, start, tri_count * 3);\n  }\n};\n\nfunction GeomMultiQuads(format, verts) {\n  let format_info = formatInfo(format);\n  let ec = format_info.elem_count;\n  let vert_count = verts.length / ec;\n  this.geoms = [];\n  for (let idx = 0; idx < vert_count; idx += MAX_VERT_COUNT) {\n    let num_sub_verts = min(vert_count - idx, MAX_VERT_COUNT);\n    let sub_data = new Uint8Array(verts.buffer, idx * ec, num_sub_verts * ec);\n    this.geoms.push(new Geom(format, sub_data, null, QUADS));\n  }\n}\nGeomMultiQuads.prototype.draw = function () {\n  for (let ii = 0; ii < this.geoms.length; ++ii) {\n    this.geoms[ii].draw();\n  }\n};\nGeomMultiQuads.prototype.drawSub = function (start, tri_count) {\n  for (let ii = 0; ii < this.geoms.length && tri_count; ++ii) {\n    let geom = this.geoms[ii];\n    let num_quads = geom.vert_count / 4;\n    if (start < num_quads * 6) {\n      let start_quad = start / 6;\n      let these = min(tri_count, (num_quads - start_quad) * 2);\n      geom.drawSub(start, these);\n      tri_count -= these;\n      start = 0;\n    } else {\n      start -= num_quads * 6;\n    }\n  }\n};\nGeomMultiQuads.prototype.dispose = function () {\n  for (let ii = 0; ii < this.geoms.length; ++ii) {\n    this.geoms[ii].dispose();\n  }\n  this.geoms = null;\n};\n\nexport function geomCreate(format, verts, idxs, mode) {\n  return new Geom(format, verts, idxs, mode);\n}\n\nexport function geomCreateQuads(format, verts, fixed_size) {\n  let format_info = formatInfo(format);\n  assert(fixed_size || verts instanceof Uint8Array); // only one handled by GeomMultiQuads for now\n  let vert_count = verts.length / format_info.elem_count;\n  if (vert_count > MAX_VERT_COUNT) {\n    return new GeomMultiQuads(format, verts);\n  }\n  return new Geom(format, verts, null, QUADS);\n}\n\nexport function geomStartup() {\n  // Nothing for now.\n}\n\n// Legacy APIs\nexports.createIndices = geomCreateIndices;\nexports.create = geomCreate;\nexports.createQuads = geomCreateQuads;\n","/* eslint no-bitwise:off */\n// From https://stackoverflow.com/questions/8936984/uint8array-to-string-in-javascript\n\nlet charCache = new Array(128);  // Preallocate the cache for the common single byte chars\nlet charFromCodePt = String.fromCodePoint || String.fromCharCode;\nlet result = [];\nexport function decode(array) {\n  let codePt;\n  let byte1;\n  let buffLen = array.length;\n\n  result.length = 0;\n\n  for (let i = 0; i < buffLen;) {\n    byte1 = array[i++];\n\n    if (byte1 <= 0x7F) {\n      codePt = byte1;\n    } else if (byte1 <= 0xDF) {\n      codePt = ((byte1 & 0x1F) << 6) | (array[i++] & 0x3F);\n    } else if (byte1 <= 0xEF) {\n      codePt = ((byte1 & 0x0F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F);\n    } else if (String.fromCodePoint) {\n      codePt = ((byte1 & 0x07) << 18) | ((array[i++] & 0x3F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F);\n    } else {\n      codePt = 63;    // Cannot convert four byte code points, so use \"?\" instead\n      i += 3;\n    }\n\n    result.push(charCache[codePt] || (charCache[codePt] = charFromCodePt(codePt)));\n  }\n\n  return result.join('');\n}\n","// Derived from (MIT Licensed) https://github.com/uber-web/loaders.gl/tree/master/modules/gltf\n\nconst TYPES = ['SCALAR', 'VEC2', 'VEC3', 'VEC4'];\n\nexport function getAccessorTypeFromSize(size) {\n  const type = TYPES[size - 1];\n  return type || TYPES[0];\n}\n\n// glTF ACCESSOR CONSTANTS\n\nexport const ATTRIBUTE_TYPE_TO_COMPONENTS = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\n\nexport const ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE = {\n  5120: 1,\n  5121: 1,\n  5122: 2,\n  5123: 2,\n  5125: 4,\n  5126: 4\n};\n\nexport const ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n","// Derived from (MIT Licensed) https://github.com/uber-web/loaders.gl/tree/master/modules/gltf\n/* eslint-env browser */\n\n/* eslint-disable import/order */\nconst assert = require('assert');\n\nconst { unpackGLBBuffers } = require('./unpack-glb-buffers.js');\nconst { unpackBinaryJson } = require('./unpack-binary-json.js');\n\nfunction padTo4Bytes(byteLength) {\n  return (byteLength + 3) & ~3;\n}\n\nconst decode_utf8 = require('./decode-utf8.js');\n\nconst {\n  ATTRIBUTE_TYPE_TO_COMPONENTS,\n  ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE,\n  ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY\n} = require('./gltf-type-utils.js');\n\nconst MAGIC_glTF = 0x676c5446; // glTF in Big-Endian ASCII\n\nconst GLB_FILE_HEADER_SIZE = 12;\nconst GLB_CHUNK_HEADER_SIZE = 8;\n\nconst GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nconst GLB_CHUNK_TYPE_BIN = 0x004e4942;\n\nconst LE = true; // Binary GLTF is little endian.\nconst BE = false; // Magic needs to be written as BE\n\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#glb-file-format-specification\nfunction GLBParser() {\n  // Result\n  this.binaryByteOffset = null;\n  this.packedJson = null;\n  this.json = null;\n}\n\nfunction parseBinary(self) {\n  // GLB Header\n  const dataView = new DataView(self.glbArrayBuffer);\n  const magic1 = dataView.getUint32(0, BE); // Magic number (the ASCII string 'glTF').\n  const version = dataView.getUint32(4, LE); // Version 2 of binary glTF container format\n  const fileLength = dataView.getUint32(8, LE); // Total byte length of generated file\n\n  let valid = magic1 === MAGIC_glTF;\n  if (!valid) {\n    console.warn('Invalid GLB magic string');\n  }\n\n  assert(version === 2, `Invalid GLB version ${version}. Only .glb v2 supported`);\n  assert(fileLength > 20);\n\n  // Write the JSON chunk\n  const jsonChunkLength = dataView.getUint32(12, LE); // Byte length of json chunk\n  const jsonChunkFormat = dataView.getUint32(16, LE); // Chunk format as uint32\n\n  valid = jsonChunkFormat === GLB_CHUNK_TYPE_JSON || jsonChunkFormat === 0; // Back compat\n  assert(valid, `JSON chunk format ${jsonChunkFormat}`);\n\n  // Create a \"view\" of the binary encoded JSON data\n  const jsonChunkOffset = GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE; // First headers: 20 bytes\n  const jsonChunk = new Uint8Array(self.glbArrayBuffer, jsonChunkOffset, jsonChunkLength);\n\n  // Decode the JSON binary array into clear text\n  const jsonText = decode_utf8.decode(jsonChunk);\n\n  // Parse the JSON text into a JavaScript data structure\n  self.json = JSON.parse(jsonText);\n\n  // TODO - BIN chunk can be optional\n  const binaryChunkStart = jsonChunkOffset + padTo4Bytes(jsonChunkLength);\n  self.binaryByteOffset = binaryChunkStart + GLB_CHUNK_HEADER_SIZE;\n\n  const binChunkFormat = dataView.getUint32(binaryChunkStart + 4, LE); // Chunk format as uint32\n  valid = binChunkFormat === GLB_CHUNK_TYPE_BIN || binChunkFormat === 1; // Back compat\n  assert(valid, `BIN chunk format ${binChunkFormat}`);\n\n  return {\n    arrayBuffer: self.glbArrayBuffer,\n    binaryByteOffset: self.binaryByteOffset,\n    json: self.json\n  };\n}\n\nfunction parseInternal(self) {\n  const result = parseBinary(self);\n  self.packedJson = result.json;\n  self.unpackedBuffers = unpackGLBBuffers(self.glbArrayBuffer, self.json, self.binaryByteOffset);\n  self.json = unpackBinaryJson(self.json, self.unpackedBuffers);\n}\n\nGLBParser.prototype.parseSync = function (arrayBuffer) {\n  // Input\n  this.glbArrayBuffer = arrayBuffer;\n\n  // Only parse once\n  if (this.json === null && this.binaryByteOffset === null) {\n    parseInternal(this);\n  }\n  return this;\n};\n\n// Return the gltf JSON and the original arrayBuffer\nGLBParser.prototype.parse = function (arrayBuffer) {\n  return this.parseSync(arrayBuffer);\n};\n\n// Returns application JSON data stored in `key`\nGLBParser.prototype.getApplicationData = function (key) {\n  return this.json[key];\n};\n\n// Returns JSON envelope\nGLBParser.prototype.getJSON = function () {\n  return this.json;\n};\n\n// Return binary chunk\nGLBParser.prototype.getArrayBuffer = function () {\n  return this.glbArrayBuffer;\n};\n\n// Return index into binary chunk\nGLBParser.prototype.getBinaryByteOffset = function () {\n  return this.binaryByteOffset;\n};\n\n// Unpacks a bufferview into a new Uint8Array that is a view into the binary chunk\nGLBParser.prototype.getBufferView = function (glTFBufferView) {\n  const byteOffset = (glTFBufferView.byteOffset || 0) + this.binaryByteOffset;\n  return new Uint8Array(this.glbArrayBuffer, byteOffset, glTFBufferView.byteLength);\n};\n\n// Unpacks a glTF accessor into a new typed array that is a view into the binary chunk\nGLBParser.prototype.getBuffer = function (glTFAccessor) {\n  // Decode the glTF accessor format\n  const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[glTFAccessor.componentType];\n  const components = ATTRIBUTE_TYPE_TO_COMPONENTS[glTFAccessor.type];\n  const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[glTFAccessor.componentType];\n  const length = glTFAccessor.count * components;\n  const byteLength = glTFAccessor.count * components * bytesPerComponent;\n\n  // Get the boundaries of the binary sub-chunk for this bufferView\n  const glTFBufferView = this.json.bufferViews[glTFAccessor.bufferView];\n  assert(byteLength >= 0 && glTFAccessor.byteOffset + byteLength <= glTFBufferView.byteLength);\n\n  const byteOffset = glTFBufferView.byteOffset + this.binaryByteOffset + glTFAccessor.byteOffset;\n  return new ArrayType(this.glbArrayBuffer, byteOffset, length);\n};\n\n// Unpacks an image into an HTML image\nGLBParser.prototype.getImageData = function (glTFImage) {\n  return {\n    typedArray: this.getBufferView(glTFImage.bufferView),\n    mimeType: glTFImage.mimeType || 'image/jpeg'\n  };\n};\n\nGLBParser.prototype.getImage = function (glTFImage) {\n  const arrayBufferView = this.getBufferView(glTFImage.bufferView);\n  const mimeType = glTFImage.mimeType || 'image/jpeg';\n  const blob = new Blob([arrayBufferView], { type: mimeType });\n  const urlCreator = window.URL || window.webkitURL;\n  const imageUrl = urlCreator.createObjectURL(blob);\n  const img = new Image();\n  img.src = imageUrl;\n  return img;\n};\n\n// GLBParser.prototype.getImageAsync = function (glTFImage) {\n//   return new Promise(resolve => {\n//     const arrayBufferView = this.getBufferView(glTFImage.bufferView);\n//     const mimeType = glTFImage.mimeType || 'image/jpeg';\n//     const blob = new Blob([arrayBufferView], {type: mimeType});\n//     const urlCreator = window.URL || window.webkitURL;\n//     const imageUrl = urlCreator.createObjectURL(blob);\n//     const img = new Image();\n//     img.onload = () => resolve(img);\n//     img.src = imageUrl;\n//   });\n// };\n\nmodule.exports = GLBParser;\nGLBParser.parse = function (data) {\n  let parser = new GLBParser();\n  return parser.parse(data);\n};\n","// Derived from (MIT Licensed) https://github.com/uber-web/loaders.gl/tree/master/modules/gltf\n\nfunction parseJSONPointer(value) {\n  if (typeof value === 'string') {\n    // Remove escape character\n    if (value.indexOf('##/') === 0) {\n      return value.slice(1);\n    }\n\n    let matches = value.match(/#\\/([a-z]+)\\/([0-9]+)/);\n    if (matches) {\n      const index = parseInt(matches[2], 10);\n      return [matches[1], index];\n    }\n\n    // Legacy: `$$$i`\n    matches = value.match(/\\$\\$\\$([0-9]+)/);\n    if (matches) {\n      const index = parseInt(matches[1], 10);\n      return ['accessors', index];\n    }\n  }\n\n  return null;\n}\n\nfunction decodeJSONPointer(object, buffers) {\n  const pointer = parseJSONPointer(object);\n  if (pointer) {\n    const field = pointer[0];\n    const index = pointer[1];\n    const buffer = buffers[field] && buffers[field][index];\n    if (buffer) {\n      return buffer;\n    }\n    console.error(`Invalid JSON pointer ${object}: #/${field}/${index}`);\n  }\n  return null;\n}\n\n// Recursively unpacks objects, replacing \"JSON pointers\" with typed arrays\nfunction unpackJsonArraysRecursive(json, topJson, buffers, options = {}) {\n  const object = json;\n\n  const buffer = decodeJSONPointer(object, buffers);\n  if (buffer) {\n    return buffer;\n  }\n\n  // Copy array\n  if (Array.isArray(object)) {\n    return object.map((element) => unpackJsonArraysRecursive(element, topJson, buffers, options));\n  }\n\n  // Copy object\n  if (object !== null && typeof object === 'object') {\n    const newObject = {};\n    for (const key in object) {\n      newObject[key] = unpackJsonArraysRecursive(object[key], topJson, buffers, options);\n    }\n    return newObject;\n  }\n\n  return object;\n}\n\nexport function unpackBinaryJson(json, buffers, options = {}) {\n  return unpackJsonArraysRecursive(json, json, buffers, options);\n}\n","// Derived from (MIT Licensed) https://github.com/uber-web/loaders.gl/tree/master/modules/gltf\n\nconst assert = require('assert');\n\nconst {\n  ATTRIBUTE_TYPE_TO_COMPONENTS,\n  ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE,\n  ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY\n} = require('./gltf-type-utils.js');\n\n// Creates a new ArrayBuffer starting at the offset, containing all remaining bytes\n// TODO - should not be needed, see above\nfunction getArrayBufferAtOffset(arrayBuffer, byteOffset) {\n  const length = arrayBuffer.byteLength - byteOffset;\n  const binaryBuffer = new ArrayBuffer(length);\n  const sourceArray = new Uint8Array(arrayBuffer);\n  const binaryArray = new Uint8Array(binaryBuffer);\n  for (let i = 0; i < length; i++) {\n    binaryArray[i] = sourceArray[byteOffset + i];\n  }\n  return binaryBuffer;\n}\n\nfunction getArrayTypeAndLength(accessor, bufferView) {\n  const ArrayType = ATTRIBUTE_COMPONENT_TYPE_TO_ARRAY[accessor.componentType];\n  const components = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n  const bytesPerComponent = ATTRIBUTE_COMPONENT_TYPE_TO_BYTE_SIZE[accessor.componentType];\n  const length = accessor.count * components;\n  const byteLength = accessor.count * components * bytesPerComponent;\n  assert(byteLength >= 0 && byteLength <= bufferView.byteLength);\n  return { ArrayType, length, byteLength };\n}\n\nfunction unpackAccessors(arrayBuffer, bufferViews, json) {\n  // unpack accessors\n  const accessors = json.accessors || [];\n\n  const accessorBuffers = [];\n\n  for (let i = 0; i < accessors.length; ++i) {\n    const accessor = accessors[i];\n    assert(accessor);\n\n    const bufferView = bufferViews[accessor.bufferView];\n    // Draco encoded meshes don't have bufferView in accessor\n    if (bufferView) {\n      // Create a new typed array as a view into the combined buffer\n      const { ArrayType, length } = getArrayTypeAndLength(accessor, bufferView);\n      const array = new ArrayType(arrayBuffer, bufferView.byteOffset, length);\n      // Store the metadata on the array (e.g. needed to determine number of components per element)\n      array.accessor = accessor;\n      accessorBuffers.push(array);\n    }\n  }\n\n  return accessorBuffers;\n}\n\nfunction unpackImages(arrayBuffer, bufferViews, json) {\n  // unpack images\n  const images = json.images || [];\n\n  const imageBuffers = [];\n\n  for (let i = 0; i < images.length; ++i) {\n    const image = images[i];\n    assert(image);\n\n    if (image.bufferView === undefined) {\n      imageBuffers.push(null);\n      continue;\n    }\n\n    const bufferView = bufferViews[image.bufferView];\n    assert(bufferView);\n\n    // Create a new typed array as a view into the combined buffer\n    const array = new Uint8Array(arrayBuffer, bufferView.byteOffset, bufferView.byteLength);\n    // Store the metadata on the array (e.g. needed to determine number of components per element)\n    array.imate = image;\n    imageBuffers.push(array);\n  }\n\n  return imageBuffers;\n}\n\nexport function unpackGLBBuffers(arrayBuffer, json, binaryByteOffset) {\n  // TODO - really inefficient, should just use the offset into the original array buffer\n  if (binaryByteOffset) {\n    arrayBuffer = getArrayBufferAtOffset(arrayBuffer, binaryByteOffset);\n  }\n\n  const bufferViews = json.bufferViews || [];\n\n  for (let i = 0; i < bufferViews.length; ++i) {\n    const bufferView = bufferViews[i];\n    assert(bufferView.byteLength >= 0);\n  }\n\n  return {\n    // TODO: delete unpackAccessors and use buffer views only?\n    accessors: unpackAccessors(arrayBuffer, bufferViews, json),\n    images: unpackImages(arrayBuffer, bufferViews, json)\n  };\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// System for registering callbacks to run in event handlers on the next frame\n// Used to get around restrictions on APIs like pointer lock, fullscreen, or\n// screen orientation.\n\nconst assert = require('assert');\n\nlet cbs = {};\nexport function topOfFrame() {\n  cbs = {};\n}\n\nexport function on(type, code_or_pos, cb) {\n  let list = cbs[type] = cbs[type] || [];\n  if (typeof code_or_pos === 'number') {\n    list[code_or_pos] = cb;\n  } else {\n    list.push([code_or_pos, cb]);\n  }\n}\n\nexport function handle(type, event) {\n  let list = cbs[type];\n  if (!list) {\n    return;\n  }\n  switch (type) {\n    case 'keydown':\n    case 'keyup':\n      if (list[event.keyCode]) {\n        list[event.keyCode](type, event);\n      }\n      break;\n    case 'mouseup':\n    case 'mousedown': {\n      let x = event.pageX;\n      let y = event.pageY;\n      let button = event.button || 0;\n      for (let ii = 0; ii < list.length; ++ii) {\n        let elem = list[ii];\n        let pos = elem[0];\n        if (x >= pos.x && x < pos.x + pos.w &&\n          y >= pos.y && y < pos.y + pos.h &&\n          (pos.button < 0 || pos.button === button)\n        ) {\n          elem[1](type, event);\n          break;\n        }\n      }\n    } break;\n    default:\n      assert(false);\n  }\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Some code from Turbulenz: Copyright (c) 2012-2013 Turbulenz Limited\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* global navigator */\n\n/* eslint-disable import/order */\nconst assert = require('assert');\n\nconst UP_EDGE = 0; // only for pads, which use === null as \"up\"\nconst UP = 0; // only for key/mouse\nconst DOWN = 1;\nconst DOWN_EDGE = 2; // only for pads\n\n// per-app overrideable options\nconst TOUCH_AS_MOUSE = true;\nlet map_analog_to_dpad = true;\n\nlet mouse_log = false;\n\nexport const click = mouseUpEdge; // eslint-disable-line @typescript-eslint/no-use-before-define\nexport const inputClick = mouseUpEdge; // eslint-disable-line @typescript-eslint/no-use-before-define\nexport const inputDrag = drag; // eslint-disable-line @typescript-eslint/no-use-before-define\n\nconst { deprecate } = require('glov/common/util.js');\ndeprecate(exports, 'mouseDown', 'mouseDownAnywhere, mouseDownMidClick, mouseDownOverBounds');\n\nimport {\n  ANY,\n  POINTERLOCK,\n} from './input_constants';\n\nexport * from './input_constants';\n\nexport let KEYS = {\n  BACKSPACE: 8,\n  TAB: 9,\n  ENTER: 13,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  ESC: 27,\n  ESCAPE: 27,\n  SPACE: 32,\n  PAGEUP: 33,\n  PAGEDOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  INS: 45,\n  DEL: 46,\n\n  0: 48,\n  1: 49,\n  2: 50,\n  3: 51,\n  4: 52,\n  5: 53,\n  6: 54,\n  7: 55,\n  8: 56,\n  9: 57,\n\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n\n  NUMPAD0: 96,\n  NUMPAD1: 97,\n  NUMPAD2: 98,\n  NUMPAD3: 99,\n  NUMPAD4: 100,\n  NUMPAD5: 101,\n  NUMPAD6: 102,\n  NUMPAD7: 103,\n  NUMPAD8: 104,\n  NUMPAD9: 105,\n  NUMPAD_MULTIPLY: 106,\n  NUMPAD_ADD: 107,\n  NUMPAD_SUBTRACT: 109,\n  NUMPAD_DECIMAL_POINT: 110,\n  NUMPAD_DIVIDE: 111,\n\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n\n  EQUALS: 187,\n  COMMA: 188,\n  MINUS: 189,\n  PERIOD: 190,\n  SLASH: 191,\n  TILDE: 192,\n};\nif (typeof Proxy === 'function') {\n  // Catch referencing keys that are not in our map\n  KEYS = new Proxy(KEYS, {\n    get: function (target, prop) {\n      let ret = target[prop];\n      assert(ret);\n      return ret;\n    }\n  });\n}\nexport const PAD = {\n  A: 0,\n  SELECT: 0, // GLOV name\n  B: 1,\n  CANCEL: 1, // GLOV name\n  X: 2,\n  Y: 3,\n  LB: 4,\n  LEFT_BUMPER: 4,\n  RB: 5,\n  RIGHT_BUMPER: 5,\n  LT: 6,\n  LEFT_TRIGGER: 6,\n  RT: 7,\n  RIGHT_TRIGGER: 7,\n  BACK: 8,\n  START: 9,\n  LEFT_STICK: 10,\n  RIGHT_STICK: 11,\n  UP: 12,\n  DOWN: 13,\n  LEFT: 14,\n  RIGHT: 15,\n  ANALOG_UP: 20,\n  ANALOG_LEFT: 21,\n  ANALOG_DOWN: 22,\n  ANALOG_RIGHT: 23,\n  LSTICK_UP: 20,\n  LSTICK_LEFT: 21,\n  LSTICK_DOWN: 22,\n  LSTICK_RIGHT: 23,\n  RSTICK_UP: 24,\n  RSTICK_LEFT: 25,\n  RSTICK_DOWN: 26,\n  RSTICK_RIGHT: 27,\n};\n\nconst { is_firefox, is_mac_osx } = require('./browser.js');\nconst camera2d = require('./camera2d.js');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\nconst { renderNeeded } = require('./engine.js');\nconst in_event = require('./in_event.js');\nconst local_storage = require('./local_storage.js');\nconst { abs, max, min, sqrt } = Math;\nconst { normalizeWheel } = require('./normalize_mousewheel.js');\nconst pointer_lock = require('./pointer_lock.js');\nconst settings = require('./settings.js');\nconst { soundResume } = require('./sound.js');\nconst { spotMouseoverHook } = require('./spot.js');\nconst { empty } = require('glov/common/util.js');\nconst { vec2, v2add, v2copy, v2lengthSq, v2set, v2scale, v2sub } = require('glov/common/vmath.js');\n\nlet pad_to_touch;\n\nlet canvas;\nlet key_state_new = {};\nlet pad_states = []; // One map per gamepad to pad button states\nlet gamepad_data = []; // Other tracking data per gamepad\nlet mouse_pos = vec2(); // in DOM coordinates, not canvas or virtual\nlet last_mouse_pos = vec2();\nlet mouse_pos_is_touch = false;\nlet mouse_over_captured = false;\nlet mouse_down = [];\nlet wheel_events = [];\nlet movement_questionable_frames = 0;\nconst MOVEMENT_QUESTIONABLE_FRAMES = 2; // Need at least 2\n\nlet input_eaten_kb = false;\nlet input_eaten_mouse = false;\n\nlet touches = {}; // `m${button}` or touch_id -> TouchData\nlet no_active_touches = true;\n\nexport let touch_mode = local_storage.getJSON('touch_mode', false);\nexport let pad_mode = !touch_mode && local_storage.getJSON('pad_mode', false);\n\ncmd_parse.registerValue('mouse_log', {\n  type: cmd_parse.TYPE_INT,\n  range: [0, 1],\n  get: () => mouse_log,\n  set: (v) => (mouse_log = v),\n});\n\nexport function inputTouchMode() {\n  return touch_mode;\n}\n\nexport function inputPadMode() {\n  return pad_mode;\n}\n\nexport function inputEatenMouse() {\n  return input_eaten_mouse;\n}\n\nfunction eventTimestamp(event) {\n  if (event && event.timeStamp) {\n    // assert((event.timeStamp < 1e12) === (engine.hrtime < 1e12));\n    // Must both be high res times, or both not!\n    if ((event.timeStamp < 1e12) !== (engine.hrtime < 1e12)) {\n      return engine.hrtime;\n    }\n    return event.timeStamp;\n  }\n  return engine.hrtime;\n}\n\nfunction TouchData(pos, touch, button, event) {\n  this.delta = vec2();\n  this.total = 0;\n  this.cur_pos = pos.slice(0);\n  this.start_pos = pos.slice(0);\n  this.touch = touch;\n  this.button = button;\n  this.start_time = Date.now();\n  this.dispatched = false;\n  this.dispatched_drag = false;\n  this.dispatched_drag_over = false;\n  this.was_double_click = false;\n  this.up_edge = 0;\n  this.down_edge = 0;\n  this.state = DOWN;\n  this.down_time = 0;\n  this.origin_time = eventTimestamp(event);\n}\nTouchData.prototype.down = function (event, is_edge) {\n  if (is_edge) {\n    this.down_edge++;\n  }\n  this.state = DOWN;\n  this.origin_time = eventTimestamp(event);\n};\n\nconst MIN_EVENT_TIME_DELTA = 0.01; // fractions of a millisecond\nfunction timeDelta(event, origin_time) {\n  let et = eventTimestamp(event);\n  // timestamps on events are often back in time relative to the last tick time\n  return max(et - origin_time, MIN_EVENT_TIME_DELTA);\n}\n\nfunction KeyData() {\n  this.down_edge = 0;\n  // this.down_start = 0;\n  this.origin_time = 0;\n  this.down_time = 0;\n  this.up_edge = 0;\n  this.state = UP;\n}\nKeyData.prototype.keyUp = function (event) {\n  ++this.up_edge;\n  this.down_time += timeDelta(event, this.origin_time);\n  this.state = UP;\n};\n\nfunction setMouseToMid() {\n  v2set(mouse_pos, engine.width*0.5/camera2d.domToCanvasRatio(), engine.height*0.5/camera2d.domToCanvasRatio());\n}\n\nexport function pointerLocked() {\n  return pointer_lock.isLocked();\n}\nlet pointerlock_touch_id = `m${POINTERLOCK}`;\nlet pointerlock_frame = -1;\n// only works reliably when called from an event handler\nexport function pointerLockEnter(when) {\n  pointer_lock.enter(when);\n}\nfunction onPointerLockEnter() {\n  if (touch_mode) {\n    return;\n  }\n  pointerlock_frame = engine.frame_index;\n  let touch_data = touches[pointerlock_touch_id];\n  setMouseToMid();\n  if (touch_data) {\n    v2copy(touch_data.start_pos, mouse_pos);\n    touch_data.state = DOWN;\n    touch_data.origin_time = engine.hrtime;\n  } else {\n    touch_data = touches[pointerlock_touch_id] = new TouchData(mouse_pos, false, POINTERLOCK, null);\n  }\n  movement_questionable_frames = MOVEMENT_QUESTIONABLE_FRAMES;\n}\nexport function pointerLockJustEntered(num_frames) {\n  return engine.frame_index <= pointerlock_frame + (num_frames || 1);\n}\nexport function pointerLockExit() {\n  let touch_data = touches[pointerlock_touch_id];\n  if (touch_data) {\n    v2copy(touch_data.cur_pos, mouse_pos);\n    // no UP_EDGE for this\n    touch_data.state = UP;\n  }\n  pointer_lock.exit();\n  movement_questionable_frames = MOVEMENT_QUESTIONABLE_FRAMES;\n}\n\nlet last_event;\nconst skip = { isTrusted: 1, sourceCapabilities: 1, path: 1, currentTarget: 1, view: 1 };\nfunction eventlog(event) {\n  if (event === last_event) {\n    return;\n  }\n  last_event = event;\n  let pairs = [];\n  for (let k in event) {\n    let v = event[k];\n    if (!v || typeof v === 'function' || k.toUpperCase() === k || skip[k]) {\n      continue;\n    }\n    pairs.push(`${k}:${v.id || v}`);\n  }\n  console.log(`${engine.frame_index} ${event.type} ${pointerLocked()?'ptrlck':'unlckd'} ${pairs.join(',')}`);\n}\n\nlet allow_all_events = false;\nexport function inputAllowAllEvents(allow) {\n  allow_all_events = allow;\n}\n\nfunction isInputElement(target) {\n  return target && (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' ||\n    target.tagName === 'LABEL' || target.tagName === 'VIDEO');\n}\n\nfunction letWheelEventThrough(event) {\n  // *not* checking for `noglov`, as links have these, and we want to capture scroll events even if mouse is over links\n  return allow_all_events || isInputElement(event.target);\n}\n\nlet event_filter = () => false;\n\n// `filter` returns true if the event should be allowed to propgate to the DOM, and not be sent to the engine\nexport function inputSetEventFilter(filter) {\n  event_filter = filter;\n}\n\nfunction letEventThrough(event) {\n  if (!event.target || allow_all_events || event.glov_do_not_cancel) {\n    return true;\n  }\n  // Going to an input or related element\n  return isInputElement(event.target) ||\n    String(event.target.className).includes('noglov') || event_filter(event);\n  /* Not doing this: this causes legitimate clicks (e.g. when an edit box is focused)\n      to be lost, instead, relying on `allow_all_events` when an HTML UI is active.\n    // or, one of those is focused, and going away from it (e.g. input elem focused, clicking on canvas)\n    document.activeElement && event.target !== document.activeElement &&\n    (isInputElement(document.activeElement) ||\n      String(document.activeElement.className).includes('noglov'));*/\n}\n\nfunction ignored(event) {\n  // eventlog(event);\n  if (!letEventThrough(event)) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n\nlet ctrl_checked = false;\nlet unload_protected = false;\nfunction beforeUnload(e) {\n  if (unload_protected && ctrl_checked) {\n    // Exit pointer lock if the browser didn't do that automatically\n    pointerLockExit();\n    // Cancel the event\n    e.preventDefault();\n    // Chrome requires returnValue to be set\n    e.returnValue = 'Are you sure you want to quit?';\n  } else {\n    engine.releaseCanvas();\n  }\n}\nfunction protectUnload(enable) {\n  unload_protected = enable;\n}\n\nlet last_input_time = 0;\nexport function inputLastTime() {\n  return last_input_time;\n}\nfunction onUserInput() {\n  soundResume();\n  last_input_time = Date.now();\n  renderNeeded();\n}\n\nfunction releaseAllKeysDown(evt) {\n  for (let code in key_state_new) {\n    let ks = key_state_new[code];\n    if (ks.state === DOWN) {\n      ks.keyUp(evt);\n    }\n  }\n}\n\nfunction onKeyUp(event) {\n  renderNeeded();\n  protectUnload(event.ctrlKey);\n  let code = event.keyCode;\n  if (!letEventThrough(event)) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  if (code === KEYS.ESC && pointerLocked()) {\n    pointerLockExit();\n  }\n  // Letting through to our code regardless of no_stop, because we handle things like ESC in INPUT elements\n\n  let ks = key_state_new[code];\n  if (ks && ks.state === DOWN) {\n    if (is_mac_osx && event.key === 'Meta') {\n      // We don't get keyUp events for any keys released while CMD is held, so we must assume all are released\n      releaseAllKeysDown(event);\n    } else {\n      ks.keyUp(event);\n    }\n  }\n\n  in_event.handle('keyup', event);\n}\n\nfunction onKeyDown(event) {\n  protectUnload(event.ctrlKey);\n  let code = event.keyCode;\n  let no_stop = letEventThrough(event) ||\n    code >= KEYS.F5 && code <= KEYS.F12 || // Chrome debug hotkeys\n    code === KEYS.I && (event.altKey && event.metaKey || event.ctrlKey && event.shiftKey) || // Safari, alternate Chrome\n    code === KEYS.R && event.ctrlKey || // Chrome reload hotkey\n    (code === KEYS.LEFT || code === KEYS.RIGHT) && event.altKey; // forward/back navigation\n  if (!no_stop) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  // console.log(`${event.code} ${event.keyCode}`);\n  onUserInput();\n\n  // Letting through to our code regardless of no_stop, because we handle things like ESC in INPUT elements\n  let ks = key_state_new[code];\n  if (!ks) {\n    ks = key_state_new[code] = new KeyData();\n  }\n  if (ks.state !== DOWN) { // not a repeat event\n    ++ks.down_edge;\n    ks.state = DOWN;\n    ks.origin_time = eventTimestamp(event);\n    // ks.down_start = ks.origin_time;\n\n    in_event.handle('keydown', event);\n  }\n}\n\nlet mouse_move_x = 0;\nexport function debugGetMouseMoveX() {\n  let ret = mouse_move_x;\n  mouse_move_x = 0;\n  return ret;\n}\n\nlet mouse_moved = false;\nlet mouse_button_had_edge = false;\nlet mouse_button_had_up_edge = false;\nlet temp_delta = vec2();\nlet last_abs_move = 0;\nlet last_abs_move_time = 0;\nlet last_move_x = 0;\nlet last_move_y = 0;\nfunction onMouseMove(event, no_stop) {\n  renderNeeded();\n  /// eventlog(event);\n  // Don't block mouse button 3, that's the Back button\n  if (!letEventThrough(event) && !no_stop && event.button !== 3) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (touch_mode) {\n      local_storage.setJSON('touch_mode', false);\n      touch_mode = false;\n    }\n    if (pad_mode) {\n      local_storage.setJSON('pad_mode', false);\n      pad_mode = false;\n    }\n  }\n  mouse_moved = true;\n  // offsetX/layerX return position relative to text-entry boxes, not good!\n  // clientX/clientY do not handle weird scrolling that happens on iOS, but\n  //   should not affect mouse events (but maybe on Safari desktop?)\n  mouse_pos[0] = event.pageX;\n  mouse_pos[1] = event.pageY;\n  // if (event.offsetX !== undefined) {\n  //   mouse_pos[0] = event.offsetX;\n  //   mouse_pos[1] = event.offsetY;\n  // } else {\n  //   mouse_pos[0] = event.layerX;\n  //   mouse_pos[1] = event.layerY;\n  // }\n  mouse_pos_is_touch = false;\n\n  let movement_x = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n  let movement_y = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n  mouse_move_x += movement_x;\n\n  let any_movement = false;\n  if (pointerLocked()) {\n    setMouseToMid();\n    if (movement_x || movement_y) {\n      // Smooth out (ignore) large jumps in movement\n      // This is, I believe, just a bug with Chromium on Windows, as it repositions the hidden mouse cursor\n      let ts = event.timeStamp || Date.now();\n      let abs_x = abs(movement_x);\n      let abs_y = abs(movement_y);\n      let abs_move = abs_x + abs_y;\n      if (abs_move > 200 && (abs_move > 3 * last_abs_move || ts - last_abs_move_time > 1000)) {\n        console.log(`Ignoring mousemove with sudden large delta: ${movement_x},${movement_y}`);\n      } else if (is_firefox && movement_x === last_move_x && movement_y === last_move_y && abs_x < 2 && abs_y < 2) {\n        // Ignoring mousemove similar to previous and with very little delta, due to a Firefox bug\n      } else {\n        v2set(temp_delta, movement_x || 0, movement_y || 0);\n        any_movement = true;\n      }\n      last_abs_move = abs_move;\n      last_abs_move_time = ts;\n      last_move_x = movement_x;\n      last_move_y = movement_y;\n    }\n  } else {\n    v2sub(temp_delta, mouse_pos, last_mouse_pos);\n    if (temp_delta[0] || temp_delta[1]) {\n      any_movement = true;\n    }\n    v2copy(last_mouse_pos, mouse_pos);\n  }\n  if (any_movement && movement_questionable_frames && v2lengthSq(temp_delta) > 100*100) {\n    // giant movement right after entering or exiting pointer lock, ignore (Chrome bug)\n    // We get these unreasonable jumps in both movementXY and the other, presumably\n    // because pointerLocked() is slightly out of sync, though the large .movementX/Y\n    // is clearly erroneous.\n    any_movement = false;\n  }\n  if (any_movement) {\n    for (let button = POINTERLOCK; button < mouse_down.length; ++button) {\n      if (mouse_down[button] || button === POINTERLOCK && pointerLocked()) {\n        let touch_data = touches[`m${button}`];\n        if (touch_data) {\n          v2add(touch_data.delta, touch_data.delta, temp_delta);\n          touch_data.total += abs(temp_delta[0]) + abs(temp_delta[1]);\n          v2copy(touch_data.cur_pos, mouse_pos);\n        }\n      }\n    }\n  }\n}\n\nfunction onMouseDown(event) {\n  if (mouse_log) {\n    eventlog(event);\n  }\n  onMouseMove(event); // update mouse_pos\n  onUserInput();\n  let no_click = letEventThrough(event);\n\n  let button = event.button;\n  mouse_down[button] = true;\n  let touch_id = `m${button}`;\n  if (touches[touch_id]) {\n    v2copy(touches[touch_id].start_pos, mouse_pos);\n  } else {\n    touches[touch_id] = new TouchData(mouse_pos, false, button, event);\n  }\n  touches[touch_id].down(event, !no_click);\n  if (!no_click) {\n    in_event.handle('mousedown', event);\n  }\n  mouse_button_had_edge = true;\n  //This solves input bug when game is running as iframe. E.g. Facebook Instant\n  if (window.focus) {\n    window.focus();\n  }\n}\n\nlet last_up_edges = [{\n  timestamp: 0,\n  pos: vec2(),\n},{\n  timestamp: 0,\n  pos: vec2(),\n}];\nfunction registerMouseUpEdge(touch_data, timestamp) {\n  touch_data.up_edge++;\n  let t = last_up_edges[0];\n  last_up_edges[0] = last_up_edges[1];\n  last_up_edges[1] = t;\n  v2copy(t.pos, touch_data.cur_pos);\n  t.timestamp = timestamp;\n}\n\nfunction onMouseUp(event) {\n  if (mouse_log) {\n    eventlog(event);\n  }\n  onMouseMove(event); // update mouse_pos\n  let no_click = letEventThrough(event);\n  let button = event.button;\n  if (mouse_down[button]) {\n    let touch_id = `m${button}`;\n    let touch_data = touches[touch_id];\n    if (touch_data) {\n      v2copy(touch_data.cur_pos, mouse_pos);\n      if (!no_click) {\n        registerMouseUpEdge(touch_data, eventTimestamp(event));\n      }\n      touch_data.state = UP;\n      touch_data.down_time += timeDelta(event, touch_data.origin_time);\n    }\n    delete mouse_down[button];\n  }\n  mouse_button_had_edge = true;\n  mouse_button_had_up_edge = true;\n  if (!no_click) {\n    in_event.handle('mouseup', event);\n  }\n}\n\nfunction onWheel(event) {\n  renderNeeded();\n  let saved = mouse_moved; // don't trigger mouseMoved()\n  onMouseMove(event, true);\n  // onUserInput(); - Browser doesn't count mousewheel as user input :(\n  mouse_moved = saved;\n  let normalized = normalizeWheel(event);\n  wheel_events.push({\n    pos: [event.pageX, event.pageY],\n    delta: -normalized.pixel_y/100,\n    dispatched: false,\n  });\n\n  if (!letWheelEventThrough(event)) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n\nlet touch_pos = vec2();\nlet released_touch_id = 0;\nfunction onTouchChange(event) {\n  // eventlog(event);\n  // Using .pageX/Y here because on iOS when a text entry is selected, it scrolls\n  // our canvas offscreen.  Should maybe have the canvas resize and use clientX\n  // instead, but this works well enough.\n  onUserInput();\n  if (!touch_mode) {\n    local_storage.set('touch_mode', true);\n    touch_mode = true;\n  }\n  if (pad_mode) {\n    local_storage.set('pad_mode', false);\n    pad_mode = false;\n  }\n  if (event.cancelable !== false) {\n    event.preventDefault();\n  }\n  let ct = event.touches;\n  let seen = {};\n\n  let new_count = ct.length;\n  let old_count = 0;\n  let first_valid_touch;\n  // Look for press and movement\n  for (let ii = 0; ii < ct.length; ++ii) {\n    let touch = ct[ii];\n    try {\n      if (!isFinite(touch.pageX) || !isFinite(touch.pageY)) {\n        // getting bad touch events sometimes (Moto phones?), simply ignore\n        --new_count;\n        continue;\n      }\n    } catch (e) {\n      // getting \"Permission denied to access property \"pageX\" rarely on Firefox, simply ignore\n      --new_count;\n      continue;\n    }\n    if (!first_valid_touch) {\n      first_valid_touch = touch;\n    }\n\n    let last_touch = touches[touch.identifier];\n    v2set(touch_pos, touch.pageX, touch.pageY);\n    if (!last_touch) {\n      last_touch = touches[touch.identifier] = new TouchData(touch_pos, true, 0, event);\n      last_touch.down(event, true);\n      mouse_button_had_edge = true;\n      in_event.handle('mousedown', touch);\n    } else {\n      ++old_count;\n      v2sub(temp_delta, touch_pos, last_touch.cur_pos);\n      v2add(last_touch.delta, last_touch.delta, temp_delta);\n      last_touch.total += abs(temp_delta[0]) + abs(temp_delta[1]);\n      v2copy(last_touch.cur_pos, touch_pos);\n    }\n\n    seen[touch.identifier] = true;\n    if (TOUCH_AS_MOUSE && new_count === 1) {\n      // Single touch, treat as mouse movement\n      v2copy(mouse_pos, touch_pos);\n      mouse_pos_is_touch = true;\n    }\n  }\n  // Look for release, if releasing exactly one final touch\n  let released_touch;\n  let released_ids = [];\n  for (let id in touches) {\n    if (!seen[id]) {\n      let touch = touches[id];\n      if (touch.touch && touch.state === DOWN) {\n        ++old_count;\n        released_touch = touch;\n        released_ids.push(id);\n        in_event.handle('mouseup', { pageX: touch.cur_pos[0], pageY: touch.cur_pos[1] });\n        registerMouseUpEdge(touch, eventTimestamp(event));\n        mouse_button_had_edge = true;\n        mouse_button_had_up_edge = true;\n        touch.state = UP;\n        touch.down_time += timeDelta(event, touch.origin_time);\n        touch.release = true;\n      }\n    }\n  }\n  for (let ii = 0; ii < released_ids.length; ++ii) {\n    let id = released_ids[ii];\n    let touch = touches[id];\n    // get new id, not overlapping with touch.identifier values,\n    // so that if we get a new touch event before the next tick, we still see the release, etc\n    let new_id = `r${++released_touch_id}`;\n    delete touches[id];\n    touches[new_id] = touch;\n  }\n  if (TOUCH_AS_MOUSE) {\n    if (old_count === 1 && new_count === 0) {\n      delete mouse_down[0];\n      v2copy(mouse_pos, released_touch.cur_pos);\n      mouse_pos_is_touch = true;\n    } else if (new_count === 1) {\n      if (!old_count) {\n        mouse_down[0] = true;\n      }\n      v2set(mouse_pos, first_valid_touch.pageX, first_valid_touch.pageY);\n      mouse_pos_is_touch = true;\n    } else if (new_count > 1) {\n      // multiple touches, release mouse_down without emitting click\n      delete mouse_down[0];\n    }\n  }\n}\n\nfunction onBlurOrFocus(evt) {\n  renderNeeded();\n  protectUnload(false);\n  releaseAllKeysDown(evt);\n}\n\nlet ANALOG_MAP = {};\nfunction genAnalogMap() {\n  if (map_analog_to_dpad) {\n    ANALOG_MAP[PAD.LEFT] = [PAD.LSTICK_LEFT, PAD.RSTICK_LEFT];\n    ANALOG_MAP[PAD.RIGHT] = [PAD.LSTICK_RIGHT, PAD.RSTICK_RIGHT];\n    ANALOG_MAP[PAD.UP] = [PAD.LSTICK_UP, PAD.RSTICK_UP];\n    ANALOG_MAP[PAD.DOWN] = [PAD.LSTICK_DOWN, PAD.RSTICK_DOWN];\n  }\n}\n\nlet passive_param = false;\nexport function handleTouches(elem) {\n  elem.addEventListener('touchstart', onTouchChange, passive_param);\n  elem.addEventListener('touchmove', onTouchChange, passive_param);\n  elem.addEventListener('touchend', onTouchChange, passive_param);\n  elem.addEventListener('touchcancel', onTouchChange, passive_param);\n}\n\nexport function startup(_canvas, params) {\n  canvas = _canvas;\n  pointer_lock.startup(canvas, onPointerLockEnter);\n  if (params.map_analog_to_dpad !== undefined) {\n    map_analog_to_dpad = params.map_analog_to_dpad;\n  }\n  pad_to_touch = params.pad_to_touch;\n  genAnalogMap();\n\n  try {\n    let opts = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive_param = { passive: false };\n        return false;\n      }\n    });\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    passive_param = false;\n  }\n\n  window.addEventListener('keydown', onKeyDown, false);\n  window.addEventListener('keyup', onKeyUp, false);\n\n  window.addEventListener('click', ignored, false);\n  //window.addEventListener('click', eventlog, false);\n  window.addEventListener('contextmenu', ignored, false);\n  window.addEventListener('mousemove', onMouseMove, false);\n  window.addEventListener('mousedown', onMouseDown, false);\n  window.addEventListener('mouseup', onMouseUp, false);\n  if (window.WheelEvent) {\n    window.addEventListener('wheel', onWheel, passive_param);\n  } else {\n    window.addEventListener('DOMMouseScroll', onWheel, false);\n    window.addEventListener('mousewheel', onWheel, false);\n  }\n\n  window.addEventListener('blur', onBlurOrFocus, false);\n  window.addEventListener('focus', onBlurOrFocus, false);\n\n  handleTouches(canvas);\n\n  window.addEventListener('beforeunload', beforeUnload, false);\n}\n\n\nconst DEADZONE = 0.26;\nconst DEADZONE_SQ = DEADZONE * DEADZONE;\nconst NUM_STICKS = 2;\nconst PAD_THRESHOLD = 0.35; // for turning analog motion into digital events\n\nfunction getGamepadData(idx) {\n  let gpd = gamepad_data[idx];\n  if (!gpd) {\n    gpd = gamepad_data[idx] = {\n      id: idx,\n      timestamp: 0,\n      sticks: new Array(NUM_STICKS),\n    };\n    for (let ii = 0; ii < NUM_STICKS; ++ii) {\n      gpd.sticks[ii] = vec2();\n    }\n    pad_states[idx] = {};\n  }\n  return gpd;\n}\n\nfunction updatePadState(gpd, ps, b, padcode) {\n  if (b && !ps[padcode]) {\n    ps[padcode] = DOWN_EDGE;\n    onUserInput();\n    if (touch_mode) {\n      local_storage.set('touch_mode', false);\n      touch_mode = false;\n    }\n    if (!pad_mode) {\n      local_storage.setJSON('pad_mode', true);\n      pad_mode = true;\n    }\n    if (padcode === pad_to_touch) {\n      let touch_id = `g${gpd.id}`;\n      if (touches[touch_id]) {\n        setMouseToMid();\n        v2copy(touches[touch_id].start_pos, mouse_pos);\n      } else {\n        touches[touch_id] = new TouchData(mouse_pos, false, 0, null);\n      }\n      touches[touch_id].down(null, true);\n    }\n  } else if (!b && ps[padcode]) {\n    ps[padcode] = UP_EDGE;\n    if (padcode === pad_to_touch) {\n      let touch_id = `g${gpd.id}`;\n      let touch_data = touches[touch_id];\n      if (touch_data) {\n        setMouseToMid();\n        v2copy(touch_data.cur_pos, mouse_pos);\n        registerMouseUpEdge(touch_data, engine.hrtime);\n        touch_data.state = UP;\n        touch_data.down_time += max(engine.hrtime - touch_data.origin_time, MIN_EVENT_TIME_DELTA);\n      }\n    }\n  }\n}\n\nfunction gamepadUpdate() {\n  let gamepads;\n  try {\n    gamepads = (navigator.gamepads ||\n      navigator.webkitGamepads ||\n      (navigator.getGamepads && navigator.getGamepads()) ||\n      (navigator.webkitGetGamepads && navigator.webkitGetGamepads()));\n  } catch (e) {\n    // Firefox blocks gamepad access sometimes, just ignore it we can't access it\n  }\n\n  if (gamepads) {\n    let numGamePads = gamepads.length;\n    for (let ii = 0; ii < numGamePads; ii++) {\n      let gamepad = gamepads[ii];\n      if (!gamepad) {\n        continue;\n      }\n      let gpd = getGamepadData(ii);\n      let ps = pad_states[ii];\n      // Update button states\n      if (gpd.timestamp < gamepad.timestamp) {\n        let buttons = gamepad.buttons;\n        gpd.timestamp = gamepad.timestamp;\n\n        let numButtons = buttons.length;\n        for (let n = 0; n < numButtons; n++) {\n          let value = buttons[n];\n          if (typeof value === 'object') {\n            value = value.value;\n          }\n          value = value > 0.5;\n          updatePadState(gpd, ps, value, n);\n        }\n      }\n\n      // Update axes states\n      let axes = gamepad.axes;\n      if (axes.length >= NUM_STICKS * 2) {\n        for (let n = 0; n < NUM_STICKS; ++n) {\n          let pair = gpd.sticks[n];\n          v2set(pair, axes[n*2], -axes[n*2 + 1]);\n          let magnitude = v2lengthSq(pair);\n          if (magnitude > DEADZONE_SQ) {\n            magnitude = sqrt(magnitude);\n\n            // Normalize lX and lY\n            v2scale(pair, pair, 1 / magnitude);\n\n            // Clip the magnitude at its max possible value\n            magnitude = min(magnitude, 1);\n\n            // Adjust magnitude relative to the end of the dead zone\n            magnitude = ((magnitude - DEADZONE) / (1 - DEADZONE));\n\n            v2scale(pair, pair, magnitude);\n          } else {\n            v2set(pair, 0, 0);\n          }\n\n          // Apply \"movement\" to drag events\n          if (n <= 1 && pad_to_touch !== undefined) {\n            let touch_data = touches[`g${gpd.id}`];\n            if (touch_data) {\n              v2scale(temp_delta, pair, engine.frame_dt);\n              v2add(touch_data.delta, touch_data.delta, temp_delta);\n              touch_data.total += abs(temp_delta[0]) + abs(temp_delta[1]);\n              setMouseToMid();\n              v2copy(touch_data.cur_pos, mouse_pos);\n            }\n          }\n        }\n\n        // Calculate virtual directional buttons\n        updatePadState(gpd, ps, gpd.sticks[0][0] < -PAD_THRESHOLD, PAD.LSTICK_LEFT);\n        updatePadState(gpd, ps, gpd.sticks[0][0] > PAD_THRESHOLD, PAD.LSTICK_RIGHT);\n        updatePadState(gpd, ps, gpd.sticks[0][1] < -PAD_THRESHOLD, PAD.LSTICK_DOWN);\n        updatePadState(gpd, ps, gpd.sticks[0][1] > PAD_THRESHOLD, PAD.LSTICK_UP);\n\n        updatePadState(gpd, ps, gpd.sticks[1][0] < -PAD_THRESHOLD, PAD.RSTICK_LEFT);\n        updatePadState(gpd, ps, gpd.sticks[1][0] > PAD_THRESHOLD, PAD.RSTICK_RIGHT);\n        updatePadState(gpd, ps, gpd.sticks[1][1] < -PAD_THRESHOLD, PAD.RSTICK_DOWN);\n        updatePadState(gpd, ps, gpd.sticks[1][1] > PAD_THRESHOLD, PAD.RSTICK_UP);\n      }\n    }\n  }\n}\n\nexport function fakeTouchEvent(is_down) {\n  const touch_id = 'faketouch';\n  let touch_data = touches[touch_id];\n  if (touch_data && !is_down) {\n    setMouseToMid();\n    v2copy(touch_data.cur_pos, mouse_pos);\n    registerMouseUpEdge(touch_data, engine.hrtime);\n    touch_data.state = UP;\n    touch_data.down_time += max(engine.hrtime - touch_data.origin_time, MIN_EVENT_TIME_DELTA);\n  } else if (!touch_data && is_down) {\n    setMouseToMid();\n    touches[touch_id] = new TouchData(mouse_pos, false, 0, null);\n  }\n}\n\nexport function tickInput() {\n  // browser frame has occurred since the call to endFrame(),\n  // we should now have `touches` and `key_state` populated with edge events\n  if (movement_questionable_frames) {\n    --movement_questionable_frames;\n  }\n\n  // update timing of key down states\n  let hrtime = engine.hrtime;\n  for (let code in key_state_new) {\n    let ks = key_state_new[code];\n    if (ks.state === DOWN) {\n      ks.down_time += max(hrtime - ks.origin_time, MIN_EVENT_TIME_DELTA);\n      // assert(hrtime >= ks.origin_time); - should be true, but often isn't\n      ks.origin_time = hrtime;\n    }\n  }\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (touch_data.state === DOWN) {\n      touch_data.down_time += max(hrtime - touch_data.origin_time, MIN_EVENT_TIME_DELTA);\n      // assert(hrtime >= touch_data.origin_time); - should be true, but often isn't\n      touch_data.origin_time = hrtime;\n    }\n  }\n\n  mouse_over_captured = false;\n  gamepadUpdate();\n  in_event.topOfFrame();\n  ctrl_checked = false;\n  if (touches[pointerlock_touch_id] && !pointerLocked()) {\n    pointerLockExit();\n  }\n  no_active_touches = empty(touches);\n}\n\nfunction endFrameTickMap(map) {\n  Object.keys(map).forEach((keycode) => {\n    switch (map[keycode]) {\n      case DOWN_EDGE:\n        map[keycode] = DOWN;\n        break;\n      case UP_EDGE:\n        delete map[keycode];\n        break;\n      default:\n    }\n  });\n}\nexport function endFrame(skip_mouse) {\n  for (let code in key_state_new) {\n    let ks = key_state_new[code];\n    if (ks.state === UP) {\n      key_state_new[code] = null;\n      delete key_state_new[code];\n    } else {\n      ks.up_edge = 0;\n      ks.down_edge = 0;\n      ks.down_time = 0;\n    }\n  }\n\n  pad_states.forEach(endFrameTickMap);\n  if (!skip_mouse) {\n    for (let touch_id in touches) {\n      let touch_data = touches[touch_id];\n      if (touch_data.state === UP) {\n        // Manually null out touches[touch_id] - some Chrome optimizer bug causes\n        // callers to later get this old value (instead of the newly added on with\n        // the same ID) unless we null it out (then they seem to get the new one).\n        touches[touch_id] = null;\n        delete touches[touch_id];\n      } else {\n        touch_data.delta[0] = touch_data.delta[1] = 0;\n        touch_data.dispatched = false;\n        touch_data.dispatched_drag = false;\n        touch_data.dispatched_drag_over = false;\n        if (touch_data.drag_payload_frame === engine.frame_index - 2) {\n          // Clear this after an entire frame of not being set (usually, things\n          // on the next frame will need to get the payload that was set later\n          // in the previous frame)\n          touch_data.drag_payload = null;\n        }\n        touch_data.up_edge = 0;\n        touch_data.down_edge = 0;\n        touch_data.down_time = 0;\n      }\n    }\n    wheel_events.length = 0;\n    input_eaten_mouse = false;\n    mouse_moved = false;\n    mouse_button_had_edge = false;\n    mouse_button_had_up_edge = false;\n  }\n  input_eaten_kb = false;\n}\n\nexport function tickInputInactive() {\n  in_event.topOfFrame();\n  ctrl_checked = false;\n  endFrame();\n}\n\nexport function eatAllInput(skip_mouse) {\n  // destroy touches, remove all down and up edges\n  endFrame(skip_mouse);\n  if (!skip_mouse) {\n    mouse_over_captured = true;\n    input_eaten_mouse = true;\n  }\n  input_eaten_kb = true;\n}\n\nexport function eatAllKeyboardInput() {\n  eatAllInput(true);\n}\n\n// returns position mapped to current camera view\nexport function mousePos(dst) {\n  dst = dst || vec2();\n  camera2d.domToVirtual(dst, mouse_pos);\n  return dst;\n}\n\nexport function mouseDomPos() {\n  return mouse_pos;\n}\n\nexport function mouseMoved() {\n  return mouse_moved;\n}\n\nexport function mouseButtonHadEdge() {\n  return mouse_button_had_edge;\n}\n\nexport function mouseButtonHadUpEdge() {\n  return mouse_button_had_up_edge;\n}\n\nconst full_screen_pos_param = {};\nfunction mousePosParamUnique(param) {\n  param = param || full_screen_pos_param;\n  let pos_param = param.mouse_pos_param;\n  if (!pos_param) {\n    pos_param = param.mouse_pos_param = {};\n  }\n  pos_param.x = param.x === undefined ? camera2d.x0Real() : param.x;\n  pos_param.y = param.y === undefined ? camera2d.y0Real() : param.y;\n  pos_param.w = param.w === undefined ? camera2d.wReal() : param.w;\n  pos_param.h = param.h === undefined ? camera2d.hReal() : param.h;\n  pos_param.button = param.button === undefined ? ANY : param.button;\n  return pos_param;\n}\n\nlet pos_param_temp = {};\nfunction mousePosParam(param) {\n  param = param || {};\n  pos_param_temp.x = param.x === undefined ? camera2d.x0Real() : param.x;\n  pos_param_temp.y = param.y === undefined ? camera2d.y0Real() : param.y;\n  pos_param_temp.w = param.w === undefined ? camera2d.wReal() : param.w;\n  pos_param_temp.h = param.h === undefined ? camera2d.hReal() : param.h;\n  pos_param_temp.button = param.button === undefined ? ANY : param.button;\n  return pos_param_temp;\n}\n\nlet check_pos = vec2();\nfunction checkPos(pos, param) {\n  if (!camera2d.domToVirtual(check_pos, pos)) {\n    return false;\n  }\n  return check_pos[0] >= param.x && (param.w === Infinity || check_pos[0] < param.x + param.w) &&\n    check_pos[1] >= param.y && (param.h === Infinity || check_pos[1] < param.y + param.h);\n}\n\nfunction wasDoubleClick(pos_param) {\n  if (engine.hrtime - last_up_edges[0].timestamp > settings.double_click_time) {\n    return false;\n  }\n  return checkPos(last_up_edges[0].pos, pos_param);\n}\n\nexport function mouseWheel(param) {\n  if (input_eaten_mouse || !wheel_events.length) {\n    return 0;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let ret = 0;\n  for (let ii = 0; ii < wheel_events.length; ++ii) {\n    let data = wheel_events[ii];\n    if (data.dispatched) {\n      continue;\n    }\n    if (checkPos(data.pos, pos_param)) {\n      ret += data.delta;\n      data.dispatched = true;\n    }\n  }\n  return ret;\n}\n\nexport function mouseOverCaptured() {\n  mouse_over_captured = true;\n}\n\nexport function mouseOver(param) {\n  profilerStartFunc();\n  param = param || {};\n  let pos_param = mousePosParamUnique(param);\n  spotMouseoverHook(pos_param, param);\n  if (mouse_over_captured || pointerLocked() && !param.allow_pointerlock) {\n    profilerStopFunc();\n    return false;\n  }\n\n  // eat mouse up/down/drag events\n  if (!param.peek && !param.peek_touch) {\n    for (let id in touches) {\n      let touch = touches[id];\n      if (checkPos(touch.cur_pos, pos_param)) {\n        if (touch.down_edge) {\n          touch.down_edge = 0;\n        }\n        if (touch.up_edge) {\n          touch.up_edge = 0;\n        }\n        if (!param || !param.drag_target) {\n          touch.dispatched = true;\n        }\n      }\n    }\n  }\n\n  let ret = false;\n  if (checkPos(mouse_pos, pos_param)) {\n    if (!param.peek && !param.peek_over) {\n      mouse_over_captured = true;\n    }\n    ret = true;\n  }\n  profilerStopFunc();\n  return ret;\n}\n\nexport function mouseDownAnywhere(button) {\n  if (input_eaten_mouse) {\n    return false;\n  }\n  if (button === undefined) {\n    button = ANY;\n  }\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (touch_data.state !== DOWN ||\n      !(button === ANY || button === touch_data.button)\n    ) {\n      continue;\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function mouseDownMidClick(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return false;\n  }\n  // Same logic as mouseUpEdge()\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n  let max_click_dist = param.max_dist || 50; // TODO: relative to camera distance?\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (touch_data.state !== DOWN ||\n      !(button === ANY || button === touch_data.button) ||\n      touch_data.total > max_click_dist\n    ) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function mouseDownOverBounds(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return false;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (touch_data.state !== DOWN ||\n      !(button === ANY || button === touch_data.button)\n    ) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function mousePosIsTouch() {\n  return mouse_pos_is_touch;\n}\n\nexport function numTouches() {\n  return Object.keys(touches).length;\n}\n\nexport function keyDown(keycode) {\n  if (keycode === KEYS.CTRL) {\n    ctrl_checked = true;\n  }\n  if (input_eaten_kb) {\n    return 0;\n  }\n  let ks = key_state_new[keycode];\n  if (!ks) {\n    return 0;\n  }\n  if (ks.state === DOWN) {\n    assert(ks.down_time); // Will fire if we call keyDown() before tickInput()\n  }\n  return ks.down_time;\n}\nexport function keyDownEdge(keycode, opts) {\n  if (input_eaten_kb) {\n    return 0;\n  }\n\n  if (opts && opts.in_event_cb) {\n    in_event.on('keydown', keycode, opts.in_event_cb);\n  }\n\n  let ks = key_state_new[keycode];\n  if (!ks) {\n    return 0;\n  }\n  let r = ks.down_edge;\n  ks.down_edge = 0;\n  return r;\n}\nexport function keyUpEdge(keycode, opts) {\n  if (input_eaten_kb) {\n    return 0;\n  }\n\n  if (opts && opts.in_event_cb) {\n    in_event.on('keyup', keycode, opts.in_event_cb);\n  }\n\n  let ks = key_state_new[keycode];\n  if (!ks) {\n    return 0;\n  }\n  let r = ks.up_edge;\n  ks.up_edge = 0;\n  return r;\n}\n\nexport function padGetAxes(out, stickindex, padindex) {\n  assert(stickindex >= 0 && stickindex < NUM_STICKS);\n  if (padindex === undefined) {\n    let sub = vec2();\n    v2set(out, 0, 0);\n    for (let ii = 0; ii < gamepad_data.length; ++ii) {\n      padGetAxes(sub, stickindex, ii);\n      v2add(out, out, sub);\n    }\n    return;\n  }\n  let sticks = getGamepadData(padindex).sticks;\n  v2copy(out, sticks[stickindex]);\n}\n\nfunction padButtonDownInternal(gpd, ps, padcode) {\n  if (ps[padcode]) {\n    return engine.frame_dt;\n  }\n  return 0;\n}\nfunction padButtonDownEdgeInternal(gpd, ps, padcode) {\n  if (ps[padcode] === DOWN_EDGE) {\n    ps[padcode] = DOWN;\n    return 1;\n  }\n  return 0;\n}\nfunction padButtonUpEdgeInternal(gpd, ps, padcode) {\n  if (ps[padcode] === UP_EDGE) {\n    delete ps[padcode];\n    return 1;\n  }\n  return 0;\n}\n\nfunction padButtonShared(fn, padcode, padindex) {\n  assert(padcode !== undefined);\n  let r = 0;\n  // Handle calling without a specific pad index\n  if (padindex === undefined) {\n    for (let ii = 0; ii < pad_states.length; ++ii) {\n      r += padButtonShared(fn, padcode, ii);\n    }\n    return r;\n  }\n\n  if (input_eaten_mouse) {\n    return 0;\n  }\n  let gpd = gamepad_data[padindex];\n  if (!gpd) {\n    return 0;\n  }\n  let ps = pad_states[padindex];\n\n  let am = ANALOG_MAP[padcode];\n  if (am) {\n    for (let ii = 0; ii < am.length; ++ii) {\n      r += fn(gpd, ps, am[ii]) || 0;\n    }\n  }\n  r += fn(gpd, ps, padcode);\n  return r;\n}\nexport function padButtonDown(padcode, padindex) {\n  return padButtonShared(padButtonDownInternal, padcode, padindex);\n}\nexport function padButtonDownEdge(padcode, padindex) {\n  return padButtonShared(padButtonDownEdgeInternal, padcode, padindex);\n}\nexport function padButtonUpEdge(padcode, padindex) {\n  return padButtonShared(padButtonUpEdgeInternal, padcode, padindex);\n}\n\nlet start_pos = vec2();\nlet cur_pos = vec2();\nlet delta = vec2();\n\nexport function mouseUpEdge(param) {\n  param = param || {};\n  if (input_eaten_mouse || !param.in_event_cb && no_active_touches) {\n    return null;\n  }\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n  let max_click_dist = param.max_dist || 50; // TODO: relative to camera distance?\n  let click_invalid = false;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (touch_data.total > max_click_dist) {\n      // Do *not* register in_event_cb, would fire even when we would disregard this click\n      click_invalid = true;\n      continue;\n    }\n    if (touch_data.long_press_dispatched) {\n      // If this touch has already triggered a long-press, do not additionally trigger a click\n      // also, invalidate in_event_cb\n      click_invalid = true;\n      continue;\n    }\n    if (!touch_data.up_edge) {\n      continue;\n    }\n    if (!(button === ANY || button === touch_data.button)) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      if (!param.peek) {\n        touch_data.up_edge = 0;\n      }\n      return {\n        button: touch_data.button,\n        pos: check_pos.slice(0),\n        start_time: touch_data.start_time,\n        was_double_click: wasDoubleClick(pos_param),\n      };\n    }\n  }\n\n  if (param.in_event_cb && !mouse_over_captured && !click_invalid) {\n    // TODO: Maybe need to also pass along earlier exclusions?  Working okay for now though.\n    if (!param.phys) {\n      param.phys = {};\n    }\n    param.phys.button = typeof param.in_event_button === 'number' ? param.in_event_button : button;\n    camera2d.virtualToDomPosParam(param.phys, pos_param);\n    in_event.on('mouseup', param.phys, param.in_event_cb);\n  }\n  return null;\n}\n\nexport function mouseDownEdge(param) {\n  param = param || {};\n  if (input_eaten_mouse || !param.in_event_cb && no_active_touches) {\n    return null;\n  }\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (!touch_data.down_edge ||\n      !(button === ANY || button === touch_data.button)\n    ) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      if (!param.peek) {\n        touch_data.down_edge = 0;\n      }\n      return {\n        button: touch_data.button,\n        pos: check_pos.slice(0),\n        start_time: touch_data.start_time,\n      };\n    }\n  }\n\n  if (param.in_event_cb && !mouse_over_captured) {\n    // TODO: Maybe need to also pass along earlier exclusions?  Working okay for now though.\n    if (!param.phys) {\n      param.phys = {};\n    }\n    param.phys.button = button;\n    camera2d.virtualToDomPosParam(param.phys, pos_param);\n    in_event.on('mousedown', param.phys, param.in_event_cb);\n  }\n  return null;\n}\n\n// Completely consume any clicks or drags coming from a mouse down event in this\n// area - used to catch focus leaving an edit box without wanting to do what\n// a click would normally do.\nexport function mouseConsumeClicks(param) {\n  if (no_active_touches) {\n    return;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    // Skipping those that already dispatched a drag this frame, must have been handled, do not consume it!\n    if (!(button === ANY || button === touch_data.button) || touch_data.dispatched_drag) {\n      continue;\n    }\n    if (checkPos(touch_data.start_pos, pos_param)) {\n      touch_data.down_edge = 0;\n      // Set start pos so that it will not pass checkPos\n      touch_data.start_pos[0] = touch_data.start_pos[1] = Infinity;\n      // Set .total so that mouseUpEdge will not detect it as a click\n      touch_data.total = Infinity;\n    }\n  }\n}\n\nexport function drag(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return null;\n  }\n  param = param || {};\n  let bounds_is_finite = param.w !== undefined && isFinite(param.w);\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n  let min_dist = param.min_dist || 0;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (!(button === ANY || button === touch_data.button) || touch_data.dispatched_drag ||\n      touch_id === param.not_touch_id\n    ) {\n      continue;\n    }\n    if (checkPos(touch_data.start_pos, pos_param)) {\n      if (pointerLocked() && bounds_is_finite) {\n        // Likely just locked between frames and will get a drag on a wrong element at center of screen\n        // Generally, if pointer is locked, only non-positional drags are relevant\n        continue;\n      }\n      camera2d.domDeltaToVirtual(delta, [touch_data.total/2, touch_data.total/2]);\n      let total = delta[0] + delta[1];\n      if (total < min_dist) {\n        continue;\n      }\n      if (!param.peek) {\n        touch_data.dispatched_drag = true;\n      }\n      let is_down_edge = touch_data.down_edge;\n      if (param.eat_clicks) {\n        touch_data.down_edge = touch_data.up_edge = 0;\n      }\n      if (param.payload) {\n        touch_data.drag_payload = param.payload;\n        touch_data.drag_payload_frame = engine.frame_index;\n      }\n      camera2d.domToVirtual(start_pos, touch_data.start_pos);\n      camera2d.domToVirtual(cur_pos, touch_data.cur_pos);\n      camera2d.domDeltaToVirtual(delta, touch_data.delta);\n      return {\n        cur_pos,\n        start_pos,\n        delta, // this frame's delta\n        total, // total (linear) distance dragged\n        button: touch_data.button,\n        touch: touch_data.touch,\n        start_time: touch_data.start_time,\n        is_down_edge,\n        down_time: touch_data.down_time,\n        touch_id,\n        dropped: touch_data.up_edge,\n      };\n    }\n  }\n  return null;\n}\n\n// a lot like drag(), refactor to share more?\nexport function longPress(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return null;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n  let max_dist = param.long_press_max_dist || 50;\n  let min_time = param.min_time || 500;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (!(button === ANY || button === touch_data.button) || touch_data.long_press_dispatched) {\n      continue;\n    }\n    if (checkPos(touch_data.start_pos, pos_param)) {\n      camera2d.domDeltaToVirtual(delta, [touch_data.total/2, touch_data.total/2]);\n      let total = delta[0] + delta[1];\n      if (total > max_dist) {\n        continue;\n      }\n      let time = Date.now() - touch_data.start_time;\n      if (time < min_time) {\n        continue;\n      }\n      if (!param.peek) {\n        // ? touch_data.dispatched = true;\n        touch_data.long_press_dispatched = true;\n      }\n      let is_down_edge = touch_data.down_edge;\n      if (param.eat_clicks) {\n        touch_data.down_edge = touch_data.up_edge = 0;\n      }\n      camera2d.domToVirtual(start_pos, touch_data.start_pos);\n      camera2d.domToVirtual(cur_pos, touch_data.cur_pos);\n      camera2d.domDeltaToVirtual(delta, touch_data.delta);\n      return {\n        long_press: true,\n        cur_pos,\n        start_pos,\n        delta, // this frame's delta\n        total, // total (linear) distance dragged\n        button: touch_data.button,\n        touch: touch_data.touch,\n        start_time: touch_data.start_time,\n        is_down_edge,\n        down_time: touch_data.down_time,\n      };\n    }\n  }\n  return null;\n}\n\nexport function dragDrop(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return null;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    // Maybe touch_data.dispatched_drag_over instead/as well?\n    if (!(button === ANY || button === touch_data.button) || touch_data.dispatched || !touch_data.drag_payload) {\n      continue;\n    }\n    if (!touch_data.up_edge) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      if (!param.peek) {\n        // don't want the source (possibly called later this frame) to still think it's dragging\n        touch_data.dispatched_drag_over = true;\n        touch_data.dispatched_drag = true;\n        touch_data.dispatched = true;\n      }\n      return { drag_payload: touch_data.drag_payload };\n    }\n  }\n  return null;\n}\n\nexport function dragOver(param) {\n  if (input_eaten_mouse || no_active_touches) {\n    return null;\n  }\n  param = param || {};\n  let pos_param = mousePosParam(param);\n  let button = pos_param.button;\n\n  for (let touch_id in touches) {\n    let touch_data = touches[touch_id];\n    if (!(button === ANY || button === touch_data.button) ||\n      touch_data.dispatched_drag_over ||\n      !touch_data.drag_payload\n    ) {\n      continue;\n    }\n    if (touch_data.state !== DOWN) {\n      continue;\n    }\n    if (checkPos(touch_data.cur_pos, pos_param)) {\n      // Separate 'dispatched' for dragOver (target) and drag (source) - they both need one dispatch per frame\n      if (!param.peek) {\n        touch_data.dispatched_drag_over = true;\n      }\n      camera2d.domToVirtual(cur_pos, touch_data.cur_pos);\n      return {\n        cur_pos,\n        drag_payload: touch_data.drag_payload\n      };\n    }\n  }\n  return null;\n}\n","export type ButtonIndex = 0 | 1 | 2 | -1 | -2;\n\nexport const BUTTON_LEFT = <ButtonIndex>0;\nexport const BUTTON_MIDDLE = <ButtonIndex>1;\nexport const BUTTON_RIGHT = <ButtonIndex>2;\nexport const BUTTON_ANY = <ButtonIndex>-2;\nexport const BUTTON_POINTERLOCK = <ButtonIndex>-1;\nexport const ANY = BUTTON_ANY;\nexport const POINTERLOCK = BUTTON_POINTERLOCK;\n","// Portions Copyright 2020 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst verify = require('glov/common/verify');\nconst engine = require('./engine.js');\nconst { fontStyle } = require('./font.js');\nconst camera2d = require('./camera2d.js');\nconst in_event = require('./in_event.js');\nconst input = require('./input.js');\nconst { abs } = Math;\nconst {\n  playUISound,\n  uiGetDOMElem,\n} = require('./ui.js');\nconst ui = require('./ui.js');\nconst { uiStyleCurrent } = require('./uistyle.js');\nconst settings = require('./settings.js');\nconst { SPOT_DEFAULT_BUTTON, spot, spotFocusSteal, spotKey } = require('./spot.js');\n\nconst { max, min } = Math;\n\nlet style_link_default = fontStyle(null, {\n  color: 0x5040FFff,\n  outline_width: 1.0,\n  outline_color: 0x00000020,\n});\nlet style_link_hover_default = fontStyle(null, {\n  color: 0x0000FFff,\n  outline_width: 1.0,\n  outline_color: 0x00000020,\n});\n\nexport function linkGetDefaultStyle() {\n  return style_link_default;\n}\n\nexport function linkSetDefaultStyle(style_link, style_link_hover) {\n  style_link_default = style_link;\n  style_link_hover_default = style_link_hover;\n}\n\nlet link_blocks = [];\nexport function linkObscureRect(box) {\n  if (!box.dom_pos) {\n    box.dom_pos = {};\n  }\n  camera2d.virtualToDomPosParam(box.dom_pos, box);\n  link_blocks.push(box.dom_pos);\n}\n\nconst STRICT_CHECKING = true; // if strict, we collapse the box if there's *any* overlap, not just complete\n// e.g. this shape of visible link:  will become this shape:  with no-strict it would be full:\n//         ..                             ..                        ..\n//         X.                             ..                        XX\n//         XX                             XX                        XX\n// Strict checking prevents _any_ accidental link clicks, at the expense of\n//  smaller A elements - should perhaps only be used for `internal`-flagged\n//  links that are doing their own (properly event-filter) non-link handling?\nfunction overlaps(x0, x1, x, w) {\n  if (STRICT_CHECKING) {\n    return x < x1 && x + w > x0;\n  } else {\n    return x <= x0 && x + w >= x1;\n  }\n}\nfunction linkClipRect(rect) {\n  if (!rect.dom_pos) {\n    rect.dom_pos = {};\n  }\n  camera2d.virtualToDomPosParam(rect.dom_pos, rect);\n  let dom_pos = rect.dom_pos;\n  let ox0 = dom_pos.x;\n  let ox1 = ox0 + dom_pos.w;\n  let oy0 = dom_pos.y;\n  let oy1 = oy0 + dom_pos.h;\n  let x0 = ox0;\n  let x1 = ox1;\n  let y0 = oy0;\n  let y1 = oy1;\n  for (let ii = 0; ii < link_blocks.length; ++ii) {\n    let check = link_blocks[ii];\n    if (overlaps(x0, x1, check.x, check.w)) {\n      if (check.y <= y0) {\n        y0 = max(y0, check.y + check.h);\n      }\n      if (check.y + check.h >= y1) {\n        y1 = min(y1, check.y);\n      }\n    }\n    if (overlaps(y0, y1, check.y, check.h)) {\n      if (check.x <= x0) {\n        x0 = max(x0, check.x + check.w);\n      }\n      if (check.x + check.w >= x1) {\n        x1 = min(x1, check.x);\n      }\n    }\n  }\n  if (x1 <= x0 || y1 <= y0) {\n    return false;\n  }\n  if (x0 !== ox0 || x1 !== ox1) {\n    let ow = dom_pos.w;\n    let offs = (x0 - ox0) / ow;\n    let wscale = (x1 - x0) / ow;\n    rect.x += offs * rect.w;\n    rect.w *= wscale;\n  }\n  if (y0 !== oy0 || y1 !== oy1) {\n    let oh = dom_pos.h;\n    let offs = (y0 - oy0) / oh;\n    let hscale = (y1 - y0) / oh;\n    rect.y += offs * rect.h;\n    rect.h *= hscale;\n  }\n  return true;\n}\n\nlet state_cache = {};\nlet good_url = /https?:\\/\\//;\n\nfunction preventFocus(evt) {\n  evt.preventDefault();\n  if (evt.relatedTarget) {\n    // Revert focus back to previous blurring element (canvas or edit box)\n    evt.relatedTarget.focus();\n  } else {\n    // No previous focus target, blur instead\n    evt.currentTarget.blur();\n  }\n}\n\n// Create an invisible A elem in the DOM so we get all of the good browsery\n// behavior for a link area.\nexport function link(param) {\n  let { x, y, w, h, url, internal, allow_modal } = param;\n  if (!url.match(good_url)) {\n    url = `${document.location.protocol}//${url}`;\n  }\n  let key = spotKey(param);\n  let state = state_cache[key];\n  if (!state) {\n    state = state_cache[key] = { clicked: false };\n  }\n  verify(state.frame !== engine.frame_index); // two links with the same key on the same frame\n  state.frame = engine.frame_index;\n\n  let rect = { x, y, w, h };\n\n  // TODO: use spot_ret.allow_focus instead of all of this?\n  if (camera2d.clipTestRect(rect) && linkClipRect(rect) && !(settings.shader_debug || settings.show_profiler)) {\n    // at least some is not clipped\n    let elem = uiGetDOMElem(state.elem, allow_modal);\n    if (elem !== state.elem) {\n      state.elem = elem;\n      if (elem) {\n        // new DOM element, initialize\n        elem.textContent = '';\n        let a_elem = document.createElement('a');\n        a_elem.setAttribute('draggable', false);\n        a_elem.textContent = ' ';\n        a_elem.className = 'glovui_link noglov';\n        a_elem.setAttribute('target', '_blank');\n        a_elem.setAttribute('href', url);\n        // Make the element unfocusable, so that pressing enter at some point\n        //   after clicking a link does not re-activate the link, additionally\n        //   pressing tab should not (in the browser) focus these links.\n        a_elem.setAttribute('tabindex', '-1');\n        a_elem.addEventListener('focus', preventFocus);\n        state.url = url;\n        if (internal) {\n          let down_x;\n          let down_y;\n          input.handleTouches(a_elem);\n          a_elem.onmousedown = function (ev) {\n            down_x = ev.pageX;\n            down_y = ev.pageY;\n          };\n          a_elem.onclick = function (ev) {\n            ev.preventDefault();\n            if (down_x) {\n              let dist = abs(ev.pageX - down_x) + abs(ev.pageY - down_y);\n              if (dist > 50) {\n                return;\n              }\n            }\n            state.clicked = true;\n            in_event.handle('mouseup', ev);\n          };\n        }\n        elem.appendChild(a_elem);\n        state.a_elem = a_elem;\n      }\n    }\n    if (elem) {\n      if (url !== state.url) {\n        state.a_elem.setAttribute('href', url);\n        state.url = url;\n      }\n\n      let pos = camera2d.htmlPos(rect.x, rect.y);\n      elem.style.left = `${pos[0]}%`;\n      elem.style.top = `${pos[1]}%`;\n      let size = camera2d.htmlSize(rect.w, rect.h);\n      elem.style.width = `${size[0]}%`;\n      elem.style.height = `${size[1]}%`;\n    }\n  }\n  let clicked = state.clicked;\n  state.clicked = false;\n  return clicked;\n}\n\nexport function linkText(param) {\n  let { style_link, style_link_hover, x, y, z, style, font_size, text, url, internal } = param;\n  text = text || url;\n  z = z || Z.UI;\n  style = style || uiStyleCurrent();\n  font_size = font_size || style.text_height;\n  // Also: any parameter to link(), e.g. url\n  let w = ui.font.getStringWidth(style_link || style_link_default, font_size, text);\n  let h = font_size;\n  param.w = w;\n  param.h = h;\n  param.def = SPOT_DEFAULT_BUTTON;\n  delete param.url; // do *not* let spot() do link/URL handling, we do it ourselves below\n  let spot_ret = spot(param);\n  param.url = url;\n  let style_use = spot_ret.focused ?\n    (style_link_hover || style_link_hover_default) :\n    (style_link || style_link_default);\n  ui.font.drawSized(style_use, x, y, z, font_size, text);\n  let underline_w = 1;\n  ui.drawLine(x, y + h - underline_w, x + w, y + h - underline_w, z - 0.5, underline_w, 1, style_use.color_vec4);\n  let clicked = link(param);\n  if (clicked) {\n    const sound_button = param.sound_button === undefined ? param.def.sound_button : param.sound_button;\n    if (sound_button) {\n      playUISound(sound_button);\n    }\n    spotFocusSteal(param);\n  }\n  if (spot_ret.ret && !internal) {\n    // activated (via keyboard or gamepad), and an external link, act as if we clicked it\n    let key = spotKey(param);\n    let state = state_cache[key];\n    assert(state);\n    assert(state.a_elem);\n    state.a_elem.click();\n  }\n  return clicked || spot_ret.ret;\n}\n\nexport function linkTick() {\n  for (let key in state_cache) {\n    let state = state_cache[key];\n    if (state.frame !== engine.frame_index - 1) {\n      delete state_cache[key];\n    }\n  }\n  link_blocks.length = 0;\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint-env browser */\n\nimport assert from 'assert';\n\nlet storage_prefix = 'demo';\n\nlet is_set = false;\nexport function setStoragePrefix(prefix: string): void {\n  if (is_set) {\n    return;\n  }\n  is_set = true;\n  storage_prefix = prefix;\n}\nexport function getStoragePrefix(): string {\n  assert(is_set);\n  return storage_prefix;\n}\n\nlet lsd = (function () {\n  try {\n    localStorage.setItem('test', 'test');\n    localStorage.removeItem('test');\n    return localStorage;\n  } catch (e) {\n    return null; // Use lsd_overlay only instead\n  }\n}());\n\n// Overlay to use if we lose access to localStorage at run-time (Firefox \"quota exceeded\" error)\nlet lsd_overlay: Partial<Record<string, string>> = {};\n\nexport function localStorageGet(key: string): string | undefined {\n  assert(is_set);\n  key = `${storage_prefix}_${key}`;\n  let ret: string | null | undefined = lsd_overlay[key] || (lsd && lsd.getItem(key));\n  if (ret === 'undefined') {\n    ret = undefined;\n  } else if (ret === null) {\n    ret = undefined;\n  }\n  return ret;\n}\n\nexport function localStorageSet(key: string, value: unknown): void {\n  assert(is_set);\n  key = `${storage_prefix}_${key}`;\n  if (value === undefined || value === null) {\n    if (lsd) {\n      lsd.removeItem(key);\n    }\n    delete lsd_overlay[key];\n  } else {\n    let str = String(value);\n    lsd_overlay[key] = str;\n    try {\n      if (lsd) {\n        lsd.setItem(key, str);\n      }\n    } catch (e) {\n      // ignored, it's in the overlay for the current session at least\n      // FireFox throws \"The quota has been exceeded\" errors here\n    }\n  }\n}\n\nexport function localStorageSetJSON<T = unknown>(key: string, value: T): void {\n  localStorageSet(key, JSON.stringify(value));\n}\n\nexport function localStorageGetJSON<T = unknown>(key: string, def: T): T;\nexport function localStorageGetJSON<T = unknown>(key: string, def?: T): T | undefined;\nexport function localStorageGetJSON<T = unknown>(key: string, def?: T): T | undefined {\n  let value = localStorageGet(key);\n  if (value === undefined) {\n    return def;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    // ignore\n  }\n  return def;\n}\n\nexport function localStorageClearAll(key_prefix?: string): void {\n  let prefix = new RegExp(`^${storage_prefix}_${key_prefix || ''}`, 'u');\n  if (lsd) {\n    let keys_to_remove = [];\n    for (let i = 0; i < lsd.length; i++) {\n      let key = lsd.key(i);\n      assert(key);\n      if (key.match(prefix)) {\n        keys_to_remove.push(key);\n      }\n    }\n    for (let i = 0; i < keys_to_remove.length; i++) {\n      lsd.removeItem(keys_to_remove[i]);\n    }\n  }\n  for (let key in lsd_overlay) {\n    if (key.match(prefix)) {\n      delete lsd_overlay[key];\n    }\n  }\n}\n\nexport type LocalStorageData = Partial<Record<string, string>>;\n\nexport function localStorageExportAll(filter_prefix: string): LocalStorageData {\n  let obj: LocalStorageData = {};\n  let prefix = new RegExp(`^${storage_prefix}_(${filter_prefix || ''}.*)`);\n  if (lsd) {\n    for (let i = 0; i < lsd.length; i++) {\n      let key = lsd.key(i);\n      assert(key);\n      let m = key.match(prefix);\n      if (m) {\n        let v = lsd.getItem(key);\n        if (v && v !== 'undefined') {\n          obj[m[1]] = v;\n        }\n      }\n    }\n  }\n  for (let key in lsd_overlay) {\n    let m = key.match(prefix);\n    if (m) {\n      obj[m[1]] = lsd_overlay[key];\n    }\n  }\n  return obj;\n}\n\nexport function localStorageImportAll(serialized: LocalStorageData): void {\n  localStorageClearAll();\n  for (let key in serialized) {\n    localStorageSet(key, serialized[key]);\n  }\n}\n\n// Old API exports\nexports.get = localStorageGet;\nexports.set = localStorageSet;\nexports.setJSON = localStorageSetJSON;\nexports.getJSON = localStorageGetJSON;\nexports.clearAll = localStorageClearAll;\n","export interface LocalizableString {\n  toLocalString(): string;\n}\n\nexport function getStringFromLocalizable(s: string | LocalizableString): string {\n  return s && (s as LocalizableString).toLocalString ?\n    (s as LocalizableString).toLocalString() :\n    (s as string);\n}\n\nexport function getStringIfLocalizable<T>(s: T | LocalizableString): T | string {\n  return s && (s as LocalizableString).toLocalString ?\n    (s as LocalizableString).toLocalString() :\n    (s as T);\n}\n","/* eslint-env browser */\nimport type { DataObject, TSMap } from 'glov/common/types';\n\nlet asset_mappings = typeof window === 'undefined' ?\n  {} :\n  (window as unknown as DataObject).glov_asset_mappings as TSMap<string>;\nlet asset_dir = asset_mappings && asset_mappings.asset_dir || '';\n\n// Raw LocalStorage access, not using the module, since this is imported\n//   _before_ we've had a chance to set our local storage key.\nlet lsd = (function (): Partial<Record<string, string>> {\n  if (typeof window === 'undefined') {\n    return {};\n  }\n  try {\n    localStorage.setItem('test', 'test');\n    localStorage.removeItem('test');\n    return localStorage;\n  } catch (e) {\n    return {};\n  }\n}());\n\nconst DISABLED_KEY = 'asset_hashing_disabled_until';\nif (Number(lsd[DISABLED_KEY]) > Date.now()) {\n  console.log('Disabling asset mappings due to auto-reload.');\n  asset_mappings = {};\n}\n\nlet proxy_path: string = '';\n// e.g. `.proxy/`\nexport function locateAssetSetProxyPath(proxy_path_in: string): void {\n  proxy_path = proxy_path_in;\n}\n\nlet host_mappings: [string, string][] = [];\nexport function locateAssetAddHostMapping(src: string, dest: string): void {\n  host_mappings.push([src, dest]);\n\n}\n\nexport function locateAsset(name: string): string {\n  if (!asset_mappings) {\n    // shouldn't happen, but this should be safe as a fallback\n    return name;\n  }\n  let m = asset_mappings[name];\n  if (!m) {\n    if (name.includes('://')) {\n      // external/full path\n      for (let ii = 0; ii < host_mappings.length; ++ii) {\n        let pair = host_mappings[ii];\n        if (name.startsWith(pair[0])) {\n          name = pair[1] + name.slice(pair[0].length);\n        }\n      }\n    } else {\n      // internal/relative path\n      if (proxy_path) {\n        return `${proxy_path}${name}`;\n      }\n    }\n    return name;\n  }\n  let ret = `${asset_dir}/${m}`;\n  let idx = name.lastIndexOf('.');\n  if (idx !== -1) {\n    ret += name.slice(idx);\n  }\n  if (proxy_path) {\n    ret = `${proxy_path}${ret}`;\n  }\n  return ret;\n}\n\n// Called in development before doing any reloads (as we don't reload asset_mappings)\nexport function locateAssetDisableHashing(): void {\n  asset_mappings = {};\n  // Also, if a reload is triggered after this, disable asset hashing in that\n  //   session, as the reload happens _before_ the new assets.js is written out.\n  lsd[DISABLED_KEY] = String(Date.now() + 5000);\n}\n\nexport function unlocatePaths(s: string | null | undefined): string {\n  let reverse_lookup = Object.create(null);\n  for (let key in asset_mappings) {\n    reverse_lookup[asset_mappings[key]!] = key;\n  }\n  return String(s).replace(new RegExp(`${asset_dir}/([a-zA-Z0-9]+)\\\\.\\\\w+`, 'g'), function (match, hash) {\n    let m = reverse_lookup[hash];\n    return m || match;\n  });\n}\n","import assert from 'assert';\nimport { has } from 'glov/common/util';\nimport verify from 'glov/common/verify';\nimport {\n  unit_vec,\n  vec4,\n} from 'glov/common/vmath';\nimport * as engine from './engine';\nimport {\n  ALIGN,\n  EPSILON,\n  Font,\n  FontStyle,\n  Text,\n  fontStyleAlpha,\n  fontStyleBold,\n  fontStyleHash,\n} from './font';\nimport { Box } from './geom_types';\nimport { mousePos } from './input';\nimport { getStringFromLocalizable } from './localization';\nimport {\n  MDASTNode,\n  RenderableContent,\n  mdParse,\n  mdParseSetValidRenderables,\n} from './markdown_parse';\nimport {\n  MarkdownRenderable,\n  markdownLayoutFit,\n  markdown_default_font_styles,\n  markdown_default_renderables,\n} from './markdown_renderables';\nimport {\n  SPOT_DEFAULT_LABEL,\n  spot,\n  spotPadMode,\n} from './spot';\nimport {\n  spriteClipPause,\n  spriteClipResume,\n  spriteClipped,\n  spriteClippedViewport,\n} from './sprites';\nimport {\n  LabelBaseOptions,\n  drawElipse,\n  drawRect2,\n  getUIElemData,\n  uiFontStyleNormal,\n  uiGetFont,\n  uiTextHeight,\n} from './ui';\nimport type { TSMap, WithRequired } from 'glov/common/types';\n\nconst { ceil, floor, max, min, round } = Math;\n\n// Exported opaque types\nexport type MarkdownCache = Record<string, never>;\nexport type MarkdownStateParam = { // Allocate as just `{ cache: {} }`\n  cache?: MarkdownCache; // Allocate as just `cache: {}` if the caller wants to own the caching\n};\nexport type MarkdownStateCached = WithRequired<MarkdownStateParam, 'cache'>;\n\nexport type MarkdownCustomRenderable = {\n  type: string;\n  data: unknown;\n};\nexport type MarkdownParseParam = {\n  text: Text;\n  custom?: TSMap<MarkdownCustomRenderable>;\n  renderables?: TSMap<MarkdownRenderable>;\n};\n\nexport type MarkdownLayoutParam = {\n  font?: Font;\n  font_style?: FontStyle | null;\n  // font style keys are the style_idx or with a `.bold` suffix\n  //   Example: `A[c=1]B*C*[/c]*D*` will use def, 1, 1.bold, def.bold\n  font_styles?: TSMap<FontStyle>;\n  font_style_idx?: number | string; // default: 'def'\n  w?: number;\n  h?: number;\n  // TODO: also need line_height here!  Get alignment/etc respecting that\n  text_height?: number;\n  line_height?: number;\n  indent?: number;\n  align?: ALIGN;\n};\n\nexport type MarkdownDrawParam = {\n  x: number;\n  y: number;\n  z?: number;\n  alpha?: number;\n  viewport?: Box | null;\n};\n\n\n// Internal, non-exported types\ntype MDCache = {\n  parsed?: MDLayoutBlock[];\n  layout?: {\n    blocks: MDDrawBlock[]; // sorted by y\n    dims: MarkdownDims;\n    max_block_h: number;\n  };\n};\ntype MDState = {\n  cache: MDCache;\n};\n\nexport function markdownLayoutInvalidate(param: MarkdownStateParam): void {\n  if (param.cache) {\n    let state = param as MDState;\n    if (state.cache.layout) {\n      delete state.cache.layout;\n    }\n  }\n}\n\ntype FontStylesWithDefault = TSMap<FontStyle> & { def: FontStyle };\nexport type MDLayoutCalcParam = Required<MarkdownLayoutParam> & {\n  font_style: FontStyle; // not `null`\n  font_styles: FontStylesWithDefault;\n  font_style_stack?: (string | number)[];\n  cursor: {\n    line_x0: number;\n    line_y1: number;\n    x: number;\n    y: number;\n  };\n};\n\nexport type MDDrawParam = {\n  x: number;\n  y: number;\n  z: number;\n  alpha: number;\n};\n\nexport interface MDDrawBlock {\n  dims: Box;\n  draw(param: MDDrawParam): void;\n}\n\nexport interface MDLayoutBlock {\n  layout(param: MDLayoutCalcParam): MDDrawBlock[];\n}\n\nclass MDBlockParagraph implements MDLayoutBlock {\n  private content: MDLayoutBlock[];\n  constructor(content: MDASTNode[], param: MarkdownParseParam) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    this.content = mdASTToBlock(content, param);\n  }\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    let ret: MDDrawBlock[][] = [];\n    for (let ii = 0; ii < this.content.length; ++ii) {\n      ret.push(this.content[ii].layout(param));\n    }\n    if (param.align & ALIGN.HWRAP) {\n      if (param.cursor.x !== param.cursor.line_x0) {\n        param.cursor.line_x0 = param.cursor.x = param.indent;\n        param.cursor.y += param.line_height;\n      }\n      param.cursor.y += ceil(param.line_height * 0.5);\n    } else {\n      param.cursor.x += ceil(param.text_height * 0.25);\n    }\n\n    return Array.prototype.concat.apply([], ret);\n  }\n}\nfunction createParagraph(content: MDASTNode[], param: MarkdownParseParam): MDBlockParagraph {\n  return new MDBlockParagraph(content, param);\n}\n\nclass MDBlockBold implements MDLayoutBlock {\n  private content: MDLayoutBlock[];\n  constructor(content: MDASTNode[], param: MarkdownParseParam) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    this.content = mdASTToBlock(content, param);\n  }\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    // TODO (later, maybe): migrate to UIStyle and use a named \"bold\" style instead?\n    let old_style = param.font_style;\n    let key = `${param.font_style_idx}.bold`;\n    let { font_styles } = param;\n    let bold_style = font_styles[key];\n    if (!bold_style) {\n      let base_style = font_styles[param.font_style_idx] ||\n        markdown_default_font_styles[param.font_style_idx] ||\n        font_styles.def;\n      bold_style = font_styles[key] = fontStyleBold(base_style, 0.5);\n    }\n    param.font_style = bold_style;\n\n    let ret: MDDrawBlock[][] = [];\n    for (let ii = 0; ii < this.content.length; ++ii) {\n      ret.push(this.content[ii].layout(param));\n    }\n    param.font_style = old_style;\n    return Array.prototype.concat.apply([], ret);\n  }\n}\nfunction createBold(content: MDASTNode[], param: MarkdownParseParam): MDBlockBold {\n  return new MDBlockBold(content, param);\n}\n\ntype MDBlockTextLayout = {\n  font: Font;\n  font_style: FontStyle;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  // text_height: number; //  Any reason we'd have a h !== text_height?\n  align: ALIGN;\n  text: string;\n};\nconst debug_color = vec4(0,0,0,0.5);\nconst NO_HALIGN = ALIGN.VTOP|ALIGN.VCENTER|ALIGN.VBOTTOM|ALIGN.HFIT;\nclass MDDrawBlockText implements MDDrawBlock {\n  constructor(public dims: MDBlockTextLayout) {\n  }\n  alpha_font_style_cache?: FontStyle;\n  alpha_font_style_cache_value?: number;\n  draw(param: MDDrawParam): void {\n    profilerStart('MDDrawBlockText::draw');\n    let lp = this.dims;\n    let style = lp.font_style;\n    if (param.alpha !== 1) {\n      if (this.alpha_font_style_cache_value !== param.alpha) {\n        this.alpha_font_style_cache_value = param.alpha;\n        this.alpha_font_style_cache = fontStyleAlpha(style, param.alpha);\n      }\n      style = this.alpha_font_style_cache!;\n    }\n    lp.font.drawSizedAligned(style,\n      param.x + lp.x, param.y + lp.y, param.z,\n      lp.h, lp.align & NO_HALIGN, lp.w, lp.h, lp.text);\n    profilerStop();\n  }\n}\n\nclass MDBlockText implements MDLayoutBlock {\n  constructor(private content: string, param: MarkdownParseParam) {\n  }\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    let { cursor, line_height, text_height } = param;\n    let ret: MDDrawBlock[] = [];\n    let text = this.content;\n    if (!(param.align & ALIGN.HWRAP)) {\n      text = text.replace(/\\n/g, ' ');\n    }\n    if (param.align & ALIGN.HWRAP) {\n      let line_x0 = cursor.x;\n      // Adjust in case we're mid-line, or already inset\n      let inset = cursor.x;\n      let w = param.w - inset;\n      let indent = param.indent - inset;\n      let yoffs = (line_height - text_height)/2;\n      if (param.font.integral) {\n        yoffs = round(yoffs);\n      }\n      param.font.wrapLines(\n        param.font_style, w, indent, text_height, text, param.align,\n        (x0: number, linenum: number, line: string, x1: number) => {\n          if (linenum > 0) {\n            cursor.y += line_height; // TODO: = cursor.line_y1 instead?\n            cursor.line_x0 = param.indent;\n            cursor.line_y1 = cursor.y;\n          }\n          let layout_param: MDBlockTextLayout = {\n            font: param.font,\n            font_style: param.font_style,\n            x: line_x0 + x0,\n            y: cursor.y + yoffs,\n            h: text_height,\n            w: min(x1, w) - x0,\n            align: param.align,\n            text: line,\n          };\n          cursor.line_y1 = max(cursor.line_y1, cursor.y + line_height);\n          ret.push(new MDDrawBlockText(layout_param));\n        }\n      );\n      if (ret.length) {\n        let tail = ret[ret.length - 1];\n        cursor.x = tail.dims.x + tail.dims.w;\n      } else {\n        // all whitespace, just advance cursor\n        cursor.x += param.font.getStringWidth(param.font_style, text_height, text);\n      }\n    } else {\n      let str_w = param.font.getStringWidth(param.font_style, text_height, text);\n      let layout_param: MDBlockTextLayout = {\n        x: -1, // filled below\n        y: -1, // filled below\n        font: param.font,\n        font_style: param.font_style,\n        h: text_height,\n        w: str_w,\n        align: param.align,\n        text,\n      };\n      markdownLayoutFit(param, layout_param);\n      ret.push(new MDDrawBlockText(layout_param));\n    }\n    return ret;\n  }\n}\nfunction createText(content: string, param: MarkdownParseParam): MDBlockText {\n  return new MDBlockText(content, param);\n}\n\nfunction createRenderable(content: RenderableContent, param: MarkdownParseParam): MDLayoutBlock {\n  let custom = param.custom || {};\n  let renderables = param.renderables || markdown_default_renderables;\n  let type = content.type;\n  let data: unknown | undefined;\n  if (has(custom, type)) {\n    let parameterized = custom[type]!;\n    type = parameterized.type;\n    data = parameterized.data;\n  }\n  assert(has(renderables, type)); // should have been filtered out during parsing otherwise\n  let block = renderables[type]!(content, data);\n  if (block) {\n    return block;\n  }\n  return createText(content.orig_text, param);\n}\n\nlet block_factories = {\n  paragraph: createParagraph,\n  text: createText,\n  strong: createBold,\n  em: createBold,\n  renderable: createRenderable,\n};\n\nfunction mdASTToBlock(tree: MDASTNode[], param: MarkdownParseParam): MDLayoutBlock[] {\n  let blocks: MDLayoutBlock[] = [];\n  let skip = 0;\n  for (let ii = 0; ii < tree.length; ++ii) {\n    if (skip) {\n      --skip;\n      continue;\n    }\n    let elem = tree[ii];\n    if (elem.type === 'text') {\n      // if this element type is text and the next type(s) are text, combine them\n      let next_elem;\n      while ((next_elem = tree[ii + skip + 1]) && next_elem.type === 'text') {\n        elem.content += next_elem.content;\n        ++skip;\n      }\n    }\n    let factory = block_factories[elem.type];\n    // @ts-expect-error elem.content is an intersection of types, but generic constructor expects a union of types\n    blocks.push(factory(elem.content, param));\n  }\n  return blocks;\n}\n\n// Convert from text into a tree of blocks\nfunction markdownParse(param: MarkdownStateCached & MarkdownParseParam): void {\n  let state = param as MDState;\n  let { cache } = state;\n  if (cache.parsed) {\n    return;\n  }\n  profilerStartFunc();\n  let valid_renderables: TSMap<unknown> = (param.renderables ? param.renderables : markdown_default_renderables) || {};\n  if (param.custom) {\n    valid_renderables = {\n      ...valid_renderables,\n    };\n    for (let key in param.custom) {\n      valid_renderables[key] = true;\n    }\n  }\n  mdParseSetValidRenderables(valid_renderables);\n  let tree: MDASTNode[] = mdParse(getStringFromLocalizable(param.text));\n  let blocks = cache.parsed = mdASTToBlock(tree, param);\n  cache.parsed = blocks;\n  profilerStopFunc();\n}\n\nexport function markdownIsAllWhitespace(param: Omit<MarkdownParseParam, 'custom'>): boolean {\n  let valid_renderables: TSMap<unknown> = (param.renderables ? param.renderables : markdown_default_renderables) || {};\n  mdParseSetValidRenderables(valid_renderables);\n  function treeContainsNonWhitespace(tree: MDASTNode[]): boolean {\n    for (let ii = 0; ii < tree.length; ++ii) {\n      let node = tree[ii];\n      if (node.type === 'text') {\n        if (node.content.trim()) {\n          return true;\n        }\n      } else if (node.type === 'paragraph' || node.type === 'em' || node.type === 'strong') {\n        if (treeContainsNonWhitespace(node.content)) {\n          return true;\n        }\n      } else if (node.type === 'renderable') {\n        return true;\n      } else {\n        verify.unreachable(node);\n      }\n    }\n    return false;\n  }\n  let tree: MDASTNode[] = mdParse(getStringFromLocalizable(param.text));\n  return !treeContainsNonWhitespace(tree);\n}\n\nfunction cmpDimsY(a: MDDrawBlock, b: MDDrawBlock): number {\n  let d = a.dims.y - b.dims.y;\n  if (d !== 0) {\n    return d;\n  }\n  d = a.dims.x - b.dims.x;\n  if (d !== 0) {\n    return d;\n  }\n  return 0;\n}\n\n// let each block determine their bounds and x/y/w/h values\nfunction markdownLayout(param: MarkdownStateCached & MarkdownLayoutParam): void {\n  let state = param as MDState;\n  let { cache } = state;\n  if (cache.layout) {\n    return;\n  }\n  profilerStartFunc();\n  let font_style = param.font_style || uiFontStyleNormal();\n  let font_styles: FontStylesWithDefault;\n  if (param.font_styles) {\n    if (param.font_styles.def) {\n      font_styles = param.font_styles as FontStylesWithDefault;\n    } else {\n      font_styles = {\n        def: font_style,\n        ...param.font_styles,\n      };\n    }\n  } else {\n    font_styles = { def: font_style };\n  }\n  let text_height = param.text_height || uiTextHeight();\n  let line_height = param.line_height || text_height;\n  let calc_param: MDLayoutCalcParam = {\n    w: param.w || 0,\n    h: param.h || 0,\n    text_height,\n    line_height,\n    indent: param.indent || 0,\n    align: param.align || 0,\n    font: param.font || uiGetFont(),\n    font_style,\n    font_styles,\n    font_style_idx: param.font_style_idx || 'def',\n    cursor: {\n      line_x0: 0,\n      line_y1: 0,\n      x: 0,\n      y: 0,\n    },\n  };\n  let blocks = cache.parsed;\n  assert(blocks);\n  let draw_blocks: MDDrawBlock[] = [];\n  let maxx = 0;\n  let miny = Infinity;\n  let maxy = 0;\n  for (let ii = 0; ii < blocks.length; ++ii) {\n    let arr = blocks[ii].layout(calc_param);\n    for (let jj = 0; jj < arr.length; ++jj) {\n      let block = arr[jj];\n      let dims = block.dims;\n      maxx = max(maxx, dims.x + dims.w);\n      maxy = max(maxy, dims.y + dims.h);\n      miny = min(miny, dims.y);\n      draw_blocks.push(block);\n    }\n  }\n  let bottom_pad = max(0, calc_param.cursor.line_y1 - maxy);\n  if ((calc_param.align & (ALIGN.HRIGHT | ALIGN.HCENTER)) && draw_blocks.length) {\n    // Find rightmost block for every row\n    let row_h_est = calc_param.line_height / 2;\n    let row_start_idx = 0;\n    let last_dims = draw_blocks[0].dims;\n    for (let ii = 1; ii < draw_blocks.length + 1; ++ii) {\n      let is_last = ii === draw_blocks.length;\n      let do_wrap = is_last;\n      if (!is_last) {\n        let dims = draw_blocks[ii].dims;\n        let ymid = dims.y + dims.h / 2;\n        if (ymid > last_dims.y + last_dims.h / 2 + row_h_est &&\n          dims.x < last_dims.x + last_dims.w / 2\n        ) {\n          do_wrap = true;\n        }\n      }\n      if (do_wrap) {\n        // detected a wrap, do alignment\n        let xoffs = calc_param.w - (last_dims.x + last_dims.w);\n        if (calc_param.align & ALIGN.HCENTER) {\n          xoffs *= 0.5;\n          if (calc_param.font.integral) {\n            xoffs = round(xoffs);\n          }\n        }\n        if (xoffs > 0) {\n          for (let jj = row_start_idx; jj < ii; ++jj) {\n            let block = draw_blocks[jj];\n            block.dims.x += xoffs;\n          }\n        }\n        row_start_idx = ii;\n      }\n      if (!is_last) {\n        last_dims = draw_blocks[ii].dims;\n      }\n    }\n  }\n  if ((calc_param.align & ALIGN.HFIT) && maxx > calc_param.w + EPSILON) {\n    // Note: this will only get hit for HFIT w/out HWRAP - the combo case should be covered in markdownLayoutFit\n    let xscale = calc_param.w / maxx;\n    for (let ii = 0; ii < draw_blocks.length; ++ii) {\n      let block = draw_blocks[ii];\n      let x0 = block.dims.x;\n      let x1 = x0 + block.dims.w;\n      block.dims.x = x0 * xscale;\n      block.dims.w = (x1 - x0) * xscale;\n    }\n  }\n  if (draw_blocks.length && (calc_param.align & (ALIGN.VCENTER | ALIGN.VBOTTOM))) {\n    if (verify(calc_param.h)) {\n      let yoffs = calc_param.h - maxy;\n      if (calc_param.align & ALIGN.VCENTER) {\n        yoffs -= miny;\n        yoffs *= 0.5;\n        if (calc_param.font.integral) {\n          yoffs = round(yoffs);\n        }\n      }\n      for (let ii = 0; ii < draw_blocks.length; ++ii) {\n        let block = draw_blocks[ii];\n        block.dims.y += yoffs;\n      }\n    }\n  }\n  maxx = 0;\n  maxy = 0;\n  let max_block_h = 0;\n  for (let ii = 0; ii < draw_blocks.length; ++ii) {\n    let block = draw_blocks[ii];\n    maxx = max(maxx, block.dims.x + block.dims.w);\n    maxy = max(maxy, block.dims.y + block.dims.h);\n    max_block_h = max(max_block_h, block.dims.h);\n  }\n  maxy += bottom_pad;\n  draw_blocks.sort(cmpDimsY);\n  cache.layout = {\n    blocks: draw_blocks,\n    dims: {\n      w: maxx,\n      h: maxy,\n    },\n    max_block_h,\n  };\n  profilerStopFunc();\n}\n\n// Probably no reason to ever do parse & layout separately, so combine into one external call\n// In theory, could allow invalidating just the layout cache though!\nexport type MarkdownPrepParam = MarkdownStateCached & MarkdownParseParam & MarkdownLayoutParam;\nexport function markdownPrep(param: MarkdownPrepParam): void {\n  markdownParse(param);\n  markdownLayout(param);\n}\n\nexport type MarkdownDims = {\n  w: number;\n  h: number;\n};\nexport function markdownDims(param: MarkdownStateCached): MarkdownDims {\n  let state = param as MDState;\n  let { cache } = state;\n  let { layout } = cache;\n  assert(layout);\n  return layout.dims;\n}\n\n// Find the index of the first block whose y is after the specified value\nfunction bsearch(blocks: MDDrawBlock[], y: number): number {\n  let start = 0;\n  let end = blocks.length - 1;\n\n  while (start < end) {\n    let mid = floor((start + end) / 2);\n\n    if (blocks[mid].dims.y <= y) {\n      // mid is not eligible, exclude it, look later\n      start = mid + 1;\n    } else {\n      // mid is eligible, include it, look earlier\n      end = mid;\n    }\n  }\n\n  return end;\n}\n\nexport type MarkdownDrawCachedParam = MarkdownStateCached & MarkdownDrawParam;\nexport function markdownDraw(param: MarkdownDrawCachedParam): void {\n  profilerStartFunc();\n  let state = param as MDState;\n  let { cache } = state;\n  let { layout } = cache;\n  assert(layout);\n  let { x, y, alpha } = param;\n  if (alpha === undefined) {\n    alpha = 1;\n  }\n  let draw_param: MDDrawParam = {\n    x,\n    y,\n    z: param.z || Z.UI,\n    alpha,\n  };\n  let { viewport } = param;\n  if (!viewport && spriteClipped()) {\n    viewport = spriteClippedViewport();\n  }\n  let { blocks, max_block_h } = layout;\n  let idx0 = 0;\n  let idx1 = blocks.length - 1;\n  if (viewport) {\n    // TODO: need to expand viewport (just vertically?) and \"draw\" any elements\n    //   that might receive focus despite being scrolled out of view.\n    // Also probably need a little padding for things like dropshadows on\n    //   fonts that extend past bounds?\n    idx0 = bsearch(blocks, viewport.y - y - max_block_h);\n    idx1 = bsearch(blocks, viewport.y + viewport.h - y);\n  }\n\n  let mouse_pos: [number, number];\n  if (engine.defines.MD) {\n    mouse_pos = mousePos();\n  }\n\n  for (let ii = idx0; ii <= idx1; ++ii) {\n    let block = blocks[ii];\n    let { dims } = block;\n    if (!viewport || (\n      // exact viewport check (in case block h is smaller than max_block_h)\n      x + dims.x + dims.w >= viewport.x && x + dims.x < viewport.x + viewport.w &&\n      y + dims.y + dims.h >= viewport.y && y + dims.y < viewport.y + viewport.h\n    )) {\n      block.draw(draw_param);\n\n      if (engine.defines.MD) {\n        let rect = {\n          x: draw_param.x + dims.x,\n          y: draw_param.y + dims.y,\n          z: Z.TOOLTIP,\n          w: dims.w, h: dims.h,\n          color: debug_color,\n        };\n        // mouseOver, but ignoring anything capturing it\n        if (mouse_pos![0] >= rect.x && mouse_pos![0] <= rect.x + rect.w &&\n          mouse_pos![1] >= rect.y && mouse_pos![1] <= rect.y + rect.h\n        ) {\n          let clip_pause = spriteClipped();\n          if (clip_pause) {\n            spriteClipPause();\n          }\n          drawRect2(rect);\n          if (clip_pause) {\n            spriteClipResume();\n          }\n        }\n      }\n\n    }\n  }\n  profilerStopFunc();\n}\n\ntype MarkdownAutoParamBase = MarkdownStateParam & MarkdownParseParam & MarkdownLayoutParam;\ntype MarkdownAutoParamDraw = MarkdownAutoParamBase & MarkdownDrawParam;\ntype MarkdownAutoParamNoDraw = MarkdownAutoParamBase & { no_draw: true };\nexport type MarkdownAutoParam = MarkdownAutoParamDraw | MarkdownAutoParamNoDraw;\nfunction isAutoDrawParam(param: MarkdownAutoParam): param is MarkdownAutoParamDraw {\n  return !(param as MarkdownAutoParamNoDraw).no_draw;\n}\n\nfunction mdcAlloc(): MDCache {\n  return {};\n}\n\nexport function markdownAuto(param: MarkdownAutoParam): MarkdownDims {\n  profilerStartFunc();\n  let state = param as MarkdownStateCached as MDState;\n  assert(!param.custom || state.cache); // any advanced parameters require the caller handling the caching\n  let auto_cache = !state.cache;\n  if (auto_cache) {\n    profilerStart('auto_cache');\n    // If there's time in here, if the string is long, is primary just the object lookup\n    // It can be completely alleviated just by not re-creating the same string each frame, though!\n    let text = param.text = getStringFromLocalizable(param.text);\n    let cache_key = [\n      'mdc',\n      param.w || 0,\n      param.h || 0,\n      param.text_height || uiTextHeight(),\n      param.line_height || param.text_height || uiTextHeight(),\n      param.indent || 0,\n      param.align || 0,\n      param.font_style ? fontStyleHash(param.font_style) : 0,\n    ].join(':');\n    state.cache = getUIElemData(cache_key, { key: text }, mdcAlloc);\n    profilerStop();\n  }\n  let param2 = param as MarkdownAutoParam & MarkdownStateCached;\n\n  markdownPrep(param2);\n  let dims = markdownDims(param2);\n  if (isAutoDrawParam(param2)) {\n    markdownDraw(param2);\n  }\n\n  if (auto_cache) {\n    delete param.cache;\n  }\n  profilerStopFunc();\n  return dims;\n}\n\nexport function markdownLabel(param: MarkdownAutoParam & LabelBaseOptions): MarkdownDims {\n  let { tooltip } = param;\n  let dims = markdownAuto(param);\n  if (tooltip) {\n    let {\n      align,\n      x,\n      y,\n      z,\n      tooltip_above,\n      tooltip_right,\n    } = param;\n    z = z || Z.UI;\n    align = align || 0;\n    let w = param.w || dims.w;\n    let h = param.h || dims.h;\n    let spot_ret = spot({\n      x, y,\n      w, h,\n      tooltip: tooltip,\n      tooltip_width: param.tooltip_width,\n      tooltip_above,\n      tooltip_right: Boolean(tooltip_right || align & ALIGN.HRIGHT),\n      tooltip_center: Boolean(align & ALIGN.HCENTER),\n      def: SPOT_DEFAULT_LABEL,\n    });\n    if (spot_ret.focused && spotPadMode()) {\n      // No focused style support yet, do a generic glow instead?\n      drawElipse(x - w*0.25, y-h*0.25, x + w*1.25, y + h*1.25, z - 0.001, 0.5, unit_vec);\n    }\n  }\n  return dims;\n}\n","import SimpleMarkdown, {\n  ParserRule,\n  ParserRules,\n} from 'glov/client/simple-markdown';\nimport { has } from 'glov/common/util';\nimport type { TSMap } from 'glov/common/types';\n\n// Example from docs\n// let underline_rule = {\n//   // Specify the order in which this rule is to be run\n//   order: SimpleMarkdown.defaultRules.em.order - 0.5,\n//\n//   // First we check whether a string matches\n//   match: function (source: string) {\n//     return /^__([\\s\\S]+?)__(?!_)/.exec(source);\n//   },\n//\n//   // Then parse this string into a syntax node\n//   parse: function (capture, parse, state) {\n//     return {\n//       content: parse(capture[1], state)\n//     };\n//   },\n// };\n\nlet renderable_regex = /^\\[([^\\s\\]=]+)(=?[^\\s\\]]*)( [^\\]]+)?\\](?!\\()/;\nlet renderable_param_regex = / ([^=]+)(?:=(?:\"([^\"]+)\"|(\\S+)))?/g;\nexport type RenderableParam = TSMap<number | string | true>;\nexport type RenderableContent = {\n  type: string;\n  key: string; // possibly empty string\n  param?: RenderableParam;\n  orig_text: string; // should only be used for error handling\n};\nlet valid_renderables: TSMap<unknown> = {};\nexport function mdParseSetValidRenderables(set: TSMap<unknown>): void {\n  valid_renderables = set;\n}\nlet renderable_rule: ParserRule = {\n  order: SimpleMarkdown.defaultRules.link.order - 0.5,\n\n  // First we check whether a string matches\n  match: function (source: string) {\n    let capture = renderable_regex.exec(source);\n    if (capture) {\n      let type = capture[1];\n      if (capture[2].startsWith('=')) {\n        capture[2] = capture[2].slice(1);\n      } else {\n        // parameter-less only allowed for \"closing\" renderables\n        if (!type.startsWith('/')) {\n          return null;\n        }\n      }\n      if (has(valid_renderables, type)) {\n        return capture;\n      }\n    }\n    return null;\n  },\n\n  // Then parse this string into a syntax node\n  parse: function (capture, parse, state) {\n    let param: RenderableParam | undefined;\n    if (capture[3]) {\n      param = {};\n      capture[3].replace(renderable_param_regex, function (ignored: string, ...matches:string[]): string {\n        let [key, val_quoted, val_basic] = matches;\n        let v: number | string | true = val_quoted !== undefined ? val_quoted :\n          val_basic !== undefined ? val_basic :\n          true;\n        if (typeof v === 'string') {\n          let num = Number(v);\n          if (isFinite(num)) {\n            v = num;\n          }\n        }\n        param![key] = v;\n        return '';\n      });\n    }\n    let content: RenderableContent = {\n      type: capture[1],\n      key: capture[2],\n      param,\n      orig_text: capture[0],\n    };\n    return {\n      content,\n    };\n  },\n};\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nlet rules: Writeable<ParserRules> = {\n  renderable: renderable_rule,\n};\n// Enable rules we desire\n([\n  // 'heading',\n  // 'nptable',\n  // 'lheading',\n  // 'hr',\n  // 'codeBlock',\n  // 'fence',\n  // 'blockQuote',\n  // 'list',\n  // 'def',\n  // 'table',\n  // 'newline', // probably easy to support, what triggers it?\n  'paragraph',\n  'escape', // returns type \"text\"\n  // 'tableSeparator',\n  // 'autolink',\n  // 'mailto',\n  // 'url',\n  // 'link',\n  // 'image',\n  // 'reflink',\n  // 'refimage',\n  'em',\n  'strong',\n  // 'u',\n  // 'del',\n  // 'inlineCode',\n  // 'br', // probably easy to support, what triggers it?\n  'text',\n] as const).forEach((key) => (rules[key] = SimpleMarkdown.defaultRules[key]));\n\nlet reBuiltParser = SimpleMarkdown.parserFor(rules);\n\n// export type MDASTBaseNode = {\n//   type: string;\n// };\nexport type MDNodeParagraph = {\n  type: 'paragraph';\n  content: Array<MDASTNode>;\n};\nexport type MDNodeText = {\n  type: 'text';\n  content: string;\n};\nexport type MDNodeItalic = {\n  type: 'em';\n  content: Array<MDASTNode>;\n};\nexport type MDNodeBold = {\n  type: 'strong';\n  content: Array<MDASTNode>;\n};\nexport type MDNodeRenderable = {\n  type: 'renderable';\n  content: RenderableContent;\n};\n\nexport type MDASTNode = MDNodeParagraph | MDNodeText | MDNodeItalic | MDNodeBold | MDNodeRenderable;\n// export function mdNodeIsParagraph(node: MDASTNode): node is MDNodeParagraph {\n//   return node.type === 'paragraph';\n// }\n// export function mdNodeIsText(node: MDASTNode): node is MDNodeText {\n//   return node.type === 'text';\n// }\n// export function mdNodeIsItaltic(node: MDASTNode): node is MDNodeItalic {\n//   return node.type === 'em';\n// }\n// export function mdNodeIsBold(node: MDASTNode): node is MDNodeBold {\n//   return node.type === 'strong';\n// }\n// export function mdNodeIsRenderable(node: MDASTNode): node is MDNodeRenderable {\n//   return node.type === 'renderable';\n// }\n\nexport function mdParse(source: string): Array<MDASTNode> {\n  let blockSource = `${source}\\n\\n`;\n  return reBuiltParser(blockSource, { inline: false }) as Array<MDASTNode>;\n}\n\nexport function mdEscape(text: string): string {\n  return text.replace(/([\\\\[*_])/g, '\\\\$1');\n}\n","export let markdown_default_renderables: TSMap<MarkdownRenderable> = {};\nexport let markdown_default_font_styles: TSMap<FontStyle> = {};\n\nimport assert from 'assert';\nimport verify from 'glov/common/verify';\nimport {\n  ROVec4,\n  Vec4,\n  unit_vec,\n  vec4,\n} from 'glov/common/vmath';\nimport {\n  ALIGN,\n  EPSILON,\n  FontStyle,\n  fontStyleColored,\n} from './font';\nimport {\n  MDDrawBlock,\n  MDDrawParam,\n  MDLayoutBlock,\n  MDLayoutCalcParam,\n} from './markdown';\nimport { RenderableContent } from './markdown_parse';\nimport { Sprite } from './sprites';\nimport {\n  sprites as ui_sprites,\n} from './ui';\n\nimport type { Box } from './geom_types';\nimport type { SpriteSheet } from './spritesheet';\nimport type { Optional, TSMap } from 'glov/common/types';\n\nconst { floor, max } = Math;\n\nexport function markdownRenderableAddDefault(key: string, renderable: MarkdownRenderable): void {\n  markdown_default_renderables[key] = renderable;\n}\n\nexport function markdownSetColorStyle(idx: string | number, style: FontStyle): void {\n  markdown_default_font_styles[idx] = style;\n}\nexport function markdownSetColorStyles(styles: FontStyle[]): void {\n  for (let ii = 0; ii < styles.length; ++ii) {\n    markdown_default_font_styles[ii] = styles[ii];\n  }\n}\nconst default_palette = [0x000000ff, 0xff2020ff, 0x20ff20ff, 0x2020ffff, 0xffffffff];\nmarkdownSetColorStyles(default_palette.map((c) => fontStyleColored(null, c)));\n\n// Note: renderable can return null (at parse time) and will be replaced with the original text\nexport type MarkdownRenderable = (content: RenderableContent, data?: unknown) => (MDLayoutBlock | null);\n\nexport function markdownLayoutFit(param: MDLayoutCalcParam, dims: Optional<Box, 'x' | 'y'>): dims is Box {\n  let { cursor, line_height } = param;\n  if (cursor.x + dims.w > param.w + EPSILON && cursor.x !== cursor.line_x0 && (param.align & ALIGN.HWRAP)) {\n    cursor.x = cursor.line_x0 = param.indent;\n    cursor.y += line_height; // TODO: = cursor.line_y1 instead?\n    cursor.line_y1 = cursor.y;\n  }\n  if (cursor.x + dims.w > param.w + EPSILON && (param.align & ALIGN.HWRAP)) {\n    // still over, doesn't fit on a whole line, modify w (if caller listens to that)\n    dims.w = param.w - cursor.line_x0;\n  }\n  dims.x = cursor.x;\n  if (dims.h !== line_height) {\n    // always vertically center within the specified line height\n    dims.y = cursor.y + (line_height - dims.h)/2;\n    if (param.font.integral) {\n      dims.y = floor(dims.y);\n    }\n    cursor.line_y1 = max(cursor.line_y1, cursor.y + line_height, dims.y + dims.h);\n  } else {\n    dims.y = cursor.y;\n    cursor.line_y1 = max(cursor.line_y1, cursor.y + line_height);\n  }\n  cursor.x += dims.w;\n  // TODO: if height > line_height, track this line's height on the cursor?\n  return true;\n}\n\nexport type MarkdownImageParam = {\n  sprite: Sprite;\n  frame?: number | string;\n  color?: ROVec4;\n  override?: boolean;\n};\nlet allowed_images: TSMap<MarkdownImageParam> = Object.create(null);\nexport function markdownImageRegister(img_name: string, param: MarkdownImageParam): void {\n  assert(param.sprite);\n  assert(!allowed_images[img_name] || param.override);\n  allowed_images[img_name] = param;\n}\n\nexport function markdownImageRegisterSpriteSheet(spritesheet: SpriteSheet): void {\n  let sprite = spritesheet.sprite;\n  for (let key in spritesheet.tiles) {\n    markdownImageRegister(key, {\n      sprite,\n      frame: spritesheet.tiles[key],\n    });\n  }\n}\n\nfunction getImageData(key: string): MarkdownImageParam {\n  return allowed_images[key] || { sprite: ui_sprites.white };\n}\n\nclass MDRImg implements MDLayoutBlock, MDDrawBlock, Box {\n  key: string;\n  scale: number;\n  aspect: number;\n  constructor(content: RenderableContent) {\n    this.key = content.key;\n    this.dims = this;\n    let scale = content.param && content.param.scale;\n    this.scale = (scale && typeof scale === 'number') ? scale : 1;\n    let aspect = content.param && content.param.aspect;\n    this.aspect = (aspect && typeof aspect === 'number') ? aspect : 0;\n  }\n  // assigned during layout\n  dims: Box;\n  x!: number;\n  y!: number;\n  w!: number;\n  h!: number;\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    let { line_height } = param;\n    let h = this.h = line_height * this.scale;\n    let img_data = getImageData(this.key);\n    let { sprite, frame } = img_data;\n    let aspect = 1;\n    if (typeof frame === 'number' && sprite.uidata) {\n      if (sprite.uidata.aspect) {\n        aspect = sprite.uidata.aspect[frame];\n      }\n    } else {\n      if (sprite.isLazyLoad()) {\n        // lazy-loaded images must have a in-markdown specified aspect ratio\n        verify(this.aspect);\n        aspect = this.aspect || 1;\n      } else if (this.aspect) {\n        aspect = this.aspect;\n      } else {\n        let tex = sprite.texs[0];\n        aspect = tex.width / tex.height;\n        if (sprite.uvs) {\n          aspect *= (sprite.uvs[2] - sprite.uvs[0]) / (sprite.uvs[3] - sprite.uvs[1]);\n        }\n      }\n    }\n    this.w = h * aspect;\n    markdownLayoutFit(param, this);\n    return [this];\n  }\n  alpha_color_cache?: Vec4;\n  alpha_color_cache_value?: number;\n  draw(param: MDDrawParam): void {\n    profilerStart('MDRImg::draw');\n    let x = this.x + param.x;\n    let y = this.y + param.y;\n    let img_data = getImageData(this.key);\n    let color = img_data.color;\n    if (param.alpha !== 1) {\n      if (param.alpha !== this.alpha_color_cache_value) {\n        this.alpha_color_cache_value = param.alpha;\n        color = color || unit_vec;\n        this.alpha_color_cache = vec4(color[0], color[1], color[2], color[3] * param.alpha);\n      }\n      color = this.alpha_color_cache!;\n    }\n    img_data.sprite.draw({\n      x, y,\n      z: param.z,\n      w: this.w,\n      h: this.h,\n      frame: img_data.frame,\n      color,\n    });\n    profilerStop();\n  }\n}\nfunction createMDRImg(content: RenderableContent): MDRImg {\n  return new MDRImg(content);\n}\nmarkdownRenderableAddDefault('img', createMDRImg);\n\nclass MDRColorStart implements MDLayoutBlock {\n  key: string;\n  constructor(content: RenderableContent) {\n    this.key = content.key;\n  }\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    let { font_styles, font_style_idx, font_style_stack } = param;\n    if (!font_style_stack) {\n      font_style_stack = param.font_style_stack = [];\n    }\n    font_style_stack.push(font_style_idx);\n    if (font_style_idx === this.key) {\n      // no change\n    } else {\n      let new_style = font_styles[this.key] || markdown_default_font_styles[this.key];\n      if (new_style) {\n        param.font_style_idx = this.key;\n        param.font_style = new_style;\n      }\n    }\n\n    return [];\n  }\n}\nmarkdownRenderableAddDefault('c', (content: RenderableContent) => new MDRColorStart(content));\n\nclass MDRColorEnd implements MDLayoutBlock {\n  layout(param: MDLayoutCalcParam): MDDrawBlock[] {\n    let { font_styles, font_style_idx, font_style_stack } = param;\n    if (!font_style_stack || !font_style_stack.length) {\n      // stack underflow\n    } else {\n      let key = font_style_stack.pop()!;\n      if (font_style_idx === key) {\n        // nothing\n      } else {\n        let new_style = font_styles[key] || markdown_default_font_styles[key];\n        if (new_style) {\n          param.font_style_idx = key;\n          param.font_style = new_style;\n        }\n      }\n    }\n\n    return [];\n  }\n}\nmarkdownRenderableAddDefault('/c', (content: RenderableContent) => new MDRColorEnd());\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Some code from Turbulenz: Copyright (c) 2012-2013 Turbulenz Limited\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport function mat43() {\n  let r = new Float32Array(12);\n  r[0] = r[4] = r[8] = 1;\n  return r;\n}\n\nexport function m43identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  out[9] = 0;\n  out[10] = 0;\n  out[11] = 0;\n}\n\nexport function m43mul(out, a, b) {\n  let a0 = a[0];\n  let a1 = a[1];\n  let a2 = a[2];\n  let a3 = a[3];\n  let a4 = a[4];\n  let a5 = a[5];\n  let a6 = a[6];\n  let a7 = a[7];\n  let a8 = a[8];\n  let a9 = a[9];\n  let a10 = a[10];\n  let a11 = a[11];\n\n  let b0 = b[0];\n  let b1 = b[1];\n  let b2 = b[2];\n  let b3 = b[3];\n  let b4 = b[4];\n  let b5 = b[5];\n  let b6 = b[6];\n  let b7 = b[7];\n  let b8 = b[8];\n\n  out[0] = (b0 * a0 + b3 * a1 + b6 * a2);\n  out[1] = (b1 * a0 + b4 * a1 + b7 * a2);\n  out[2] = (b2 * a0 + b5 * a1 + b8 * a2);\n  out[3] = (b0 * a3 + b3 * a4 + b6 * a5);\n  out[4] = (b1 * a3 + b4 * a4 + b7 * a5);\n  out[5] = (b2 * a3 + b5 * a4 + b8 * a5);\n  out[6] = (b0 * a6 + b3 * a7 + b6 * a8);\n  out[7] = (b1 * a6 + b4 * a7 + b7 * a8);\n  out[8] = (b2 * a6 + b5 * a7 + b8 * a8);\n  out[9] = (b0 * a9 + b3 * a10 + b6 * a11 + b[9]);\n  out[10] = (b1 * a9 + b4 * a10 + b7 * a11 + b[10]);\n  out[11] = (b2 * a9 + b5 * a10 + b8 * a11 + b[11]);\n\n  return out;\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/*\n  Convert models to GLB with:\n  node_modules\\.bin\\gltf-pipeline.cmd -t -i src/client/models/box.gltf -o src/client/models/box.glb\n  // The -t tells it not to embed the textures, but just leave the URIs\n */\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst geom = require('./geom.js');\nconst glb_parser = require('./glb/parser.js');\nconst { ATTRIBUTE_TYPE_TO_COMPONENTS } = require('./glb/gltf-type-utils.js');\nconst renderer = require('./engine.js');\nconst { locateAsset } = require('./locate_asset.js');\nconst { fetch } = require('./fetch.js');\nconst {\n  SEMANTIC,\n  shaderCreate,\n  shadersBind,\n  shadersPrelink,\n} = require('./shaders.js');\nconst { textureBind, textureLoad } = require('./textures.js');\nconst { vec4 } = require('glov/common/vmath.js');\nconst { webFSGetFile } = require('./webfs.js');\n\nexport let load_count = 0;\nexport function modelLoadCount() {\n  return load_count;\n}\n\nexport let models = {};\n\nexport let default_vshader;\nexport let default_fshader;\n\nfunction initShaders() {\n  default_vshader = shaderCreate('shaders/default.vp');\n  default_fshader = shaderCreate('shaders/default.fp');\n  shadersPrelink(default_vshader, default_fshader);\n}\n\nfunction Model(url) {\n  this.url = url;\n  let idx = url.lastIndexOf('/');\n  if (idx !== -1) {\n    this.base_url = url.slice(0, idx + 1);\n  } else {\n    this.base_url = '';\n  }\n}\n\nModel.prototype.load = function () {\n  ++load_count;\n  fetch({\n    url: locateAsset(this.url),\n    response_type: 'arraybuffer',\n  }, (err, array_buffer) => {\n    --load_count;\n    if (err) {\n      window.onerror('Model loading error', 'models.js', 0, 0, err);\n    } else {\n      try {\n        this.parse(array_buffer);\n      } catch (e) {\n        window.onerror('Model loading error', 'models.js', 0, 0, e);\n      }\n    }\n  });\n};\n\nconst skip_attr = {\n  'TANGENT': true,\n};\n\nModel.prototype.parse = function (glb_data) {\n  let glb = glb_parser.parse(glb_data);\n  if (!glb) {\n    return;\n  }\n  // Make Geoms for each primitives within each mesh\n  let glb_json = glb.getJSON();\n  let objs = [];\n  for (let ii = 0; ii < glb_json.meshes.length; ++ii) {\n    let mesh = glb_json.meshes[ii];\n    for (let jj = 0; jj < mesh.primitives.length; ++jj) {\n      let primitives = mesh.primitives[jj];\n      let material = glb_json.materials[primitives.material];\n      let texture = null;\n      if (material) {\n        // Just grabbing the base color texture, nothing else\n        let bct = (material.pbrMetallicRoughness || {}).baseColorTexture || {};\n        let texture_def = glb_json.textures && glb_json.textures[bct.index] || {};\n        let sampler_def = glb_json.samplers && glb_json.samplers[texture_def.sampler] || {};\n        let image = glb_json.images && glb_json.images[texture_def.source] || {};\n        if (image.uri) {\n          let params = {\n            url: `${this.base_url}${image.uri}`,\n            filter_mag: sampler_def.magFilter,\n            filter_min: sampler_def.minFilter,\n            wrap_s: sampler_def.wrapS,\n            wrap_t: sampler_def.wrapT,\n          };\n          texture = textureLoad(params);\n        }\n      }\n      let format = [];\n      let buffers = [];\n      let bidx = [];\n      let total_size = 0;\n      let vert_count = 0;\n      for (let attr in primitives.attributes) {\n        if (skip_attr[attr]) {\n          continue;\n        }\n        assert(SEMANTIC[attr] !== undefined);\n        let accessor = glb_json.accessors[primitives.attributes[attr]];\n        assert.equal(accessor.componentType, 5126); // F32\n        let geom_format = gl.FLOAT;\n        let geom_count = ATTRIBUTE_TYPE_TO_COMPONENTS[accessor.type];\n        assert(geom_count);\n        let my_vert_count = accessor.count/* / geom_count*/;\n        if (!vert_count) {\n          vert_count = my_vert_count;\n        } else {\n          assert.equal(vert_count, my_vert_count);\n        }\n        format.push([SEMANTIC[attr], geom_format, geom_count]);\n        let buffer = glb.getBuffer(accessor);\n        buffers.push(buffer);\n        bidx.push(0);\n        total_size += buffer.length;\n      }\n      // Interleave\n      let verts = new Float32Array(total_size);\n      let idx = 0;\n      for (let vert = 0; vert < vert_count; ++vert) {\n        for (let attr = 0; attr < format.length; ++attr) {\n          for (let kk = 0; kk < format[attr][2]; ++kk) {\n            verts[idx++] = buffers[attr][bidx[attr]++];\n          }\n        }\n      }\n      // Get indices\n      let accessor = glb_json.accessors[primitives.indices];\n      assert(accessor); // must be an indexed primitive set\n      assert.equal(accessor.type, 'SCALAR');\n      let idxs = glb.getBuffer(accessor);\n      if (accessor.componentType === 5125) { // Uint32\n        assert(vert_count < 65535); // Fits in 16-bits, doesn't use index 65535\n        // Just convert to 16-bit\n        idxs = new Uint16Array(idxs);\n      } else {\n        assert.equal(accessor.componentType, 5123); // Uint16\n      }\n      objs.push({\n        geom: geom.create(format, verts, idxs, primitives.mode),\n        texture,\n      });\n    }\n  }\n  // TODO: Something with nodes to tie together and position the meshes\n  this.data = {\n    objs,\n    // glb, - Don't keep this, release it and any unreferenced data/buffers\n  };\n};\n\nconst default_shader_params = {\n  color: vec4(1, 1, 1, 1),\n};\nModel.prototype.draw = function (param) {\n  let {\n    mat,\n    vshader,\n    fshader,\n    shader_params,\n  } = param;\n  assert(mat); // old API was just a `mat` as a single param\n  renderer.updateMatrices(mat); // before setting shader\n  shadersBind(vshader || default_vshader, fshader || default_fshader, shader_params || default_shader_params);\n  let objs = this.data.objs;\n  for (let ii = 0; ii < objs.length; ++ii) {\n    let obj = objs[ii];\n    if (obj.texture) {\n      textureBind(0, obj.texture);\n    }\n    obj.geom.draw();\n  }\n};\n\n// Just draw the geometry, without any other binding\nModel.prototype.drawGeom = function () {\n  let objs = this.data.objs;\n  for (let ii = 0; ii < objs.length; ++ii) {\n    let obj = objs[ii];\n    obj.geom.draw();\n  }\n};\n\nexport function modelLoad(url) {\n  if (models[url]) {\n    return models[url];\n  }\n  let model = models[url] = new Model(url);\n  model.data = models.box.data; // stub until loaded\n  model.load();\n  return model;\n}\n\nexport function modelStartup() {\n  initShaders();\n  let model_box = models.box = new Model('box');\n  model_box.parse(webFSGetFile('models/box_textured_embed.glb').buffer);\n}\n\n// Legacy APIs\nexports.load = modelLoad;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport { callEach } from 'glov/common/util.js';\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.netBuildString = buildString;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.netInit = init;\n\n/* eslint-disable import/order */\nconst { filewatchStartup } = require('./filewatch.js');\nconst { packetEnableDebug } = require('glov/common/packet.js');\nconst subscription_manager = require('./subscription_manager.js');\nconst wsclient = require('./wsclient.js');\nconst WSClient = wsclient.WSClient;\n\nlet client;\nlet subs;\n\nlet post_net_init = [];\n\nexport function netPostInit(cb) {\n  if (post_net_init) {\n    post_net_init.push(cb);\n  } else {\n    cb();\n  }\n}\n\nexport function init(params) {\n  params = params || {};\n  if (params.ver) {\n    wsclient.CURRENT_VERSION = params.ver;\n  }\n  if (String(document.location).match(/^https?:\\/\\/localhost/)) {\n    if (!params.no_packet_debug) {\n      console.log('PacketDebug: ON');\n      packetEnableDebug(true);\n    }\n  }\n  client = new WSClient(params.path, params.client_app);\n  subs = subscription_manager.create(client, params.cmd_parse);\n  subs.auto_create_user = Boolean(params.auto_create_user);\n  subs.no_auto_login = Boolean(params.no_auto_login);\n  subs.allow_anon = Boolean(params.allow_anon);\n  window.subs = subs; // for debugging\n  exports.subs = subs;\n  exports.client = client;\n  callEach(post_net_init, post_net_init = null);\n  filewatchStartup(client);\n\n  if (params.engine) {\n    params.engine.addTickFunc((dt) => {\n      client.checkDisconnect();\n      subs.tick(dt);\n    });\n\n    params.engine.onLoadMetrics((obj) => {\n      subs.onceConnected(() => {\n        client.send('load_metrics', obj);\n      });\n    });\n  }\n}\n\nconst build_timestamp_string = new Date(Number(BUILD_TIMESTAMP))\n  .toISOString()\n  .replace('T', ' ')\n  .slice(5, -8);\nexport function buildString() {\n  return wsclient.CURRENT_VERSION ? `${wsclient.CURRENT_VERSION} (${build_timestamp_string})` : build_timestamp_string;\n}\n\nexport function netDisconnectedRaw() {\n  return !client || !client.connected || client.disconnected ||\n    !client.socket || client.socket.readyState !== 1;\n}\n\nexport function netDisconnected() {\n  return netDisconnectedRaw() || subs.logging_in;\n}\n\nexport function netForceDisconnect() {\n  if (subs) {\n    subs.was_logged_in = false;\n  }\n  client?.socket?.close?.();\n}\n\nexport function netClient() {\n  return client;\n}\n\nexport function netClientId() {\n  return client.id;\n}\n\nexport function netUserId() {\n  return subs.getUserId();\n}\n\nexport function netSubs() {\n  return subs;\n}\n\nexport function isChunkedSendFileData(data) {\n  return !data.err;\n}\n","/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Modified for GLOV.js to convert to TypeScript and to fit API and style requirements.\n *\n */\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\n/*\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spin_x   -- normalized spin speed (use for zoom) - x plane\n *   spin_y   -- \" - y plane\n *   pixel_x  -- normalized distance (to pixels) - x plane\n *   pixel_y  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spin_x, spin_y (or pixels)?\n *\n *   - spin_x is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spin_y is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n *\n */\ntype WheelEvent = {\n  detail?: number;\n  wheelDelta?: number;\n  wheelDeltaX?: number;\n  wheelDeltaY?: number;\n  axis?: number;\n  HORIZONTAL_AXIS: number;\n  deltaX?: number;\n  deltaY?: number;\n  deltaMode?: number;\n};\nexport function normalizeWheel(event: WheelEvent): {\n  spin_x: number;\n  spin_y: number;\n  pixel_x: number;\n  pixel_y: number;\n} {\n  let spin_x = 0;\n  let spin_y = 0;\n  let pixel_x = 0;\n  let pixel_y = 0;\n\n  // Legacy\n  if (event.detail) {\n    spin_y = event.detail;\n  }\n  if (event.wheelDelta) {\n    spin_y = -event.wheelDelta / 120;\n  }\n  if (event.wheelDeltaY) {\n    spin_y = -event.wheelDeltaY / 120;\n  }\n  if (event.wheelDeltaX) {\n    spin_x = -event.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    spin_x = spin_y;\n    spin_y = 0;\n  }\n\n  pixel_x = spin_x * PIXEL_STEP;\n  pixel_y = spin_y * PIXEL_STEP;\n\n  if (typeof event.deltaY === 'number') {\n    pixel_y = event.deltaY;\n  }\n  if (typeof event.deltaX === 'number') {\n    pixel_x = event.deltaX;\n  }\n\n  if ((pixel_x || pixel_y) && event.deltaMode) {\n    if (event.deltaMode === 1) {          // delta in LINE units\n      pixel_x *= LINE_HEIGHT;\n      pixel_y *= LINE_HEIGHT;\n    } else {                             // delta in PAGE units\n      pixel_x *= PAGE_HEIGHT;\n      pixel_y *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixel_x && !spin_x) {\n    spin_x = (pixel_x < 1) ? -1 : 1;\n  }\n  if (pixel_y && !spin_y) {\n    spin_y = (pixel_y < 1) ? -1 : 1;\n  }\n\n  return {\n    spin_x,\n    spin_y,\n    pixel_x,\n    pixel_y,\n  };\n}\n\n\n// import { is_firefox } from './browser';\n// /*\n//  * The best combination if you prefer spin_x + spin_y normalization.  It favors\n//  * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n//  * 'wheel' event, making spin speed determination impossible.\n//  */\n// export function getEventType(): string {\n//   return is_firefox ?\n//     'DOMMouseScroll' :\n//     (window.WheelEvent) ?\n//       'wheel' :\n//       'mousewheel';\n// }\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n//////////////////////////////////////////////////////////////////////////\n// Particle System Spec\n\n/*\n// Definitions\n// value = number or\n// value = [base, add_max] -> generates a number in the range [base, base + add_max)\nlet def_fire = {\n  particles: {\n    fire: {\n      blend: 'additive',\n      texture: 'fire.png',\n      color: [1,1,1,1], // multiplied by animation track, default 1,1,1,1, can be omitted\n      color_track: [ // just values, NOT random range\n        { t: 0.0, v: [1,0.4,0.4,1] },\n        { t: 0.7, v: [1,0,0,1] },\n        { t: 0.9, v: [0.2,0,0,1] },\n        { t: 1.0, v: [0,0,0,1] },\n      ],\n      size: [[32,16], [32,16]], // multiplied by animation track\n      size_track: [ // just values, NOT random range\n        { t: 0.0, v: [1,1] },\n        { t: 0.4, v: [0.5,0.5] },\n        { t: 0.7, v: [1,1] },\n        { t: 1.0, v: [1.5,1.5] },\n      ],\n      accel: [0,0],\n      rot: [0,360], // degrees\n      rot_vel: [10,2], // degrees per second\n      lifespan: [450,0], // milliseconds\n      kill_time_accel: 5,\n    },\n  },\n  emitters: {\n    fire: {\n      particle: 'fire',\n      // Random ranges affect each emitted particle:\n      pos: [[0,28], [0,28]],\n      vel: [0,0],\n      emit_rate: [60,20], // emissions per second\n      // Random ranges only calculated upon instantiation:\n      emit_time: [0,Infinity],\n      emit_initial: 10,\n    },\n  },\n  system_lifespan: Infinity, // must be manually killed\n};\n\n// Usage\nlet system = glov_engine.glov_particles.createSystem(def_fire, [50, 50, Z.PARTICLES]);\nsystem.updatePos(75, 75);\nsystem.killSoft(); // stops emitting and speeds up particles by kill_time_accel\nsystem.killHard(); // immediately stops drawing\n\n*/\n\n//////////////////////////////////////////////////////////////////////////\n// Implementation\n\nconst assert = require('assert');\nconst {\n  vec2, v2copy, v2lerp, v2mul,\n  vec3, vec4, v3add, v4copy, v4lerp, v4mul,\n} = require('glov/common/vmath.js');\nconst sprites = require('./sprites.js');\nconst { textureLoad } = require('./textures.js');\n\nconst blend_map = {\n  alpha: sprites.BLEND_ALPHA,\n  additive: sprites.BLEND_ADDITIVE,\n};\n\nexport function preloadParticleData(particle_data) {\n  // Preload all referenced particle textures\n  for (let key in particle_data.defs) {\n    let def = particle_data.defs[key];\n    for (let part_name in def.particles) {\n      let part_def = def.particles[part_name];\n      textureLoad({ url: `img/${part_def.texture}.png` });\n    }\n  }\n}\n\n// Expect all values to be a pair of [base, add_max]\nfunction normalizeValue(v) {\n  if (v instanceof Float32Array && v.length >= 2) {\n    return v;\n  } else if (typeof v === 'number') {\n    return vec2(v, 0);\n  } else if (Array.isArray(v) || v instanceof Float32Array) {\n    // already an array, convert to Vec2\n    return vec2(v[0] || 0, v[1] || 0);\n  } else {\n    return assert(false);\n  }\n}\n\nfunction normalizeValueVec(vec, length) {\n  assert(length);\n  assert(Array.isArray(vec) || vec instanceof Float32Array);\n  let ret = new Array(length);\n  for (let ii = 0; ii < length; ++ii) {\n    ret[ii] = normalizeValue(vec[ii]);\n  }\n  return ret;\n}\n\nfunction normalizeParticle(def, particle_manager) {\n  if (!def.normalized) {\n    let norm = def.normalized = {\n      blend: blend_map[def.blend] || sprites.BLEND_ALPHA,\n      texture: textureLoad({ url: def.texture ? `img/${def.texture}.png` : 'img/glov/util_circle.png' }),\n      color: normalizeValueVec(def.color || [1,1,1,1], 4),\n      color_track: null,\n      size: normalizeValueVec(def.size || [1,1], 2),\n      size_track: null,\n      accel: normalizeValueVec(def.accel || [0,0,0], 3),\n      rot: normalizeValue(def.rot || 0),\n      rot_vel: normalizeValue(def.rot || 0),\n      lifespan: normalizeValue(def.lifespan || 1000),\n      kill_time_accel: normalizeValue(def.kill_time_accel || 1),\n    };\n    assert(norm.kill_time_accel[0] >= 1); // cannot slow down on kill!\n    if (def.color_track && def.color_track.length) {\n      assert(def.color_track.length > 1);\n      norm.color_track = [];\n      for (let ii = 0; ii < def.color_track.length; ++ii) {\n        let e = def.color_track[ii];\n        assert(typeof e.t === 'number');\n        let arr = new Float32Array(5);\n        arr[0] = e.v[0];\n        arr[1] = e.v[1];\n        arr[2] = e.v[2];\n        arr[3] = e.v[3];\n        arr[4] = e.t;\n        norm.color_track.push(arr);\n      }\n    }\n    if (def.size_track && def.size_track.length) {\n      assert(def.size_track.length > 1);\n      norm.size_track = [];\n      for (let ii = 0; ii < def.size_track.length; ++ii) {\n        let e = def.size_track[ii];\n        assert(typeof e.t === 'number');\n        let arr = new Float32Array(3);\n        arr[0] = e.v[0];\n        arr[1] = e.v[1];\n        arr[2] = e.t;\n        norm.size_track.push(arr);\n      }\n    }\n  }\n  return def.normalized;\n}\n\nfunction findParticle(particles, name) {\n  assert(particles[name] !== undefined);\n  return particles[name];\n}\n\nfunction normalizeEmitter(def, part_map) {\n  if (!def.normalized) {\n    def.normalized = {\n      part_idx: findParticle(part_map, def.particle),\n      pos: normalizeValueVec(def.pos || [0,0,0], 3),\n      vel: normalizeValueVec(def.vel || [0,0,0], 3),\n      emit_rate: normalizeValue(def.emit_rate || 10),\n      emit_time: normalizeValueVec(def.emit_time || [0,Infinity], 2),\n      emit_initial: normalizeValue(def.emit_initial || 1),\n    };\n    // convert particles per second to ms per emission\n    let min = def.normalized.emit_rate[0];\n    let max = def.normalized.emit_rate[0] + def.normalized.emit_rate[1];\n    def.normalized.emit_rate[0] = 1000 / max;\n    def.normalized.emit_rate[1] = 1000 / min;\n    assert(def.normalized.emit_rate[0] > 1); // Not more than 1000 per second, that's ridic'.\n  }\n  return def.normalized;\n}\n\nfunction normalizeDef(def, particle_manager) {\n  if (!def.normalized) {\n    let norm = def.normalized = {\n      system_lifespan: normalizeValue(def.system_lifespan || Infinity),\n      particles: [],\n      emitters: [],\n    };\n    let part_map = {};\n    for (let key in def.particles) {\n      part_map[key] = norm.particles.length;\n      norm.particles.push(normalizeParticle(def.particles[key], particle_manager));\n    }\n    for (let key in def.emitters) {\n      norm.emitters.push(normalizeEmitter(def.emitters[key], part_map));\n    }\n  }\n  return def.normalized;\n}\n\nfunction instValue(v) {\n  return v[0] + Math.random() * v[1];\n}\nfunction instValueVec(v) {\n  let ret = new Float32Array(v.length);\n  for (let ii = 0; ii < v.length; ++ii) {\n    ret[ii] = instValue(v[ii]);\n  }\n  return ret;\n}\n\nlet temp_color = vec4();\nlet temp_color2 = vec4();\nlet temp_size = vec2();\nlet temp_size2 = vec2();\n// let temp_pos = v3allocZero();\n\nclass ParticleSystem {\n  constructor(parent, def_in, pos) {\n    assert(pos.length === 3);\n    this.parent = parent;\n    this.def = normalizeDef(def_in, parent);\n    this.system_lifespan = instValue(this.def.system_lifespan);\n    assert(this.system_lifespan > 0);\n    this.age = 0;\n    this.kill_hard = false;\n    this.kill_soft = false;\n    this.pos = vec3(pos[0], pos[1], pos[2]);\n    this.part_sets = [];\n    for (let ii = 0; ii < this.def.particles.length; ++ii) {\n      let def = this.def.particles[ii];\n      let part_set = {\n        def,\n        parts: [],\n      };\n      this.part_sets.push(part_set);\n    }\n    this.emitters = [];\n    // Instantiate emitters\n    for (let ii = 0; ii < this.def.emitters.length; ++ii) {\n      let def = this.def.emitters[ii];\n      let emitter = {\n        def,\n        emit_time: instValueVec(def.emit_time),\n        countdown: 0,\n        started: false,\n        stopped: false,\n      };\n      this.emitters.push(emitter);\n    }\n    // Do *not* do this here, causes them to be drawn twice on the first frame,\n    //   they'll be ticked as usual.\n    // // do initial tick for things that have an emit_time[0] of 0 and have an emit_initial\n    // this.tick(0);\n  }\n\n  tickParticle(part, dt) { // eslint-disable-line class-methods-use-this\n    let def = part.def;\n    part.age += dt;\n    let age_norm = part.age / part.lifespan;\n    if (age_norm >= 1) {\n      return true;\n    }\n\n    // Pos, vel - incrementally computed\n    let dts = dt / 1000;\n    part.pos[0] += part.vel[0] * dts;\n    part.pos[1] += part.vel[1] * dts;\n    part.pos[2] += part.vel[2] * dts;\n    part.vel[0] += part.accel[0] * dts;\n    part.vel[1] += part.accel[1] * dts;\n    part.vel[2] += part.accel[2] * dts;\n\n    // Color, size, rot - explicitly computed\n    v4copy(temp_color, part.color, temp_color);\n    if (def.color_track) {\n      if (age_norm < def.color_track[0][4]) {\n        v4mul(temp_color, temp_color, def.color_track[0]);\n      } else if (age_norm >= def.color_track[def.color_track.length - 1][4]) {\n        v4mul(temp_color, temp_color, def.color_track[def.color_track.length - 1]);\n      } else {\n        for (let ii = 0; ii < def.color_track.length - 1; ++ii) {\n          if (age_norm >= def.color_track[ii][4] && age_norm < def.color_track[ii + 1][4]) {\n            let weight = (age_norm - def.color_track[ii][4]) / (def.color_track[ii + 1][4] - def.color_track[ii][4]);\n            v4lerp(temp_color2, weight, def.color_track[ii], def.color_track[ii + 1]);\n            v4mul(temp_color, temp_color, temp_color2);\n            break;\n          }\n        }\n      }\n    }\n\n    v2copy(temp_size, part.size);\n    if (def.size_track) {\n      if (age_norm < def.size_track[0][2]) {\n        v2mul(temp_size, temp_size, def.size_track[0]);\n      } else if (age_norm >= def.size_track[def.size_track.length - 1][2]) {\n        v2mul(temp_size, temp_size, def.size_track[def.size_track.length - 1]);\n      } else {\n        for (let ii = 0; ii < def.size_track.length - 1; ++ii) {\n          if (age_norm >= def.size_track[ii][2] && age_norm < def.size_track[ii + 1][2]) {\n            let weight = (age_norm - def.size_track[ii][2]) / (def.size_track[ii + 1][2] - def.size_track[ii][2]);\n            v2lerp(temp_size2, weight, def.size_track[ii], def.size_track[ii + 1]);\n            v2mul(temp_size, temp_size, temp_size2);\n            break;\n          }\n        }\n      }\n    }\n\n    // TODO: let rot = part.rot + part.age * part.rot_vel;\n\n    // TODO: draw using:\n    //   rot\n    let w = temp_size[0];\n    let h = temp_size[1];\n    let x = part.pos[0] - w/2;\n    let y = part.pos[1] - h/2;\n    let z = part.pos[2];\n    sprites.queueraw4color([def.texture],\n      x, y, temp_color, 0, 0,\n      x, y + h, temp_color, 0, 1,\n      x + w, y + h, temp_color, 1, 1,\n      x + w, y, temp_color, 1, 0,\n      z,\n      null, null, def.blend);\n\n    return false;\n  }\n\n  tickPartSet(dt_orig, part_set) {\n    //let def = part_set.def;\n    let parts = part_set.parts;\n    for (let ii = parts.length - 1; ii >= 0; --ii) {\n      let part = parts[ii];\n      let dt = this.kill_soft ? dt_orig * part.kill_time_accel : dt_orig;\n      if (this.tickParticle(part, dt)) {\n        parts[ii] = parts[parts.length - 1];\n        parts.pop();\n      }\n    }\n  }\n\n  emitParticle(init_dt, emitter) {\n    let emitter_def = emitter.def;\n    let part_set = this.part_sets[emitter_def.part_idx];\n    let def = part_set.def;\n    let pos = instValueVec(emitter_def.pos, 3);\n    v3add(pos, pos, this.pos);\n    // PERFTODO: Make the whole Particle just a data[] Float32Array\n    let part = {\n      def,\n      pos,\n      color: instValueVec(def.color, 4),\n      size: instValueVec(def.size, 4),\n      vel: instValueVec(emitter_def.vel, 3),\n      accel: instValueVec(def.accel, 3),\n      rot: instValue(def.rot),\n      rot_vel: instValue(def.rot_vel),\n      lifespan: instValue(def.lifespan),\n      kill_time_accel: instValue(def.kill_time_accel),\n      age: 0,\n    };\n    if (!this.tickParticle(part, init_dt)) {\n      part_set.parts.push(part);\n    }\n  }\n\n  tickEmitter(dt, emitter) {\n    let def = emitter.def;\n    // check for initial emission\n    if (!emitter.started && this.age >= emitter.emit_time[0]) {\n      emitter.started = true;\n      // ignore time before we started emitting\n      dt = this.age - emitter.emit_time[0];\n      let num = instValue(def.emit_initial);\n      for (let ii = 0; ii < num; ++ii) {\n        this.emitParticle(dt, emitter);\n      }\n      emitter.countdown = instValue(def.emit_rate);\n    }\n    if (emitter.started && !emitter.stopped && !this.kill_soft) {\n      // should we stop?\n      let remaining_dt = dt;\n      let emit_dt = dt;\n      if (this.age >= emitter.emit_time[1]) {\n        emitter.stopped = true;\n        // Do not emit during time after we stopped\n        emit_dt -= this.age - emitter.emit_time[1];\n      }\n      // Emit dt's worth of particles\n      while (emit_dt >= emitter.countdown) {\n        emit_dt -= emitter.countdown;\n        remaining_dt -= emitter.countdown;\n        emitter.countdown = instValue(def.emit_rate);\n        this.emitParticle(remaining_dt, emitter);\n      }\n      emitter.countdown -= emit_dt;\n    }\n  }\n\n  tick(dt) {\n    if (this.kill_hard) {\n      return true;\n    }\n    // tick existing particles\n    for (let ii = this.part_sets.length - 1; ii >= 0; --ii) {\n      this.tickPartSet(dt, this.part_sets[ii]);\n    }\n    // advance time and spawn new ones (with partial ticks)\n    this.age += dt;\n    for (let ii = 0; ii < this.emitters.length; ++ii) {\n      this.tickEmitter(dt, this.emitters[ii]);\n    }\n\n    return this.age >= this.system_lifespan; // kill if past lifespan\n  }\n\n  shift(delta) {\n    if (this.def.no_shift) {\n      return;\n    }\n    this.pos[0] += delta[0];\n    this.pos[1] += delta[1];\n    this.pos[2] += delta[2];\n    for (let ii = 0; ii < this.part_sets.length; ++ii) {\n      let parts = this.part_sets[ii].parts;\n      for (let jj = 0; jj < parts.length; ++jj) {\n        let part = parts[jj];\n        part.pos[0] += delta[0];\n        part.pos[1] += delta[1];\n        part.pos[2] += delta[2];\n      }\n    }\n  }\n}\n\nclass ParticleManager {\n  constructor() {\n    this.systems = [];\n  }\n\n  createSystem(def, pos) {\n    let system = new ParticleSystem(this, def, pos);\n    this.systems.push(system);\n    return system;\n  }\n\n  tick(dt) {\n    for (let ii = this.systems.length - 1; ii >= 0; --ii) {\n      if (this.systems[ii].tick(dt)) {\n        this.systems[ii] = this.systems[this.systems.length - 1];\n        this.systems.pop();\n      }\n    }\n  }\n\n  killAll() {\n    this.systems = [];\n  }\n\n  shift(delta) {\n    for (let ii = 0; ii < this.systems.length; ++ii) {\n      this.systems[ii].shift(delta);\n    }\n  }\n}\n\nexport function create() {\n  return new ParticleManager();\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport let perf_mem_counters = {};\n\n/* eslint-disable import/order */\nconst engine = require('./engine.js');\nlet metrics = [];\nexport function addMetric(metric, first) {\n  if (metric.show_graph) {\n    metric.num_lines = metric.colors.length;\n    metric.history_size = metric.data.history.length / metric.num_lines;\n  }\n  metric.num_labels = Object.keys(metric.labels).length;\n  if (metric.interactable === undefined) {\n    metric.interactable = engine.DEBUG && (metric.num_labels > 1 && !metric.show_all || metric.show_graph);\n  }\n  if (first) {\n    metrics.splice(0, 0, metric);\n  } else {\n    metrics.push(metric);\n  }\n}\n\n\nconst camera2d = require('./camera2d.js');\nconst { cmd_parse } = require('./cmds.js');\nconst glov_font = require('./font.js');\nconst input = require('./input.js');\nconst { max } = Math;\nconst { netClient, netClientId, netDisconnected } = require('./net.js');\nconst { perfCounterHistory } = require('glov/common/perfcounters.js');\nconst { profilerUI } = require('./profiler_ui.js');\nconst settings = require('./settings.js');\nconst { spriteChainedStart, spriteChainedStop } = require('./sprites.js');\nconst ui = require('./ui.js');\nconst { uiTextHeight } = require('./ui.js');\nconst { vec4, v3copy } = require('glov/common/vmath.js');\nrequire('./perf_net.js');\n\nconst METRIC_PAD = 2;\n\nlet bg_default = vec4(0,0,0,0.5);\nlet bg_mouse_over = vec4(0,0,0,0.75);\nlet bg_fade = vec4();\n\n// referenced in engine.js\nsettings.register({\n  show_metrics: {\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n  show_fps: {\n    label: 'Show FPS',\n    default_value: engine.DEBUG ? 1 : 0,\n    type: cmd_parse.TYPE_INT,\n    enum_lookup: {\n      OFF: 0,\n      ON: 1,\n      MSPF: 2,\n      CPU: 3,\n      GC: 4,\n    }\n  },\n  fps_graph: {\n    label: 'FPS Graph',\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n  fps_window: {\n    label: 'FPS Time Window (seconds)',\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0.001, 120],\n  },\n  show_perf_counters: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n  show_perf_memory: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    access_run: ['sysadmin'], // only fetches from server, currently\n  },\n  perf_provider: {\n    default_value: 'client',\n    type: cmd_parse.TYPE_STRING,\n    usage: 'Set the perf provider for /show_perf_counters and /show_perf_memory\\n' +\n      '  CLIENT : show client values\\n' +\n      '  AUTO : automatically determine appropriate server\\n' +\n      '  user.1234 : use server hosting a particular worker',\n    access_run: ['sysadmin'],\n  },\n});\n\ncmd_parse.register({\n  cmd: 'fps',\n  help: 'Toggles FPS display',\n  func: function (str, resp_func) {\n    if (settings.show_fps && settings.show_metrics || str === '0') {\n      settings.set('show_fps', 0);\n    } else {\n      settings.set('show_fps', 1);\n      settings.set('show_metrics', 1);\n    }\n    resp_func();\n  },\n});\n\nlet fps_style = glov_font.style({\n  outline_width: 2, outline_color: 0x00000080,\n  color: 0xFFFFFFff,\n});\n\nfunction friendlyUnit(table, value) {\n  let unit = 0;\n  while (unit < table.length - 1 && value >= table[unit+1][0]) {\n    unit++;\n  }\n  if (unit === 0) {\n    return `${value} ${table[unit][1]}`;\n  }\n  return `${(value/table[unit][0]).toFixed(2)} ${table[unit][1]}`;\n}\nconst UNIT_BYTES = [\n  [1, 'bytes'],\n  [1024, 'KB'],\n  [1024*1024, 'MB'],\n  [1024*1024*1024, 'GB'],\n];\nconst UNIT_COUNT = [\n  [1, ''],\n  [1000, 'k'],\n  [1000*1000, 'm'],\n  [1000*1000*1000, 'g'],\n];\nexport function friendlyBytes(bytes) {\n  return friendlyUnit(UNIT_BYTES, bytes);\n}\nfunction friendlyCount(count) {\n  return friendlyUnit(UNIT_COUNT, count);\n}\n\nfunction showMetric(y, metric) {\n  let font = engine.font;\n  let pad = METRIC_PAD;\n  let font_height = uiTextHeight();\n  let line_height = settings.render_scale_all < 1 ? font_height / settings.render_scale_all : font_height;\n  let METRIC_VALUE_WIDTH = line_height * (metric.width || 2.5);\n  let x = camera2d.x1Real() - METRIC_VALUE_WIDTH - pad;\n  let y0 = y;\n  y += pad;\n  let max_label_w = 0;\n  let max_labels = metric.show_all ? Infinity : settings[metric.show_stat];\n  let drew_any = false;\n  let alpha = 1;\n  for (let label in metric.labels) {\n    let value = metric.labels[label]();\n    if (value) {\n      let style = fps_style;\n      if (value.alpha) {\n        alpha = value.alpha;\n        value = value.value;\n        style = glov_font.styleAlpha(fps_style, alpha);\n      }\n      let label_w = font.drawSizedAligned(style, x, y, Z.FPSMETER + 3, line_height,\n        glov_font.ALIGN.HRIGHT, 0, 0, label);\n      max_label_w = max(max_label_w, label_w);\n      font.drawSizedAligned(style, x, y, Z.FPSMETER + 3, line_height,\n        glov_font.ALIGN.HFIT, METRIC_VALUE_WIDTH, 0, value);\n      y += line_height;\n      drew_any = true;\n    }\n    if (!--max_labels) {\n      break;\n    }\n  }\n  let w = METRIC_VALUE_WIDTH + max_label_w + METRIC_PAD;\n  x -= max_label_w + METRIC_PAD;\n\n  if (!drew_any) {\n    return y - pad;\n  }\n\n  y += pad;\n  let bg = bg_default;\n  let pos_param = {\n    x: x - pad,\n    y: y0,\n    w: w + pad * 2,\n    h: y - y0,\n  };\n  if (metric.interactable) {\n    if (input.mouseUpEdge(pos_param)) {\n      if (metric.num_labels > 1 && settings[metric.show_stat] <= 1) {\n        settings.set(metric.show_stat, metric.num_labels);\n      } else if (metric.show_graph && !settings[metric.show_graph]) {\n        settings.set(metric.show_graph, 1);\n      } else {\n        if (metric.show_graph) {\n          settings.set(metric.show_graph, 0);\n        }\n        settings.set(metric.show_stat, 1);\n      }\n    }\n    if (input.mouseOver(pos_param)) {\n      bg = bg_mouse_over;\n    }\n  }\n  if (alpha !== 1) {\n    bg_fade[3] = bg[3] * alpha;\n    bg = v3copy(bg_fade, bg);\n  }\n  ui.drawRect(pos_param.x, pos_param.y, pos_param.x + pos_param.w, y, Z.FPSMETER+2, bg);\n  return y;\n}\n\nfunction showMetricGraph(y, metric) {\n  const small = engine.game_height < 300;\n  const LINE_WIDTH = small ? 1 : 3;\n  const LINE_PAD = small ? 0 : 1;\n  const LINE_HEIGHT = small ? 64 : 128;\n  const NUM_LINES = metric.history_size - 1;\n  let w = (LINE_WIDTH + LINE_PAD) * NUM_LINES;\n  let x = camera2d.x1Real() - w;\n  let h = LINE_HEIGHT + LINE_PAD * 2;\n  let z = Z.FPSMETER;\n  spriteChainedStart();\n  ui.drawRect(x, y - h, x + w, y, z++, bg_default);\n  x += LINE_PAD;\n  y -= LINE_PAD;\n  let history_index = metric.data.index;\n  let line_scale = LINE_HEIGHT / metric.line_scale_top;\n  for (let ii = 0; ii < NUM_LINES; ii++) {\n    let line_index = ((ii + history_index + 1) % metric.history_size) * metric.num_lines;\n    let data = metric.data.history;\n    let bar_max = 0;\n    for (let jj = 0; jj < metric.num_lines; jj++) {\n      let line_jj = data[line_index + jj];\n      let bar_min;\n      if (metric.bars_stack) {\n        bar_min = bar_max;\n        bar_max += line_jj;\n      } else {\n        // bars overlap, figure out how big this bar should be relative to next smallest\n        let lesser = 0;\n        for (let kk = 0; kk < metric.num_lines; kk++) {\n          if (kk === jj) {\n            continue;\n          }\n          let line_kk = data[line_index + kk];\n          if ((line_kk < line_jj || line_kk === line_jj && kk < jj) && line_kk > lesser) {\n            lesser = line_kk;\n          }\n        }\n        bar_min = lesser;\n        bar_max = line_jj;\n      }\n      let color = metric.colors[jj];\n      ui.drawRect(x, y - bar_max * line_scale, x + LINE_WIDTH, y - bar_min * line_scale, z, color);\n    }\n    x += LINE_WIDTH + LINE_PAD;\n  }\n  z += NUM_LINES;\n  y -= LINE_HEIGHT + LINE_PAD;\n  spriteChainedStop();\n  return y;\n}\n\nfunction perfDefaultAutoChannel() {\n  let client_id = netClientId();\n  if (client_id) {\n    return `client.${client_id}`;\n  }\n  return null;\n}\nlet auto_channel_cb = perfDefaultAutoChannel;\nexport function perfSetAutoChannel(cb) {\n  auto_channel_cb = cb;\n}\nconst PERF_NET_CACHE_TIME = 10000;\nconst PERF_NET_CACHE_TIME_MEM = 2500;\nlet perf_provider_data = {\n  last_update: -Infinity,\n  data: null,\n};\nfunction updatePerfProvider() {\n  let cache_time = PERF_NET_CACHE_TIME;\n  let fields = {\n  };\n  if (settings.show_perf_counters) {\n    fields.counters = 1;\n  }\n  if (settings.show_perf_memory) {\n    fields.memory = 1;\n    cache_time = PERF_NET_CACHE_TIME_MEM;\n  }\n  let provider = settings.perf_provider.toLowerCase();\n  if (provider === 'client') {\n    let ret = {\n      source: 'client',\n    };\n    if (fields.counters) {\n      ret.counters = perfCounterHistory();\n    }\n    if (fields.memory) {\n      ret.memory = perf_mem_counters;\n    }\n    return ret;\n  }\n  // Fetch from server\n  if (perf_provider_data.in_flight || netDisconnected()) {\n    return perf_provider_data.data;\n  }\n  let now = engine.frame_timestamp;\n  if (now - perf_provider_data.last_update < cache_time) {\n    return perf_provider_data.data;\n  }\n  let channel_id;\n  if (provider === 'auto') {\n    channel_id = auto_channel_cb();\n  } else if (provider.match(/^[^.]+\\.[^.]+$/)) { // seemingly valid channel ID\n    channel_id = provider;\n  }\n  if (channel_id) {\n    perf_provider_data.in_flight = true;\n    netClient().send('perf_fetch', { channel_id, fields }, null, function (err, data) {\n      if (err) {\n        console.error(`Error getting perf data: ${Object.keys(fields)}: ${err}`);\n      }\n      perf_provider_data.data = data;\n      perf_provider_data.last_update = engine.frame_timestamp;\n      perf_provider_data.in_flight = false;\n    });\n  }\n  return perf_provider_data.data;\n}\n\nfunction perfMemObjToLines(out, obj, prefix) {\n  for (let key in obj) {\n    let v = obj[key];\n    if (v && typeof v === 'object') {\n      perfMemObjToLines(out, v, `${prefix}${key}.`);\n    } else {\n      if (typeof v === 'number') {\n        if (key.endsWith('bytes') || prefix.includes('data_size')) {\n          v = friendlyBytes(v);\n        } else {\n          v = friendlyCount(v);\n        }\n      }\n      out.push(`${prefix}${key}: ${v}`);\n    }\n  }\n}\n\nlet graph_override = null;\n// `override` is like a `metric` passed to addMetric.  Contains:\n// history_size\n// num_lines\n// data: { history[history_size * num_lines], index }\n// line_scale_top\n// bars_stack : boolean\n// colors : vec4[]\nexport function perfGraphOverride(override) {\n  graph_override = override;\n}\n\nexport function draw() {\n  camera2d.push();\n  profilerUI();\n  camera2d.setAspectFixed(engine.game_width, engine.game_height);\n  if (settings.show_metrics) {\n    let y = camera2d.y0Real();\n    let y_graph = camera2d.y1Real();\n    if (graph_override) {\n      y_graph = showMetricGraph(y_graph, graph_override);\n      y_graph -= METRIC_PAD;\n    }\n    for (let ii = 0; ii < metrics.length; ++ii) {\n      let metric = metrics[ii];\n      if (settings[metric.show_stat]) {\n        y = showMetric(y, metric);\n        y += METRIC_PAD;\n      }\n      if (!graph_override && settings[metric.show_graph]) {\n        y_graph = showMetricGraph(y_graph, metric);\n        y_graph -= METRIC_PAD;\n      }\n    }\n  }\n  if (settings.show_perf_counters || settings.show_perf_memory) {\n    let font = engine.font;\n    let perf_data = updatePerfProvider() || {};\n    let y = camera2d.y0Real();\n    let y0 = y;\n    let font_height = uiTextHeight();\n    let line_height = settings.render_scale_all < 1 ? font_height / settings.render_scale_all : font_height;\n    let column_width = line_height * 6;\n    let x0 = camera2d.x0Real();\n    let x = x0 + column_width * 2;\n    let maxx = x + column_width;\n    let z = Z.FPSMETER + 1;\n    let header_x = x0 + column_width;\n    if (perf_data.source) {\n      font.drawSized(fps_style, header_x, y, z, line_height, `Source: ${perf_data.source}`);\n      y += line_height;\n    }\n    if (perf_data.log) {\n      let w = camera2d.wReal() *0.67;\n      maxx = max(maxx, header_x + w);\n      y += font.drawSizedWrapped(fps_style, header_x, y, z, w, 20, line_height, perf_data.log) + 4;\n    }\n\n    if (perf_data.memory && settings.show_perf_memory) {\n      let lines = [];\n      perfMemObjToLines(lines, perf_data.memory, '');\n      for (let ii = 0; ii < lines.length; ++ii) {\n        font.drawSized(fps_style, x, y, z, line_height, lines[ii]);\n        y += line_height;\n      }\n    }\n\n    if (perf_data.counters && settings.show_perf_counters) {\n      let hist = perf_data.counters || [];\n      let by_key = {};\n      for (let ii = 0; ii < hist.length; ++ii) {\n        let set = hist[ii];\n        for (let key in set) {\n          by_key[key] = by_key[key] || [];\n          by_key[key][ii] = set[key];\n        }\n      }\n      let keys = Object.keys(by_key);\n      keys.sort();\n      for (let ii = 0; ii < keys.length; ++ii) {\n        let key = keys[ii];\n        let data = by_key[key];\n        font.drawSizedAligned(fps_style, x - column_width * 2, y, z, line_height,\n          glov_font.ALIGN.HRIGHT|glov_font.ALIGN.HFIT, column_width * 2, 0, `${key}: `);\n        for (let jj = 0; jj < data.length; ++jj) {\n          if (data[jj]) {\n            font.drawSizedAligned(fps_style, x + column_width * jj, y, z, line_height,\n              glov_font.ALIGN.HFIT, column_width, 0, `${data[jj]} `);\n          }\n        }\n        maxx = max(maxx, x + column_width * data.length);\n        y += line_height;\n      }\n    }\n    ui.drawRect(x0, y0, maxx, y, z - 0.1, bg_default);\n  }\n  camera2d.pop();\n  graph_override = null;\n}\n","import { wsstats, wsstats_out } from 'glov/common/wscommon';\nimport { cmd_parse } from './cmds';\nimport * as perf from './perf';\nimport { settingsRegister } from './settings';\n\nconst { min } = Math;\n\ntype StatsType = typeof wsstats;\ntype StatsTracking = StatsType & {\n  dm: number;\n  db: number;\n  time: number;\n};\n\nsettingsRegister({\n  show_net: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    enum_lookup: {\n      OFF: 0,\n      ON: 2,\n    },\n  },\n});\nlet last_wsstats: StatsTracking = { msgs: 0, bytes: 0, time: Date.now(), dm: 0, db: 0 };\nlet last_wsstats_out: StatsTracking = { msgs: 0, bytes: 0, time: Date.now(), dm: 0, db: 0 };\nfunction bandwidth(stats: StatsType, last: StatsTracking): string {\n  let now = Date.now();\n  if (now - last.time > 1000) {\n    last.dm = stats.msgs - last.msgs;\n    last.db = stats.bytes - last.bytes;\n    last.msgs = stats.msgs;\n    last.bytes = stats.bytes;\n    if (now - last.time > 2000) { // stall\n      last.time = now;\n    } else {\n      last.time += 1000;\n    }\n  }\n  return `${(last.db/1024).toFixed(2)} kb (${last.dm})`;\n}\nperf.addMetric({\n  name: 'net',\n  show_stat: 'show_net',\n  width: 5,\n  labels: {\n    'down: ': bandwidth.bind(null, wsstats, last_wsstats),\n    'up: ': bandwidth.bind(null, wsstats_out, last_wsstats_out),\n  },\n});\n\nlet ping_providers = 0;\nexport type PingData = {\n  ping: number;\n  fade: number;\n};\nexport function registerPingProvider(fn: () => PingData | null): void {\n  ++ping_providers;\n  let suffix = ping_providers === 1 ? '' : `${ping_providers}`;\n\n  settingsRegister({\n    [`show_ping${suffix}`]: {\n      default_value: 0,\n      type: cmd_parse.TYPE_INT,\n      range: [0,1],\n    },\n  });\n  perf.addMetric({\n    name: `ping${suffix}`,\n    show_stat: `show_ping${suffix}`,\n    labels: {\n      'ping: ': () => {\n        let pt = fn();\n        if (!pt || pt.fade < 0.001) {\n          return '';\n        }\n        return { value: `${pt.ping.toFixed(1)}`, alpha: min(1, pt.fade * 3) };\n      },\n    },\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nconst { eatPossiblePromise } = require('glov/common/util.js');\n\nlet user_want_locked = false;\nlet elem;\nlet on_ptr_lock;\n\nexport function isLocked() {\n  return user_want_locked; // Either it's locked, or there's an async attempt to lock it outstanding\n}\n\nfunction pointerLog(msg) {\n  console.log(`PointerLock: ${msg}`); // TODO: Disable this after things settle\n}\n\nexport function exit() {\n  pointerLog('Lock exit requested');\n  user_want_locked = false;\n  eatPossiblePromise(document.exitPointerLock());\n}\n\nexport function enter(when) {\n  user_want_locked = true;\n  on_ptr_lock();\n  pointerLog(`Trying pointer lock in response to ${when}`);\n  eatPossiblePromise(elem.requestPointerLock());\n}\n\nfunction onPointerLockChange() {\n  if (document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement) {\n    pointerLog('Lock successful');\n    if (!user_want_locked) {\n      pointerLog('User canceled lock');\n      eatPossiblePromise(document.exitPointerLock());\n    }\n  } else {\n    if (user_want_locked) {\n      pointerLog('Lock lost');\n      user_want_locked = false;\n    }\n  }\n}\n\nfunction onPointerLockError(e) {\n  pointerLog('Error');\n  user_want_locked = false;\n}\n\nexport function startup(_elem, _on_ptr_lock) {\n  elem = _elem;\n  on_ptr_lock = _on_ptr_lock;\n\n  elem.requestPointerLock = elem.requestPointerLock || elem.mozRequestPointerLock ||\n    elem.webkitRequestPointerLock || function () { /* nop */ };\n  document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock ||\n    document.webkitExitPointerLock || function () { /* nop */ };\n\n  document.addEventListener('pointerlockchange', onPointerLockChange, false);\n  document.addEventListener('mozpointerlockchange', onPointerLockChange, false);\n  document.addEventListener('webkitpointerlockchange', onPointerLockChange, false);\n\n  document.addEventListener('pointerlockerror', onPointerLockError, false);\n  document.addEventListener('mozpointerlockerror', onPointerLockError, false);\n  document.addEventListener('webkitpointerlockerror', onPointerLockError, false);\n}\n","/* eslint no-extend-native:off */\n\n// TypedArray.slice, fill, join, sort, etc - not supported on IE, some older Safari, older Android, Chrome 44\nlet typedarrays = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array];\n\nif (!Uint8Array.prototype.slice) {\n  typedarrays.forEach(function (ArrayType) {\n    Object.defineProperty(ArrayType.prototype, 'slice', {\n      value: function (begin, end) {\n        if (end === undefined) {\n          end = this.length;\n        }\n        if (end < 0) {\n          end = this.length - end;\n        }\n        begin = begin || 0;\n        if (begin >= this.length) {\n          begin = this.length - 1;\n        }\n        if (end > this.length) {\n          end = this.length;\n        }\n        if (end < begin) {\n          end = begin;\n        }\n        let len = end - begin;\n        let ret = new ArrayType(len);\n        for (let ii = 0; ii < len; ++ii) {\n          ret[ii] = this[begin + ii];\n        }\n        return ret;\n      }\n    });\n  });\n}\n\nfunction cmpDefault(a, b) {\n  return a - b;\n}\nlet replacements = {\n  join: function (delim) {\n    return Array.prototype.join.call(this, delim);\n  },\n  fill: function (value, begin, end) {\n    if (end === undefined) {\n      end = this.length;\n    }\n    for (let ii = begin || 0; ii < end; ++ii) {\n      this[ii] = value;\n    }\n    return this;\n  },\n  sort: function (cmp) {\n    Array.prototype.sort.call(this, cmp || cmpDefault);\n  },\n};\n\nfor (let key in replacements) {\n  if (!Uint8Array.prototype[key]) {\n    typedarrays.forEach(function (ArrayType) {\n      Object.defineProperty(ArrayType.prototype, key, {\n        value: replacements[key],\n      });\n    });\n  }\n}\n\nif (!String.prototype.endsWith) {\n  Object.defineProperty(String.prototype, 'endsWith', {\n    value: function (test) {\n      return this.slice(-test.length) === test;\n    },\n  });\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value: function (test) {\n      return this.slice(0, test.length) === test;\n    },\n  });\n}\nif (!String.prototype.includes) {\n  Object.defineProperty(String.prototype, 'includes', {\n    value: function (search, start) {\n      return this.indexOf(search, start) !== -1;\n    },\n    configurable: true, // FRVR SDK polyfill overrides this :(\n  });\n}\n\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    value: function (search, start) {\n      start = start === undefined ? 0 : start < 0 ? this.length + start : start;\n      for (let ii = start; ii < this.length; ++ii) {\n        if (this[ii] === search) {\n          return true;\n        }\n      }\n      return false;\n    },\n    // Doesn't handle `Array(1).includes()==true` expected in frvr-sdk.ie.min.js\n    // value: function (search, start) {\n    //   return this.indexOf(search, start) !== -1;\n    // },\n  });\n}\n\nif (!Object.values) {\n  Object.values = function values(obj) {\n    return Object.keys(obj).map((k) => obj[k]);\n  };\n}\nif (!Object.entries) {\n  Object.entries = function entries(obj) {\n    let keys = Object.keys(obj);\n    let ret = new Array(keys.length);\n    for (let ii = keys.length - 1; ii >= 0; --ii) {\n      ret[ii] = [keys[ii], obj[keys[ii]]];\n    }\n    return ret;\n  };\n}\n// if (!Object.fromEntries) { // For FRVR SDK\n//   Object.fromEntries = function (iterable) {\n//     let keys = Object.keys(iterable);\n//     let obj = {};\n//     for (let ii = 0; ii < keys.length; ++ii) {\n//       let pair = iterable[keys[ii]];\n//       obj[pair[0]] = pair[1];\n//     }\n//     return obj;\n//   };\n//   Object.fromEntries.is_polyfill = true;\n// }\n\nif (!Object.assign) {\n  Object.assign = function assign(target, source1) {\n    for (let argindex = 1; argindex < arguments.length; ++argindex) {\n      // eslint-disable-next-line prefer-rest-params\n      let source = arguments[argindex];\n      for (let key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  };\n}\n\nif (!Math.sign) {\n  Math.sign = function sign(a) {\n    return a < 0 ? -1 : a > 0 ? 1 : 0;\n  };\n}\n\nif (typeof window !== 'undefined') {\n  if (!window.Intl) {\n    window.Intl = {};\n  }\n  if (!window.Intl.NumberFormat) {\n    window.Intl.NumberFormat = function () {\n      // Constructor\n    };\n    window.Intl.NumberFormat.prototype.format = function (v) {\n      return String(v);\n    };\n  }\n  if (!window.Intl.DateTimeFormat) {\n    window.Intl.DateTimeFormat = function () {\n      // Constructor\n    };\n    window.Intl.DateTimeFormat.prototype.format = function (v) {\n      return String(v);\n    };\n  }\n}\n","// Portions Copyright 2008-2022 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Initially derived from libGlov:utilPerf.h/GlovPerf.cpp\n// For good memory profiling, Chrome must be launched with --enable-precise-memory-info\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\n/* globals performance*/\n\nexport const HAS_MEMSIZE = Boolean(window.performance && performance.memory && performance.memory.usedJSHeapSize);\nexport const HIST_SIZE = 128;\nexport const HIST_COMPONENTS = 3; // count, time, dmem\nexport const HIST_TOT = HIST_SIZE * HIST_COMPONENTS;\n// Default `mem_depth` very low, as every profile section with\n//    memory adds about 12µs and 56bytes, compared to 1µs and 24bytes without\nexport const MEM_DEPTH_DEFAULT = 2;\n\nconst assert = require('assert');\nconst engine = require('./engine.js');\nconst { floor, max, min, round } = Math;\n\n// For profiler_ui.js\nconst { localStorageGetJSON, localStorageSetJSON } = require('./local_storage.js');\nlet profiler_open_keys = localStorageGetJSON('profiler_open_keys', {});\n\nlet last_id = 0;\nfunction ProfilerEntry(parent, name) {\n  this.parent = parent;\n  this.depth = parent ? parent.depth + 1 : 0;\n  this.next = null;\n  this.child = null;\n  this.name = name;\n  this.count = 0;\n  this.time = 0;\n  this.dmem = 0;\n  this.start_time = 0;\n  this.start_mem = 0;\n  this.history = new Float32Array(HIST_TOT);\n  // For profiler_ui.js\n  this.id = ++last_id;\n  this.show_children = !(parent && parent.parent) || profiler_open_keys[this.getKey()] || false;\n  this.color_override = null;\n}\nProfilerEntry.prototype.isEmpty = function () {\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    if (this.history[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nProfilerEntry.prototype.toJSON = function () {\n  let { next, child } = this;\n  while (next && next.isEmpty()) {\n    next = next.next;\n  }\n  while (child && child.isEmpty()) {\n    child = child.next;\n  }\n  let ret = {\n    i: this.name,\n    h: Array.prototype.slice.call(this.history), // Float32Array -> Array\n  };\n  if (next) {\n    ret.n = next;\n  }\n  if (child) {\n    ret.c = child;\n  }\n  return ret;\n};\nfunction profilerEntryFromJSON(parent, obj) {\n  let ret = new ProfilerEntry(parent, obj.i);\n  assert.equal(obj.h.length, ret.history.length);\n  for (let ii = 0; ii < obj.h.length; ++ii) {\n    ret.history[ii] = obj.h[ii];\n  }\n  if (obj.n) {\n    ret.next = profilerEntryFromJSON(parent, obj.n);\n  }\n  if (obj.c) {\n    ret.child = profilerEntryFromJSON(ret, obj.c);\n  }\n  return ret;\n}\n\n// For profiler_ui.js\nProfilerEntry.prototype.getKey = function () {\n  if (!this.parent) {\n    return '';\n  } else {\n    return `${this.parent.getKey()}.${this.name}`;\n  }\n};\n// For profiler_ui.js\nProfilerEntry.prototype.toggleShowChildren = function () {\n  this.show_children = !this.show_children;\n  if (this.show_children) {\n    profiler_open_keys[this.getKey()] = 1;\n  } else {\n    delete profiler_open_keys[this.getKey()];\n  }\n  localStorageSetJSON('profiler_open_keys', profiler_open_keys);\n};\n\nlet root = new ProfilerEntry(null, 'root');\n// Add static node to the tree that we will reference later\n// Note: profiler_ui.js assumes this is always `root.child`\nlet node_out_of_tick = new ProfilerEntry(root, 'GPU/idle');\nroot.child = node_out_of_tick;\n// Immediately add `tick` node, so it's always second in the list\nlet node_tick = new ProfilerEntry(root, 'tick');\nnode_out_of_tick.next = node_tick;\n\nlet current = root;\nlet last_child = null;\nlet history_index = 0; // index to the last written frame of data\nlet paused = false;\nlet mem_depth = MEM_DEPTH_DEFAULT;\n\nfunction memSizeChrome() {\n  return performance.memory.usedJSHeapSize;\n}\nfunction memSizeNop() {\n  return 0;\n}\nlet memSize = HAS_MEMSIZE ? memSizeChrome : memSizeNop;\nlet mem_is_high_res = 10;\n\nexport function profilerChildCallCount(node, with_mem, do_average) {\n  let walk = node.child;\n  let count = 0;\n  while (walk) {\n    if (do_average) {\n      let total = 0;\n      let sum_count = 0;\n      for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n        if (!with_mem || walk.history[ii+2]) {\n          sum_count++;\n          total += walk.history[ii]; // count\n        }\n      }\n      if (sum_count) {\n        count += round(total / sum_count);\n      }\n    } else {\n      if (!with_mem || walk.history[history_index + 2]) {\n        count += walk.history[history_index];\n      }\n    }\n    count += profilerChildCallCount(walk, with_mem, do_average);\n    walk = walk.next;\n  }\n  return count;\n}\nconst WARN_CALLS_COUNT = 1000;\nexport function profilerWarning() {\n  let total_calls = profilerChildCallCount(root, false, true);\n  if (total_calls > WARN_CALLS_COUNT) {\n    return `Warning: Too many per-frame profilerStart() calls (${total_calls} > ${WARN_CALLS_COUNT})`;\n  } else if (!HAS_MEMSIZE) {\n    return 'To access memory profiling, run in Chrome';\n  } else if (mem_depth > 1 && mem_is_high_res < 10) {\n    return 'For precise memory profiling, launch Chrome with --enable-precise-memory-info';\n  }\n  return '';\n}\n\nexport function profilerNodeRoot() {\n  return root;\n}\nexport function profilerNodeTick() {\n  return node_tick;\n}\nexport function profilerHistoryIndex() {\n  return history_index;\n}\n\nlet garbage_accum = [0, 0];\nlet garbage_count = [0, 0, 0];\nexport function profilerFrameStart() {\n  root.count = 1;\n  let now = performance.now();\n  root.time = now - root.start_time;\n  root.start_time = now;\n  if (mem_depth > 0) {\n    let memnow = memSize();\n    root.dmem = memnow - root.start_mem;\n    root.start_mem = memnow;\n  }\n  node_out_of_tick.count = 1;\n  // Place the unaccounted portion of the root's time in `node_out_of_tick`\n  node_out_of_tick.time = root.time;\n  node_out_of_tick.dmem = root.dmem;\n  for (let walk = root.child; walk; walk = walk.next) {\n    if (walk === node_out_of_tick) {\n      continue;\n    }\n    node_out_of_tick.time -= walk.time;\n    node_out_of_tick.dmem -= walk.dmem;\n    if (mem_depth > 1) {\n      if (walk.count) {\n        // Should basically never see a `0` for dmem, if we do, probably low-precision memory tracking\n        if (walk.dmem) {\n          mem_is_high_res++;\n        } else {\n          mem_is_high_res-=5;\n        }\n      }\n    }\n  }\n  let pos = 0;\n  let neg = 0;\n  for (let walk = root.child; walk; walk = walk.next) {\n    if (walk.dmem < 0) {\n      neg -= walk.dmem;\n    } else {\n      pos += walk.dmem;\n    }\n  }\n  if (pos > neg) {\n    garbage_accum[0] += pos;\n    garbage_count[0]++;\n  } else {\n    garbage_accum[1] += neg;\n    garbage_count[1]++;\n  }\n  if (current !== root) {\n    console.error('Profiler starting new frame but some section was not stopped', current && current.name);\n    current = root;\n  }\n  if (!paused) {\n    history_index = (history_index + HIST_COMPONENTS) % HIST_TOT;\n  }\n  let walk = root;\n  while (walk) {\n    let recursing_down = true;\n    if (!paused) {\n      walk.history[history_index] = walk.count;\n      walk.history[history_index+1] = walk.time;\n      walk.history[history_index+2] = walk.dmem;\n    }\n    walk.count = 0;\n    walk.time = 0;\n    walk.dmem = 0;\n    do {\n      if (recursing_down && walk.child) {\n        walk = walk.child;\n      } else if (walk.next) {\n        walk = walk.next;\n      } else {\n        walk = walk.parent;\n        recursing_down = false;\n        if (walk) {\n          continue;\n        }\n      }\n      break;\n    } while (true);\n  }\n}\n\nfunction profilerStart(name) {\n  // Find us in current's children\n  let instance;\n  if (last_child && last_child.name === name) {\n    instance = last_child;\n  } else if (last_child && last_child.next && last_child.next.name === name) {\n    instance = last_child.next;\n  } else {\n    let last = null;\n    for (instance = current.child; instance; last = instance, instance = instance.next) {\n      if (instance.name === name) {\n        break;\n      }\n    }\n    if (!instance) {\n      if (!last) {\n        // No children yet\n        assert(!current.child);\n        instance = new ProfilerEntry(current, name);\n        current.child = instance;\n      } else if (last_child) {\n        instance = new ProfilerEntry(current, name);\n        instance.next = last_child.next;\n        last_child.next = instance;\n      } else {\n        instance = new ProfilerEntry(current, name);\n        last.next = instance;\n      }\n    }\n  }\n  assert(instance.parent === current);\n  // instance is set to us now!\n\n  current = instance;\n  instance.start_time = performance.now();\n  if (instance.depth < mem_depth) {\n    instance.start_mem = memSize();\n  }\n  last_child = null;\n}\n\nfunction profilerStop(old_name) {\n  if (old_name) {\n    assert.equal(old_name, current.name);\n  }\n  current.time += performance.now() - current.start_time;\n  if (current.depth < mem_depth) {\n    current.dmem += memSize() - current.start_mem;\n  }\n  current.count++;\n  last_child = current;\n  current = current.parent;\n}\n\nfunction profilerStopStart(name) {\n  // TODO: only sample timestamp once\n  profilerStop(null);\n  profilerStart(name);\n}\n\nif (window.performance && window.performance.now) {\n  window.profilerStart = profilerStart;\n  window.profilerStop = profilerStop;\n  window.profilerStopStart = profilerStopStart;\n} // else set to `nop` in bootstrap.js\n\nexport function profilerPaused() {\n  return paused;\n}\nexport function profilerPause(new_value) {\n  paused = new_value;\n}\n\nexport function profilerMemDepthGet() {\n  return mem_depth;\n}\n\nexport function profilerMemDepthSet(value) {\n  mem_depth = value;\n}\n\nlet bloat_inner = { time: 0, mem: 0 };\nlet bloat_outer = { time: 0, mem: 0 };\nlet bloat = { inner: bloat_inner, outer: bloat_outer };\nconst MEASURE_KEY1 = 'profilerMeasureBloat';\nconst MEASURE_KEY2 = 'profilerMeasureBloat:child';\nconst MEASURE_HIST = 10;\nexport function profilerMeasureBloat() {\n  let mem_depth_saved = mem_depth;\n  if (mem_depth >= 2) {\n    mem_depth = Infinity;\n  }\n  profilerStart(MEASURE_KEY1);\n  profilerStart(MEASURE_KEY2);\n  profilerStopStart(MEASURE_KEY2);\n  profilerStopStart(MEASURE_KEY2);\n  profilerStopStart(MEASURE_KEY2);\n  profilerStop(MEASURE_KEY2);\n  profilerStop(MEASURE_KEY1);\n  mem_depth = mem_depth_saved;\n\n  let walk = null;\n  for (walk = current.child; walk.name !== MEASURE_KEY1; walk = walk.next) {\n    // just walk until we find it, should just be the first entry, though!\n  }\n  let child = walk.child;\n  assert.equal(child.name, MEASURE_KEY2);\n  bloat_inner.time = Infinity;\n  bloat_inner.mem = 0;\n  bloat_outer.time = Infinity;\n  bloat_outer.mem = 0;\n  let count_mem = 0;\n  let idx_start = ((history_index - HIST_COMPONENTS * (MEASURE_HIST - 1)) + HIST_TOT) % HIST_TOT;\n  for (let offs = 0; offs < MEASURE_HIST; offs++) {\n    let idx = (idx_start + offs * HIST_COMPONENTS) % HIST_TOT;\n    bloat_inner.time = min(bloat_inner.time, child.history[idx+1]);\n    bloat_outer.time = min(bloat_outer.time, walk.history[idx+1]);\n    if (child.history[idx+2] > 0 && walk.history[idx+2] > 0) {\n      bloat_inner.mem += child.history[idx+2];\n      bloat_outer.mem += walk.history[idx+2];\n      ++count_mem;\n    }\n  }\n  bloat_inner.time /= 4;\n  bloat_outer.time = max(0, bloat_outer.time - bloat_inner.time) / 4;\n  let avg_inner_mem = bloat_inner.mem / count_mem / 4;\n  bloat_outer.mem = count_mem ? max(0, floor((bloat_outer.mem / count_mem - avg_inner_mem) / 4)) : 0;\n  bloat_inner.mem = count_mem ? max(0, floor(avg_inner_mem)) : 0;\n  // Code above semi-accurately measures the bloat in small scales, but seems\n  //   to overestimate on the grand scale (possibly some measurements are being\n  //   optimized away?), so, using this default value for memory instead\n  //   as measured Chrome 103 as an average over ~800 profiler calls in a\n  //   real app.\n  // On second consideration, not doing this: memory profiling is most useful when\n  //   looking at the leaf nodes, and the measured values best match the leaf\n  //   node values.\n  // bloat_outer.mem = 56;\n  return bloat;\n}\n\nexport function profilerGarbageEstimate() {\n  let ret;\n  if (garbage_count[0] > garbage_count[1]) {\n    ret = garbage_accum[0] / garbage_count[0];\n  } else {\n    ret = garbage_accum[1] / garbage_count[1];\n  }\n  garbage_count[0] = garbage_count[1] = 0;\n  garbage_accum[0] = garbage_accum[1] = 0;\n  return ret;\n}\n\nexport function profilerWalkTree(use_root, cb) {\n  let depth = 0;\n  let walk = use_root;\n  while (walk) {\n    let recursing_down = true;\n    if (walk !== use_root) {\n      if (!cb(walk, depth)) {\n        recursing_down = false;\n      }\n    }\n    do {\n      if (recursing_down && walk.child) {\n        depth++;\n        walk = walk.child;\n      } else if (walk.next) {\n        walk = walk.next;\n      } else {\n        depth--;\n        walk = walk.parent;\n        recursing_down = false;\n        if (walk) {\n          continue;\n        }\n      }\n      break;\n    } while (true);\n  }\n}\n\nexport function profilerAvgTime(entry) {\n  let sum = 0;\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    if (entry.history[ii]) {\n      sum += entry.history[ii+1];\n    }\n  }\n  return sum / HIST_SIZE;\n}\n\nexport function profilerMaxMem(entry) {\n  let dmem_max = 0;\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    if (entry.history[ii]) {\n      dmem_max = max(dmem_max, entry.history[ii+2]);\n    }\n  }\n  return dmem_max;\n}\n\nexport function profilerAvgMem(entry) {\n  let dmem_avg = 0;\n  let dmem_count = 0;\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    if (entry.history[ii]) {\n      let dmem = entry.history[ii+2];\n      if (dmem >= 0) {\n        dmem_avg += dmem;\n        dmem_count++;\n      }\n    }\n  }\n  if (dmem_count) {\n    dmem_avg /= dmem_count;\n  }\n  return dmem_avg;\n}\n\nexport function profilerExport() {\n  let obj = {\n    history_index,\n    root,\n    mem_depth: HAS_MEMSIZE ? mem_depth : 0,\n    // Include some device info\n    device: {\n      ua: window.navigator.userAgent,\n      vendor: gl.getParameter(gl.VENDOR),\n      renderer: gl.getParameter(gl.RENDERER),\n      webgl: engine.webgl2 ? 2 : 1,\n      width: engine.width,\n      height: engine.height,\n    },\n  };\n  let debug_info = gl.getExtension('WEBGL_debug_renderer_info');\n  if (debug_info) {\n    obj.device.renderer_unmasked = gl.getParameter(debug_info.UNMASKED_RENDERER_WEBGL);\n    obj.device.vendor_unmasked = gl.getParameter(debug_info.UNMASKED_VENDOR_WEBGL);\n  }\n  let str = JSON.stringify(obj);\n  // Round all numbers (in text form) to 3 digits of precision, that's the most\n  //   we're getting from performance.now anyway, and JSON ends up with lots\n  //   of 0.12299999999999 strings otherwise.\n  str = str.replace(/\\d\\.\\d\\d\\d\\d+/g, (a) => {\n    a = a[5]>'4' ? a.slice(0,4) + (Number(a[4])+1) : a.slice(0,5);\n    while (a.slice(-1) === '0' || a.slice(-1) === '.') {\n      a = a.slice(0, -1);\n    }\n    return a;\n  });\n\n  return str;\n}\nexport function profilerImport(text) {\n  let obj;\n  try {\n    obj = JSON.parse(text);\n  } catch (e) {\n    // handled below\n  }\n  if (!obj) {\n    return null;\n  }\n\n  obj.root = profilerEntryFromJSON(null, obj.root);\n  return obj;\n}\n\n// For calling manually in the console for debugging\nexport function profilerDump() {\n  assert(current === root);\n  let lines = ['','','# PROFILER RESULTS'];\n\n  // Using \"% of frame\" and \"average\" equivalent options from profiler_ui\n  let total_frame_time = profilerAvgTime(root);\n\n  profilerWalkTree(root, function (walk, depth) {\n    let time_sum=0;\n    let count_sum=0;\n    let time_max=0;\n    let sum_count=0;\n    let dmem_max=0;\n    for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n      if (walk.history[ii]) {\n        sum_count++;\n        count_sum += walk.history[ii]; // count\n        time_sum += walk.history[ii+1]; // time\n        time_max = max(time_max, walk.history[ii+1]);\n        dmem_max = max(dmem_max, walk.history[ii+2]);\n      }\n    }\n    if (!count_sum) {\n      return true;\n    }\n    let percent = (time_sum/HIST_SIZE) / total_frame_time;\n\n    let ms = time_sum / sum_count;\n    let count = (count_sum / sum_count).toFixed(0);\n\n    let buf = '';\n    for (let ii = 1; ii < depth; ++ii) {\n      buf += '* ';\n    }\n    buf += `${(percent * 100).toFixed(0)}% ${walk.name} `;\n    buf += `${(ms*1000).toFixed(0)} (${count}) max:${(time_max*1000).toFixed(0)}`;\n    if (HAS_MEMSIZE) {\n      buf += ` dmem:${dmem_max}`;\n    }\n    lines.push(buf);\n    return true;\n  });\n  let warning = profilerWarning();\n  if (warning) {\n    lines.push('', warning);\n  }\n  lines.push('', '');\n  console.log(lines.join('\\n'));\n}\n\nwindow.profilerDump = profilerDump;\n","// Portions Copyright 2008-2022 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Initially derived from libGlov:utilPerf.h/GlovPerf.cpp\n// For good memory profiling, Chrome must be launched with --enable-precise-memory-info\n\n\n/* eslint-disable import/order */\nconst camera2d = require('./camera2d.js');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\nconst { style } = require('./font.js');\nconst input = require('./input.js');\nconst { floor, max, min, round } = Math;\nconst { netClient, netDisconnected } = require('./net.js');\nconst ui = require('./ui.js');\nconst { uiTextHeight } = require('./ui.js');\nconst { perfGraphOverride, friendlyBytes } = require('./perf.js');\nconst {\n  HIST_SIZE,\n  HIST_COMPONENTS,\n  HIST_TOT,\n  HAS_MEMSIZE,\n  MEM_DEPTH_DEFAULT,\n  profilerAvgTime,\n  profilerChildCallCount,\n  profilerImport,\n  profilerExport,\n  profilerHistoryIndex,\n  profilerAvgMem,\n  profilerMaxMem,\n  profilerMeasureBloat,\n  profilerMemDepthGet,\n  profilerMemDepthSet,\n  profilerNodeTick,\n  profilerNodeRoot,\n  profilerPause,\n  profilerPaused,\n  profilerWalkTree,\n  profilerWarning,\n} = require('./profiler.js');\nconst settings = require('./settings.js');\nconst { spriteChainedStart, spriteChainedStop } = require('./sprites.js');\nconst { lerp } = require('glov/common/util.js');\nconst { vec2, vec4 } = require('glov/common/vmath.js');\n\nZ.PROFILER = Z.PROFILER || 9950; // above Z.BUILD_ERRORS\nlet color_gpu = vec4(0.5, 0.5, 1, 1);\n\nlet loaded_profile = null;\nlet node_out_of_tick;\nlet root;\n\nfunction useNewRoot(new_root) {\n  root = new_root;\n  node_out_of_tick = root.child;\n  if (node_out_of_tick) {\n    node_out_of_tick.color_override = color_gpu;\n  }\n}\n\nfunction useSavedProfile(text) {\n  let obj = profilerImport(text);\n  if (!obj) {\n    ui.modalDialog({\n      title: 'Error loading profile',\n      text: text || 'No data',\n      buttons: {\n        Ok: null,\n      },\n    });\n    return;\n  }\n  useNewRoot(obj.root);\n  loaded_profile = obj;\n}\n\nfunction useLiveProfile() {\n  useNewRoot(profilerNodeRoot());\n  loaded_profile = null;\n}\n\nfunction profilerToggle(data, resp_func) {\n  useLiveProfile();\n  if (data === '1') {\n    settings.set('show_profiler', 1);\n  } else if (data === '0') {\n    settings.set('show_profiler', 0);\n    profilerMemDepthSet(MEM_DEPTH_DEFAULT);\n  } else {\n    if (settings.show_profiler) {\n      if (profilerPaused()) {\n        profilerPause(false);\n      } else {\n        settings.set('show_profiler', 0);\n        profilerMemDepthSet(MEM_DEPTH_DEFAULT);\n      }\n    } else {\n      settings.set('show_profiler', 1);\n      profilerPause(true);\n    }\n  }\n\n  if (resp_func) {\n    resp_func();\n  }\n}\nconst access_show = engine.DEBUG ? undefined : ['hidden'];\ncmd_parse.register({\n  cmd: 'profiler_toggle',\n  help: 'Show or toggle profiler visibility',\n  access_show,\n  func: profilerToggle,\n});\nconst PROFILER_RELATIVE_LABELS = ['% of user', '% of parent', '% of frame', '% of mem'];\nsettings.register({\n  show_profiler: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    access_show,\n  },\n  profiler_average: {\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0,2],\n    access_show: ['hidden'],\n  },\n  profiler_relative: {\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0, PROFILER_RELATIVE_LABELS.length-1],\n    access_show: ['hidden'],\n  },\n  profiler_interactable: {\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    access_show: ['hidden'],\n  },\n  profiler_graph: {\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    access_show: ['hidden'],\n  },\n  profiler_mem_depth: {\n    default_value: MEM_DEPTH_DEFAULT,\n    type: cmd_parse.TYPE_INT,\n    range: [0,100],\n    access_show: ['hidden'],\n  },\n  profiler_hide_bloat: {\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n    access_show,\n  },\n});\n\nlet font;\nlet y;\nconst style_time_spike = style(null, {\n  color: 0xFF7F7Fff,\n});\nconst style_number = style(null, {\n  color: 0xFFFFD0ff,\n});\nconst style_percent = style(null, {\n  color: 0xFFFFD0ff,\n});\nconst style_ms = style(null, {\n  color: 0xD0FFFFff,\n});\nconst style_mem = style(null, {\n  color: 0xD0FFD0ff,\n});\nconst style_header = style(null, {\n  color: 0xFFFFFFff,\n  outline_width: 0.8,\n  outline_color: 0xFFFFFFff,\n});\nconst style_name = style(null, {\n  color: 0xFFFFFFff,\n  outline_width: 1,\n  outline_color: 0x00000080,\n});\nconst FONT_SIZE = 22;\nconst LINE_HEIGHT = 24;\nconst LINE_YOFFS = (LINE_HEIGHT - FONT_SIZE)/2;\nlet font_number_scale;\nlet font_size_number;\nlet number_yoffs;\nlet bar_w;\n// Different Zs for better batching\nconst Z_BAR = Z.PROFILER;\nconst Z_GRAPH = Z.PROFILER+1;\nconst Z_TREE = Z.PROFILER+2;\nconst Z_NAMES = Z.PROFILER+3;\nconst Z_NUMBER = Z.PROFILER+4;\nconst Z_MS = Z.PROFILER+5;\nconst MS_W = 58;\nconst COUNT_W = 56;\nconst MSPAIR_W = MS_W + 4 + COUNT_W;\nconst MEM_W = 120;\nconst COL_HEADERS = ['Profiler', 'µs (count)', 'max', 'GC / Δmem'];\nconst COL_W = [400, MSPAIR_W, MS_W, MEM_W];\nconst COL_X = [];\nlet bar_x0;\nCOL_X[0] = 0;\nfor (let ii = 0; ii < COL_W.length; ++ii) {\n  COL_X[ii+1] = COL_X[ii] + COL_W[ii] + 4;\n}\nconst LINE_WIDTH_WITH_MEM = COL_X[COL_W.length];\nconst LINE_WIDTH_NO_MEM = COL_X[COL_W.length-1];\nlet color_hint = vec4(0,0.25,0,0.85);\nlet color_bar = vec4(0,0,0,0.85);\nlet color_bar2 = vec4(0.2,0.2,0.2,0.85);\nlet color_bar_header = vec4(0.3,0.3,0.3,0.85);\nlet color_bar_over = vec4(0,0,0.5,0.85);\nlet color_bar_over2 = vec4(0.2,0.2,0.7,0.85);\nlet color_bar_parent = vec4(0,0,0.3,0.85);\nlet color_bar_parent2 = vec4(0.2,0.2,0.4,0.85);\nlet color_timing = vec4(1, 1, 0.5, 1);\nlet color_bar_highlight = vec4(0,0,0, 0.5);\nconst GRAPH_FRAME_TIME = 16;\nlet GRAPH_MAX_MEM = 4096;\nlet total_frame_time;\nlet total_frame_mem;\nlet show_index_count;\nlet show_index_time;\nlet show_index_mem;\nlet do_average;\nlet history_index;\nlet do_ui;\nlet line_width;\nlet show_mem;\nlet mouseover_elem = {};\nlet mouseover_main_elem;\nlet mouseover_bar_idx;\nlet dmem_max_value = 0;\nlet perf_graph = {\n  history_size: HIST_SIZE,\n  num_lines: 2,\n  data: {\n    history: new Float32Array(HIST_SIZE * 2),\n    index: 0,\n  },\n  line_scale_top: GRAPH_FRAME_TIME,\n  bars_stack: true,\n  colors: [\n    vec4(0.5, 1.0, 0.5, 1),\n    color_gpu,\n  ],\n};\nlet bloat;\nlet mouseover_param = { x: 0, peek: true, h: LINE_HEIGHT };\nfunction profilerShowEntryEarly(walk, depth) {\n  if (settings.profiler_relative === 0 && walk === node_out_of_tick) {\n    // doesn't make sense to show\n    return false;\n  }\n  let count_sum=0;\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    count_sum += walk.history[ii];\n  }\n  if (!count_sum) {\n    return true;\n  }\n  mouseover_param.y = y;\n  mouseover_param.w = line_width;\n  if (input.mouseOver(mouseover_param)) {\n    mouseover_main_elem = walk;\n    mouseover_elem[walk.id] = 1;\n    for (let parent = walk.parent; parent; parent = parent.parent) {\n      mouseover_elem[parent.id] = 2;\n    }\n  }\n  y += LINE_HEIGHT;\n  if (!walk.show_children) {\n    return false;\n  }\n  return true;\n}\nfunction hasActiveChildren(walk) {\n  walk = walk.child;\n  if (!walk) {\n    return false;\n  }\n  while (walk) {\n    for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n      if (walk.history[ii]) {\n        return true;\n      }\n    }\n    walk = walk.next;\n  }\n  return false;\n}\nfunction childMemCallCount(node, idx) {\n  let walk = node.child;\n  let count = 0;\n  while (walk) {\n    if (walk.history[idx+2]) {\n      count += walk.history[idx];\n    }\n    count += childMemCallCount(walk, idx);\n    walk = walk.next;\n  }\n  return count;\n}\nfunction nodeMemValue(node, idx) {\n  let count = node.history[idx];\n  let dmem = node.history[idx+2];\n  if (show_mem && settings.profiler_hide_bloat && dmem > 0) {\n    dmem = max(0, dmem - count * bloat.inner.mem - childMemCallCount(node, idx) * bloat.outer.mem);\n  }\n  return dmem;\n}\nlet click_param = { x: 0, h: LINE_HEIGHT };\nfunction profilerShowEntry(walk, depth) {\n  if (settings.profiler_relative === 0 && walk === node_out_of_tick) {\n    // doesn't make sense to show\n    return false;\n  }\n  let time_sum=0;\n  let count_sum=0;\n  let time_max=0;\n  let sum_count=0;\n  let dmem_min=Infinity;\n  let dmem_max=-Infinity;\n  let dmem_avg=0;\n  let dmem_count=0;\n  for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n    if (walk.history[ii]) {\n      sum_count++;\n      count_sum += walk.history[ii]; // count\n      time_sum += walk.history[ii+1]; // time\n      time_max = max(time_max, walk.history[ii+1]);\n      let dmem = nodeMemValue(walk, ii);\n      dmem_max_value = max(dmem_max_value, dmem); // global max, for graph scaling\n      dmem_min = min(dmem_min, dmem);\n      dmem_max = max(dmem_max, dmem);\n      if (dmem >= 0) {\n        dmem_avg += dmem;\n        ++dmem_count;\n      }\n    }\n  }\n  if (!count_sum) {\n    return true;\n  }\n  if (dmem_count) {\n    dmem_avg = round(dmem_avg / dmem_count);\n  }\n  let over = mouseover_elem[walk.id] === 1;\n  let parent_over = mouseover_elem[walk.id] === 2;\n  if (do_ui) {\n    click_param.y = y;\n    click_param.w = line_width;\n    let click = input.click(click_param);\n    if (click) {\n      if (click.button === 1) {\n        walk.parent.toggleShowChildren();\n      } else {\n        walk.toggleShowChildren();\n      }\n    }\n  }\n\n  profilerStart('bar graph');\n  spriteChainedStart();\n\n  // Draw background\n  let color_top = over ? color_bar_over : parent_over ? color_bar_parent : color_bar;\n  let color_bot = over ? color_bar_over2 : parent_over ? color_bar_parent2 : color_bar2;\n  if (!engine.defines.NORECTS) {\n    ui.drawRect4Color(0, y, line_width, y + LINE_HEIGHT, Z_BAR,\n      color_top, color_top, color_bot, color_bot);\n  }\n\n  // Draw bar graph\n  let x = bar_x0;\n  let offs = 1 + settings.profiler_graph;\n  let graph_max = settings.profiler_graph ? GRAPH_MAX_MEM : GRAPH_FRAME_TIME;\n  for (let ii = 0; ii < HIST_SIZE; ++ii) {\n    let value = walk.history[(history_index + (ii+1)*HIST_COMPONENTS) % HIST_TOT + offs];\n    if (value > 0) {\n      let hv = value / graph_max;\n      let h = min(hv * LINE_HEIGHT, LINE_HEIGHT);\n      if (hv < 1) {\n        color_timing[0] = hv;\n        color_timing[1] = 1;\n      } else {\n        color_timing[0] = 1;\n        color_timing[1] = max(0, 2 - hv);\n      }\n      let color = walk.color_override || color_timing;\n      if (!engine.defines.NORECTS) {\n        let elem = ui.drawRect(x + ii*bar_w, y + LINE_HEIGHT - h, x + (ii + 1)*bar_w, y + LINE_HEIGHT, Z_GRAPH, color);\n        elem.x = elem.y = 0; // no sorting by x/y required\n      }\n    }\n  }\n\n  spriteChainedStop();\n  profilerStop('bar graph');\n\n  y += LINE_YOFFS;\n\n  let prefix;\n  if (hasActiveChildren(walk)) {\n    if (!walk.show_children) {\n      prefix = '▶'; // '+';\n    } else {\n      prefix = '▼'; // '-';\n    }\n  }\n  let percent = 0;\n  if (settings.profiler_relative === 1) {\n    // \"% of parent\"\n    if (walk.parent) {\n      if (do_average) {\n        percent = (time_sum/HIST_SIZE) / profilerAvgTime(walk.parent);\n      } else {\n        percent = walk.history[show_index_time] ?\n          walk.history[show_index_time] / walk.parent.history[show_index_time] :\n          0;\n      }\n    }\n  } else if (settings.profiler_relative === 3) {\n    // % of mem\n    if (do_average === 2) {\n      percent = dmem_max / total_frame_mem;\n    } else if (do_average) {\n      percent = dmem_avg / total_frame_mem;\n    } else {\n      percent = walk.history[show_index_mem] / total_frame_mem;\n    }\n  } else {\n    if (do_average) {\n      percent = (time_sum/HIST_SIZE) / total_frame_time;\n    } else {\n      percent = walk.history[show_index_time] / total_frame_time;\n    }\n  }\n  x = depth * FONT_SIZE;\n  if (prefix) {\n    font.drawSized(null, x - 16, y, Z_TREE, FONT_SIZE, prefix);\n  }\n  x += FONT_SIZE*2;\n  font.drawSizedAligned(style_percent, x, y + number_yoffs, Z_NUMBER, font_size_number, font.ALIGN.HRIGHT, 0, 0,\n    `${(percent * 100).toFixed(0)}%`);\n  x += 4;\n  font.drawSized(style_name, x, y, Z_NAMES, FONT_SIZE,\n    walk.name);\n\n  x = COL_X[1];\n  let ms = do_average ? time_sum / sum_count : walk.history[show_index_time];\n  // TODO: removing timing bloat here (and in percents above? much more complicated...)\n  let count = do_average ? (count_sum / sum_count).toFixed(0) : walk.history[show_index_count];\n  font.drawSizedAligned(style_ms, x, y + number_yoffs, Z_MS, font_size_number, font.ALIGN.HRIGHT, MS_W, 0,\n    (ms*1000).toFixed(0));\n  x += MS_W + 4;\n  font.drawSizedAligned(style_number, x, y + number_yoffs, Z_NUMBER, font_size_number, font.ALIGN.HFIT, COUNT_W, 0,\n    `(${count})`);\n\n  x = COL_X[2];\n  let spike = (time_max * 0.25 > (time_sum / sum_count)) && (time_max > 500);\n  font.drawSizedAligned(spike ? style_time_spike : style_ms, x, y + number_yoffs, Z_MS, font_size_number,\n    font.ALIGN.HRIGHT, COL_W[2], 0,\n    (time_max*1000).toFixed(0));\n\n  if (show_mem) {\n    x = COL_X[3];\n\n    let mem_value = do_average === 2 ? dmem_max : do_average ? dmem_avg : nodeMemValue(walk, show_index_count);\n\n    if (dmem_min < 0) {\n      // Had a GC\n      font.drawSizedAligned(style_time_spike, x, y + number_yoffs, Z_MS, font_size_number,\n        font.ALIGN.HLEFT|font.ALIGN.HFIT, MEM_W/2, 0,\n        `${friendlyBytes(-dmem_min)}`);\n      font.drawSizedAligned(style_mem, x + MEM_W/2, y + number_yoffs, Z_MS, font_size_number,\n        font.ALIGN.HRIGHT|font.ALIGN.HFIT, MEM_W/2, 0,\n        `${mem_value}`);\n    } else {\n      // Just increase\n      font.drawSizedAligned(style_mem, x, y + number_yoffs, Z_MS, font_size_number, font.ALIGN.HRIGHT, MEM_W, 0,\n        `${mem_value}`);\n    }\n  }\n\n  y += FONT_SIZE + LINE_YOFFS;\n  if (!walk.show_children) {\n    return false;\n  }\n  return true;\n}\n\nfunction doZoomedGraph() {\n  if (settings.profiler_graph) {\n    perf_graph.line_scale_top = GRAPH_MAX_MEM;\n    if (!mouseover_main_elem) {\n      mouseover_main_elem = profilerNodeTick();\n    }\n  } else if (!mouseover_main_elem || mouseover_main_elem === node_out_of_tick) {\n    perf_graph.line_scale_top = GRAPH_FRAME_TIME * 2;\n  } else {\n    perf_graph.line_scale_top = GRAPH_FRAME_TIME;\n  }\n  let offs = 1 + settings.profiler_graph;\n  if (mouseover_main_elem) {\n    let elem = mouseover_main_elem;\n    for (let ii = 0; ii < HIST_SIZE; ++ii) {\n      perf_graph.data.history[ii*2] = elem.history[ii*HIST_COMPONENTS + offs];\n      perf_graph.data.history[ii*2+1] = 0;\n    }\n  } else {\n    for (let ii = 0; ii < HIST_SIZE; ++ii) {\n      let idx = ii*HIST_COMPONENTS + offs;\n      perf_graph.data.history[ii*2] = root.history[idx] - node_out_of_tick.history[idx];\n      perf_graph.data.history[ii*2+1] = node_out_of_tick.history[idx];\n    }\n  }\n  perf_graph.data.index = history_index/HIST_COMPONENTS;\n  perfGraphOverride(perf_graph);\n}\n\nconst BUTTON_W = 140;\nconst BUTTON_H = 48;\nconst BUTTON_FONT_HEIGHT = 24;\nlet mouse_pos = vec2();\nlet bloat_none = { inner: { time: 0, mem: 0 }, outer: { time: 0, mem: 0 } };\nlet button_overlay;\nlet button_close;\nlet button_paused;\nlet button_relative;\nlet button_average;\nlet button_graph;\nlet button_mem_dec;\nlet button_mem_depth;\nlet button_mem_inc;\nlet button_max_fps;\nlet button_save;\nlet button_load;\nlet last_line_width;\nfunction buttonInit() {\n  let z = Z.PROFILER + 10;\n  y = 0;\n  let x = line_width;\n  button_overlay = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: settings.profiler_interactable ? 'interactable' : 'overlay',\n  };\n  button_close = {\n    x: x + BUTTON_W, y, z,\n    w: BUTTON_H, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    text: 'X',\n  };\n  y += BUTTON_H;\n  button_paused = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: loaded_profile ? 'loaded' : profilerPaused() ? 'paused' : 'live';\n  };\n  y += BUTTON_H;\n  button_relative = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: PROFILER_RELATIVE_LABELS[settings.profiler_relative],\n  };\n  y += BUTTON_H;\n  button_average = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n  };\n  y += BUTTON_H;\n  button_graph = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: settings.profiler_graph ? 'graph: mem' : 'graph: CPU',\n  };\n  y += BUTTON_H;\n  y += LINE_HEIGHT;\n  button_mem_dec = {\n    x, y, z,\n    w: BUTTON_W/3, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    text: '-',\n    // disabled: loaded_profile || cur_depth === 0,\n  };\n  button_mem_depth = {\n    x: x + BUTTON_W/3, y, z,\n    w: BUTTON_W/3, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: `${cur_depth || 'OFF'}`,\n    // disabled: loaded_profile,\n  };\n  button_mem_inc = {\n    x: x + 2*BUTTON_W/3, y, z,\n    w: BUTTON_W/3, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    text: '+',\n    // disabled: loaded_profile,\n  };\n  y += BUTTON_H;\n  button_max_fps = {\n    x, y, z,\n    w: BUTTON_W, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    // text: settings.max_fps ? 'max CPU' : 'anim frame',\n  };\n  y += BUTTON_H;\n  y += LINE_HEIGHT;\n  button_save = {\n    x, y, z,\n    w: BUTTON_W/2, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    text: 'save',\n    // disabled: loaded_profile,\n  };\n  button_load = {\n    x: x + BUTTON_W/2, y, z,\n    w: BUTTON_W/2, h: BUTTON_H, font_height: BUTTON_FONT_HEIGHT,\n    text: 'load',\n  };\n}\nfunction profilerUIRun() {\n  profilerStart('profilerUIRun');\n  profilerStart('top+buttons');\n  bloat = bloat_none;\n  if (!loaded_profile && settings.profiler_hide_bloat) {\n    bloat = profilerMeasureBloat();\n  }\n  if (engine.render_width) {\n    let scale = FONT_SIZE / uiTextHeight();\n    camera2d.set(0, 0, scale * engine.render_width, scale * engine.render_height);\n    font_number_scale = 1;\n    bar_w = scale;\n  } else {\n    camera2d.setScreen(true);\n    font_number_scale = 0.9;\n    bar_w = 2;\n  }\n  bar_x0 = COL_X[1] - HIST_SIZE*bar_w;\n  font_size_number = FONT_SIZE * font_number_scale;\n  number_yoffs = (FONT_SIZE - font_size_number) / 2;\n\n  if (profilerMemDepthGet() !== settings.profiler_mem_depth) {\n    // First time opening the UI this session, restore previous mem_depth values\n    profilerMemDepthSet(settings.profiler_mem_depth);\n  }\n\n  if (loaded_profile) {\n    history_index = loaded_profile.history_index;\n    show_mem = loaded_profile.mem_depth > 0;\n  } else {\n    history_index = profilerHistoryIndex();\n    show_mem = HAS_MEMSIZE;\n  }\n  line_width = show_mem ? LINE_WIDTH_WITH_MEM : LINE_WIDTH_NO_MEM;\n\n  if (!button_overlay || line_width !== last_line_width) {\n    last_line_width = line_width;\n    buttonInit();\n  }\n\n  let z = Z.PROFILER + 10;\n  y = 0;\n  let x = line_width;\n  button_overlay.text = settings.profiler_interactable ? 'interactable' : 'overlay';\n  if (ui.buttonText(button_overlay)) {\n    settings.set('profiler_interactable', 1 - settings.profiler_interactable);\n  }\n  do_ui = settings.profiler_interactable;\n  if (do_ui && ui.buttonText(button_close)) {\n    settings.set('show_profiler', 0);\n  }\n  y += BUTTON_H;\n\n  let text = loaded_profile ? 'loaded' : profilerPaused() ? 'paused' : 'live';\n  if (do_ui) {\n    button_paused.text = text;\n    if (ui.buttonText(button_paused)) {\n      if (loaded_profile) {\n        useLiveProfile();\n      } else {\n        profilerPause(!profilerPaused());\n      }\n    }\n  } else {\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H, text);\n  }\n  y += BUTTON_H;\n\n  if (do_ui) {\n    button_relative.text = PROFILER_RELATIVE_LABELS[settings.profiler_relative];\n    if (ui.buttonText(button_relative)) {\n      settings.set('profiler_relative', (settings.profiler_relative + 1) % PROFILER_RELATIVE_LABELS.length);\n    }\n  } else {\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H,\n      PROFILER_RELATIVE_LABELS[settings.profiler_relative]);\n  }\n  y += BUTTON_H;\n\n  text = settings.profiler_average === 2 ? 'max' : settings.profiler_average ? 'average' : 'last frame';\n  if (do_ui) {\n    button_average.text = text;\n    if (ui.buttonText(button_average)) {\n      let num_values = HAS_MEMSIZE ? 3 : 2;\n      settings.set('profiler_average', (settings.profiler_average + 1) % num_values);\n    }\n  } else {\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H, text);\n  }\n  y += BUTTON_H;\n\n  text = settings.profiler_graph ? 'graph: mem' : 'graph: CPU';\n  if (do_ui) {\n    button_graph.text = text;\n    if (ui.buttonText(button_graph)) {\n      settings.set('profiler_graph', 1 - settings.profiler_graph);\n    }\n  } else {\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H, text);\n  }\n  y += BUTTON_H;\n\n  if (loaded_profile ? true : HAS_MEMSIZE) {\n    let cur_depth = loaded_profile ? loaded_profile.mem_depth : profilerMemDepthGet();\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, LINE_HEIGHT,\n      'Mem Depth');\n    y += LINE_HEIGHT;\n    text = `${cur_depth || 'OFF'}`;\n    if (do_ui) {\n      button_mem_dec.disabled = loaded_profile || cur_depth === 0;\n      if (ui.buttonText(button_mem_dec)) {\n        profilerMemDepthSet(cur_depth - 1);\n        settings.set('profiler_mem_depth', profilerMemDepthGet());\n      }\n      button_mem_depth.disabled = loaded_profile;\n      button_mem_depth.text = text;\n      if (ui.buttonText(button_mem_depth)) {\n        if (cur_depth === MEM_DEPTH_DEFAULT) {\n          profilerMemDepthSet(99);\n        } else {\n          profilerMemDepthSet(MEM_DEPTH_DEFAULT);\n        }\n        settings.set('profiler_mem_depth', profilerMemDepthGet());\n      }\n      button_mem_inc.disabled = loaded_profile;\n      if (ui.buttonText(button_mem_inc)) {\n        profilerMemDepthSet(cur_depth + 1);\n        settings.set('profiler_mem_depth', profilerMemDepthGet());\n      }\n    } else {\n      font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H, text);\n    }\n  } else {\n    y += LINE_HEIGHT;\n  }\n  y += BUTTON_H;\n\n  text = settings.max_fps === 1000 ? 'max CPU' : settings.max_fps === 0 ? 'anim frame' : '?';\n  if (do_ui) {\n    button_max_fps.text = text;\n    if (ui.buttonText(button_max_fps)) {\n      settings.set('max_fps', settings.max_fps === 0 ? 1000 : 0);\n    }\n  } else {\n    font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, BUTTON_H, text);\n  }\n  y += BUTTON_H;\n\n  let total_calls = profilerChildCallCount(root, false, settings.profiler_average);\n  font.drawSizedAligned(null, x, y, z, FONT_SIZE, font.ALIGN.HVCENTERFIT, BUTTON_W, LINE_HEIGHT,\n    `${total_calls} calls`);\n  y += LINE_HEIGHT;\n\n  if (do_ui) {\n    button_save.disabled = loaded_profile;\n    if (ui.buttonText(button_save)) {\n      // Note: doesn't work in IE, but we probably don't care\n      let a = document.createElement('a');\n      a.href = `data:application/json,${encodeURIComponent(profilerExport())}`;\n      a.setAttribute('download', 'profile.json');\n      a.click();\n    }\n    if (ui.buttonText(button_load)) {\n      let input_elem = document.createElement('input');\n      input_elem.setAttribute('type', 'file');\n      let reader = new FileReader();\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          useSavedProfile(reader.error || reader.result);\n        }\n      };\n      input_elem.onchange = () => {\n        reader.readAsText(input_elem.files[0]);\n      };\n      input_elem.click();\n    }\n    y += BUTTON_H;\n  }\n\n  ui.drawRect(x, 0, x + BUTTON_W, y, z-1, color_bar);\n\n  y = 0;\n\n  font.drawSizedAligned(style_header, COL_X[0], y, z, FONT_SIZE, font.ALIGN.HLEFT, COL_W[0], 0, COL_HEADERS[0]);\n  for (let ii = 1; ii < COL_HEADERS.length - (show_mem ? 0 : 1); ++ii) {\n    font.drawSizedAligned(style_header, COL_X[ii], y, z, FONT_SIZE, font.ALIGN.HCENTER, COL_W[ii], 0, COL_HEADERS[ii]);\n  }\n  ui.drawRect(0, y, line_width, y + LINE_HEIGHT, z-1, color_bar_header);\n  y += LINE_HEIGHT;\n\n  let y0 = y;\n\n  // first determine mouseover tree\n  mouseover_main_elem = null;\n  mouseover_bar_idx = -1;\n  if (do_ui) {\n    mouseover_elem = {};\n    profilerWalkTree(root, profilerShowEntryEarly);\n    if (mouseover_main_elem) {\n      if (loaded_profile || profilerPaused()) {\n        let xx = input.mousePos(mouse_pos)[0] - bar_x0;\n        mouseover_bar_idx = floor(xx / bar_w);\n        if (mouseover_bar_idx < 0 || mouseover_bar_idx >= HIST_SIZE) {\n          mouseover_bar_idx = -1;\n        }\n      }\n      // Just use this one elem's values\n      dmem_max_value = 0;\n      for (let ii = 0; ii < HIST_TOT; ii+=HIST_COMPONENTS) {\n        if (mouseover_main_elem.history[ii]) {\n          dmem_max_value = max(dmem_max_value, mouseover_main_elem.history[ii+2]);\n        }\n      }\n    }\n  }\n\n  if (dmem_max_value < GRAPH_MAX_MEM * 0.25 || dmem_max_value > GRAPH_MAX_MEM) {\n    GRAPH_MAX_MEM = lerp(0.1, GRAPH_MAX_MEM, dmem_max_value);\n  }\n  dmem_max_value = 0;\n  do_average = settings.profiler_average;\n  show_index_count = history_index;\n\n  if (mouseover_bar_idx !== -1) {\n    // override do_average if the mouse is over a particular frame in the bar graph\n    do_average = false;\n    show_index_count = (show_index_count - (HIST_SIZE - mouseover_bar_idx - 1) * HIST_COMPONENTS + HIST_TOT) % HIST_TOT;\n  }\n\n  show_index_time = show_index_count + 1;\n  show_index_mem = show_index_count + 2;\n\n  if (do_average) {\n    // use average for percents and timing\n    if (settings.profiler_relative === 0) {\n      // \"% of user\"\n      total_frame_time = 0;\n      let walk = root.child;\n      while (walk) {\n        if (walk !== node_out_of_tick) {\n          total_frame_time += profilerAvgTime(walk);\n        }\n        walk = walk.next;\n      }\n      total_frame_time = max(total_frame_time, 0.001);\n    } else if (settings.profiler_relative === 2) {\n      // \"% of frame\"\n      total_frame_time = profilerAvgTime(root);\n    } else if (settings.profiler_relative === 3) {\n      if (do_average === 2) {\n        total_frame_mem = profilerMaxMem(root);\n      } else {\n        total_frame_mem = profilerAvgMem(root);\n      }\n    }\n  } else {\n    // use last frame for percents\n    if (settings.profiler_relative === 0) {\n      // \"% of user\"\n      total_frame_time = 0;\n      let walk = root.child;\n      while (walk) {\n        if (walk !== node_out_of_tick) {\n          total_frame_time += walk.history[show_index_time];\n        }\n        walk = walk.next;\n      }\n      total_frame_time = max(total_frame_time, 0.001);\n    } else if (settings.profiler_relative === 2) {\n      // \"% of frame\"\n      total_frame_time = root.history[show_index_time];\n    } else if (settings.profiler_relative === 3) {\n      total_frame_mem = root.history[show_index_mem];\n      if (total_frame_mem < 0) {\n        // sum positive children instead, for better estimate\n        let walk = root.child;\n        total_frame_mem = 0;\n        while (walk) {\n          total_frame_mem += max(0, walk.history[show_index_mem]);\n          walk = walk.next;\n        }\n      }\n    }\n  }\n\n  profilerStopStart('interface');\n\n  // then render / do UI\n  y = y0;\n  profilerWalkTree(root, profilerShowEntry);\n  let hint = !loaded_profile && profilerWarning();\n  if (hint) {\n    font.drawSizedAligned(style_name, FONT_SIZE, y, Z_NAMES, FONT_SIZE,\n      font.ALIGN.HVCENTERFIT, line_width - FONT_SIZE*2, LINE_HEIGHT*1.5,\n      hint);\n    ui.drawRect(0, y,\n      line_width, y + LINE_HEIGHT*1.5, Z_NAMES - 0.5,\n      color_hint);\n  }\n\n  // profilerStopStart('bottom'); // nothing\n\n  if (mouseover_bar_idx !== -1) {\n    ui.drawRect(bar_x0 + mouseover_bar_idx * bar_w, y0,\n      bar_x0 + (mouseover_bar_idx + 1) * bar_w, y, Z_GRAPH + 0.5,\n      color_bar_highlight);\n  }\n\n  if (do_ui) {\n    // consume mouseover regardless\n    input.mouseOver({ x: 0, y: 0, w: line_width, h: y });\n  }\n\n  doZoomedGraph();\n\n  profilerStop();\n  profilerStop('profilerUIRun');\n}\n\nexport function profilerUIStartup() {\n  ({ font } = ui);\n  useLiveProfile();\n}\n\nexport function profilerUI() {\n  if (engine.DEBUG && input.keyUpEdge(input.KEYS.F7)) {\n    profilerToggle();\n  }\n  if (settings.show_profiler) {\n    profilerUIRun();\n  }\n  if (engine.DEBUG || settings.show_profiler) {\n    // TODO: warn if more than some number of profiler calls per frame\n  }\n}\n\ncmd_parse.register({\n  cmd: 'profile',\n  help: 'Captures a performance profile for developer investigation',\n  prefix_usage_with_help: true,\n  usage: 'Optionally delays for DELAY seconds before capturing the profile.\\n' +\n    'Usage: /profile [DELAY]',\n  func: function (str, resp_func) {\n    function doit() {\n      let profile = profilerExport();\n      if (netDisconnected()) {\n        ui.provideUserString('Profiler Snapshot', profile);\n        resp_func();\n      } else {\n        netClient().send('profile', profile, null, function (err, data) {\n          if (data?.id) {\n            ui.provideUserString('Profile submitted', `ID=${data.id}`);\n            resp_func(null, `Profile submitted with ID=${data.id}`);\n          } else {\n            resp_func(err, data);\n          }\n        });\n      }\n    }\n    if (Number(str)) {\n      setTimeout(doit, Number(str) * 1000);\n    } else {\n      doit();\n    }\n  },\n});\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// RandSeed2\n// Derived from libGlov, MIT Licensed\n// Super-simple RNG.  2-3x faster than Alea, but probably some correlation in\n//   anything but 1D.\n// Allows for fast, direct manipulation of rand.seed (if correlation between adjacent seeds is acceptable)\n\n//const MAX_INT2 = 0xFFFFFFFF;\n\n// Initialize with two steps past the seed, otherwise close seeds (e.g. 0 and 1) produce very close first results\nfunction step2(seed) {\n  seed = (seed >>> 0) || 0x532f638c2; // arbitrary non-zero\n  seed ^= seed << 13;\n  seed ^= seed >>> 17;\n  seed ^= seed << 5;\n  seed ^= seed << 13;\n  seed ^= seed >>> 17;\n  seed ^= seed << 5;\n  return seed >>> 0;\n}\n\nfunction RandSeed2(seed) {\n  this.seed = step2(seed);\n}\nRandSeed2.prototype.reseed = function (seed) {\n  this.seed = step2(seed);\n};\nRandSeed2.prototype.step = function () { // as long as seed is never === 0, this never returns 0\n  let seed = this.seed;\n  seed ^= seed << 13;\n  seed ^= seed >>> 17;\n  seed ^= seed << 5;\n  return (this.seed = (seed >>> 0)) - 1;\n};\nRandSeed2.prototype.uint32 = RandSeed2.prototype.step;\n// returns [0,range-1]\nRandSeed2.prototype.range = function (range) {\n  // slightly slower (esp before opt): return (this.step() * range / MAX_INT2) | 0; // faster than this.step() % range\n  // slower: return this.step() % range;\n  return (this.step() * range * 2.3283064376e-10) | 0; // 1/MAX_INT2 - largest float such that 0xFFFFFFFE*f < 1.0\n};\n// returns [0,1)\nRandSeed2.prototype.random = function () {\n  // slower: return this.step() / MAX_INT2\n  return this.step() * 2.3283064376e-10; // 1/MAX_INT2 - largest float such that 0xFFFFFFFE*f < 1.0\n};\nRandSeed2.prototype.floatBetween = function (a, b) {\n  return a + (b - a) * this.random();\n};\n\nexport function randFastCreate(seed) {\n  return new RandSeed2(seed);\n}\n\n// from https://www.shadertoy.com/view/wsXfDM\nconst RND_A = 134775813;\nconst RND_B = 1103515245;\nexport function randSimpleSpatial(seed, x, y, z) {\n  y += z * 10327;\n\n  return (((((x ^ y) * RND_A) ^ (seed + x)) * (((RND_B * x) << 16) ^ (RND_B * y) - RND_A)) >>> 0) / 4294967295;\n}\n","// Portions Copyright 2022 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport assert from 'assert';\nimport { clamp, merge } from 'glov/common/util';\nimport { Vec4, vec2, vec4 } from 'glov/common/vmath';\nimport * as camera2d from './camera2d';\nimport * as engine from './engine';\nimport { renderNeeded } from './engine';\nimport { Box } from './geom_types';\nimport * as input from './input';\nimport {\n  BUTTON_LEFT,\n  KEYS,\n  PAD,\n} from './input';\nimport {\n  SPOT_DEFAULT_BUTTON,\n  SPOT_STATE_DOWN,\n  SPOT_STATE_FOCUSED,\n  spot,\n  spotPadMode,\n  spotSubBegin,\n  spotSubEnd,\n  spotUnfocus,\n} from './spot';\nimport { spriteClipPop, spriteClipPush } from './sprites';\nimport { textureDefaultIsNearest } from './textures';\nimport * as ui from './ui';\nimport { uiTextHeight } from './ui';\n\nconst { abs, max, min, round } = Math;\n\n// TODO: move FocusableElement to appropriate TS file after conversion (probably input)\nexport interface FocusableElement {\n  focus: () => void;\n  readonly is_focused: boolean;\n}\n\nconst MAX_OVERSCROLL = 50;\nconst OVERSCROLL_DELAY_WHEEL = 180;\n\nfunction darken(color: Vec4, factor: number): Vec4 {\n  return vec4(color[0] * factor, color[1] * factor, color[2] * factor, color[3]);\n}\n\nlet default_pixel_scale = 1;\nexport function scrollAreaSetPixelScale(scale: number): void {\n  default_pixel_scale = scale;\n}\n\ninterface ScrollAreaOptsAll extends Box {\n  // configuration options\n  z: number;\n  // h: number (from Box) is height of visible area, not interior scrolled area\n  rate_scroll_click: number;\n  pixel_scale: number;\n  top_pad: boolean; // set to false it the top/bottom \"buttons\" don't look like buttons\n  color: Vec4;\n  background_color: Vec4 | null;\n  auto_scroll: boolean; // If true, will scroll to the bottom if the height changes and we're not actively scrolling\n  auto_hide: boolean; // If true, will hide the scroll bar when the scroll area does not require it\n  no_disable: boolean; // Use with auto_hide=false to always do scrolling actions (overscroll, mousewheel)\n  focusable_elem: FocusableElement | null; // Another element to call .focus() on if we think we are focused\n  min_dist: number | undefined; // Minimum drag distance for background drag\n  disabled: boolean;\n\n  // Calculated (only once) if not set\n  rate_scroll_wheel: number;\n  rollover_color: Vec4;\n  rollover_color_light: Vec4;\n  disabled_color: Vec4;\n}\n\nexport type ScrollAreaOpts = Partial<ScrollAreaOptsAll>;\n\nexport interface ScrollArea extends Readonly<ScrollAreaOptsAll> {\n  resetScroll(): void;\n  barWidth(): number;\n  isFocused(): boolean;\n  consumedClick(): boolean;\n  isVisible(): boolean;\n  begin(params?: ScrollAreaOpts): void;\n  // Includes overscroll - actual visible scroll pos for this frame\n  getScrollPos(): number;\n  keyboardScroll(): void;\n  end(h: number): void;\n  // h is height of visible area\n  scrollIntoFocus(miny: number, maxy: number, h: number): void;\n  scrollToEnd(): void;\n}\n\nlet temp_pos = vec2();\nlet last_scroll_area_id = 0;\nclass ScrollAreaInternal implements ScrollArea {\n  id = `sa:${++last_scroll_area_id}`;\n  x = 0;\n  y = 0;\n  z = Z.UI;\n  w = 10;\n  h = 10;\n  rate_scroll_click = uiTextHeight();\n  pixel_scale = default_pixel_scale;\n  top_pad = true;\n  color = vec4(1,1,1,1);\n  background_color: Vec4 | null = vec4(0.4, 0.4, 0.4, 1);\n  auto_scroll = false;\n  auto_hide = false;\n  no_disable = false;\n  focusable_elem: FocusableElement | null = null;\n  min_dist: number | undefined;\n  disabled = false;\n\n  // Calculated (only once) if not set\n  rate_scroll_wheel;\n  rollover_color;\n  rollover_color_light;\n  disabled_color;\n\n  // run-time state\n  scroll_pos = 0;\n  overscroll = 0; // overscroll beyond beginning or end\n  overscroll_delay = 0;\n  grabbed_pos = 0;\n  grabbed = false;\n  consumed_click = false;\n  drag_start: number | null = null;\n  began = false;\n  last_internal_h = 0;\n  last_frame = 0;\n  was_disabled = false;\n  scrollbar_visible = false;\n  last_max_value = 0;\n  ignore_this_fram_drag = false;\n\n  constructor(params?: ScrollAreaOpts) {\n    params = params || {};\n    this.applyParams(params);\n    this.rate_scroll_wheel = params.rate_scroll_wheel || this.rate_scroll_click * 2;\n    this.rollover_color = params.rollover_color || darken(this.color, 0.75);\n    this.rollover_color_light = params.rollover_color_light || darken(this.color, 0.95);\n    // equality is used to detect if this gets used and prevent rollover\n    assert(this.rollover_color_light !== this.color);\n    this.disabled_color = params.disabled_color || this.rollover_color;\n  }\n\n  applyParams(params?: ScrollAreaOpts): void {\n    if (!params) {\n      return;\n    }\n    merge(this, params);\n  }\n\n  barWidth(): number {\n    let { pixel_scale } = this;\n    let { scrollbar_top } = ui.sprites;\n    return scrollbar_top.uidata.total_w * pixel_scale;\n  }\n\n  isFocused(): boolean {\n    assert(false, 'deprecated?');\n    return false;\n  }\n\n  consumedClick(): boolean {\n    return this.consumed_click;\n  }\n\n  isVisible(): boolean {\n    return this.scrollbar_visible;\n  }\n\n  begin(params?: ScrollAreaOpts): void {\n    this.applyParams(params);\n    let { x, y, w, h, z, id } = this;\n    // verify(!this.began); // Checking mismatched begin/end - likely from previous frame crash though!\n    this.began = true;\n    spotSubBegin({ x, y, w, h, key: id });\n    // Set up camera and clippers\n    spriteClipPush(z + 0.05, x, y, w - this.barWidth(), h);\n    let camera_orig_x0 = camera2d.x0();\n    let camera_orig_x1 = camera2d.x1();\n    let camera_orig_y0 = camera2d.y0();\n    let camera_orig_y1 = camera2d.y1();\n    // map (0,0) onto (x,y) in the current camera space, keeping w/h scale the same\n    let camera_new_x0 = -(x - camera_orig_x0);\n    let camera_new_y0 = -(y - camera_orig_y0) + this.getScrollPos();\n    let camera_new_x1 = camera_new_x0 + camera_orig_x1 - camera_orig_x0;\n    let camera_new_y1 = camera_new_y0 + camera_orig_y1 - camera_orig_y0;\n    camera2d.push();\n    camera2d.set(camera_new_x0, camera_new_y0, camera_new_x1, camera_new_y1);\n    this.ignore_this_fram_drag = false;\n  }\n\n  // Includes overscroll - actual visible scroll pos for this frame\n  getScrollPos(): number {\n    return round(this.scroll_pos + this.overscroll);\n  }\n\n  clampScrollPos(): void {\n    let clamped_pos = clamp(this.scroll_pos, 0, this.last_max_value);\n    if (this.scroll_pos < 0) {\n      this.overscroll = max(this.scroll_pos, -MAX_OVERSCROLL);\n    } else if (this.scroll_pos > this.last_max_value) {\n      this.overscroll = min(this.scroll_pos - this.last_max_value, MAX_OVERSCROLL);\n    }\n    this.scroll_pos = clamped_pos;\n  }\n\n  keyboardScroll(): void {\n    if (this.was_disabled) {\n      return;\n    }\n    let modified = false;\n    let pad_shift = input.padButtonDown(PAD.RIGHT_TRIGGER) || input.padButtonDown(PAD.LEFT_TRIGGER);\n    let value = input.keyDownEdge(KEYS.PAGEDOWN) +\n      (pad_shift ? input.padButtonDownEdge(PAD.DOWN) : 0);\n    if (value) {\n      // don't overscroll on pageup/pagedown unless we're already at the end\n      this.scroll_pos = min(this.scroll_pos + this.h,\n        this.scroll_pos === this.last_max_value ? Infinity : this.last_max_value);\n      modified = true;\n    }\n    value = input.keyDownEdge(KEYS.PAGEUP) +\n      (pad_shift ? input.padButtonDownEdge(PAD.UP) : 0);\n    if (value) {\n      this.scroll_pos = max(this.scroll_pos - this.h,\n        this.scroll_pos === 0 ? -this.h : 0);\n      modified = true;\n    }\n\n    if (modified) {\n      this.clampScrollPos();\n    }\n  }\n\n  end(h: number): void {\n    //ScrollAreaDisplay *display = OR(this.display, &scroll_area_display_default);\n    assert(h >= 0);\n    h = max(h, 1); // prevent math from going awry on height of 0\n    assert(this.began); // Checking mismatched begin/end\n    this.began = false;\n    this.consumed_click = false;\n    let focused_sub_elem = spotSubEnd();\n    // restore camera and clippers\n    camera2d.pop();\n    spriteClipPop();\n\n    if (focused_sub_elem && spotPadMode()) {\n      // assumes the focus'd spot was in the same camera transform, if not, need to adapt to use .dom_pos instead\n      this.scrollIntoFocus(focused_sub_elem.y, focused_sub_elem.y + focused_sub_elem.h + 1, this.h);\n    }\n\n    let maxvalue = max(h - this.h+1, 0);\n    if (this.scroll_pos > maxvalue) {\n      // internal height must have shrunk, or we otherwise scrolled farther than allowed\n      let extra = this.scroll_pos - maxvalue;\n      this.scroll_pos = max(0, maxvalue);\n      if (this.overscroll < 0) {\n        // Remove any overscroll that corresponds to this extra (e.g. from scrollIntoFocus)\n        this.overscroll = min(this.overscroll + extra, 0);\n      }\n    }\n\n    let was_at_bottom = this.scroll_pos === this.last_max_value;\n    if (this.auto_scroll && (\n      this.last_frame !== engine.getFrameIndex() - 1 || // was not seen last frame, do a reset\n      this.last_internal_h !== h && was_at_bottom\n    )) {\n      // We were at the bottom, but we are now not, and auto-scroll is enabled\n      // want to be at the bottom, scroll down (effective next frame for the contents,\n      // but this frame for the handle, to prevent flicker)\n      this.overscroll = max(0, this.scroll_pos + this.overscroll - maxvalue);\n      this.scroll_pos = maxvalue;\n    }\n    this.last_internal_h = h;\n    this.last_frame = engine.getFrameIndex();\n\n\n    if (this.overscroll) {\n      let dt = engine.getFrameDt();\n      if (dt >= this.overscroll_delay) {\n        this.overscroll_delay = 0;\n        this.overscroll *= max(1 - dt * 0.008, 0);\n        if (abs(this.overscroll) < 0.001) {\n          this.overscroll = 0;\n        }\n      } else {\n        this.overscroll_delay -= dt;\n      }\n      renderNeeded();\n    }\n\n    let {\n      auto_hide,\n      pixel_scale,\n      rollover_color,\n      rollover_color_light,\n    } = this;\n\n    let {\n      scrollbar_top, scrollbar_bottom, scrollbar_trough, scrollbar_handle, scrollbar_handle_grabber\n    } = ui.sprites;\n\n    let bar_w = scrollbar_top.uidata.total_w * pixel_scale;\n    let button_h = min(scrollbar_top.uidata.total_h * pixel_scale, this.h / 3);\n    let button_h_nopad = this.top_pad ? button_h : 0;\n    let bar_x0 = this.x + this.w - bar_w;\n    let handle_h = this.h / h; // How much of the area is visible\n    handle_h = clamp(handle_h, 0, 1);\n    let handle_pos = (this.h >= h) ? 0 : (this.scroll_pos / (h - this.h));\n    handle_pos = clamp(handle_pos, 0, 1);\n    assert(isFinite(handle_pos));\n    let handle_pixel_h = handle_h * (this.h - button_h_nopad * 2);\n    let handle_pixel_min_h = scrollbar_handle.uidata.total_h * pixel_scale;\n    let trough_height = this.h - button_h * 2;\n    handle_pixel_h = max(handle_pixel_h, min(handle_pixel_min_h, trough_height * 0.75));\n    let handle_screenpos = this.y + button_h_nopad + handle_pos * (this.h - button_h_nopad * 2 - handle_pixel_h);\n    if (textureDefaultIsNearest()) {\n      // round handle_screenpos in pixely modes?\n      handle_screenpos = round(handle_screenpos);\n    }\n    let top_color = this.color;\n    let bottom_color = this.color;\n    let handle_color = this.color;\n    let trough_color = this.color;\n    let disabled = this.disabled;\n    let auto_hidden = false;\n    if (!this.h) {\n      disabled = true;\n      auto_hidden = true;\n    } else if (handle_h === 1) {\n      auto_hidden = true;\n      if (this.no_disable) {\n        // Just *look* disabled, but still do overscroll, eat mousewheel events\n        trough_color = top_color = bottom_color = handle_color = this.disabled_color;\n      } else {\n        disabled = true;\n      }\n    }\n    this.was_disabled = disabled;\n\n    let gained_focus = false;\n\n    // Handle UI interactions\n    if (disabled) {\n      trough_color = top_color = bottom_color = handle_color = this.disabled_color;\n      this.drag_start = null;\n    } else {\n      // handle scroll wheel\n      let wheel_delta = input.mouseWheel({\n        x: this.x,\n        y: this.y,\n        w: this.w,\n        h: this.h\n      });\n      if (wheel_delta) {\n        this.overscroll_delay = OVERSCROLL_DELAY_WHEEL;\n        this.scroll_pos -= this.rate_scroll_wheel * wheel_delta;\n        if (focused_sub_elem) {\n          spotUnfocus();\n        }\n      }\n\n      // handle drag of handle\n      // before end buttons, as those might be effectively hidden in some UIs\n      let handle_rect = {\n        x: bar_x0,\n        y: handle_screenpos,\n        w: bar_w,\n        h: handle_pixel_h,\n        button: 0,\n        spot_debug_ignore: true,\n      };\n\n      let down = input.mouseDownEdge(handle_rect);\n      if (down) {\n        this.grabbed_pos = (down.pos[1] - handle_screenpos);\n        this.grabbed = true;\n        handle_color = rollover_color_light;\n      }\n      if (this.grabbed) {\n        gained_focus = true;\n      }\n      if (this.grabbed) {\n        // update pos\n        let up = input.mouseUpEdge({ button: 0 });\n        if (up) {\n          temp_pos[1] = up.pos[1];\n          this.consumed_click = true;\n        } else if (!input.mouseDownAnywhere(0)) {\n          // released but someone else ate it, release anyway!\n          this.grabbed = false;\n          this.consumed_click = true;\n        } else {\n          input.mousePos(temp_pos);\n        }\n        if (this.grabbed) {\n          let delta = temp_pos[1] - (this.y + button_h_nopad) - this.grabbed_pos;\n          let denom = this.h - button_h_nopad * 2 - handle_pixel_h;\n          if (denom > 0) {\n            this.scroll_pos = (h - this.h) * delta / denom;\n            assert(isFinite(this.scroll_pos));\n          }\n          handle_color = rollover_color_light;\n        }\n      }\n      if (input.mouseOver(handle_rect)) {\n        if (handle_color !== rollover_color_light) {\n          handle_color = rollover_color;\n        }\n      }\n\n      // handle clicking on end buttons\n      let button_param_up = {\n        x: bar_x0,\n        y: this.y,\n        w: bar_w,\n        h: button_h,\n        button: BUTTON_LEFT,\n        pad_focusable: false,\n        disabled: this.grabbed,\n        disabled_focusable: false,\n        def: SPOT_DEFAULT_BUTTON,\n      };\n      let button_param_down = {\n        ...button_param_up,\n        y: this.y + this.h - button_h,\n      };\n      let button_spot_ret = spot(button_param_up);\n      while (button_spot_ret.ret) {\n        --button_spot_ret.ret;\n        gained_focus = true;\n        this.scroll_pos -= this.rate_scroll_click;\n        this.consumed_click = true;\n      }\n      if (button_spot_ret.spot_state === SPOT_STATE_DOWN) {\n        top_color = rollover_color_light;\n      } else if (button_spot_ret.spot_state === SPOT_STATE_FOCUSED) {\n        top_color = rollover_color;\n      }\n      button_spot_ret = spot(button_param_down);\n      while (button_spot_ret.ret) {\n        --button_spot_ret.ret;\n        gained_focus = true;\n        this.scroll_pos += this.rate_scroll_click;\n        this.consumed_click = true;\n      }\n      if (button_spot_ret.spot_state === SPOT_STATE_DOWN) {\n        bottom_color = rollover_color_light;\n      } else if (button_spot_ret.spot_state === SPOT_STATE_FOCUSED) {\n        bottom_color = rollover_color;\n      }\n\n      // handle clicking trough if not caught by anything above +/-\n      let bar_param = {\n        key: `bar_${this.id}`,\n        x: bar_x0,\n        y: this.y,\n        w: bar_w,\n        h: this.h,\n        button: BUTTON_LEFT,\n        sound_rollover: null,\n        pad_focusable: false,\n        def: SPOT_DEFAULT_BUTTON,\n      };\n      let bar_spot_ret = spot(bar_param);\n      while (bar_spot_ret.ret) {\n        --bar_spot_ret.ret;\n        gained_focus = true;\n        this.consumed_click = true;\n        if (bar_spot_ret.pos) {\n          if (bar_spot_ret.pos[1] > handle_screenpos + handle_pixel_h/2) {\n            this.scroll_pos += this.h;\n          } else {\n            this.scroll_pos -= this.h;\n          }\n        }\n      }\n\n      // handle dragging the scroll area background\n      let drag = input.drag({ x: this.x, y: this.y, w: this.w - bar_w, h: this.h, button: 0, min_dist: this.min_dist });\n      if (drag && !this.ignore_this_fram_drag) {\n        // Drag should not steal focus\n        // This also fixes an interaction with chat_ui where clicking on the chat background (which causes\n        //   a flicker of a drag) would cause pointer lock to be lost\n        //spotFocusSteal(this);\n        if (this.drag_start === null) {\n          this.drag_start = this.scroll_pos;\n        }\n        this.scroll_pos = this.drag_start - drag.cur_pos[1] + drag.start_pos[1];\n        this.consumed_click = true;\n      } else {\n        this.drag_start = null;\n      }\n      // Also eat drag for bar area, we handle it\n      input.drag({ x: this.x + this.w - bar_w, y: this.y, w: bar_w, h: this.h, button: 0 });\n    }\n\n    if (gained_focus && this.focusable_elem) {\n      this.focusable_elem.focus();\n    }\n\n    this.last_max_value = maxvalue;\n    this.clampScrollPos();\n\n    if (this.background_color) {\n      ui.drawRect(this.x, this.y, this.x + this.w, this.y + this.h, this.z, this.background_color);\n    }\n\n    if (disabled && (auto_hide && auto_hidden || !this.h)) {\n      this.scrollbar_visible = false;\n      return;\n    }\n    this.scrollbar_visible = true;\n\n    scrollbar_top.draw({\n      x: bar_x0, y: this.y, z: this.z + 0.2,\n      w: bar_w, h: button_h,\n      color: top_color,\n    });\n    scrollbar_bottom.draw({\n      x: bar_x0, y: this.y + this.h - button_h, z: this.z + 0.2,\n      w: bar_w, h: button_h,\n      color: bottom_color,\n    });\n    let trough_draw_pad = button_h / 2;\n    let trough_draw_height = trough_height + trough_draw_pad * 2;\n    let trough_v0 = -trough_draw_pad / pixel_scale / scrollbar_trough.uidata.total_h;\n    let trough_v1 = trough_v0 + trough_draw_height / pixel_scale / scrollbar_trough.uidata.total_h;\n    if (scrollbar_trough.texs[0].wrap_t === gl.REPEAT) {\n      scrollbar_trough.draw({\n        x: bar_x0, y: this.y + trough_draw_pad, z: this.z+0.1,\n        w: bar_w, h: trough_draw_height,\n        uvs: [scrollbar_trough.uvs[0], trough_v0, scrollbar_trough.uvs[2], trough_v1],\n        color: trough_color,\n      });\n    } else {\n      ui.drawVBox({\n        x: bar_x0, y: this.y + trough_draw_pad, z: this.z+0.1,\n        w: bar_w, h: trough_draw_height,\n      }, scrollbar_trough, trough_color);\n    }\n\n    ui.drawVBox({\n      x: bar_x0, y: handle_screenpos, z: this.z + 0.3,\n      w: bar_w, h: handle_pixel_h,\n    }, scrollbar_handle, handle_color);\n    let grabber_h = scrollbar_handle_grabber.uidata.total_h * pixel_scale;\n    scrollbar_handle_grabber.draw({\n      x: bar_x0, y: handle_screenpos + (handle_pixel_h - grabber_h) / 2, z: this.z + 0.4,\n      w: bar_w, h: grabber_h,\n      color: handle_color,\n    });\n  }\n\n  // h is height of visible area\n  scrollIntoFocus(miny: number, maxy: number, h: number): void {\n    let old_scroll_pos = this.scroll_pos;\n    let changed = false;\n    miny = max(miny, 0);\n    if (miny < this.scroll_pos) {\n      this.scroll_pos = miny;\n      changed = true;\n    }\n    maxy -= h;\n    if (maxy > this.scroll_pos) {\n      this.scroll_pos = maxy;\n      changed = true;\n    }\n    if (changed) {\n      // Make it smooth/bouncy a bit\n      this.overscroll = old_scroll_pos - this.scroll_pos;\n    }\n    this.ignore_this_fram_drag = true;\n  }\n\n  scrollToEnd(): void {\n    this.scroll_pos = this.last_max_value;\n  }\n\n  resetScroll(): void {\n    this.scroll_pos = 0;\n    this.overscroll = 0;\n  }\n}\n\nexport function scrollAreaCreate(params?: ScrollAreaOpts): ScrollArea {\n  return new ScrollAreaInternal(params);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nlet modified = {};\nexports.true = true; // for perf.js\nlet change_cbs = {};\n\n/* eslint @typescript-eslint/no-use-before-define: [\"error\",{functions:false}]*/\n// Old API\nexports.get = settingsGet;\nexports.set = settingsSet;\nexports.setAsync = settingsSetAsync;\nexports.runTimeDefault = settingsRunTimeDefault;\nexports.push = settingsPush;\nexports.pop = settingsPop;\nexports.register = settingsRegister;\n\nconst assert = require('assert');\nconst { titleCase } = require('glov/common/util.js');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\n\n\nexport function settingsGet(key) {\n  return exports[key];\n}\n\nexport function settingsSet(key, value) {\n  if (exports[key] !== value) {\n    cmd_parse.handle(null, `${key} ${value}`, null); // uses default cmd_parse handler\n  }\n}\n\nexport function settingsSetAsync(key, value) {\n  engine.postTick({ fn: settingsSet.bind(null, key, value) });\n}\n\nexport function settingsRunTimeDefault(key, new_default) {\n  assert(!change_cbs[key]); // If so, we set `default_clear_on` below, and may have discarded a desired setting.\n  // Set a default value that cannot be determined at load time\n  // Only set if this has never been modified\n  if (!modified[key]) {\n    // Does *not* call cmd_parse.set - will not write to storage, still at \"default\" setting\n    exports[key] = new_default;\n  }\n}\n\nexport function settingIsModified(key) {\n  return modified[key];\n}\n\nlet settings_stack = null;\nexport function settingsPush(pairs) {\n  assert(!settings_stack);\n  settings_stack = {};\n  for (let key in pairs) {\n    settings_stack[key] = exports[key];\n    exports[key] = pairs[key];\n    let cb = change_cbs[key];\n    if (cb) {\n      cb(false);\n    }\n  }\n}\n\nexport function settingsPop() {\n  assert(settings_stack);\n  for (let key in settings_stack) {\n    exports[key] = settings_stack[key];\n    let cb = change_cbs[key];\n    if (cb) {\n      cb(false);\n    }\n  }\n  settings_stack = null;\n}\n\nexport function settingsRegister(defs) {\n  Object.keys(defs).forEach(function (key) {\n    let def = defs[key];\n    exports[key] = def.default_value;\n    if (def.on_change) {\n      change_cbs[key] = def.on_change;\n    }\n    cmd_parse.registerValue(key, {\n      type: def.type,\n      label: def.label || titleCase(key.replace(/_/g, ' ')),\n      range: def.range,\n      get: () => exports[key],\n      set: (v) => {\n        modified[key] = true;\n        exports[key] = v;\n      },\n      store: def.store !== false,\n      ver: def.ver,\n      help: def.help,\n      usage: def.usage,\n      prefix_usage_with_help: def.prefix_usage_with_help,\n      on_change: def.on_change,\n      access_run: def.access_run,\n      access_show: def.access_show,\n      default_value: def.default_value,\n      enum_lookup: def.enum_lookup,\n      is_toggle: def.is_toggle,\n    });\n  });\n}\n\nsettingsRegister({\n  max_fps: {\n    label: 'Maximum frame rate (FPS)',\n    prefix_usage_with_help: true,\n    usage:\n      'Display current maximum: /max_fps\\n' +\n      'Set maximum FPS limit: /max_fps 30\\n' +\n      'Set automatic by browser: /max_fps 0 (may be unresponsive)\\n' +\n      'Set unlimited: /max_fps 1000 (may be unresponsive)\\n' +\n      'Default: /max_fps 60',\n    default_value: 60,\n    type: cmd_parse.TYPE_FLOAT,\n    ver: 2,\n  },\n  use_animation_frame: {\n    label: 'Use requestAnimationFrame',\n    help: 'Use requestAnimationFrame for any max_fps values lower than this value.',\n    prefix_usage_with_help: true,\n    default_value: 60,\n    type: cmd_parse.TYPE_INT,\n    range: [0, 240],\n  },\n  render_scale: {\n    label: 'Render Scale (3D)',\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0.1,1],\n  },\n  render_scale_mode: {\n    label: 'Render Scale Mode',\n    default_value: 0,\n    type: cmd_parse.TYPE_INT,\n    enum_lookup: {\n      LINEAR: 0,\n      NEAREST: 1,\n      CRT: 2,\n    },\n  },\n  render_scale_all: {\n    label: 'Render Scale (All)',\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0.3333,4],\n  },\n  render_scale_clear: {\n    label: 'Render Scale Full Clear',\n    default_value: 1,\n    type: cmd_parse.TYPE_INT,\n    range: [0,1],\n  },\n  fov: {\n    default_value: 60,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [1,100],\n  },\n  double_click_time: {\n    default_value: 500,\n    type: cmd_parse.TYPE_INT,\n    range: [0,2500],\n  },\n});\n","/* eslint-disable import/order */\nconst camera2d = require('./camera2d.js');\nconst { cmd_parse } = require('./cmds.js');\nconst engine = require('./engine.js');\nconst { fetch } = require('./fetch.js');\nconst glov_font = require('./font.js');\nconst input = require('glov/client/input.js');\nconst { min } = Math;\nconst { scrollAreaCreate } = require('./scroll_area.js');\nconst { shadersGetDebug } = require('./shaders.js');\nconst settings = require('./settings.js');\nconst ui = require('./ui.js');\nconst { uiTextHeight } = require('./ui.js');\nconst { errorString } = require('glov/common/util.js');\nconst { vec4 } = require('glov/common/vmath.js');\n\nZ.SHADER_DEBUG = Z.SHADER_DEBUG || 900;\n\nconst SHADER_STATS_SERVER = 'http://localhost:3000/api/shaderstats';\n\nlet shader_stats_cache = {};\nfunction getShaderStats(text, stage, peek) {\n  if (shader_stats_cache[text]) {\n    return shader_stats_cache[text].data;\n  }\n  if (peek) {\n    return null;\n  }\n  let cache = shader_stats_cache[text] = {\n    data: null,\n  };\n  fetch({\n    url: `${SHADER_STATS_SERVER}?stage=${stage}&text=${encodeURIComponent(text)}`,\n    response_type: 'json',\n  }, (err, obj) => {\n    if (err) {\n      cache.data = { err: `Fetch error: ${errorString(err)}` };\n    } else {\n      cache.data = obj;\n    }\n  });\n  return cache.data;\n}\n\nconst PAD = 4;\nconst style_title = glov_font.styleColored(null, 0x8090FFff);\nconst style = glov_font.styleColored(null, 0x222222ff);\nconst style_error = glov_font.styleColored(null, 0xDD2222ff);\nconst color_line = vec4(0.4,0.4,0.4,1);\nconst color_panel = vec4(1,1,1,1);\nconst color_invalid = vec4(0.8,0,0,1);\nconst color_selected = vec4(0.4, 0.6, 1, 1);\nlet scroll_area;\nlet scroll_area_source;\nlet selected_shader;\nfunction shaderDebugUITick() {\n  const PANEL_PAD = ui.tooltip_pad;\n  let x0 = camera2d.x0() + PANEL_PAD;\n  const y0 = camera2d.y0() + PANEL_PAD;\n  let z = Z.SHADER_DEBUG;\n  const { font, title_font } = ui;\n  const font_height = uiTextHeight();\n  let w = font_height * 20;\n  let x = x0;\n  let y = y0;\n\n  let shaders = shadersGetDebug();\n\n  title_font.drawSizedAligned(style_title, x, y, z, font_height, font.ALIGN.HCENTERFIT, w, 0,\n    `Shaders (${shaders.length})`);\n\n  if (!scroll_area) {\n    scroll_area = scrollAreaCreate({\n      z,\n      background_color: null,\n      auto_hide: true,\n    });\n    scroll_area_source = scrollAreaCreate({\n      z,\n      background_color: null,\n      auto_hide: true,\n    });\n  }\n  let sub_w = w - PAD - scroll_area.barWidth();\n  let score_w = sub_w * 0.3;\n  let subscore_w = score_w/2;\n  let button_w = sub_w - score_w - PAD;\n\n  font.draw({\n    x: x + button_w + PAD, y: y + font_height * 0.5, z,\n    w: subscore_w - 1,\n    color: 0x404040ff,\n    size: font_height * 0.5,\n    text: 'Ops',\n    align: font.ALIGN.HCENTERFIT,\n  });\n  font.draw({\n    x: x + button_w + PAD + subscore_w + 1, y: y + font_height * 0.5, z,\n    w: subscore_w - 1,\n    color: 0x404040ff,\n    size: font_height * 0.5,\n    text: 'Bytes',\n    align: font.ALIGN.HCENTERFIT,\n  });\n\n  y += font_height + 1;\n  ui.drawLine(x0 + w * 0.3, y, x0 + w * 0.7, y, z, 0.5, true, color_line);\n  y += PAD;\n\n  const max_h = camera2d.y1() - PAD - y;\n  let scroll_y_start = y;\n  scroll_area.begin({\n    x, y, w, h: max_h,\n  });\n  x = 0;\n  y = 0;\n  z = Z.UI;\n\n\n  for (let ii = 0; ii < shaders.length; ++ii) {\n    let shader = shaders[ii];\n    let filename = shader.filename.replace('shaders/', '');\n    if (shader.defines_arr.length) {\n      filename += `(${shader.defines_arr.join(',')})`;\n    }\n    if (ui.buttonText({\n      text: filename,\n      x, y, z,\n      w: button_w,\n      h: font_height,\n      color: selected_shader === shader ? color_selected : shader.valid ? undefined : color_invalid,\n      align: glov_font.ALIGN.HFIT,\n    })) {\n      if (selected_shader === shader) {\n        selected_shader = undefined;\n      } else {\n        selected_shader = shader;\n      }\n    }\n\n    let stats = getShaderStats(shader.shader_source_text, shader.type === gl.FRAGMENT_SHADER ? 'frag' : 'vert', false);\n    if (!stats || stats.err) {\n      font.draw({\n        x: x + button_w + PAD, y, z,\n        w: score_w,\n        color: stats?.err ? 0x800000ff : 0x808080ff,\n        text: stats?.err ? 'ERR' : '...',\n        align: font.ALIGN.HCENTERFIT,\n      });\n    } else {\n      let color = 0x000000ff;\n      font.draw({\n        x: x + button_w + PAD, y, z,\n        w: subscore_w - 1,\n        color,\n        text: `${stats.spirv?.count_total}`,\n        align: font.ALIGN.HCENTERFIT,\n      });\n      font.draw({\n        x: x + button_w + PAD + subscore_w + 1, y, z,\n        w: subscore_w - 1,\n        color,\n        text: stats.bin_size.toLocaleString(),\n        align: font.ALIGN.HCENTERFIT,\n      });\n    }\n\n    y += font_height;\n  }\n\n  scroll_area.end(y);\n  y = scroll_y_start + min(max_h, y);\n  z = Z.SHADER_DEBUG;\n\n  let close_button_size = font_height;\n  if (ui.buttonText({\n    x: x0 + w - close_button_size,\n    y: y0, z: z + 1,\n    w: close_button_size, h: close_button_size,\n    text: 'X',\n  })) {\n    settings.set('shader_debug', 0);\n  }\n\n  ui.panel({\n    x: x0 - PANEL_PAD, y: y0 - PANEL_PAD, z: z - 1,\n    w: w + PANEL_PAD * 2, h: y - y0 + PANEL_PAD * 2,\n    color: color_panel,\n  });\n\n  if (!selected_shader) {\n    return;\n  }\n  let shader = selected_shader;\n  x0 += w + PANEL_PAD * 2;\n  w = camera2d.x1() - PAD - x0;\n  x = x0;\n  y = y0;\n\n  font.draw({\n    x, y, z,\n    w,\n    style, text: shader.filename,\n    align: font.ALIGN.HCENTERFIT,\n  });\n  y += font_height + 1;\n  ui.drawLine(x0 + w * 0.3, y, x0 + w * 0.7, y, z, 0.5, true, color_line);\n  y += PAD;\n\n  scroll_y_start = y;\n  scroll_area_source.begin({\n    x, y, w, h: max_h,\n  });\n  sub_w = w - PAD - scroll_area_source.barWidth();\n  x = 0;\n  y = 0;\n  z = Z.UI;\n\n  if (shader.error_text) {\n    y += font.draw({\n      x, y, z,\n      w: sub_w,\n      color: 0x800000ff,\n      style, text: shader.error_text,\n      align: font.ALIGN.HWRAP,\n    });\n  }\n\n  function flatten(obj, path) {\n    for (let key in obj) {\n      if (key === 'text' || key === 'spirv_raw') {\n        continue;\n      }\n      let value = obj[key];\n      let subpath = path ? `${path}.${key}` : key;\n      if (typeof value === 'object') {\n        flatten(value, subpath);\n      } else {\n        font.draw({\n          x, y, z,\n          w: sub_w,\n          style,\n          text: `${subpath}: ${value}`,\n          align: font.ALIGN.HFIT,\n        });\n        y += font_height;\n      }\n    }\n  }\n  let stats = getShaderStats(shader.shader_source_text, shader.type === gl.FRAGMENT_SHADER ? 'frag' : 'vert');\n  if (!stats) {\n    y += font.draw({\n      x, y, z,\n      w,\n      style,\n      text: 'Loading shader stats...',\n      align: font.ALIGN.HWRAP,\n    });\n  } else if (stats.err) {\n    y += font.draw({\n      x, y, z,\n      w: sub_w,\n      style: style_error,\n      text: String(stats.err),\n      align: font.ALIGN.HWRAP,\n    });\n  } else {\n    flatten(stats);\n  }\n\n  let source_height = font_height * 0.5;\n\n  if (stats?.text) {\n    y += PAD;\n    ui.drawLine(x + w * 0.3, y, x + w * 0.7, y, z, 0.5, true, color_line);\n    y += PAD/2;\n    font.draw({\n      x, y, z,\n      w,\n      style, text: 'Analyzed Shader Source',\n      align: font.ALIGN.HCENTERFIT,\n    });\n    y += font_height + 1;\n\n    let h = font.draw({\n      x, y, z,\n      w,\n      size: source_height,\n      style, text: stats.text,\n      align: font.ALIGN.HWRAP,\n    });\n    if (input.click({ x, y, w, h })) {\n      ui.provideUserString('Analyzed shader source', stats.text);\n    }\n    y += h;\n  }\n\n  if (stats?.spirv_raw) {\n    y += PAD;\n    ui.drawLine(x + w * 0.3, y, x + w * 0.7, y, z, 0.5, true, color_line);\n    y += PAD/2;\n    font.draw({\n      x, y, z,\n      w,\n      style, text: 'SPIR-V Disassembly',\n      align: font.ALIGN.HCENTERFIT,\n    });\n    y += font_height + 1;\n\n    let h = font.draw({\n      x, y, z,\n      w,\n      size: source_height,\n      style, text: stats.spirv_raw,\n      align: font.ALIGN.HWRAP,\n    });\n    if (input.click({ x, y, w, h })) {\n      ui.provideUserString('SPIR-V Disassembly', stats.spirv_raw);\n    }\n    y += h;\n  }\n\n  y += PAD;\n  ui.drawLine(x + w * 0.3, y, x + w * 0.7, y, z, 0.5, true, color_line);\n  y += PAD/2;\n  font.draw({\n    x, y, z,\n    w,\n    style, text: 'Actual WebGL Shader Source',\n    align: font.ALIGN.HCENTERFIT,\n  });\n  y += font_height + 1;\n\n  let h = font.draw({\n    x, y, z,\n    w,\n    size: source_height,\n    style, text: shader.shader_source_text,\n    align: font.ALIGN.HWRAP,\n  });\n  if (input.click({ x, y, w, h })) {\n    ui.provideUserString('Used WebGL shader source', shader.shader_source_text);\n  }\n  y += h;\n\n  scroll_area_source.end(y);\n  y = scroll_y_start + min(max_h, y);\n  z = Z.SHADER_DEBUG;\n\n  ui.panel({\n    x: x0 - PANEL_PAD, y: y0 - PANEL_PAD, z: z - 1,\n    w: w + PANEL_PAD * 2, h: y - y0 + PANEL_PAD * 2,\n    color: color_panel,\n  });\n}\n\nexport function shaderDebugUIStartup() {\n  // Registering after startup because of needing to call engine.addTickFunc()\n  settings.register({\n    shader_debug: {\n      label: 'Shader Debug',\n      default_value: 0,\n      type: cmd_parse.TYPE_INT,\n      range: [0,1],\n      access_show: ['sysadmin'],\n      on_change: () => {\n        engine.removeTickFunc(shaderDebugUITick);\n        if (settings.shader_debug) {\n          engine.addTickFunc(shaderDebugUITick);\n        }\n      },\n    },\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport const MAX_SEMANTIC = 5;\n\nexport const SEMANTIC = {\n  'ATTR0': 0,\n  'POSITION': 0,\n  'ATTR1': 1,\n  'COLOR': 1,\n  'COLOR_0': 1,\n  'ATTR2': 2,\n  'TEXCOORD': 2,\n  'TEXCOORD_0': 2,\n  'ATTR3': 3,\n  'NORMAL': 3,\n  'ATTR4': 4,\n  'TEXCOORD_1': 4,\n};\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst engine = require('./engine.js');\nconst {\n  errorReportClear,\n  errorReportSetDetails,\n  errorReportSetDynamicDetails,\n  glovErrorReport,\n} = require('./error_report.js');\nconst { filewatchOn } = require('./filewatch.js');\nconst { matchAll, nop } = require('glov/common/util.js');\nconst { textureUnloadDynamic } = require('./textures.js');\nconst { webFSGetFile } = require('./webfs.js');\n\nlet last_id = 0;\n\nlet bound_prog = null;\n\nexport let globals;\nlet globals_used;\nlet global_defines;\n\nlet error_fp;\nlet error_fp_webgl2;\nlet error_vp;\n\nlet shaders = [];\n\nconst vp_attr_regex = /attribute [^ ]+ ([^ ;]+);/g;\nconst uniform_regex = /uniform (?:(?:low|medium|high)p )?((?:(?:vec|mat)\\d(?:x\\d)?|float) [^ ;]+);/g;\nconst sampler_regex = /uniform sampler(?:2D|Cube) ([^ ;]+);/g;\nconst include_regex = /\\n#include \"([^\"]+)\"/g;\n\nconst type_size = {\n  float: 1,\n  vec2: 2*1,\n  vec3: 3*1,\n  vec4: 4*1,\n  mat3: 3*3,\n  mat4: 4*4,\n};\n\nfunction loadInclude(filename) {\n  let text = webFSGetFile(filename, 'text');\n  return `\\n// from include \"${filename}\":\\n${text}\\n`;\n}\n\nexport function shadersResetState() {\n  for (let ii = 0; ii < shaders.length; ++ii) {\n    let shader = shaders[ii];\n    if (shader.programs) {\n      for (let fpid in shader.programs) {\n        let prog = shader.programs[fpid];\n        //gl.useProgram(prog.handle);\n        if (prog.uniforms === null) {\n          // shouldn't be possible, but is happening on FireFox\n          assert(prog.uniforms, `prog.uniforms=null, valid=${prog.valid}, fpid=${fpid},` +\n            ` vp=${shader.filename}, handle=${Boolean(prog.handle)}`);\n        }\n        for (let jj = 0; jj < prog.uniforms.length; ++jj) {\n          let unif = prog.uniforms[jj];\n          for (let kk = 0; kk < unif.size; ++kk) {\n            unif.value[kk] = NaN;\n          }\n          //uniformSetValue(unif);\n        }\n      }\n    }\n  }\n  bound_prog = null;\n  gl.useProgram(null);\n}\n\nexport function shadersSetGLErrorReportDetails() {\n  // Set some debug details we might want\n  let details = {\n    max_fragment_uniform_vectors: gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS),\n    max_varying_vectors: gl.getParameter(gl.MAX_VARYING_VECTORS),\n    max_vertex_attribs: gl.getParameter(gl.MAX_VERTEX_ATTRIBS),\n    max_vertex_uniform_vectors: gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS),\n    vendor: gl.getParameter(gl.VENDOR),\n    renderer: gl.getParameter(gl.RENDERER),\n    webgl: engine.webgl2 ? 2 : 1,\n  };\n  let debug_info = gl.getExtension('WEBGL_debug_renderer_info');\n  if (debug_info) {\n    details.renderer_unmasked = gl.getParameter(debug_info.UNMASKED_RENDERER_WEBGL);\n    details.vendor_unmasked = gl.getParameter(debug_info.UNMASKED_VENDOR_WEBGL);\n  }\n  for (let key in details) {\n    errorReportSetDetails(key, details[key]);\n  }\n}\n\nerrorReportSetDynamicDetails('context_lost', function () {\n  if (window.gl && gl.isContextLost()) {\n    return '1';\n  }\n  return '';\n});\n\nlet report_timeout = null;\nlet shader_errors;\nlet shader_errors_any_fatal;\nlet reported_shader_errors = false;\nfunction reportShaderError(non_fatal, err) {\n  function doReport() {\n    report_timeout = null;\n    let msg = `Shader error(s):\\n    ${shader_errors.join('\\n    ')}`;\n    shader_errors = null;\n    if (!gl.isContextLost()) {\n      shadersSetGLErrorReportDetails();\n      reported_shader_errors = true;\n      if (!shader_errors_any_fatal) {\n        glovErrorReport(false, msg, 'shaders.js');\n      } else {\n        assert(false, msg);\n      }\n    }\n  }\n  if (!report_timeout) {\n    report_timeout = setTimeout(doReport, 1000);\n    shader_errors = [];\n    shader_errors_any_fatal = false;\n  }\n  shader_errors_any_fatal = shader_errors_any_fatal || !non_fatal;\n  shader_errors.push(err);\n}\n\nfunction parseIncludes(parent_name, text) {\n  let supplied_uniforms = {};\n  text.replace(uniform_regex, function (str, key) {\n    supplied_uniforms[key] = true;\n  });\n  text = text.replace(include_regex, function (str, filename) {\n    let include_path = parent_name.split('/');\n    include_path.pop();\n    include_path.push(filename);\n    include_path = include_path.join('/');\n    let replacement = loadInclude(include_path);\n    if (!replacement) {\n      console.error(`Could not evaluate ${str}`);\n      return str;\n    }\n    // Remove duplicate uniforms\n    replacement = replacement.replace(uniform_regex, function (str2, key) {\n      if (supplied_uniforms[key]) {\n        return `// [removed ${key}]`;\n      }\n      supplied_uniforms[key] = true;\n      return str2;\n    });\n    return replacement;\n  });\n  return text;\n}\n\nconst webgl2_header = [\n  '#version 300 es',\n  '#define WEBGL2',\n].join('\\n');\nconst webgl2_header_fp = [\n  webgl2_header,\n  '#define varying in',\n  'out lowp vec4 fragColor;',\n  '#define gl_FragColor fragColor',\n  '#define texture2D texture',\n  '#define textureCube texture',\n  ''\n].join('\\n');\nconst webgl2_header_vp = [\n  webgl2_header,\n  '#define varying out',\n  '#define attribute in',\n  ''\n].join('\\n');\n\nfunction Shader(params) {\n  let { filename, defines, non_fatal } = params;\n  assert.equal(typeof filename, 'string');\n  let type = filename.endsWith('.fp') ? gl.FRAGMENT_SHADER : filename.endsWith('.vp') ? gl.VERTEX_SHADER : 0;\n  assert(type);\n  this.type = type;\n  this.filename = filename;\n  this.non_fatal = non_fatal;\n  this.defines_arr = (defines || []);\n  this.defines = this.defines_arr.map((a) => `#define ${a}\\n`).join('');\n  this.shader = gl.createShader(type);\n  this.id = ++last_id;\n  if (type === gl.VERTEX_SHADER) {\n    this.programs = {};\n  }\n  shaders.push(this);\n  this.compile();\n}\n\nexport function shadersGetDebug() {\n  return shaders;\n}\n\nfunction cleanShaderError(error_text) {\n  if (error_text) { // sometimes null on iOS\n    error_text = error_text.replace(/\\0/g, '').trim();\n  }\n  return error_text;\n}\n\nShader.prototype.compile = function () {\n  let { type, filename } = this;\n  let header = '';\n  let text = webFSGetFile(filename, 'text');\n  if (engine.webgl2 && text.includes('#pragma WebGL2')) {\n    header = type === gl.VERTEX_SHADER ? webgl2_header_vp : webgl2_header_fp;\n  }\n  text = `${header}${global_defines}${this.defines}${text}`;\n  text = parseIncludes(filename, text);\n  text = text.replace(/#pragma WebGL2?/g, '');\n  if (type === gl.VERTEX_SHADER) {\n    this.attributes = matchAll(text, vp_attr_regex);\n    // Ensure they are known names so we can give them indices\n    // Add to SEMANTIC[] above as needed\n    this.attributes.forEach((v) => assert(SEMANTIC[v] !== undefined));\n  } else {\n    this.samplers = matchAll(text, sampler_regex);\n    // Ensure all samplers end in a unique number\n    let found = [];\n    this.samplers.forEach((v) => {\n      let num = Number(v.slice(-1));\n      assert(!isNaN(num));\n      assert(!found[num]);\n      found[num] = true;\n    });\n  }\n  this.uniforms = matchAll(text, uniform_regex);\n  // Ensure a known type\n  this.uniforms.forEach((v) => {\n    let type_name = v.split(' ')[0];\n    assert(type_size[type_name]);\n  });\n  this.shader_source_text = text;\n\n  if (gl.isContextLost()) {\n    // will throw in gl.shaderSource on iOS or presumably error on other platforms\n    this.valid = false;\n    let error_text = this.error_text = 'Context lost';\n    if (this.defines_arr.length) {\n      filename += `(${this.defines_arr.join(',')})`;\n    }\n    console[this.non_fatal ? 'warn' : 'error'](`Error compiling ${filename}: ${error_text}`);\n    // Just silently fail, presumably context lost because the tab is being closed\n    // reportShaderError(this.non_fatal, `${filename}: ${error_text}`);\n    return;\n  }\n\n  gl.shaderSource(this.shader, text);\n  gl.compileShader(this.shader);\n\n  if (!gl.getShaderParameter(this.shader, gl.COMPILE_STATUS)) {\n    this.valid = false;\n    let error_text = this.error_text = cleanShaderError(gl.getShaderInfoLog(this.shader));\n    if (this.defines_arr.length) {\n      filename += `(${this.defines_arr.join(',')})`;\n    }\n    console[this.non_fatal ? 'warn' : 'error'](`Error compiling ${filename}: ${error_text}`);\n    reportShaderError(this.non_fatal, `${filename}: ${error_text}`);\n    console.log(text.split('\\n').map((line, idx) => `${idx+1}: ${line}`).join('\\n'));\n  } else {\n    this.valid = true;\n    if (this.error_text) {\n      delete this.error_text;\n    }\n  }\n};\n\nexport function shaderCreate(filename) {\n  if (typeof filename === 'object') {\n    return new Shader(filename);\n  }\n  return new Shader({ filename });\n}\n\nfunction uniformSetValue(unif) {\n  switch (unif.width) { // eslint-disable-line default-case\n    case 1:\n      gl.uniform1fv(unif.location, unif.value);\n      break;\n    case 2:\n      gl.uniform2fv(unif.location, unif.value);\n      break;\n    case 3:\n      gl.uniform3fv(unif.location, unif.value);\n      break;\n    case 4:\n      gl.uniform4fv(unif.location, unif.value);\n      break;\n    case 9:\n      gl.uniformMatrix3fv(unif.location, false, unif.value);\n      break;\n    case 16:\n      gl.uniformMatrix4fv(unif.location, false, unif.value);\n      break;\n  }\n}\n\nlet require_prelink = false;\nexport function shadersRequirePrelink(ensure) {\n  let old = require_prelink;\n  require_prelink = ensure;\n  return old;\n}\n\nfunction link(vp, fp, on_error) {\n  assert(!require_prelink);\n  let prog = vp.programs[fp.id] = {\n    handle: gl.createProgram(),\n    uniforms: [],\n  };\n  let error_text;\n  if (!prog.handle) {\n    // Presumably due to context loss?\n    error_text = `gl.createProgram() returned ${prog.handle}`;\n    prog.valid = false;\n  } else {\n    gl.attachShader(prog.handle, vp.shader);\n    gl.attachShader(prog.handle, fp.shader);\n    // call this for all relevant semantic\n    for (let ii = 0; ii < vp.attributes.length; ++ii) {\n      gl.bindAttribLocation(prog.handle, SEMANTIC[vp.attributes[ii]], vp.attributes[ii]);\n    }\n    gl.linkProgram(prog.handle);\n\n    prog.valid = gl.getProgramParameter(prog.handle, gl.LINK_STATUS);\n  }\n  if (!prog.valid) {\n    prog.uniforms = [];\n    error_text = error_text || cleanShaderError(gl.getProgramInfoLog(prog.handle));\n    let report = true;\n    if (gl.isContextLost()) {\n      error_text = `(Context lost) ${error_text}`;\n      report = false;\n    }\n    console.error(`Shader link error: ${error_text}`);\n    // Currently, not calling on_error if `engine.DEBUG`, we want to see our\n    //   shader errors immediately!\n    if (on_error && (!engine.DEBUG || on_error === nop)) {\n      on_error(error_text);\n    } else {\n      if (report) {\n        reportShaderError(false, `Shader link error (${vp.filename} & ${fp.filename}):` +\n          ` ${error_text}`);\n      }\n    }\n    return prog;\n  }\n\n  gl.useProgram(prog.handle);\n  bound_prog = prog;\n\n  let uniforms = vp.uniforms.slice(0);\n  for (let ii = 0; ii < fp.uniforms.length; ++ii) {\n    let name = fp.uniforms[ii];\n    if (uniforms.indexOf(name) === -1) {\n      uniforms.push(name);\n    }\n  }\n  prog.uniforms = uniforms.map((v) => {\n    v = v.split(' ');\n    let type = v[0];\n    let name = v[1];\n    let count = 1;\n    let m = name.match(/([^[]+)\\[(\\d+)\\]/);\n    if (m) {\n      name = m[1];\n      count = Number(m[2]);\n    }\n    let location = gl.getUniformLocation(prog.handle, name);\n    if (location === null) {\n      // Not in either shader, (commented out?), remove (via filter below)\n      return null;\n    }\n    let width = type_size[type];\n    let size = width * count;\n    let glob = globals[name];\n    globals_used[name] = true;\n    let value = new Float32Array(size);\n    // set initial value\n    let unif = {\n      name,\n      size,\n      width,\n      count,\n      value,\n      location,\n      glob,\n    };\n    uniformSetValue(unif);\n    return unif;\n  }).filter((v) => v);\n  assert(prog.uniforms);\n\n  for (let ii = 0; ii < fp.samplers.length; ++ii) {\n    let name = fp.samplers[ii];\n    let num = Number(name.slice(-1));\n    let location = gl.getUniformLocation(prog.handle, name);\n    if (location !== null) {\n      gl.uniform1i(location, num);\n    }\n  }\n  return prog;\n}\n\nfunction autoLink(vp, fp, on_error) {\n  let prog = vp.programs[fp.id];\n  if (!prog) {\n    prog = link(vp, fp, on_error);\n  }\n  if (!prog.valid) {\n    prog = link(vp, error_fp, nop);\n    if (!prog.valid && error_fp_webgl2) {\n      prog = link(vp, error_fp_webgl2, nop);\n    }\n    if (!prog.valid) {\n      prog = link(error_vp, error_fp, nop);\n    }\n    vp.programs[fp.id] = prog;\n  }\n  return prog;\n}\n\nexport function shadersBind(vp, fp, params) {\n  let prog = vp.programs[fp.id];\n  if (!prog) {\n    prog = autoLink(vp, fp);\n  }\n  if (prog !== bound_prog) {\n    bound_prog = prog;\n    gl.useProgram(prog.handle);\n  }\n  for (let ii = 0; ii < prog.uniforms.length; ++ii) {\n    let unif = prog.uniforms[ii];\n    let value = params[unif.name] || unif.glob;\n    if (!value) {\n      continue;\n    }\n    let diff = false;\n    for (let jj = 0; jj < unif.size; ++jj) {\n      if (value[jj] !== unif.value[jj]) {\n        diff = true;\n        break;\n      }\n    }\n    if (diff) {\n      for (let jj = 0; jj < unif.size; ++jj) {\n        unif.value[jj] = value[jj];\n      }\n      uniformSetValue(unif);\n    }\n  }\n}\n\nexport function shadersPrelink(vp, fp, params = {}, on_error) {\n  let prog = autoLink(vp, fp, on_error);\n  // In theory, only need to link, not bind, but let's push it through the pipe as far as it can to be safe.\n  if (prog.valid) {\n    shadersBind(vp, fp, params);\n  }\n  return prog.valid;\n}\n\nconst reserved = {\n  WEBGL2: 1,\n  GL_FRAGMENT_PRECISION_HIGH: 1,\n};\nexport function addReservedDefine(key) {\n  reserved[key] = 1;\n}\nlet internal_defines = {};\nfunction applyDefines() {\n  global_defines = Object.keys(engine.defines).filter((v) => !reserved[v])\n    .concat(Object.keys(internal_defines))\n    .map((v) => `#define ${v}\\n`)\n    .join('');\n}\n\nfunction shaderReload() {\n  shadersRequirePrelink(false);\n  if (shaders.length) {\n    if (reported_shader_errors) {\n      errorReportClear();\n      reported_shader_errors = false;\n    }\n    gl.useProgram(null);\n    for (let ii = 0; ii < shaders.length; ++ii) {\n      let programs = shaders[ii].programs;\n      if (programs) {\n        for (let id in programs) {\n          gl.deleteProgram(programs[id].handle);\n        }\n        shaders[ii].programs = {};\n      }\n    }\n    for (let ii = 0; ii < shaders.length; ++ii) {\n      shaders[ii].compile();\n    }\n    textureUnloadDynamic();\n  }\n}\n\nexport function shadersHandleDefinesChanged() {\n  applyDefines();\n  shaderReload();\n}\n\nexport function shadersSetInternalDefines(new_values) {\n  for (let key in new_values) {\n    if (new_values[key]) {\n      internal_defines[key] = new_values[key];\n    } else {\n      delete internal_defines[key];\n    }\n  }\n  shadersHandleDefinesChanged();\n}\n\nfunction onShaderChange(filename) {\n  shaderReload();\n}\n\nexport function shadersStartup(_globals) {\n  applyDefines();\n  globals = _globals;\n  globals_used = {};\n\n  error_fp = shaderCreate('shaders/error.fp');\n  if (engine.webgl2) {\n    error_fp_webgl2 = shaderCreate('shaders/error_gl2.fp');\n  }\n  error_vp = shaderCreate('shaders/error.vp');\n\n  filewatchOn('.fp', onShaderChange);\n  filewatchOn('.vp', onShaderChange);\n\n  let valid = error_fp.valid && error_vp.valid;\n  if (valid) {\n    let prog = autoLink(error_vp, error_fp);\n    if (!prog || !prog.valid) {\n      valid = false;\n    }\n  }\n  if (!valid) {\n    // do _not_ send immediate error reports about these, we have an invalid context of some kind\n    clearTimeout(report_timeout);\n  }\n  return valid;\n}\n\nexport function shadersAddGlobal(key, vec) {\n  assert(!globals[key]);\n  assert(!globals_used[key]); // A shader has already been prelinked referencing this global\n  globals[key] = vec;\n  for (let ii = 0; ii < vec.length; ++ii) {\n    assert(isFinite(vec[ii]));\n  }\n}\n\n// Legacy APIs\nexports.create = shaderCreate;\nexports.semantic = SEMANTIC;\nexports.addGlobal = shadersAddGlobal;\nexports.bind = shadersBind;\nexports.prelink = shadersPrelink;\n","/* eslint-disable prefer-spread, no-regex-spaces, @typescript-eslint/no-unused-vars, guard-for-in, no-console, no-var */\n/* eslint-disable indent,object-curly-spacing,quotes,max-len,valid-jsdoc,func-style,no-eq-null,prefer-template,operator-linebreak,operator-assignment,no-script-url,wrap-iife,no-underscore-dangle*/\n/* eslint-disable no-implicit-coercion,wrap-regex,space-before-function-paren */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n/**\n * From: https://github.com/Khan/perseus/tree/main/packages/simple-markdown @ 1502859\n *\n * Modified for GLOV.js:\n *   ESLint / TS warning ignores\n *   Remove HTML/React-specific output logic and related and deprecate exports\n * All modifications are simply commenting out existing lines, or adding a type to fix a TS error\n */\n\n/**\n * Simple-Markdown\n * ===============\n *\n * Simple-Markdown's primary goal is to be easy to adapt. It aims\n * to be compliant with John Gruber's [Markdown Syntax page][1],\n * but compatiblity with other markdown implementations' edge-cases\n * will be sacrificed where it conflicts with simplicity or\n * extensibility.\n *\n * If your goal is to simply embed a standard markdown implementation\n * in your website, simple-markdown is probably not the best library\n * for you (although it should work). But if you have struggled to\n * customize an existing library to meet your needs, simple-markdown\n * might be able to help.\n *\n * Many of the regexes and original logic has been adapted from\n * the wonderful [marked.js](https://github.com/chjj/marked)\n */\nimport type {Capture, MatchFunction, State} from \"./troublesome-types\";\n// import type * as React from \"react\";\n\n// export {libVersion} from \"./version\";\n\n// Type Definitions:\n\ntype Attr = string | number | boolean | null | undefined;\n\ntype SingleASTNode = {\n    type: string;\n    [key: string]: any;\n};\n\ntype UnTypedASTNode = {\n    [key: string]: any;\n};\n\ntype ASTNode = SingleASTNode | Array<SingleASTNode>;\n\n// type ReactElement = React.ReactElement<any>;\n// type ReactElements = React.ReactNode;\n\ntype Parser = (\n    source: string,\n    state?: State | null | undefined,\n) => Array<SingleASTNode>;\n\ntype ParseFunction = (\n    capture: Capture,\n    nestedParse: Parser,\n    state: State,\n) => UnTypedASTNode | ASTNode;\n\ntype SingleNodeParseFunction = (\n    capture: Capture,\n    nestedParse: Parser,\n    state: State,\n) => UnTypedASTNode;\n\n// type Output<Result> = (\n//     node: ASTNode,\n//     state?: State | null | undefined,\n// ) => Result;\n\n// type NodeOutput<Result> = (\n//     node: SingleASTNode,\n//     nestedOutput: Output<Result>,\n//     state: State,\n// ) => Result;\n\n// type ArrayNodeOutput<Result> = (\n//     node: Array<SingleASTNode>,\n//     nestedOutput: Output<Result>,\n//     state: State,\n// ) => Result;\n\n// type ReactOutput = Output<ReactElements>;\n// type ReactNodeOutput = NodeOutput<ReactElements>;\n// type HtmlOutput = Output<string>;\n// type HtmlNodeOutput = NodeOutput<string>;\n\ntype ParserRule = {\n    readonly order: number;\n    readonly match: MatchFunction;\n    readonly quality?: (\n        capture: Capture,\n        state: State,\n        prevCapture: string,\n    ) => number;\n    readonly parse: ParseFunction;\n};\n\ntype SingleNodeParserRule = {\n    readonly order: number;\n    readonly match: MatchFunction;\n    readonly quality?: (\n        capture: Capture,\n        state: State,\n        prevCapture: string,\n    ) => number;\n    readonly parse: SingleNodeParseFunction;\n};\n\n// type ReactOutputRule = {\n//     // we allow null because some rules are never output results, and that's\n//     // legal as long as no parsers return an AST node matching that rule.\n//     // We don't use ? because this makes it be explicitly defined as either\n//     // a valid function or null, so it can't be forgotten.\n//     readonly react: ReactNodeOutput | null;\n// };\n\n// type HtmlOutputRule = {\n//     readonly html: HtmlNodeOutput | null;\n// };\n\n// type ArrayRule = {\n//     // @ts-expect-error - TS2411 - Property 'react' of type 'ArrayNodeOutput<ReactNode> | undefined' is not assignable to 'string' index type 'ArrayNodeOutput<any>'.\n//     readonly react?: ArrayNodeOutput<ReactElements>;\n//     // @ts-expect-error - TS2411 - Property 'html' of type 'ArrayNodeOutput<string> | undefined' is not assignable to 'string' index type 'ArrayNodeOutput<any>'.\n//     readonly html?: ArrayNodeOutput<string>;\n//     readonly [key: string]: ArrayNodeOutput<any>;\n// };\n\ntype ParserRules = {\n    // // @ts-expect-error - TS2411 - Property 'Array' of type 'ArrayRule | undefined' is not assignable to 'string' index type 'ParserRule'.\n    // readonly Array?: ArrayRule;\n    readonly [type: string]: ParserRule;\n};\n\ntype OutputRules<Rule> = {\n    // // @ts-expect-error - TS2411 - Property 'Array' of type 'ArrayRule | undefined' is not assignable to 'string' index type 'Rule'.\n    // readonly Array?: ArrayRule;\n    readonly [type: string]: Rule;\n};\ntype Rules<OutputRule> = {\n    // // @ts-expect-error - TS2411 - Property 'Array' of type 'ArrayRule | undefined' is not assignable to 'string' index type 'ParserRule & OutputRule'.\n    // readonly Array?: ArrayRule;\n    readonly [type: string]: ParserRule & OutputRule;\n};\n// type ReactRules = {\n//     // @ts-expect-error - TS2411 - Property 'Array' of type '{ readonly react: ArrayNodeOutput<ReactNode>; } | undefined' is not assignable to 'string' index type 'ParserRule & ReactOutputRule'.\n//     readonly Array?: {\n//         readonly react: ArrayNodeOutput<ReactElements>;\n//     };\n//     readonly [type: string]: ParserRule & ReactOutputRule;\n// };\n// type HtmlRules = {\n//     // @ts-expect-error - TS2411 - Property 'Array' of type '{ readonly html: ArrayNodeOutput<string>; } | undefined' is not assignable to 'string' index type 'ParserRule & HtmlOutputRule'.\n//     readonly Array?: {\n//         readonly html: ArrayNodeOutput<string>;\n//     };\n//     readonly [type: string]: ParserRule & HtmlOutputRule;\n// };\n\n// We want to clarify our defaultRules types a little bit more so clients can\n// reuse defaultRules built-ins. So we make some stronger guarantess when\n// we can:\n// type NonNullReactOutputRule = {\n//     readonly react: ReactNodeOutput;\n// };\n// type ElementReactOutputRule = {\n//     readonly react: NodeOutput<ReactElement>;\n// };\n// type TextReactOutputRule = {\n//     readonly react: NodeOutput<string>;\n// };\n// type NonNullHtmlOutputRule = {\n//     readonly html: HtmlNodeOutput;\n// };\n\n// type DefaultInRule = SingleNodeParserRule & ReactOutputRule & HtmlOutputRule;\n// type TextInOutRule = SingleNodeParserRule &\n//     TextReactOutputRule &\n//     NonNullHtmlOutputRule;\n// type LenientInOutRule = SingleNodeParserRule &\n//     NonNullReactOutputRule &\n//     NonNullHtmlOutputRule;\n// type DefaultInOutRule = SingleNodeParserRule &\n//     ElementReactOutputRule &\n//     NonNullHtmlOutputRule;\ntype DefaultInRule = SingleNodeParserRule;\ntype TextInOutRule = SingleNodeParserRule;\ntype LenientInOutRule = SingleNodeParserRule;\ntype DefaultInOutRule = SingleNodeParserRule;\n\ntype DefaultRules = {\n    // readonly Array: {\n    //     readonly react: ArrayNodeOutput<ReactElements>;\n    //     readonly html: ArrayNodeOutput<string>;\n    // };\n    readonly heading: DefaultInOutRule;\n    readonly nptable: DefaultInRule;\n    readonly lheading: DefaultInRule;\n    readonly hr: DefaultInOutRule;\n    readonly codeBlock: DefaultInOutRule;\n    readonly fence: DefaultInRule;\n    readonly blockQuote: DefaultInOutRule;\n    readonly list: DefaultInOutRule;\n    readonly def: LenientInOutRule;\n    readonly table: DefaultInOutRule;\n    readonly tableSeparator: DefaultInRule;\n    readonly newline: TextInOutRule;\n    readonly paragraph: DefaultInOutRule;\n    readonly escape: DefaultInRule;\n    readonly autolink: DefaultInRule;\n    readonly mailto: DefaultInRule;\n    readonly url: DefaultInRule;\n    readonly link: DefaultInOutRule;\n    readonly image: DefaultInOutRule;\n    readonly reflink: DefaultInRule;\n    readonly refimage: DefaultInRule;\n    readonly em: DefaultInOutRule;\n    readonly strong: DefaultInOutRule;\n    readonly u: DefaultInOutRule;\n    readonly del: DefaultInOutRule;\n    readonly inlineCode: DefaultInOutRule;\n    readonly br: DefaultInOutRule;\n    readonly text: TextInOutRule;\n};\n\ntype RefNode = {\n    type: string;\n    content?: ASTNode;\n    target?: string;\n    title?: string;\n    alt?: string;\n};\n\n// End TypeScript Definitions\n\nvar CR_NEWLINE_R = /\\r\\n?/g;\nvar TAB_R = /\\t/g;\nvar FORMFEED_R = /\\f/g;\n\n/**\n * Turn various whitespace into easy-to-process whitespace\n */\nvar preprocess = function (source: string): string {\n    return source\n        .replace(CR_NEWLINE_R, \"\\n\")\n        .replace(FORMFEED_R, \"\")\n        .replace(TAB_R, \"    \");\n};\n\nvar populateInitialState = function (\n    givenState?: State | null,\n    defaultState?: State | null,\n): State {\n    var state: State = givenState || {};\n    if (defaultState != null) {\n        for (var prop in defaultState) {\n            if (Object.prototype.hasOwnProperty.call(defaultState, prop)) {\n                state[prop] = defaultState[prop];\n            }\n        }\n    }\n    return state;\n};\n\n/**\n * Creates a parser for a given set of rules, with the precedence\n * specified as a list of rules.\n *\n * @param {SimpleMarkdown.ParserRules} rules\n *     an object containing\n *     rule type -> {match, order, parse} objects\n *     (lower order is higher precedence)\n * @param {SimpleMarkdown.OptionalState} [defaultState]\n *\n * @returns {SimpleMarkdown.Parser}\n *     The resulting parse function, with the following parameters:\n *     @source: the input source string to be parsed\n *     @state: an optional object to be threaded through parse\n *         calls. Allows clients to add stateful operations to\n *         parsing, such as keeping track of how many levels deep\n *         some nesting is. For an example use-case, see passage-ref\n *         parsing in src/widgets/passage/passage-markdown.jsx\n */\nvar parserFor = function (\n    rules: ParserRules,\n    defaultState?: State | null,\n): Parser {\n    // Sorts rules in order of increasing order, then\n    // ascending rule name in case of ties.\n    var ruleList = Object.keys(rules).filter(function (type) {\n        var rule = rules[type];\n        if (rule == null || rule.match == null) {\n            return false;\n        }\n        var order = rule.order;\n        if (\n            (typeof order !== \"number\" || !isFinite(order)) &&\n            typeof console !== \"undefined\"\n        ) {\n            console.warn(\n                \"simple-markdown: Invalid order for rule `\" +\n                    type +\n                    \"`: \" +\n                    String(order),\n            );\n        }\n        return true;\n    });\n\n    ruleList.sort(function (typeA, typeB) {\n        var ruleA: ParserRule = rules[typeA] as any;\n        var ruleB: ParserRule = rules[typeB] as any;\n        var orderA = ruleA.order;\n        var orderB = ruleB.order;\n\n        // First sort based on increasing order\n        if (orderA !== orderB) {\n            return orderA - orderB;\n        }\n\n        var secondaryOrderA = ruleA.quality ? 0 : 1;\n        var secondaryOrderB = ruleB.quality ? 0 : 1;\n\n        if (secondaryOrderA !== secondaryOrderB) {\n            return secondaryOrderA - secondaryOrderB;\n\n            // Then based on increasing unicode lexicographic ordering\n        } else if (typeA < typeB) {\n            return -1;\n        } else if (typeA > typeB) {\n            return 1;\n        } else {\n            // Rules should never have the same name,\n            // but this is provided for completeness.\n            return 0;\n        }\n    });\n\n    var latestState: State;\n    var nestedParse: Parser = function (\n        source: string,\n        state?: State | null,\n    ): Array<SingleASTNode> {\n        var result: Array<SingleASTNode> = [];\n        state = state || latestState;\n        latestState = state;\n        while (source) {\n            // store the best match, it's rule, and quality:\n            var ruleType = null;\n            var rule = null;\n            var capture = null;\n            var quality = NaN;\n\n            // loop control variables:\n            var i = 0;\n            var currRuleType = ruleList[0];\n\n            var currRule: ParserRule = rules[currRuleType];\n\n            do {\n                var currOrder = currRule.order;\n                var prevCaptureStr =\n                    state.prevCapture == null ? \"\" : state.prevCapture[0];\n                var currCapture = currRule.match(source, state, prevCaptureStr);\n\n                if (currCapture) {\n                    var currQuality = currRule.quality\n                        ? currRule.quality(currCapture, state, prevCaptureStr)\n                        : 0;\n                    // This should always be true the first time because\n                    // the initial quality is NaN (that's why there's the\n                    // condition negation).\n                    if (!(currQuality <= quality)) {\n                        // // @ts-expect-error - TS2322 - Type 'string' is not assignable to type 'null'.\n                        ruleType = currRuleType;\n                        // // @ts-expect-error - TS2322 - Type 'ParserRule' is not assignable to type 'null'.\n                        rule = currRule;\n                        // // @ts-expect-error - TS2322 - Type 'Capture' is not assignable to type 'null'.\n                        capture = currCapture;\n                        quality = currQuality;\n                    }\n                }\n\n                // Move on to the next item.\n                // Note that this makes `currRule` be the next item\n                i++;\n                currRuleType = ruleList[i];\n                currRule = rules[currRuleType];\n            } while (\n                // keep looping while we're still within the ruleList\n                currRule &&\n                // if we don't have a match yet, continue\n                (!capture ||\n                    // or if we have a match, but the next rule is\n                    // at the same order, and has a quality measurement\n                    // functions, then this rule must have a quality\n                    // measurement function (since they are sorted before\n                    // those without), and we need to check if there is\n                    // a better quality match\n                    // eslint-disable-next-line block-scoped-var\n                    (currRule.order === currOrder && currRule.quality))\n            );\n\n            // TODO(aria): Write tests for these\n            if (rule == null || capture == null) {\n                throw new Error(\n                    \"Could not find a matching rule for the below \" +\n                        \"content. The rule with highest `order` should \" +\n                        \"always match content provided to it. Check \" +\n                        \"the definition of `match` for '\" +\n                        ruleList[ruleList.length - 1] +\n                        \"'. It seems to not match the following source:\\n\" +\n                        source,\n                );\n            }\n            // // @ts-expect-error - TS2339 - Property 'index' does not exist on type 'never'.\n            if (capture.index) {\n                // If present and non-zero, i.e. a non-^ regexp result:\n                throw new Error(\n                    \"`match` must return a capture starting at index 0 \" +\n                        \"(the current parse index). Did you forget a ^ at the \" +\n                        \"start of the RegExp?\",\n                );\n            }\n\n            // // @ts-expect-error - TS2339 - Property 'parse' does not exist on type 'never'.\n            var parsed = rule.parse(capture, nestedParse, state);\n            // We maintain the same object here so that rules can\n            // store references to the objects they return and\n            // modify them later. (oops sorry! but this adds a lot\n            // of power--see reflinks.)\n            if (Array.isArray(parsed)) {\n                Array.prototype.push.apply(result, parsed);\n            } else {\n                if (parsed == null || typeof parsed !== \"object\") {\n                    throw new Error(\n                        `parse() function returned invalid parse result: '${parsed}'`,\n                    );\n                }\n\n                // We also let rules override the default type of\n                // their parsed node if they would like to, so that\n                // there can be a single output function for all links,\n                // even if there are several rules to parse them.\n                if (parsed.type == null) {\n                    parsed.type = ruleType;\n                }\n                result.push(parsed as SingleASTNode);\n            }\n\n            state.prevCapture = capture;\n            source = source.substring(state.prevCapture[0].length);\n        }\n\n        return result;\n    };\n\n    var outerParse: Parser = function (\n        source: string,\n        state?: State | null,\n    ): Array<SingleASTNode> {\n        latestState = populateInitialState(state, defaultState);\n        if (!latestState.inline && !latestState.disableAutoBlockNewlines) {\n            source = source + \"\\n\\n\";\n        }\n        // We store the previous capture so that match functions can\n        // use some limited amount of lookbehind. Lists use this to\n        // ensure they don't match arbitrary '- ' or '* ' in inline\n        // text (see the list rule for more information). This stores\n        // the full regex capture object, if there is one.\n        latestState.prevCapture = null;\n        return nestedParse(preprocess(source), latestState);\n    };\n\n    return outerParse;\n};\n\n// Creates a match function for an inline scoped element from a regex\nvar inlineRegex = function (regex: RegExp): MatchFunction {\n    var match = function (\n        source: string,\n        state: State,\n        prevCapture: string,\n    ): Capture | null | undefined {\n        if (state.inline) {\n            return regex.exec(source);\n        } else {\n            return null;\n        }\n    };\n    // @ts-expect-error - TS2339 - Property 'regex' does not exist on type '(source: string, state: State, prevCapture: string) => Capture | null | undefined'.\n    match.regex = regex;\n\n    return match;\n};\n\n// Creates a match function for a block scoped element from a regex\nvar blockRegex = function (regex: RegExp): MatchFunction {\n    var match: MatchFunction = function (source, state) {\n        if (state.inline) {\n            return null;\n        } else {\n            return regex.exec(source);\n        }\n    };\n    match.regex = regex;\n    return match;\n};\n\n// Creates a match function from a regex, ignoring block/inline scope\nvar anyScopeRegex = function (regex: RegExp): MatchFunction {\n    var match: MatchFunction = function (source, state) {\n        return regex.exec(source);\n    };\n    match.regex = regex;\n    return match;\n};\n\n// var TYPE_SYMBOL =\n//     (typeof Symbol === \"function\" &&\n//         Symbol.for &&\n//         Symbol.for(\"react.element\")) ||\n//     0xeac7;\n\n// var reactElement = function (\n//     type: string,\n//     key: string | number | null | undefined,\n//     props: {\n//         [key: string]: any;\n//     },\n// ): ReactElement {\n//     var element: ReactElement = {\n//         $$typeof: TYPE_SYMBOL,\n//         type: type,\n//         key: key == null ? undefined : key,\n//         ref: null,\n//         props: props,\n//         _owner: null,\n//     } as any;\n//     return element;\n// };\n\n// /** Returns a closed HTML tag.\n//  * @param {string} tagName - Name of HTML tag (eg. \"em\" or \"a\")\n//  * @param {string} content - Inner content of tag\n//  * @param {{ [attr: string]: SimpleMarkdown.Attr }} [attributes] - Optional extra attributes of tag as an object of key-value pairs\n//  *   eg. { \"href\": \"http://google.com\" }. Falsey attributes are filtered out.\n//  * @param {boolean} [isClosed] - boolean that controls whether tag is closed or not (eg. img tags).\n//  *   defaults to true\n//  */\n// var htmlTag = function (\n//     tagName: string,\n//     content: string,\n//     attributes?: Partial<Record<any, Attr | null | undefined>> | null,\n//     isClosed?: boolean | null,\n// ) {\n//     attributes = attributes || {};\n//     isClosed = typeof isClosed !== \"undefined\" ? isClosed : true;\n\n//     var attributeString = \"\";\n//     for (var attr in attributes) {\n//         var attribute = attributes[attr];\n//         // Removes falsey attributes\n//         if (\n//             Object.prototype.hasOwnProperty.call(attributes, attr) &&\n//             attribute\n//         ) {\n//             attributeString +=\n//                 \" \" + sanitizeText(attr) + '=\"' + sanitizeText(attribute) + '\"';\n//         }\n//     }\n\n//     var unclosedTag = \"<\" + tagName + attributeString + \">\";\n\n//     if (isClosed) {\n//         return unclosedTag + content + \"</\" + tagName + \">\";\n//     } else {\n//         return unclosedTag;\n//     }\n// };\n\n// var EMPTY_PROPS: Record<string, any> = {};\n\n// /**\n//  * @param {string | null | undefined} url - url to sanitize\n//  * @returns {string | null} - url if safe, or null if a safe url could not be made\n//  */\n// var sanitizeUrl = function (url?: string | null) {\n//     if (url == null) {\n//         return null;\n//     }\n//     try {\n//         var prot = new URL(url, \"https://localhost\").protocol;\n//         if (\n//             prot.indexOf(\"javascript:\") === 0 ||\n//             prot.indexOf(\"vbscript:\") === 0 ||\n//             prot.indexOf(\"data:\") === 0\n//         ) {\n//             return null;\n//         }\n//     } catch (e: any) {\n//         // invalid URLs should throw a TypeError\n//         // see for instance: `new URL(\"\");`\n//         return null;\n//     }\n//     return url;\n// };\n\n// var SANITIZE_TEXT_R = /[<>&\"']/g;\n// var SANITIZE_TEXT_CODES = {\n//     \"<\": \"&lt;\",\n//     \">\": \"&gt;\",\n//     \"&\": \"&amp;\",\n//     '\"': \"&quot;\",\n//     \"'\": \"&#x27;\",\n//     \"/\": \"&#x2F;\",\n//     \"`\": \"&#96;\",\n// };\n\n// var sanitizeText = function (text: Attr): string {\n//     return String(text).replace(SANITIZE_TEXT_R, function (chr) {\n//         return SANITIZE_TEXT_CODES[chr];\n//     });\n// };\n\nvar UNESCAPE_URL_R = /\\\\([^0-9A-Za-z\\s])/g;\n\nvar unescapeUrl = function (rawUrlString: string): string {\n    return rawUrlString.replace(UNESCAPE_URL_R, \"$1\");\n};\n\n/**\n * Parse some content with the parser `parse`, with state.inline\n * set to true. Useful for block elements; not generally necessary\n * to be used by inline elements (where state.inline is already true.\n */\nvar parseInline = function (\n    parse: Parser,\n    content: string,\n    state: State,\n): ASTNode {\n    var isCurrentlyInline = state.inline || false;\n    state.inline = true;\n    var result = parse(content, state);\n    state.inline = isCurrentlyInline;\n    return result;\n};\n\nvar parseBlock = function (\n    parse: Parser,\n    content: string,\n    state: State,\n): ASTNode {\n    var isCurrentlyInline = state.inline || false;\n    state.inline = false;\n    var result = parse(content + \"\\n\\n\", state);\n    state.inline = isCurrentlyInline;\n    return result;\n};\n\nvar parseCaptureInline = function (\n    capture: Capture,\n    parse: Parser,\n    state: State,\n): UnTypedASTNode {\n    return {\n        content: parseInline(parse, capture[1], state),\n    };\n};\n\nvar ignoreCapture = function (): UnTypedASTNode {\n    return {};\n};\n\n// recognize a `*` `-`, `+`, `1.`, `2.`... list bullet\nvar LIST_BULLET = \"(?:[*+-]|\\\\d+\\\\.)\";\n// recognize the start of a list item:\n// leading space plus a bullet plus a space (`   * `)\nvar LIST_ITEM_PREFIX = \"( *)(\" + LIST_BULLET + \") +\";\nvar LIST_ITEM_PREFIX_R = new RegExp(\"^\" + LIST_ITEM_PREFIX);\n// recognize an individual list item:\n//  * hi\n//    this is part of the same item\n//\n//    as is this, which is a new paragraph in the same item\n//\n//  * but this is not part of the same item\nvar LIST_ITEM_R = new RegExp(\n    LIST_ITEM_PREFIX +\n        \"[^\\\\n]*(?:\\\\n\" +\n        \"(?!\\\\1\" +\n        LIST_BULLET +\n        \" )[^\\\\n]*)*(\\n|$)\",\n    \"gm\",\n);\nvar BLOCK_END_R = /\\n{2,}$/;\nvar INLINE_CODE_ESCAPE_BACKTICKS_R = /^ (?= *`)|(` *) $/g;\n// recognize the end of a paragraph block inside a list item:\n// two or more newlines at end end of the item\nvar LIST_BLOCK_END_R = BLOCK_END_R;\nvar LIST_ITEM_END_R = / *\\n+$/;\n// check whether a list item has paragraphs: if it does,\n// we leave the newlines at the end\nvar LIST_R = new RegExp(\n    \"^( *)(\" +\n        LIST_BULLET +\n        \") \" +\n        \"[\\\\s\\\\S]+?(?:\\n{2,}(?! )\" +\n        \"(?!\\\\1\" +\n        LIST_BULLET +\n        \" )\\\\n*\" +\n        // the \\\\s*$ here is so that we can parse the inside of nested\n        // lists, where our content might end before we receive two `\\n`s\n        \"|\\\\s*\\n*$)\",\n);\nvar LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/;\n\nvar TABLES = (function () {\n    // predefine regexes so we don't have to create them inside functions\n    // sure, regex literals should be fast, even inside functions, but they\n    // aren't in all browsers.\n    var TABLE_BLOCK_TRIM = /\\n+/g;\n    var TABLE_ROW_SEPARATOR_TRIM = /^ *\\| *| *\\| *$/g;\n    var TABLE_CELL_END_TRIM = / *$/;\n    var TABLE_RIGHT_ALIGN = /^ *-+: *$/;\n    var TABLE_CENTER_ALIGN = /^ *:-+: *$/;\n    var TABLE_LEFT_ALIGN = /^ *:-+ *$/;\n\n    // TODO: This needs a real type\n    type TableAlignment = any;\n\n    var parseTableAlignCapture = function (\n        alignCapture: string,\n    ): TableAlignment {\n        if (TABLE_RIGHT_ALIGN.test(alignCapture)) {\n            return \"right\";\n        } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {\n            return \"center\";\n        } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {\n            return \"left\";\n        } else {\n            return null;\n        }\n    };\n\n    var parseTableAlign = function (\n        source: string,\n        parse: Parser,\n        state: State,\n        trimEndSeparators: boolean,\n    ): Array<TableAlignment> {\n        if (trimEndSeparators) {\n            source = source.replace(TABLE_ROW_SEPARATOR_TRIM, \"\");\n        }\n        var alignText = source.trim().split(\"|\");\n        return alignText.map(parseTableAlignCapture);\n    };\n\n    var parseTableRow = function (\n        source: string,\n        parse: Parser,\n        state: State,\n        trimEndSeparators: boolean,\n    ): Array<Array<SingleASTNode>> {\n        var prevInTable = state.inTable;\n        state.inTable = true;\n        var tableRow = parse(source.trim(), state);\n        state.inTable = prevInTable;\n\n        var cells = [[]];\n        tableRow.forEach(function (node, i) {\n            if (node.type === \"tableSeparator\") {\n                // Filter out empty table separators at the start/end:\n                if (\n                    !trimEndSeparators ||\n                    (i !== 0 && i !== tableRow.length - 1)\n                ) {\n                    // Split the current row:\n                    cells.push([]);\n                }\n            } else {\n                if (\n                    node.type === \"text\" &&\n                    (tableRow[i + 1] == null ||\n                        tableRow[i + 1].type === \"tableSeparator\")\n                ) {\n                    node.content = node.content.replace(\n                        TABLE_CELL_END_TRIM,\n                        \"\",\n                    );\n                }\n                // @ts-expect-error - TS2345 - Argument of type 'SingleASTNode' is not assignable to parameter of type 'never'.\n                cells[cells.length - 1].push(node);\n            }\n        });\n\n        return cells;\n    };\n\n    /**\n     * @param {string} source\n     * @param {SimpleMarkdown.Parser} parse\n     * @param {SimpleMarkdown.State} state\n     * @param {boolean} trimEndSeparators\n     * @returns {SimpleMarkdown.ASTNode[][]}\n     */\n    var parseTableCells = function (\n        source: string,\n        parse: Parser,\n        state: State,\n        trimEndSeparators: boolean,\n    ): Array<Array<ASTNode>> {\n        var rowsText = source.trim().split(\"\\n\");\n\n        return rowsText.map(function (rowText) {\n            return parseTableRow(rowText, parse, state, trimEndSeparators);\n        });\n    };\n\n    /**\n     * @param {boolean} trimEndSeparators\n     * @returns {SimpleMarkdown.SingleNodeParseFunction}\n     */\n    var parseTable = function (trimEndSeparators: boolean) {\n        return function (capture: Capture, parse: Parser, state: State) {\n            state.inline = true;\n            var header = parseTableRow(\n                capture[1],\n                parse,\n                state,\n                trimEndSeparators,\n            );\n            var align = parseTableAlign(\n                capture[2],\n                parse,\n                state,\n                trimEndSeparators,\n            );\n            var cells = parseTableCells(\n                capture[3],\n                parse,\n                state,\n                trimEndSeparators,\n            );\n            state.inline = false;\n\n            return {\n                type: \"table\",\n                header: header,\n                align: align,\n                cells: cells,\n            };\n        };\n    };\n\n    return {\n        parseTable: parseTable(true),\n        parseNpTable: parseTable(false),\n        TABLE_REGEX:\n            /^ *(\\|.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/,\n        NPTABLE_REGEX:\n            /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    };\n})();\n\nvar LINK_INSIDE = \"(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*\";\nvar LINK_HREF_AND_TITLE =\n    \"\\\\s*<?((?:\\\\([^)]*\\\\)|[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+['\\\"]([\\\\s\\\\S]*?)['\\\"])?\\\\s*\";\nvar AUTOLINK_MAILTO_CHECK_R = /mailto:/i;\n\nvar parseRef = function (\n    capture: Capture,\n    state: State,\n    refNode: RefNode,\n): RefNode {\n    var ref = (capture[2] || capture[1]).replace(/\\s+/g, \" \").toLowerCase();\n\n    // We store information about previously seen defs on\n    // state._defs (_ to deconflict with client-defined\n    // state). If the def for this reflink/refimage has\n    // already been seen, we can use its target/source\n    // and title here:\n    if (state._defs && state._defs[ref]) {\n        var def = state._defs[ref];\n        // `refNode` can be a link or an image. Both use\n        // target and title properties.\n        refNode.target = def.target;\n        refNode.title = def.title;\n    }\n\n    // In case we haven't seen our def yet (or if someone\n    // overwrites that def later on), we add this node\n    // to the list of ref nodes for that def. Then, when\n    // we find the def, we can modify this link/image AST\n    // node :).\n    // I'm sorry.\n    state._refs = state._refs || {};\n    state._refs[ref] = state._refs[ref] || [];\n    state._refs[ref].push(refNode);\n\n    return refNode;\n};\n\nvar currOrder = 0;\n\nvar defaultRules: DefaultRules = {\n    // Array: {\n    //     react: function (arr, output, state) {\n    //         var oldKey = state.key;\n    //         var result: Array<ReactElements> = [];\n\n    //         // map output over the ast, except group any text\n    //         // nodes together into a single string output.\n    //         for (var i = 0, key = 0; i < arr.length; i++, key++) {\n    //             // `key` is our numerical `state.key`, which we increment for\n    //             // every output node, but don't change for joined text nodes.\n    //             // (i, however, must change for joined text nodes)\n    //             state.key = \"\" + i;\n\n    //             var node = arr[i];\n    //             if (node.type === \"text\") {\n    //                 node = {type: \"text\", content: node.content};\n    //                 for (\n    //                     ;\n    //                     i + 1 < arr.length && arr[i + 1].type === \"text\";\n    //                     i++\n    //                 ) {\n    //                     node.content += arr[i + 1].content;\n    //                 }\n    //             }\n\n    //             result.push(output(node, state));\n    //         }\n\n    //         state.key = oldKey;\n    //         return result;\n    //     },\n    //     html: function (arr, output, state) {\n    //         var result = \"\";\n\n    //         // map output over the ast, except group any text\n    //         // nodes together into a single string output.\n    //         for (var i = 0, key = 0; i < arr.length; i++) {\n    //             var node = arr[i];\n    //             if (node.type === \"text\") {\n    //                 node = {type: \"text\", content: node.content};\n    //                 for (\n    //                     ;\n    //                     i + 1 < arr.length && arr[i + 1].type === \"text\";\n    //                     i++\n    //                 ) {\n    //                     node.content += arr[i + 1].content;\n    //                 }\n    //             }\n\n    //             result += output(node, state);\n    //         }\n    //         return result;\n    //     },\n    // },\n    heading: {\n        order: currOrder++,\n        match: blockRegex(/^ *(#{1,6})([^\\n]+?)#* *(?:\\n *)+\\n/),\n        parse: function (capture, parse, state) {\n            return {\n                level: capture[1].length,\n                content: parseInline(parse, capture[2].trim(), state),\n            };\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"h\" + node.level, state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"h\" + node.level, output(node.content, state));\n        // },\n    },\n    nptable: {\n        order: currOrder++,\n        match: blockRegex(TABLES.NPTABLE_REGEX),\n        parse: TABLES.parseNpTable,\n        // react: null,\n        // html: null,\n    },\n    lheading: {\n        order: currOrder++,\n        match: blockRegex(/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/),\n        parse: function (capture, parse, state) {\n            return {\n                type: \"heading\",\n                level: capture[2] === \"=\" ? 1 : 2,\n                content: parseInline(parse, capture[1], state),\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    hr: {\n        order: currOrder++,\n        match: blockRegex(/^( *[-*_]){3,} *(?:\\n *)+\\n/),\n        parse: ignoreCapture,\n        // react: function (node, output, state) {\n        //     return reactElement(\"hr\", state.key, EMPTY_PROPS);\n        // },\n        // html: function (node, output, state) {\n        //     return \"<hr>\";\n        // },\n    },\n    codeBlock: {\n        order: currOrder++,\n        match: blockRegex(/^(?:    [^\\n]+\\n*)+(?:\\n *)+\\n/),\n        parse: function (capture, parse, state) {\n            var content = capture[0].replace(/^    /gm, \"\").replace(/\\n+$/, \"\");\n            return {\n                lang: undefined,\n                content: content,\n            };\n        },\n        // react: function (node, output, state) {\n        //     var className = node.lang\n        //         ? \"markdown-code-\" + node.lang\n        //         : undefined;\n\n        //     return reactElement(\"pre\", state.key, {\n        //         children: reactElement(\"code\", null, {\n        //             className: className,\n        //             children: node.content,\n        //         }),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var className = node.lang\n        //         ? \"markdown-code-\" + node.lang\n        //         : undefined;\n\n        //     var codeBlock = htmlTag(\"code\", sanitizeText(node.content), {\n        //         class: className,\n        //     });\n        //     return htmlTag(\"pre\", codeBlock);\n        // },\n    },\n    fence: {\n        order: currOrder++,\n        match: blockRegex(\n            /^ *(`{3,}|~{3,}) *(?:(\\S+) *)?\\n([\\s\\S]+?)\\n?\\1 *(?:\\n *)+\\n/,\n        ),\n        parse: function (capture, parse, state) {\n            return {\n                type: \"codeBlock\",\n                lang: capture[2] || undefined,\n                content: capture[3],\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    blockQuote: {\n        order: currOrder++,\n        match: blockRegex(/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/),\n        parse: function (capture, parse, state) {\n            var content = capture[0].replace(/^ *> ?/gm, \"\");\n            return {\n                content: parse(content, state),\n            };\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"blockquote\", state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"blockquote\", output(node.content, state));\n        // },\n    },\n    list: {\n        order: currOrder++,\n        match: function (source, state) {\n            // We only want to break into a list if we are at the start of a\n            // line. This is to avoid parsing \"hi * there\" with \"* there\"\n            // becoming a part of a list.\n            // You might wonder, \"but that's inline, so of course it wouldn't\n            // start a list?\". You would be correct! Except that some of our\n            // lists can be inline, because they might be inside another list,\n            // in which case we can parse with inline scope, but need to allow\n            // nested lists inside this inline scope.\n            var prevCaptureStr =\n                state.prevCapture == null ? \"\" : state.prevCapture[0];\n            var isStartOfLineCapture = LIST_LOOKBEHIND_R.exec(prevCaptureStr);\n            var isListBlock = state._list || !state.inline;\n\n            if (isStartOfLineCapture && isListBlock) {\n                source = isStartOfLineCapture[1] + source;\n                return LIST_R.exec(source);\n            } else {\n                return null;\n            }\n        },\n        parse: function (capture, parse, state) {\n            var bullet = capture[2];\n            var ordered = bullet.length > 1;\n            var start = ordered ? +bullet : undefined;\n            // @ts-expect-error - TS2322 - Type 'RegExpMatchArray | null' is not assignable to type 'string[]'.\n            var items: Array<string> = capture[0]\n                .replace(LIST_BLOCK_END_R, \"\\n\")\n                .match(LIST_ITEM_R);\n\n            // We know this will match here, because of how the regexes are\n            // defined\n\n            var lastItemWasAParagraph = false;\n            var itemContent = items.map(function (item: string, i: number) {\n                // We need to see how far indented this item is:\n                var prefixCapture = LIST_ITEM_PREFIX_R.exec(item);\n                var space = prefixCapture ? prefixCapture[0].length : 0;\n                // And then we construct a regex to \"unindent\" the subsequent\n                // lines of the items by that amount:\n                var spaceRegex = new RegExp(\"^ {1,\" + space + \"}\", \"gm\");\n\n                // Before processing the item, we need a couple things\n                var content = item\n                    // remove indents on trailing lines:\n                    .replace(spaceRegex, \"\")\n                    // remove the bullet:\n                    .replace(LIST_ITEM_PREFIX_R, \"\");\n\n                // I'm not sur4 why this is necessary again?\n\n                // Handling \"loose\" lists, like:\n                //\n                //  * this is wrapped in a paragraph\n                //\n                //  * as is this\n                //\n                //  * as is this\n                var isLastItem = i === items.length - 1;\n                var containsBlocks = content.indexOf(\"\\n\\n\") !== -1;\n\n                // Any element in a list is a block if it contains multiple\n                // newlines. The last element in the list can also be a block\n                // if the previous item in the list was a block (this is\n                // because non-last items in the list can end with \\n\\n, but\n                // the last item can't, so we just \"inherit\" this property\n                // from our previous element).\n                var thisItemIsAParagraph =\n                    containsBlocks || (isLastItem && lastItemWasAParagraph);\n                lastItemWasAParagraph = thisItemIsAParagraph;\n\n                // backup our state for restoration afterwards. We're going to\n                // want to set state._list to true, and state.inline depending\n                // on our list's looseness.\n                var oldStateInline = state.inline;\n                var oldStateList = state._list;\n                state._list = true;\n\n                // Parse inline if we're in a tight list, or block if we're in\n                // a loose list.\n                var adjustedContent;\n                if (thisItemIsAParagraph) {\n                    state.inline = false;\n                    adjustedContent = content.replace(LIST_ITEM_END_R, \"\\n\\n\");\n                } else {\n                    state.inline = true;\n                    adjustedContent = content.replace(LIST_ITEM_END_R, \"\");\n                }\n\n                var result = parse(adjustedContent, state);\n\n                // Restore our state before returning\n                state.inline = oldStateInline;\n                state._list = oldStateList;\n                return result;\n            });\n\n            return {\n                ordered: ordered,\n                start: start,\n                items: itemContent,\n            };\n        },\n        // react: function (node, output, state) {\n        //     var ListWrapper = node.ordered ? \"ol\" : \"ul\";\n\n        //     return reactElement(ListWrapper, state.key, {\n        //         start: node.start,\n        //         children: node.items.map(function (item: ASTNode, i: number) {\n        //             return reactElement(\"li\", \"\" + i, {\n        //                 children: output(item, state),\n        //             });\n        //         }),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var listItems = node.items\n        //         .map(function (item: ASTNode) {\n        //             return htmlTag(\"li\", output(item, state));\n        //         })\n        //         .join(\"\");\n\n        //     var listTag = node.ordered ? \"ol\" : \"ul\";\n        //     var attributes = {\n        //         start: node.start,\n        //     };\n        //     return htmlTag(listTag, listItems, attributes);\n        // },\n    },\n    def: {\n        order: currOrder++,\n        // TODO(aria): This will match without a blank line before the next\n        // block element, which is inconsistent with most of the rest of\n        // simple-markdown.\n        match: blockRegex(\n            /^ *\\[([^\\]]+)\\]: *<?([^\\s>]*)>?(?: +[\"(]([^\\n]+)[\")])? *\\n(?: *\\n)*/,\n        ),\n        parse: function (capture, parse, state) {\n            var def = capture[1].replace(/\\s+/g, \" \").toLowerCase();\n            var target = capture[2];\n            var title = capture[3];\n\n            // Look for previous links/images using this def\n            // If any links/images using this def have already been declared,\n            // they will have added themselves to the state._refs[def] list\n            // (_ to deconflict with client-defined state). We look through\n            // that list of reflinks for this def, and modify those AST nodes\n            // with our newly found information now.\n            // Sorry :(.\n            if (state._refs && state._refs[def]) {\n                // `refNode` can be a link or an image\n                state._refs[def].forEach(function (refNode: RefNode) {\n                    refNode.target = target;\n                    refNode.title = title;\n                });\n            }\n\n            // Add this def to our map of defs for any future links/images\n            // In case we haven't found any or all of the refs referring to\n            // this def yet, we add our def to the table of known defs, so\n            // that future reflinks can modify themselves appropriately with\n            // this information.\n            state._defs = state._defs || {};\n            state._defs[def] = {\n                target: target,\n                title: title,\n            };\n\n            // return the relevant parsed information\n            // for debugging only.\n            return {\n                def: def,\n                target: target,\n                title: title,\n            };\n        },\n        // react: function () {\n        //     return null;\n        // },\n        // html: function () {\n        //     return \"\";\n        // },\n    },\n    table: {\n        order: currOrder++,\n        match: blockRegex(TABLES.TABLE_REGEX),\n        parse: TABLES.parseTable,\n        // react: function (node, output, state) {\n        //     var getStyle = function (colIndex: number): {\n        //         [attr: string]: Attr;\n        //     } {\n        //         return node.align[colIndex] == null\n        //             ? {}\n        //             : {\n        //                   textAlign: node.align[colIndex],\n        //               };\n        //     };\n\n        //     var headers = node.header.map(function (\n        //         content: ASTNode,\n        //         i: number,\n        //     ) {\n        //         return reactElement(\"th\", \"\" + i, {\n        //             style: getStyle(i),\n        //             scope: \"col\",\n        //             children: output(content, state),\n        //         });\n        //     });\n\n        //     var rows = node.cells.map(function (\n        //         row: Array<ASTNode>,\n        //         r: number,\n        //     ) {\n        //         return reactElement(\"tr\", \"\" + r, {\n        //             children: row.map(function (content: ASTNode, c: number) {\n        //                 return reactElement(\"td\", \"\" + c, {\n        //                     style: getStyle(c),\n        //                     children: output(content, state),\n        //                 });\n        //             }),\n        //         });\n        //     });\n\n        //     return reactElement(\"table\", state.key, {\n        //         children: [\n        //             reactElement(\"thead\", \"thead\", {\n        //                 children: reactElement(\"tr\", null, {\n        //                     children: headers,\n        //                 }),\n        //             }),\n        //             reactElement(\"tbody\", \"tbody\", {\n        //                 children: rows,\n        //             }),\n        //         ],\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var getStyle = function (colIndex: number): string {\n        //         return node.align[colIndex] == null\n        //             ? \"\"\n        //             : \"text-align:\" + node.align[colIndex] + \";\";\n        //     };\n\n        //     var headers = node.header\n        //         .map(function (content: ASTNode, i: number) {\n        //             return htmlTag(\"th\", output(content, state), {\n        //                 style: getStyle(i),\n        //                 scope: \"col\",\n        //             });\n        //         })\n        //         .join(\"\");\n\n        //     var rows = node.cells\n        //         .map(function (row: Array<ASTNode>) {\n        //             var cols = row\n        //                 .map(function (content: ASTNode, c: number) {\n        //                     return htmlTag(\"td\", output(content, state), {\n        //                         style: getStyle(c),\n        //                     });\n        //                 })\n        //                 .join(\"\");\n\n        //             return htmlTag(\"tr\", cols);\n        //         })\n        //         .join(\"\");\n\n        //     var thead = htmlTag(\"thead\", htmlTag(\"tr\", headers));\n        //     var tbody = htmlTag(\"tbody\", rows);\n\n        //     return htmlTag(\"table\", thead + tbody);\n        // },\n    },\n    newline: {\n        order: currOrder++,\n        match: blockRegex(/^(?:\\n *)*\\n/),\n        parse: ignoreCapture,\n        // react: function (node, output, state) {\n        //     return \"\\n\";\n        // },\n        // html: function (node, output, state) {\n        //     return \"\\n\";\n        // },\n    },\n    paragraph: {\n        order: currOrder++,\n        match: blockRegex(/^((?:[^\\n]|\\n(?! *\\n))+)(?:\\n *)+\\n/),\n        parse: parseCaptureInline,\n        // react: function (node, output, state) {\n        //     return reactElement(\"div\", state.key, {\n        //         className: \"paragraph\",\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var attributes = {\n        //         class: \"paragraph\",\n        //     };\n        //     return htmlTag(\"div\", output(node.content, state), attributes);\n        // },\n    },\n    escape: {\n        order: currOrder++,\n        // We don't allow escaping numbers, letters, or spaces here so that\n        // backslashes used in plain text still get rendered. But allowing\n        // escaping anything else provides a very flexible escape mechanism,\n        // regardless of how this grammar is extended.\n        match: inlineRegex(/^\\\\([^0-9A-Za-z\\s])/),\n        parse: function (capture, parse, state) {\n            return {\n                type: \"text\",\n                content: capture[1],\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    tableSeparator: {\n        order: currOrder++,\n        match: function (source, state) {\n            if (!state.inTable) {\n                return null;\n            }\n            return /^ *\\| */.exec(source);\n        },\n        parse: function () {\n            return {type: \"tableSeparator\"};\n        },\n        // // These shouldn't be reached, but in case they are, be reasonable:\n        // react: function () {\n        //     return \" | \";\n        // },\n        // html: function () {\n        //     return \" &vert; \";\n        // },\n    },\n    autolink: {\n        order: currOrder++,\n        match: inlineRegex(/^<([^: >]+:\\/[^ >]+)>/),\n        parse: function (capture, parse, state) {\n            return {\n                type: \"link\",\n                content: [\n                    {\n                        type: \"text\",\n                        content: capture[1],\n                    },\n                ],\n                target: capture[1],\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    mailto: {\n        order: currOrder++,\n        match: inlineRegex(/^<([^ >]+@[^ >]+)>/),\n        parse: function (capture, parse, state) {\n            var address = capture[1];\n            var target = capture[1];\n\n            // Check for a `mailto:` already existing in the link:\n            if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {\n                target = \"mailto:\" + target;\n            }\n\n            return {\n                type: \"link\",\n                content: [\n                    {\n                        type: \"text\",\n                        content: address,\n                    },\n                ],\n                target: target,\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    url: {\n        order: currOrder++,\n        match: inlineRegex(/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/),\n        parse: function (capture, parse, state) {\n            return {\n                type: \"link\",\n                content: [\n                    {\n                        type: \"text\",\n                        content: capture[1],\n                    },\n                ],\n                target: capture[1],\n                title: undefined,\n            };\n        },\n        // react: null,\n        // html: null,\n    },\n    link: {\n        order: currOrder++,\n        match: inlineRegex(\n            new RegExp(\n                \"^\\\\[(\" + LINK_INSIDE + \")\\\\]\\\\(\" + LINK_HREF_AND_TITLE + \"\\\\)\",\n            ),\n        ),\n        parse: function (capture, parse, state) {\n            var link = {\n                content: parse(capture[1], state),\n                target: unescapeUrl(capture[2]),\n                title: capture[3],\n            };\n            return link;\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"a\", state.key, {\n        //         href: sanitizeUrl(node.target),\n        //         title: node.title,\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var attributes = {\n        //         href: sanitizeUrl(node.target),\n        //         title: node.title,\n        //     };\n\n        //     return htmlTag(\"a\", output(node.content, state), attributes);\n        // },\n    },\n    image: {\n        order: currOrder++,\n        match: inlineRegex(\n            new RegExp(\n                \"^!\\\\[(\" +\n                    LINK_INSIDE +\n                    \")\\\\]\\\\(\" +\n                    LINK_HREF_AND_TITLE +\n                    \"\\\\)\",\n            ),\n        ),\n        parse: function (capture, parse, state) {\n            var image = {\n                alt: capture[1],\n                target: unescapeUrl(capture[2]),\n                title: capture[3],\n            };\n            return image;\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"img\", state.key, {\n        //         src: sanitizeUrl(node.target),\n        //         alt: node.alt,\n        //         title: node.title,\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     var attributes = {\n        //         src: sanitizeUrl(node.target),\n        //         alt: node.alt,\n        //         title: node.title,\n        //     };\n\n        //     return htmlTag(\"img\", \"\", attributes, false);\n        // },\n    },\n    reflink: {\n        order: currOrder++,\n        match: inlineRegex(\n            new RegExp(\n                // The first [part] of the link\n                \"^\\\\[(\" +\n                    LINK_INSIDE +\n                    \")\\\\]\" +\n                    // The [ref] target of the link\n                    \"\\\\s*\\\\[([^\\\\]]*)\\\\]\",\n            ),\n        ),\n        parse: function (capture, parse, state) {\n            return parseRef(capture, state, {\n                type: \"link\",\n                content: parse(capture[1], state),\n            });\n        },\n        // react: null,\n        // html: null,\n    },\n    refimage: {\n        order: currOrder++,\n        match: inlineRegex(\n            new RegExp(\n                // The first [part] of the link\n                \"^!\\\\[(\" +\n                    LINK_INSIDE +\n                    \")\\\\]\" +\n                    // The [ref] target of the link\n                    \"\\\\s*\\\\[([^\\\\]]*)\\\\]\",\n            ),\n        ),\n        parse: function (capture, parse, state) {\n            return parseRef(capture, state, {\n                type: \"image\",\n                alt: capture[1],\n            });\n        },\n        // react: null,\n        // html: null,\n    },\n    em: {\n        order: currOrder /* same as strong/u */,\n        match: inlineRegex(\n            new RegExp(\n                // only match _s surrounding words.\n                \"^\\\\b_\" +\n                    \"((?:__|\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\_])+?)_\" +\n                    \"\\\\b\" +\n                    // Or match *s:\n                    \"|\" +\n                    // Only match *s that are followed by a non-space:\n                    \"^\\\\*(?=\\\\S)(\" +\n                    // Match at least one of:\n                    \"(?:\" +\n                    //  - `**`: so that bolds inside italics don't close the\n                    //          italics\n                    \"\\\\*\\\\*|\" +\n                    //  - escape sequence: so escaped *s don't close us\n                    \"\\\\\\\\[\\\\s\\\\S]|\" +\n                    //  - whitespace: followed by a non-* (we don't\n                    //          want ' *' to close an italics--it might\n                    //          start a list)\n                    \"\\\\s+(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\s\\\\*\\\\\\\\]|\\\\*\\\\*)|\" +\n                    //  - non-whitespace, non-*, non-backslash characters\n                    \"[^\\\\s\\\\*\\\\\\\\]\" +\n                    \")+?\" +\n                    // followed by a non-space, non-* then *\n                    \")\\\\*(?!\\\\*)\",\n            ),\n        ),\n        quality: function (capture) {\n            // precedence by length, `em` wins ties:\n            return capture[0].length + 0.2;\n        },\n        parse: function (capture, parse, state) {\n            return {\n                content: parse(capture[2] || capture[1], state),\n            };\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"em\", state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"em\", output(node.content, state));\n        // },\n    },\n    strong: {\n        order: currOrder /* same as em */,\n        match: inlineRegex(/^\\*\\*((?:\\\\[\\s\\S]|[^\\\\])+?)\\*\\*(?!\\*)/),\n        quality: function (capture) {\n            // precedence by length, wins ties vs `u`:\n            return capture[0].length + 0.1;\n        },\n        parse: parseCaptureInline,\n        // react: function (node, output, state) {\n        //     return reactElement(\"strong\", state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"strong\", output(node.content, state));\n        // },\n    },\n    u: {\n        order: currOrder++ /* same as em&strong; increment for next rule */,\n        match: inlineRegex(/^__((?:\\\\[\\s\\S]|[^\\\\])+?)__(?!_)/),\n        quality: function (capture) {\n            // precedence by length, loses all ties\n            return capture[0].length;\n        },\n        parse: parseCaptureInline,\n        // react: function (node, output, state) {\n        //     return reactElement(\"u\", state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"u\", output(node.content, state));\n        // },\n    },\n    del: {\n        order: currOrder++,\n        match: inlineRegex(\n            /^~~(?=\\S)((?:\\\\[\\s\\S]|~(?!~)|[^\\s~\\\\]|\\s(?!~~))+?)~~/,\n        ),\n        parse: parseCaptureInline,\n        // react: function (node, output, state) {\n        //     return reactElement(\"del\", state.key, {\n        //         children: output(node.content, state),\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"del\", output(node.content, state));\n        // },\n    },\n    inlineCode: {\n        order: currOrder++,\n        match: inlineRegex(/^(`+)([\\s\\S]*?[^`])\\1(?!`)/),\n        parse: function (capture, parse, state) {\n            return {\n                content: capture[2].replace(\n                    INLINE_CODE_ESCAPE_BACKTICKS_R,\n                    \"$1\",\n                ),\n            };\n        },\n        // react: function (node, output, state) {\n        //     return reactElement(\"code\", state.key, {\n        //         children: node.content,\n        //     });\n        // },\n        // html: function (node, output, state) {\n        //     return htmlTag(\"code\", sanitizeText(node.content));\n        // },\n    },\n    br: {\n        order: currOrder++,\n        match: anyScopeRegex(/^ {2,}\\n/),\n        parse: ignoreCapture,\n        // react: function (node, output, state) {\n        //     return reactElement(\"br\", state.key, EMPTY_PROPS);\n        // },\n        // html: function (node, output, state) {\n        //     return \"<br>\";\n        // },\n    },\n    text: {\n        order: currOrder++,\n        // Here we look for anything followed by non-symbols,\n        // double newlines, or double-space-newlines\n        // We break on any symbol characters so that this grammar\n        // is easy to extend without needing to modify this regex\n        match: anyScopeRegex(\n            /^[\\s\\S]+?(?=[^0-9A-Za-z\\s\\u00c0-\\uffff]|\\n\\n| {2,}\\n|\\w+:\\S|$)/,\n        ),\n        parse: function (capture, parse, state) {\n            return {\n                content: capture[0],\n            };\n        },\n        // react: function (node, output, state) {\n        //     return node.content;\n        // },\n        // html: function (node, output, state) {\n        //     return sanitizeText(node.content);\n        // },\n    },\n};\n\n// /** (deprecated) */\n// var ruleOutput = function <Rule>(\n//     rules: OutputRules<Rule>,\n//     property: keyof Rule,\n// ) {\n//     if (!property && typeof console !== \"undefined\") {\n//         console.warn(\n//             \"simple-markdown ruleOutput should take 'react' or \" +\n//                 \"'html' as the second argument.\",\n//         );\n//     }\n\n//     var nestedRuleOutput = function (\n//         ast: SingleASTNode,\n//         outputFunc: Output<any>,\n//         state: State,\n//     ) {\n//         // @ts-expect-error - TS2349 - This expression is not callable.\n//         //   Type 'unknown' has no call signatures.\n//         return rules[ast.type][property](ast, outputFunc, state);\n//     };\n//     return nestedRuleOutput;\n// };\n\n// /** (deprecated)\n//  */\n// var reactFor = function (outputFunc: ReactNodeOutput): ReactOutput {\n//     var nestedOutput: ReactOutput = function (ast, state) {\n//         state = state || {};\n//         if (Array.isArray(ast)) {\n//             var oldKey = state.key;\n//             var result: Array<ReactElements> = [];\n\n//             // map nestedOutput over the ast, except group any text\n//             // nodes together into a single string output.\n//             var lastResult = null;\n//             for (var i = 0; i < ast.length; i++) {\n//                 state.key = \"\" + i;\n//                 var nodeOut = nestedOutput(ast[i], state);\n//                 if (\n//                     typeof nodeOut === \"string\" &&\n//                     typeof lastResult === \"string\"\n//                 ) {\n//                     // @ts-expect-error - TS2322 - Type 'string' is not assignable to type 'null'.\n//                     lastResult = lastResult + nodeOut;\n//                     result[result.length - 1] = lastResult;\n//                 } else {\n//                     result.push(nodeOut);\n//                     // @ts-expect-error - TS2322 - Type 'ReactNode' is not assignable to type 'null'.\n//                     lastResult = nodeOut;\n//                 }\n//             }\n\n//             state.key = oldKey;\n//             return result;\n//         } else {\n//             return outputFunc(ast, nestedOutput, state);\n//         }\n//     };\n//     return nestedOutput;\n// };\n\n// /** (deprecated)\n//  */\n// var htmlFor = function (outputFunc: HtmlNodeOutput): HtmlOutput {\n//     var nestedOutput: HtmlOutput = function (ast, state) {\n//         state = state || {};\n//         if (Array.isArray(ast)) {\n//             return ast\n//                 .map(function (node) {\n//                     return nestedOutput(node, state);\n//                 })\n//                 .join(\"\");\n//         } else {\n//             return outputFunc(ast, nestedOutput, state);\n//         }\n//     };\n//     return nestedOutput;\n// };\n\n// var outputFor = function <Rule>(\n//     rules: OutputRules<Rule>,\n//     property: keyof Rule,\n//     defaultState: State | null = {},\n// ) {\n//     if (!property) {\n//         throw new Error(\n//             \"simple-markdown: outputFor: `property` must be \" +\n//                 \"defined. \" +\n//                 \"if you just upgraded, you probably need to replace `outputFor` \" +\n//                 \"with `reactFor`\",\n//         );\n//     }\n\n//     var latestState: State;\n//     var arrayRule: ArrayRule = rules.Array || defaultRules.Array;\n\n//     // Tricks to convince tsc that this var is not null:\n//     // @ts-expect-error - TS2538 - Type 'symbol' cannot be used as an index type.\n//     var arrayRuleCheck = arrayRule[property];\n//     if (!arrayRuleCheck) {\n//         throw new Error(\n//             \"simple-markdown: outputFor: to join nodes of type `\" +\n//                 // @ts-expect-error - TS2469 - The '+' operator cannot be applied to type 'symbol'.\n//                 property +\n//                 \"` you must provide an `Array:` joiner rule with that type, \" +\n//                 \"Please see the docs for details on specifying an Array rule.\",\n//         );\n//     }\n//     var arrayRuleOutput = arrayRuleCheck;\n\n//     var nestedOutput: Output<any> = function (ast, state) {\n//         state = state || latestState;\n//         latestState = state;\n//         if (Array.isArray(ast)) {\n//             return arrayRuleOutput(ast, nestedOutput, state);\n//         } else {\n//             // @ts-expect-error - TS2349 - This expression is not callable.\n//             //   Type 'unknown' has no call signatures.\n//             return rules[ast.type][property](ast, nestedOutput, state);\n//         }\n//     };\n\n//     var outerOutput: Output<any> = function (ast, state) {\n//         latestState = populateInitialState(state, defaultState);\n//         return nestedOutput(ast, latestState);\n//     };\n//     return outerOutput;\n// };\n\n// // @ts-expect-error - TS2345 - Argument of type 'DefaultRules' is not assignable to parameter of type 'ParserRules'.\n// var defaultRawParse = parserFor(defaultRules);\n\n// var defaultBlockParse = function (\n//     source: string,\n//     state?: State | null,\n// ): Array<SingleASTNode> {\n//     state = state || {};\n//     state.inline = false;\n//     return defaultRawParse(source, state);\n// };\n\n// var defaultInlineParse = function (\n//     source: string,\n//     state?: State | null,\n// ): Array<SingleASTNode> {\n//     state = state || {};\n//     state.inline = true;\n//     return defaultRawParse(source, state);\n// };\n\n// var defaultImplicitParse = function (\n//     source: string,\n//     state?: State | null,\n// ): Array<SingleASTNode> {\n//     var isBlock = BLOCK_END_R.test(source);\n//     state = state || {};\n//     state.inline = !isBlock;\n//     return defaultRawParse(source, state);\n// };\n\n// var defaultReactOutput: ReactOutput = outputFor(defaultRules, \"react\");\n// var defaultHtmlOutput: HtmlOutput = outputFor(defaultRules, \"html\");\n\n// var markdownToReact = function (\n//     source: string,\n//     state?: State | null,\n// ): ReactElements {\n//     return defaultReactOutput(defaultBlockParse(source, state), state);\n// };\n\n// var markdownToHtml = function (source: string, state?: State | null): string {\n//     return defaultHtmlOutput(defaultBlockParse(source, state), state);\n// };\n\n// // TODO: This needs definition\n// type Props = any;\n// var ReactMarkdown = function (props): React.ReactElement {\n//     var divProps: Record<string, any> = {};\n\n//     for (var prop in props) {\n//         if (\n//             prop !== \"source\" &&\n//             Object.prototype.hasOwnProperty.call(props, prop)\n//         ) {\n//             divProps[prop] = props[prop];\n//         }\n//     }\n//     divProps.children = markdownToReact(props.source);\n\n//     return reactElement(\"div\", null, divProps);\n// };\n\ntype Exports = {\n    readonly defaultRules: DefaultRules;\n    readonly parserFor: (\n        rules: ParserRules,\n        defaultState?: State | null | undefined,\n    ) => Parser;\n    // readonly outputFor: <Rule>(\n    //     rules: OutputRules<Rule>,\n    //     param: keyof Rule,\n    //     defaultState?: State | null | undefined,\n    // ) => Output<any>;\n    // readonly ruleOutput: <Rule>(\n    //     rules: OutputRules<Rule>,\n    //     param: keyof Rule,\n    // ) => NodeOutput<any>;\n    // readonly reactFor: (arg1: ReactNodeOutput) => ReactOutput;\n    // readonly htmlFor: (arg1: HtmlNodeOutput) => HtmlOutput;\n    readonly inlineRegex: (regex: RegExp) => MatchFunction;\n    readonly blockRegex: (regex: RegExp) => MatchFunction;\n    readonly anyScopeRegex: (regex: RegExp) => MatchFunction;\n    readonly parseInline: (\n        parse: Parser,\n        content: string,\n        state: State,\n    ) => ASTNode;\n    readonly parseBlock: (\n        parse: Parser,\n        content: string,\n        state: State,\n    ) => ASTNode;\n    // readonly markdownToReact: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => ReactElements;\n    // readonly markdownToHtml: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => string;\n    // readonly ReactMarkdown: (props: {\n    //     source: string;\n    //     [key: string]: any;\n    // }) => ReactElement;\n    // readonly defaultRawParse: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => Array<SingleASTNode>;\n    // readonly defaultBlockParse: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => Array<SingleASTNode>;\n    // readonly defaultInlineParse: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => Array<SingleASTNode>;\n    // readonly defaultImplicitParse: (\n    //     source: string,\n    //     state?: State | null | undefined,\n    // ) => Array<SingleASTNode>;\n    // readonly defaultReactOutput: ReactOutput;\n    // readonly defaultHtmlOutput: HtmlOutput;\n    readonly preprocess: (source: string) => string;\n    // readonly sanitizeText: (text: Attr) => string;\n    // readonly sanitizeUrl: (\n    //     url?: string | null | undefined,\n    // ) => string | null | undefined;\n    readonly unescapeUrl: (url: string) => string;\n    // readonly htmlTag: (\n    //     tagName: string,\n    //     content: string,\n    //     attributes?:\n    //         | Partial<Record<any, Attr | null | undefined>>\n    //         | null\n    //         | undefined,\n    //     isClosed?: boolean | null | undefined,\n    // ) => string;\n    // readonly reactElement: (\n    //     type: string,\n    //     key: string | null,\n    //     props: {\n    //         [key: string]: any;\n    //     },\n    // ) => ReactElement;\n    // /**\n    //  * defaultParse is deprecated, please use `defaultImplicitParse`\n    //  * @deprecated\n    //  */\n    // readonly defaultParse: (...args: any[]) => any;\n    // /**\n    //  * defaultOutput is deprecated, please use `defaultReactOutput`\n    //  * @deprecated\n    //  */\n    // readonly defaultOutput: (...args: any[]) => any;\n};\n\nexport type {\n    // Hopefully you shouldn't have to use these, but they're here if you need!\n    // Top-level API:\n    State,\n    Parser,\n    // Output,\n    // ReactOutput,\n    // HtmlOutput,\n    // Most of the following types should be considered experimental and\n    // subject to change or change names. Again, they shouldn't be necessary,\n    // but if they are I'd love to hear how so I can better support them!\n\n    // Individual Rule fields:\n    Capture,\n    MatchFunction,\n    ParseFunction,\n    // NodeOutput,\n    // ArrayNodeOutput,\n    // ReactNodeOutput,\n    // Single rules:\n    ParserRule,\n    // ReactOutputRule,\n    // HtmlOutputRule,\n    // Sets of rules:\n    ParserRules,\n    OutputRules,\n    Rules,\n    // ReactRules,\n    // HtmlRules,\n    SingleASTNode,\n};\n\nvar SimpleMarkdown: Exports = {\n    defaultRules: defaultRules,\n    parserFor: parserFor,\n    // outputFor: outputFor,\n\n    inlineRegex: inlineRegex,\n    blockRegex: blockRegex,\n    anyScopeRegex: anyScopeRegex,\n    parseInline: parseInline,\n    parseBlock: parseBlock,\n\n    // default wrappers:\n    // markdownToReact: markdownToReact,\n    // markdownToHtml: markdownToHtml,\n    // ReactMarkdown: ReactMarkdown,\n\n    // defaultBlockParse: defaultBlockParse,\n    // defaultInlineParse: defaultInlineParse,\n    // defaultImplicitParse: defaultImplicitParse,\n\n    // defaultReactOutput: defaultReactOutput,\n    // defaultHtmlOutput: defaultHtmlOutput,\n\n    preprocess: preprocess,\n    // sanitizeText: sanitizeText,\n    // sanitizeUrl: sanitizeUrl,\n    unescapeUrl: unescapeUrl,\n    // htmlTag: htmlTag,\n    // reactElement: reactElement,\n\n    // // deprecated:\n    // defaultRawParse: defaultRawParse,\n    // ruleOutput: ruleOutput,\n    // reactFor: reactFor,\n    // htmlFor: htmlFor,\n\n    // defaultParse: function (...args) {\n    //     if (typeof console !== \"undefined\") {\n    //         console.warn(\n    //             \"defaultParse is deprecated, please use `defaultImplicitParse`\",\n    //         );\n    //     }\n    //     return defaultImplicitParse.apply(null, args);\n    // },\n    // defaultOutput: function (...args) {\n    //     if (typeof console !== \"undefined\") {\n    //         console.warn(\n    //             \"defaultOutput is deprecated, please use `defaultReactOutput`\",\n    //         );\n    //     }\n    //     return defaultReactOutput.apply(null, args);\n    // },\n};\n\nexport default SimpleMarkdown;\n","import * as assert from 'assert';\nconst { round, max } = Math;\nimport { clamp } from 'glov/common/util.js';\nimport { vec4 } from 'glov/common/vmath.js';\nimport * as input from './input.js';\nimport {\n  SPOT_DEFAULT_BUTTON,\n  SPOT_NAV_LEFT,\n  SPOT_NAV_RIGHT,\n  spot,\n} from './spot.js';\nimport {\n  Z_MIN_INC,\n  drawHBox,\n  playUISound,\n  uiButtonHeight,\n  uiButtonWidth,\n} from './ui.js';\nimport * as ui from './ui.js';\n\nconst SPOT_DEFAULT_SLIDER = {\n  ...SPOT_DEFAULT_BUTTON,\n  sound_button: null,\n  custom_nav: {\n    [SPOT_NAV_RIGHT]: null,\n    [SPOT_NAV_LEFT]: null,\n  },\n};\n\nlet slider_default_vshrink = 1.0;\nlet slider_default_handle_shrink = 1.0;\nlet slider_default_inset = 0.0;\nexport function sliderSetDefaultShrink(vshrink, handle_shrink, slider_inset) {\n  slider_default_vshrink = vshrink;\n  slider_default_handle_shrink = handle_shrink;\n  slider_default_inset = slider_inset || 0;\n}\nconst color_slider_handle = vec4(1,1,1,1);\nconst color_slider_handle_grab = vec4(0.5,0.5,0.5,1);\nconst color_slider_handle_over = vec4(0.75,0.75,0.75,1);\nlet slider_dragging = false; // for caller polling\nlet slider_focused = false; // for caller polling\nexport function sliderIsDragging() {\n  return slider_dragging;\n}\nexport function sliderIsFocused() {\n  return slider_focused;\n}\n// Returns new value\nexport function slider(value, param) {\n  // required params\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(param.min < param.max); // also must be numbers\n  // optional params\n  param.z = param.z || Z.UI;\n  param.w = param.w || uiButtonWidth();\n  param.h = param.h || uiButtonHeight();\n  param.max_dist = param.max_dist || Infinity;\n  // below: param.step = param.step || (param.max - param.min)/16;\n  let vshrink = param.vshrink || slider_default_vshrink;\n  let handle_shrink = param.handle_shrink || slider_default_handle_shrink;\n  let disabled = param.disabled || false;\n  let handle_h = param.h * handle_shrink;\n  let handle_w = ui.sprites.slider_handle.uidata.wh[0] * handle_h;\n  let pad_focusable = param.pad_focusable;\n\n  slider_dragging = false;\n\n  let shrinkdiff = handle_shrink - vshrink + slider_default_inset;\n  drawHBox({\n    x: param.x + param.h * shrinkdiff/2,\n    y: param.y + param.h * (1 - vshrink)/2,\n    z: param.z,\n    w: param.w - param.h * shrinkdiff,\n    h: param.h * vshrink,\n  }, ui.sprites.slider, param.color);\n\n  let xoffs = round(max(ui.sprites.slider.uidata.wh[0] * param.h * vshrink, handle_w) / 2);\n  let draggable_width = param.w - xoffs * 2;\n\n  // Draw notches - would also need to quantize the values below\n  // if (!slider->no_notches) {\n  //   float space_for_notches = width - xoffs * 4;\n  //   int num_notches = max - 1;\n  //   float notch_w = tile_scale * glov_ui_slider_notch->GetTileWidth();\n  //   float notch_h = tile_scale * glov_ui_slider_notch->GetTileHeight();\n  //   float max_notches = space_for_notches / (notch_w + 2);\n  //   int notch_inc = 1;\n  //   if (num_notches > max_notches)\n  //     notch_inc = ceil(num_notches / floor(max_notches));\n\n  //   for (int ii = 1; ii*notch_inc <= num_notches; ii++) {\n  //     float notch_x_mid = x + xoffs + draggable_width * ii * notch_inc / (float)max;\n  //     if (notch_x_mid - notch_w/2 < x + xoffs * 2)\n  //       continue;\n  //     if (notch_x_mid + notch_w/2 > x + width - xoffs * 2)\n  //       continue;\n  //     glov_ui_slider_notch->DrawStretchedColor(notch_x_mid - notch_w / 2, y + yoffs,\n  //       z + 0.25, notch_w, notch_h, 0, color);\n  //   }\n  // }\n\n  // Handle\n  let drag = !disabled && input.drag(param);\n  let grabbed = Boolean(drag);\n  param.def = SPOT_DEFAULT_SLIDER;\n  if (grabbed) {\n    param.focus_steal = true;\n  }\n  param.pad_focusable = pad_focusable;\n  let spot_ret = spot(param);\n  slider_focused = spot_ret.focused;\n  if (spot_ret.ret && spot_ret.pos) {\n    // was actually clicked (not\n    grabbed = false;\n    // update pos\n    value = (spot_ret.pos[0] - (param.x + xoffs)) / draggable_width;\n    value = param.min + (param.max - param.min) * clamp(value, 0, 1);\n    playUISound('button_click');\n  } else if (grabbed) {\n    // update pos\n    value = (drag.cur_pos[0] - (param.x + xoffs)) / draggable_width;\n    value = param.min + (param.max - param.min) * clamp(value, 0, 1);\n    // Eat all mouseovers while dragging\n    input.mouseOver();\n    slider_dragging = true;\n    slider_focused = true;\n  }\n  if (spot_ret.nav) {\n    playUISound('button_click');\n    let step = param.step || (param.max - param.min)/16;\n    if (spot_ret.nav === SPOT_NAV_RIGHT) {\n      value = clamp(value + step, param.min, param.max);\n    } else if (spot_ret.nav === SPOT_NAV_LEFT) {\n      value = clamp(value - step, param.min, param.max);\n    }\n  }\n  let value_for_handle = clamp(value, param.min, param.max);\n  let handle_center_pos = param.x + xoffs + draggable_width * (value_for_handle - param.min) / (param.max - param.min);\n  let handle_x = handle_center_pos - handle_w / 2;\n  let handle_y = param.y + param.h / 2 - handle_h / 2;\n  let handle_color = color_slider_handle;\n  if (grabbed) {\n    handle_color = color_slider_handle_grab;\n  } else if (spot_ret.focused) {\n    handle_color = color_slider_handle_over;\n  }\n\n  ui.sprites.slider_handle.draw({\n    x: handle_x,\n    y: handle_y,\n    z: param.z + Z_MIN_INC,\n    w: handle_w,\n    h: handle_h,\n    color: handle_color,\n    frame: 0,\n  });\n\n  return value;\n}\n","// Portions Copyright 2020 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/* eslint-env browser */\n\nimport assert from 'assert';\nimport * as settings from 'glov/client/settings';\nimport { settingsRegister, settingsSet } from 'glov/client/settings';\nimport {\n  PRESENCE_ACTIVE,\n  PRESENCE_INACTIVE,\n  PRESENCE_OFFLINE,\n  PRESENCE_OFFLINE_INACTIVE,\n} from 'glov/common/enums';\nimport { FriendData, FriendStatus, FriendsData } from 'glov/common/friends_data';\nimport { deepEqual } from 'glov/common/util';\nimport { ROVec4 } from 'glov/common/vmath';\nimport { abTestGetMetricsAndPlatform } from './abtest';\nimport { cmd_parse } from './cmds';\nimport { ExternalUserInfo } from './external_user_info';\nimport * as input from './input';\nimport {\n  ClientChannelWorker,\n  netDisconnected,\n  netSubs,\n  netUserId,\n} from './net';\nimport { Sprite, spriteCreate } from './sprites';\nimport { textureLoad } from './textures';\n\nimport type { CmdRespFunc } from 'glov/common/cmd_parse';\nimport type {\n  ErrorCallback,\n  FriendCmdResponse,\n  NetErrorCallback,\n  PresenceEntry,\n  TSMap,\n} from 'glov/common/types';\n\ndeclare let gl: WebGLRenderingContext | WebGL2RenderingContext;\n\nconst IDLE_TIME = 60000;\n\nlet friend_list: FriendsData | null = null;\n\nexport type ClientUserChannel<T=unknown> = ClientChannelWorker & {\n  presence_data?: TSMap<PresenceEntry<T>>;\n};\n\nexport function friendsGet(): FriendsData {\n  return friend_list ?? Object.create(null);\n}\n\nexport function isFriend(user_id: string): boolean {\n  let value = friend_list?.[user_id];\n  return value?.status === FriendStatus.Added || value?.status === FriendStatus.AddedAuto;\n}\n\nexport function friendIsBlocked(user_id: string): boolean {\n  let value = friend_list?.[user_id];\n  return value?.status === FriendStatus.Blocked;\n}\n\nfunction makeFriendCmdRequest(cmd: string, user_id: string, cb: NetErrorCallback<string>): void {\n  user_id = user_id.toLowerCase();\n  let requesting_user_id = netUserId();\n  if (netDisconnected()) {\n    return void cb('ERR_DISCONNECTED');\n  }\n  if (!requesting_user_id) {\n    return void cb('ERR_NOT_LOGGED_IN');\n  }\n  let my_user_channel = netSubs().getMyUserChannel();\n  assert(my_user_channel);\n  my_user_channel.cmdParse(`${cmd} ${user_id}`, function (err?: string | null, resp?: FriendCmdResponse) {\n    if (err) {\n      return void cb(err);\n    } else if (requesting_user_id !== netUserId() || !friend_list) {\n      // Logged out or switched user meanwhile, so ignore the result\n      return void cb('Invalid data');\n    }\n\n    assert(resp);\n    if (resp.friend) {\n      friend_list[user_id] = resp.friend;\n    } else {\n      delete friend_list[user_id];\n    }\n    cb(null, resp.msg);\n  });\n}\n\nexport function friendAdd(user_id: string, cb: NetErrorCallback<string>): void {\n  makeFriendCmdRequest('friend_add', user_id, cb);\n}\nexport function friendRemove(user_id: string, cb: NetErrorCallback<string>): void {\n  makeFriendCmdRequest('friend_remove', user_id, cb);\n}\nexport function friendBlock(user_id: string, cb: NetErrorCallback<string>): void {\n  makeFriendCmdRequest('friend_block', user_id, cb);\n}\nexport function friendUnblock(user_id: string, cb: NetErrorCallback<string>): void {\n  makeFriendCmdRequest('friend_unblock', user_id, cb);\n}\n\nexport const SOCIAL_ONLINE = 1;\nexport const SOCIAL_AFK = 2;\nexport const SOCIAL_INVISIBLE = 3;\nexport type SocialPresenceStatus = typeof SOCIAL_ONLINE | typeof SOCIAL_AFK | typeof SOCIAL_INVISIBLE;\ndeclare module 'glov/client/settings' {\n  let social_presence: SocialPresenceStatus;\n}\n\nexport function socialPresenceStatusGet(): SocialPresenceStatus {\n  return settings.social_presence;\n}\nexport function socialPresenceStatusSet(value: SocialPresenceStatus): void {\n  settingsSet('social_presence', value);\n}\n\nfunction onPresence(this: ClientUserChannel, data: TSMap<PresenceEntry>): void {\n  let user_channel = this;\n  user_channel.presence_data = data;\n}\n\nfunction onUnSubscribe(this: ClientUserChannel): void {\n  delete this.presence_data;\n}\n\ntype ClientPresenceState = Omit<PresenceEntry, 'id'>;\nlet last_presence: ClientPresenceState | null = null;\nlet send_queued = false;\nfunction richPresenceSend(): void {\n  if (!netSubs().loggedIn() || !last_presence || send_queued) {\n    return;\n  }\n  send_queued = true;\n  netSubs().onceConnected(() => {\n    send_queued = false;\n    if (!netSubs().loggedIn() || !last_presence) {\n      return;\n    }\n    let pak = netSubs().getMyUserChannel()!.pak('presence_set');\n    pak.writeInt(last_presence.active);\n    pak.writeAnsiString(last_presence.state);\n    pak.writeJSON(last_presence.payload);\n    pak.writeAnsiString(abTestGetMetricsAndPlatform());\n    pak.send();\n  });\n}\nexport function richPresenceSet(active_in: number, state: string, payload?: unknown): void {\n  let active: number;\n  switch (socialPresenceStatusGet()) {\n    case SOCIAL_AFK:\n      active = active_in === PRESENCE_ACTIVE ? PRESENCE_INACTIVE : active_in;\n      break;\n    case SOCIAL_INVISIBLE:\n      active = PRESENCE_OFFLINE;\n      break;\n    default:\n      active = active_in;\n  }\n  let is_idle = (Date.now() - input.inputLastTime() > IDLE_TIME);\n  if (is_idle) {\n    if (active === PRESENCE_ACTIVE) {\n      active = PRESENCE_INACTIVE;\n    } else if (active === PRESENCE_OFFLINE) {\n      active = PRESENCE_OFFLINE_INACTIVE;\n    }\n  }\n  payload = payload || null;\n  if (!last_presence ||\n    active !== last_presence.active || state !== last_presence.state ||\n    !deepEqual(last_presence.payload, payload)\n  ) {\n    last_presence = {\n      active,\n      state,\n      payload,\n    };\n    richPresenceSend();\n  }\n}\n\n/// Current user info by provider\nlet external_current_users: Record<string, ExternalUserInfo> = Object.create(null);\n/// Friends info by provider and user id\nlet external_friends: Record<string, Record<string, ExternalUserInfo>> = Object.create(null);\n\nexport function getExternalCurrentUserInfos(): Record<string, ExternalUserInfo> {\n  return external_current_users;\n}\n\nexport function getExternalFriendInfos(user_id: string): Record<string, ExternalUserInfo> | undefined {\n  return external_friends[user_id];\n}\n\nexport function getExternalUserInfos(user_id: string): Record<string, ExternalUserInfo> | undefined {\n  if (user_id === netUserId()) {\n    return getExternalCurrentUserInfos();\n  } else {\n    return getExternalFriendInfos(user_id);\n  }\n}\n\nfunction setExternalCurrentUser(provider: string, user_info: ExternalUserInfo): void {\n  if (user_info) {\n    external_current_users[provider] = user_info;\n  } else {\n    delete external_current_users[provider];\n  }\n}\n\nfunction updateExternalFriendsOnServer(provider: string, to_add: ExternalUserInfo[], to_remove: string[]): void {\n  if (to_add.length === 0 && to_remove.length === 0 || netDisconnected()) {\n    return;\n  }\n\n  let requesting_user_id = netUserId();\n  let my_user_channel = netSubs().getMyUserChannel();\n  assert(my_user_channel);\n  let pak = my_user_channel.pak('friend_auto_update');\n  pak.writeAnsiString(provider);\n  for (let ii = 0; ii < to_add.length; ++ii) {\n    pak.writeAnsiString(to_add[ii].external_id);\n  }\n  pak.writeAnsiString('');\n  for (let ii = 0; ii < to_remove.length; ++ii) {\n    pak.writeAnsiString(to_remove[ii]);\n  }\n  pak.writeAnsiString('');\n  pak.send(function (err: string | null, resp?: Record<string, FriendData>) {\n    if (requesting_user_id !== netUserId() || !friend_list) {\n      // Logged out or switched user meanwhile, so ignore the result\n      return;\n    } else if (err) {\n      // Unable to get external friends\n      return;\n    } else if (!resp) {\n      // Nothing to do\n      return;\n    }\n\n    // Add all new friends\n    let friends_external_to_user_ids: Record<string, string> = Object.create(null);\n    for (let user_id in resp) {\n      let friend = friend_list[user_id] = resp[user_id];\n      if (friend.ids) {\n        let external_id = friend.ids[provider];\n        friends_external_to_user_ids[external_id] = user_id;\n      }\n    }\n\n    // Map all the external friends by their corresponding user id\n    to_add.forEach((provider_friend) => {\n      let external_id = provider_friend.external_id;\n      let user_id = friends_external_to_user_ids[external_id];\n      if (user_id) {\n        let external_friend_infos = external_friends[user_id];\n        if (!external_friend_infos) {\n          external_friend_infos = external_friends[user_id] = Object.create(null);\n        }\n        external_friend_infos[provider] = provider_friend;\n      }\n    });\n  });\n}\n\nfunction setExternalFriends(provider: string, provider_friends: ExternalUserInfo[]): void {\n  let friends_external_to_user_ids: Record<string, string> = Object.create(null);\n  for (let user_id in friend_list) {\n    let friend = friend_list[user_id];\n    let external_id = friend.ids?.[provider];\n    if (external_id) {\n      friends_external_to_user_ids[external_id] = user_id;\n    }\n  }\n\n  // Delete all existing infos for this provider\n  for (let user_id in external_friends) {\n    delete external_friends[user_id][provider];\n  }\n\n  let to_add: ExternalUserInfo[] = [];\n  provider_friends.forEach((provider_friend) => {\n    let external_id = provider_friend.external_id;\n    let user_id = friends_external_to_user_ids[external_id];\n    if (user_id) {\n      let external_friend_infos = external_friends[user_id];\n      if (!external_friend_infos) {\n        external_friend_infos = external_friends[user_id] = Object.create(null);\n      }\n      external_friend_infos[provider] = provider_friend;\n      // Delete it, so that in the end the only ones left are the ones that need to be removed\n      delete friends_external_to_user_ids[external_id];\n    } else {\n      // New friend, needs to be added\n      to_add.push(provider_friend);\n    }\n  });\n\n  // The only ones left are the ones that need to be removed\n  let to_remove: string[] = [];\n  for (let external_id in friends_external_to_user_ids) {\n    to_remove.push(external_id);\n  }\n\n  if (to_add.length !== 0 || to_remove.length !== 0) {\n    updateExternalFriendsOnServer(provider, to_add, to_remove);\n  }\n}\n\nfunction requestExternalCurrentUser(provider: string,\n  request_func: (cb: ErrorCallback<ExternalUserInfo>) => void): void {\n  let requesting_user_id = netUserId();\n  request_func((err, user_info) => {\n    if (requesting_user_id !== netUserId()) {\n      // Logged out or switched user meanwhile, so ignore the result\n      return;\n    } else if (err || !user_info) {\n      // Unable to get external current user\n      return;\n    }\n\n    setExternalCurrentUser(provider, user_info);\n  });\n}\n\nfunction requestExternalFriends(provider: string,\n  request_func: (cb: ErrorCallback<ExternalUserInfo[]>) => void): void {\n  let requesting_user_id = netUserId();\n  request_func((err, friends) => {\n    if (requesting_user_id !== netUserId() || !friend_list) {\n      // Logged out or switched user meanwhile, so ignore the result\n      return;\n    } else if (err || !friends) {\n      // Unable to get external friends\n      return;\n    }\n\n    setExternalFriends(provider, friends);\n  });\n}\n\nexport type UserProfileImage = {\n  img: Sprite;\n  img_color?: ROVec4;\n  frame?: number | string;\n};\nlet profile_images: Record<string, UserProfileImage> = {};\nlet default_profile_image: UserProfileImage;\nexport function getUserProfileImage(user_id: string): UserProfileImage {\n  let image = profile_images[user_id];\n  if (image) {\n    return image;\n  }\n\n  let url = null;\n  let infos = getExternalUserInfos(user_id);\n  if (infos) {\n    for (let key in infos) {\n      if (infos[key] && infos[key].profile_picture_url) {\n        url = infos[key].profile_picture_url;\n        break;\n      }\n    }\n  }\n\n  if (url) {\n    let tex = textureLoad({\n      url: url,\n      filter_min: gl.LINEAR_MIPMAP_LINEAR,\n      filter_mag: gl.LINEAR,\n      soft_error: true,\n      auto_unload: () => delete profile_images[user_id],\n    });\n    if (tex && tex.loaded) {\n      image = profile_images[user_id] = {\n        img: spriteCreate({ tex }),\n      };\n      return image;\n    }\n  }\n\n  return default_profile_image;\n}\n\nexport function getDefaultUserProfileImage(): UserProfileImage {\n  return default_profile_image;\n}\n\nexport function setDefaultUserProfileImage(image: UserProfileImage): void {\n  default_profile_image = image;\n}\n\nlet external_user_info_providers: TSMap<{\n  get_current_user?: (cb: ErrorCallback<ExternalUserInfo>) => void;\n  get_friends?: (cb: ErrorCallback<ExternalUserInfo[]>) => void;\n}> = {};\n\nexport function registerExternalUserInfoProvider(\n  provider: string,\n  get_current_user?: (cb: ErrorCallback<ExternalUserInfo>) => void,\n  get_friends?: (cb: ErrorCallback<ExternalUserInfo[]>) => void,\n): void {\n  if (get_current_user || get_friends) {\n    assert(!friend_list);\n    assert(!netSubs().loggedIn());\n\n    external_user_info_providers[provider] = { get_current_user, get_friends };\n  } else {\n    delete external_user_info_providers[provider];\n  }\n}\n\n// Init\nexport function socialInit(): void {\n  netSubs().on('login', function () {\n    let user_channel = netSubs().getMyUserChannel();\n    let user_id = netUserId();\n    richPresenceSend();\n    friend_list = null;\n    if (netDisconnected()) {\n      return;\n    }\n    assert(user_channel);\n    user_channel.pak('friend_list').send((err: string | null, resp?: FriendsData) => {\n      if (err || user_id !== netUserId()) {\n        // disconnected, etc\n        return;\n      }\n      assert(resp);\n      friend_list = resp;\n\n      // Sync friend list with external providers' friends\n      for (const provider in external_user_info_providers) {\n        let { get_current_user, get_friends } = external_user_info_providers[provider]!;\n        if (get_current_user) {\n          requestExternalCurrentUser(provider, get_current_user);\n        }\n        if (get_friends) {\n          requestExternalFriends(provider, get_friends);\n        }\n      }\n    });\n  });\n  netSubs().on('logout', function () {\n    friend_list = null;\n    external_current_users = Object.create(null);\n    external_friends = Object.create(null);\n  });\n\n  netSubs().onChannelMsg('user', 'presence', onPresence);\n  netSubs().onChannelEvent('user', 'unsubscribe', onUnSubscribe);\n\n  // Pass-through commands\n  cmd_parse.register({\n    cmd: 'friend_add',\n    help: 'Add a friend',\n    func: friendAdd,\n  });\n  cmd_parse.register({\n    cmd: 'friend_remove',\n    help: 'Remove a friend',\n    func: friendRemove,\n  });\n  cmd_parse.register({\n    cmd: 'friend_block',\n    help: 'Block someone from seeing your rich presence, also removes from your friends list',\n    func: friendBlock,\n  });\n  cmd_parse.register({\n    cmd: 'friend_unblock',\n    help: 'Reset a user to allow seeing your rich presence again',\n    func: friendUnblock,\n  });\n  cmd_parse.register({\n    cmd: 'friend_list',\n    help: 'List all friends',\n    func: function (str: string, resp_func: CmdRespFunc<string>) {\n      if (!friend_list) {\n        return void resp_func('Friends list not loaded');\n      }\n      resp_func(null, Object.keys(friend_list).filter(isFriend).join(',') ||\n        'You have no friends');\n    },\n  });\n  cmd_parse.register({\n    cmd: 'friend_block_list',\n    help: 'List all blocked users',\n    func: function (str: string, resp_func: CmdRespFunc<string>) {\n      if (!friend_list) {\n        return void resp_func('Friends list not loaded');\n      }\n      resp_func(null, Object.keys(friend_list).filter(friendIsBlocked).join(',') ||\n        'You have no blocked users');\n    },\n  });\n\n  settingsRegister({\n    social_presence: {\n      default_value: SOCIAL_ONLINE,\n      type: cmd_parse.TYPE_INT,\n      range: [SOCIAL_ONLINE,SOCIAL_INVISIBLE],\n      access_show: ['hidden'],\n    },\n  });\n\n  cmd_parse.registerValue('invisible', {\n    type: cmd_parse.TYPE_INT,\n    help: 'Hide rich presence information from other users',\n    label: 'Invisible',\n    range: [0,1],\n    get: () => (settings.social_presence === SOCIAL_INVISIBLE ? 1 : 0),\n    set: (v: number) => socialPresenceStatusSet(v ? SOCIAL_INVISIBLE : SOCIAL_ONLINE),\n  });\n\n  cmd_parse.registerValue('afk', {\n    type: cmd_parse.TYPE_INT,\n    help: 'Appear as idle to other users',\n    label: 'AFK',\n    range: [0,1],\n    get: () => (settings.social_presence === SOCIAL_AFK ? 1 : 0),\n    set: (v: number) => socialPresenceStatusSet(v ? SOCIAL_AFK : SOCIAL_ONLINE),\n  });\n\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport const FADE_DEFAULT = 0;\nexport const FADE_OUT = 1;\nexport const FADE_IN = 2;\nexport const FADE = FADE_OUT + FADE_IN;\n\nimport assert from 'assert';\nimport { ErrorCallback, TSMap } from 'glov/common/types';\nimport { callEach, defaults, ridx } from 'glov/common/util';\nimport { is_firefox, is_itch_app } from './browser';\nimport { cmd_parse } from './cmds';\nimport { onEnterBackground, onExitBackground } from './engine';\nimport { filewatchOn } from './filewatch';\nimport { locateAsset } from './locate_asset';\nimport * as settings from './settings';\nimport { settingsRegister } from './settings';\nimport { textureCname } from './textures';\nimport * as urlhash from './urlhash';\n\nconst { Howl, Howler } = require('@jimbly/howler/src/howler.core.js');\nconst { abs, floor, max, min, random } = Math;\n\nconst DEFAULT_FADE_RATE = 0.001;\n\ndeclare module 'glov/client/settings' {\n  let volume: number;\n  let volume_music: number;\n  let volume_sound: number;\n}\n\nexport interface SoundLoadOpts {\n  streaming?: boolean;\n  for_reload?: boolean;\n  loop?: boolean;\n}\n\n// Workaround to have interface to Howl object available (alongside glov_load_opts).\ninterface HowlSound {\n  glov_load_opts: SoundLoadOpts;\n  play(sprite?: string | number, volume?: number): number;\n  stop(id?: number): HowlSound;\n  volume(vol?: number, id?: number): void;\n  seek(seek?: number, id?: number): HowlSound | number;\n  playing(id?: number): boolean;\n  duration(id?: number): number;\n}\n\n// Sound wrapper returned by soundPlay to external code\nexport interface GlovSoundSetUp {\n  name: string;\n  stop(): HowlSound;\n  volume(vol: number): void;\n  playing(): boolean;\n  duration(): number;\n  location(time?: number): number;\n  fade(target_volume: number, time: number): void;\n}\n\n// Placeholder to track reference to sound whenever it's played\nexport interface GlovSoundStreamedPlaceholder {\n  name: string;\n  is_placeholder: true;\n}\n\nexport type GlovSound = GlovSoundSetUp | GlovSoundStreamedPlaceholder;\n\nexport function isPlaceholderSound(sound: GlovSound): sound is GlovSoundStreamedPlaceholder {\n  return (sound as GlovSoundStreamedPlaceholder).is_placeholder;\n}\n\ninterface GlovMusic {\n  sound: HowlSound | null;\n  id: number;\n  current_volume: number;\n  target_volume: number;\n  sys_volume: number;\n  need_play: boolean;\n}\n\ninterface Fade {\n  sound: GlovSoundSetUp;\n  target_volume: number;\n  id: number;\n  time: number;\n  volume: number;\n  settingsVolume(): number;\n}\n\nlet sounds : TSMap<HowlSound> = {};\nlet active_sfx_as_music: {\n  sound: GlovSoundSetUp;\n  play_volume: number;\n  set_volume_when_played: number;\n}[] = [];\nlet num_loading = 0;\n\n// Howler.usingWebAudio = false; // Disable WebAudio for testing HTML5 fallbacks\n\nexport type SoundSystemParams = {\n  ext_list: string[];\n  fade_rate: number;\n  fade_music_in_bg: boolean;\n};\nconst default_params: SoundSystemParams = {\n  // Note: as of Firefox v71 (2019), all major browsers support MP3\n  // ext_list: ['mp3', 'wav'], // (recommended) try loading .mp3 versions first, then fallback to .wav\n  //  also covers all browsers: ['webm', 'mp3']\n  ext_list: ['ogg', 'mp3'], // (recommended) autosound build task => ogg and mp3 from wav, load ogg first (smaller)\n  fade_rate: DEFAULT_FADE_RATE,\n  fade_music_in_bg: true,\n};\nlet sound_params: SoundSystemParams;\n\nlet last_played : TSMap<number> = {};\nlet frame_timestamp = 0;\nlet fades : Fade[] = [];\nlet music : GlovMusic[];\n\nexport function fadesCount(): number {\n  return fades.length;\n}\n\nlet volume_override = 1;\nlet volume_override_target = 1;\nlet volume_music_override = 1;\nlet volume_music_override_target = 1;\n\nsettingsRegister({\n  volume: {\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0,1],\n  },\n  volume_music: {\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0,1],\n  },\n  volume_sound: {\n    default_value: 1,\n    type: cmd_parse.TYPE_FLOAT,\n    range: [0,1],\n  },\n});\n\nfunction musicVolume(): number {\n  return settings.volume * settings.volume_music;\n}\n\nfunction soundVolume(): number {\n  return settings.volume * settings.volume_sound;\n}\n\nlet sounds_load_failed: TSMap<SoundLoadOpts> = {};\nlet sounds_loading : TSMap<ErrorCallback<never, string>[]> = {};\nlet on_load_fail: (base: string) => void;\nexport function soundOnLoadFail(cb: (base: string) => void): void {\n  on_load_fail = cb;\n}\n\nexport type SoundID = string | { file: string; volume: number };\n\nexport function soundFindForReplacement(filename: string): string | null {\n  if (sounds[filename]) {\n    return filename;\n  }\n  for (let key in sounds) {\n    if (textureCname(key) === filename) {\n      return key;\n    }\n  }\n  return null;\n}\n\nexport function soundReplaceFromDataURL(key: string, dataurl: string): void {\n  let existing = sounds[key];\n  assert(existing);\n  let opts = existing.glov_load_opts;\n  const { loop } = opts;\n  let sound = new Howl({\n    src: dataurl,\n    html5: false,\n    loop: Boolean(loop),\n    volume: 0,\n    onload: function () {\n      sound.glov_load_opts = opts;\n      sounds[key] = sound;\n    },\n    onloaderror: function (id: unknown, err: string, extra: unknown) {\n      console.error(`Error loading sound ${key}: ${err}`);\n    },\n  });\n}\n\nexport function soundLoad(soundid: SoundID | SoundID[], opts?: SoundLoadOpts, cb?: ErrorCallback<never, string>): void {\n  opts = opts || {};\n  if (opts.streaming && (is_firefox || is_itch_app)) {\n    // TODO: Figure out workaround and fix!\n    //   On slow connections, sounds set to streaming sometimes never load on Firefox,\n    //   possibly related to preload options or something ('preload=meta' not guaranteed to fire 'canplay')\n    // Additionally, HTML5 audio simply fails from within the Itch.io app\n    opts.streaming = false;\n  }\n  const { streaming, loop } = opts;\n  if (Array.isArray(soundid)) {\n    assert(!cb);\n    for (let ii = 0; ii < soundid.length; ++ii) {\n      soundLoad(soundid[ii], opts);\n    }\n    return;\n  }\n  let key = typeof soundid === 'string' ? soundid : soundid.file;\n  if (sounds[key]) {\n    if (cb) {\n      cb();\n    }\n    return;\n  }\n  if (sounds_loading[key]) {\n    if (cb) {\n      sounds_loading[key]!.push(cb);\n    }\n    return;\n  }\n  let cbs : ErrorCallback<never, string>[] = [];\n  if (cb) {\n    cbs.push(cb);\n  }\n  sounds_loading[key] = cbs;\n  delete sounds_load_failed[key];\n  let soundname = key;\n  let m = soundname.match(/^(.*)\\.(mp3|ogg|wav|webm)$/u);\n  let preferred_ext;\n  if (m) {\n    soundname = m[1];\n    preferred_ext = m[2];\n  }\n  let src = `sounds/${soundname}`;\n  let srcs: string[] = [];\n  if (preferred_ext) {\n    srcs.push(`${src}.${preferred_ext}`);\n  }\n  for (let ii = 0; ii < sound_params.ext_list.length; ++ii) {\n    let ext = sound_params.ext_list[ii];\n    if (ext !== preferred_ext) {\n      srcs.push(`${src}.${ext}`);\n    }\n  }\n\n  srcs = srcs.map((filename) => {\n    if (opts!.for_reload) { // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      filename = `${filename}?rl=${Date.now()}`;\n    } else {\n      filename = locateAsset(filename);\n    }\n    filename = `${urlhash.getURLBase()}${filename}`;\n    return filename;\n  });\n\n  // Try loading desired sound types one at a time.\n  // Cannot rely on Howler's built-in support for this because it only continues\n  //   through the list on *some* load errors, not all :(.\n  function tryLoad(idx: number): void {\n    if (idx === srcs.length) {\n      console.error(`Error loading sound ${soundname}: All fallbacks exhausted, giving up`);\n      if (on_load_fail) {\n        on_load_fail(soundname);\n      }\n      sounds_load_failed[key] = opts!;\n      callEach(cbs, delete sounds_loading[key], 'Error loading sound');\n      return;\n    }\n    if (!streaming) {\n      ++num_loading;\n    }\n    let once = false;\n    let sound = new Howl({\n      src: srcs.slice(idx),\n      html5: Boolean(streaming),\n      loop: Boolean(loop),\n      volume: 0,\n      onload: function () {\n        if (!once) {\n          if (!streaming) {\n            --num_loading;\n          }\n          once = true;\n          sound.glov_load_opts = opts;\n          sounds[key] = sound;\n          callEach(cbs, delete sounds_loading[key], null);\n        }\n      },\n      onloaderror: function (id: unknown, err: string, extra: unknown) {\n        if (idx === srcs.length - 1) {\n          console.error(`Error loading sound ${srcs[idx]}: ${err}`);\n        } else {\n          console.log(`Error loading sound ${srcs[idx]}: ${err}, trying fallback...`);\n        }\n        if (!once) {\n          if (!streaming) {\n            --num_loading;\n          }\n          once = true;\n          tryLoad(idx + 1);\n        }\n      },\n    });\n  }\n  tryLoad(0);\n}\n\nfunction soundReload(filename: string): void {\n  let name_match = filename.match(/^sounds\\/([^.]+)\\.\\w+$/);\n  let sound_name = name_match && name_match[1];\n  if (!sound_name) {\n    return;\n  }\n  let existing_sound = sounds[sound_name];\n  let failed_sound_opts = sounds_load_failed[sound_name];\n  if (!existing_sound && !failed_sound_opts) {\n    console.log(`Reload triggered for non-existent sound: ${filename}`);\n    return;\n  }\n  let opts: SoundLoadOpts;\n  if (existing_sound) {\n    opts = existing_sound.glov_load_opts;\n    opts.for_reload = true;\n    delete sounds[sound_name];\n  } else {\n    // failed to load previously, reload may work if file now exists\n    assert(failed_sound_opts);\n    opts = failed_sound_opts;\n    delete sounds_load_failed[sound_name];\n  }\n  soundLoad(sound_name, opts);\n}\n\nexport function soundPause(): void {\n  volume_override = volume_override_target = 0;\n  // Immediately mute all the music\n  // Can't do a nice fade out here because we stop getting ticked when we're not in the foreground\n  soundTick(0); // eslint-disable-line @typescript-eslint/no-use-before-define\n}\n\nexport function soundResume(): void {\n  volume_override_target = 1;\n\n  // Actual context resuming handled internally by Howler, except for gamepad\n  //   which calls soundResume, so let's poke howler to unlock.\n  Howler.manualUnlock();\n}\n\nexport function soundMusicPause(): void {\n  volume_music_override_target = 0;\n}\n\nlet skip_one_music_blend = false;\nexport function soundMusicResume(): void {\n  volume_music_override_target = 1;\n  // Also, skip the blend on the very first frame, dt will be exceptionally large if returning from the background\n  skip_one_music_blend = true;\n}\n\nfunction soundFadeMusicInBackground(): void {\n  let music_tick_timer: ReturnType<typeof setTimeout> | null = null;\n  let last_time: number;\n  function musicForceTick(): void {\n    let now = Date.now();\n    soundTick(now - last_time); // eslint-disable-line @typescript-eslint/no-use-before-define\n    last_time = now;\n    music_tick_timer = setTimeout(musicForceTick, 100);\n  }\n  onEnterBackground(() => {\n    soundMusicPause();\n    last_time = Date.now();\n    if (!music_tick_timer) {\n      music_tick_timer = setTimeout(musicForceTick, 100);\n    }\n  });\n  onExitBackground(() => {\n    soundMusicResume();\n    if (music_tick_timer) {\n      clearTimeout(music_tick_timer);\n      music_tick_timer = null;\n    }\n  });\n}\n\nexport function soundStartup(params: Partial<SoundSystemParams>): void {\n  sound_params = defaults(params || {}, default_params);\n\n  // Music\n  music = []; // 0 is current, 1 is previous (fading out)\n  for (let ii = 0; ii < 2; ++ii) {\n    music.push({\n      sound: null,\n      id: 0,\n      current_volume: 0,\n      target_volume: 0,\n      sys_volume: 0,\n      need_play: false,\n    });\n  }\n  filewatchOn('.mp3', soundReload);\n  filewatchOn('.ogg', soundReload);\n  filewatchOn('.wav', soundReload);\n  filewatchOn('.webm', soundReload);\n\n  if (sound_params.fade_music_in_bg) {\n    soundFadeMusicInBackground();\n  }\n}\n\nexport function soundResumed(): boolean {\n  return !Howler.noAudio && Howler.safeToPlay;\n}\n\nfunction blendOverride(dt: number, override: number, target: number): number {\n  let delta = dt * 0.001;\n  if (override < target) {\n    override = min(override + delta, target);\n  } else {\n    override = max(override - delta, target);\n  }\n  return override;\n}\n\nexport function soundTick(dt: number): void {\n  frame_timestamp += dt;\n  if (volume_override !== volume_override_target) {\n    volume_override = blendOverride(dt, volume_override, volume_override_target);\n  }\n  if (volume_music_override !== volume_music_override_target) {\n    if (skip_one_music_blend) {\n      skip_one_music_blend = false;\n    } else {\n      volume_music_override = blendOverride(dt, volume_music_override, volume_music_override_target);\n    }\n  }\n  if (!soundResumed()) {\n    return;\n  }\n  for (let i = 0; i < active_sfx_as_music.length; ++i) {\n    let { sound, play_volume, set_volume_when_played } = active_sfx_as_music[i];\n    if (!sound.playing()) {\n      ridx(active_sfx_as_music, i);\n    } else if (set_volume_when_played !== musicVolume()) {\n      sound.volume(play_volume);\n      active_sfx_as_music[i].set_volume_when_played = musicVolume();\n    }\n  }\n  // Do music fading\n  // Cannot rely on Howler's fading because starting a fade when one is in progress\n  //   messes things up, as well causes snaps in volume :(\n  let max_fade = dt * sound_params.fade_rate;\n  for (let ii = 0; ii < music.length; ++ii) {\n    let mus = music[ii];\n    if (!mus.sound) {\n      continue;\n    }\n    let target = (settings.volume * settings.volume_music === 0) ? 0 : mus.target_volume;\n    if (mus.current_volume !== target) {\n      let delta = target - mus.current_volume;\n      let fade_amt = min(abs(delta), max_fade);\n      if (delta < 0) {\n        mus.current_volume = max(target, mus.current_volume - fade_amt);\n      } else {\n        mus.current_volume = min(target, mus.current_volume + fade_amt);\n      }\n      if (!mus.target_volume && !mus.current_volume) {\n        if (!mus.need_play) {\n          mus.sound.stop(mus.id);\n        }\n        mus.sound = null;\n      }\n    }\n    if (mus.sound) {\n      let sys_volume = mus.current_volume * musicVolume() * volume_override * volume_music_override;\n      if (mus.need_play) {\n        mus.need_play= false;\n        mus.id = mus.sound.play();\n        mus.sys_volume = -1;\n      }\n      if (mus.sys_volume !== sys_volume) {\n        mus.sound.volume(sys_volume, mus.id);\n        mus.sys_volume = sys_volume;\n      }\n    }\n  }\n\n  for (let ii = fades.length - 1; ii >= 0; --ii) {\n    let fade = fades[ii];\n    let delta = fade.target_volume - fade.volume;\n    let fade_amt = min(abs(delta), fade.time ? dt / fade.time : max_fade);\n    if (delta < 0) {\n      fade.volume = max(fade.target_volume, fade.volume - fade_amt);\n    } else {\n      fade.volume = min(fade.target_volume, fade.volume + fade_amt);\n    }\n    fade.sound.volume(fade.volume);\n    if (fade.volume === fade.target_volume) {\n      ridx(fades, ii);\n      if (!fade.volume) {\n        fade.sound.stop();\n      }\n    }\n  }\n}\n\nexport function soundPlay(soundid: SoundID, volume?: number, as_music?: boolean): GlovSoundSetUp | null {\n  volume = volume || 1;\n  if (settings.volume * (as_music ? settings.volume_music : settings.volume_sound) === 0) {\n    return null;\n  }\n  if (!soundResumed()) {\n    return null;\n  }\n  if (Array.isArray(soundid)) {\n    soundid = soundid[floor(random() * soundid.length)];\n  }\n  if (typeof soundid === 'object') {\n    volume *= (soundid.volume || 1);\n    soundid = soundid.file;\n  }\n  let sound = sounds[soundid];\n  if (!sound) {\n    return null;\n  }\n  let last_played_time = last_played[soundid] || -9e9;\n  if (frame_timestamp - last_played_time < 45) {\n    return null;\n  }\n  let settingsVolume = as_music ? musicVolume : soundVolume;\n  let id = sound.play(undefined, volume * settingsVolume() * volume_override);\n  // sound.volume(volume * settingsVolume() * volume_override, id);\n  last_played[soundid] = frame_timestamp;\n  let played_sound = {\n    name: soundid,\n    volume_current: volume,\n    stop: sound.stop.bind(sound, id),\n    playing: sound.playing.bind(sound, id), // not reliable if it hasn't started yet? :(\n    location: (time?: number) => { // get current location\n      let v;\n      if (time !== undefined) {\n        v = sound!.seek(time, id); // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      } else {\n        v = sound!.seek(time, id); // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      }\n      if (typeof v !== 'number') {\n        // Howler sometimes returns `self` from `seek()`\n        return 0;\n      }\n      return v;\n    },\n    duration: sound.duration.bind(sound, id),\n    volume: (vol: number) => {\n      played_sound.volume_current = vol;\n      // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      sound!.volume(vol * settingsVolume() * volume_override, id);\n    },\n    fade: (target_volume: number, time: number) => {\n      let new_fade = {\n        sound: played_sound,\n        volume: played_sound.volume_current,\n        target_volume,\n        id,\n        time,\n        settingsVolume,\n      };\n      for (let ii = 0; ii < fades.length; ++ii) {\n        if (fades[ii].id === id) {\n          fades[ii] = new_fade;\n          return;\n        }\n      }\n      fades.push(new_fade);\n    },\n  };\n  if (as_music) {\n    active_sfx_as_music.push({\n      sound: played_sound,\n      play_volume: volume,\n      set_volume_when_played: musicVolume(),\n    });\n  }\n  return played_sound;\n}\n\nexport function soundPlayStreaming(\n  soundname: string,\n  volume: number,\n  as_music: boolean,\n  on_played_sound?: (sound: GlovSoundSetUp | null) => void\n): GlovSound | null {\n  if (settings.volume * (as_music ? settings.volume_music : settings.volume_sound) === 0) {\n    return null;\n  }\n  if (Array.isArray(soundname)) {\n    soundname = soundname[floor(random() * soundname.length)];\n  }\n  let played_sound: GlovSound | null = { name: soundname, is_placeholder: true };\n  soundLoad(soundname, { streaming: true, loop: false }, (err) => {\n    if (!err) {\n      played_sound = soundPlay(soundname, volume, as_music);\n      if (on_played_sound) {\n        on_played_sound(played_sound);\n      }\n    }\n  });\n  return played_sound;\n}\n\nexport function soundPlayMusic(soundname: string, volume?: number, transition?: number): void {\n  if (settings.volume * settings.volume_music === 0) {\n    return;\n  }\n  if (volume === undefined) {\n    volume = 1;\n  }\n  transition = transition || FADE_DEFAULT;\n  soundLoad(soundname, { streaming: true, loop: true }, (err) => {\n    let sound = null;\n    if (err) {\n      // Likely case: MP3 not supported, no WAV fallback\n    } else {\n      sound = sounds[soundname];\n      assert(sound);\n      if (music[0].sound === sound) {\n        // Same sound, just adjust volume, if required\n        music[0].target_volume = volume!; // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n        if (!transition) {\n          if (!volume) {\n            sound.stop(music[0].id);\n            music[0].sound = null;\n          } else {\n            let sys_volume = music[0].sys_volume = volume * musicVolume() * volume_override * volume_music_override;\n            sound.volume(sys_volume, music[0].id);\n            if (!sound.playing()) {\n              sound.play(undefined, sys_volume);\n            }\n          }\n        }\n        return;\n      }\n    }\n    // fade out previous music, if any\n    if (music[0].current_volume) {\n      if (transition! & FADE_OUT) { // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n        // swap to position 1, start fadeout\n        let temp = music[1];\n        music[1] = music[0];\n        music[0] = temp;\n        music[1].target_volume = 0;\n      }\n    }\n    if (music[0].sound) {\n      music[0].sound.stop(music[0].id);\n    }\n    music[0].sound = sound;\n    if (sound) {\n      music[0].target_volume = volume!; // ! is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n      let start_vol = (transition! & FADE_IN) ? 0 : volume!; // !s are workaround TypeScript bug fixed in v5.4.0\n      music[0].current_volume = start_vol;\n      if (soundResumed()) {\n        let sys_volume = start_vol * musicVolume() * volume_override * volume_music_override;\n        music[0].id = sound.play(undefined, sys_volume);\n        // sound.volume(sys_volume, music[0].id);\n        music[0].sys_volume = sys_volume;\n        music[0].need_play = false;\n      } else {\n        music[0].need_play = true;\n      }\n    } else {\n      music[0].target_volume = music[0].current_volume = 0;\n    }\n  });\n}\n\nexport function soundLoading(): number {\n  return num_loading;\n}\n","// eslint-disable-next-line import/order\nimport {\n  BUTTON_ANY,\n  ButtonIndex,\n} from './input_constants';\n\nexport const SPOT_NAVTYPE_SIMPLE = 0; // just arrows\nexport const SPOT_NAVTYPE_EXTENDED = 1; // also WASD, numpad, etc\nexport type SpotNavtypeEnum = typeof SPOT_NAVTYPE_SIMPLE | typeof SPOT_NAVTYPE_EXTENDED;\n\nexport const SPOT_NAV_NONE = 0;\nexport const SPOT_NAV_LEFT = 1;\nexport const SPOT_NAV_UP = 2;\nexport const SPOT_NAV_RIGHT = 3;\nexport const SPOT_NAV_DOWN = 4;\nexport const SPOT_NAV_NEXT = 5;\nexport const SPOT_NAV_PREV = 6;\nconst SPOT_NAV_MAX = 7;\n\ntype SpotNavEnum = typeof SPOT_NAV_LEFT |\n  typeof SPOT_NAV_UP |\n  typeof SPOT_NAV_RIGHT |\n  typeof SPOT_NAV_DOWN |\n  typeof SPOT_NAV_NEXT |\n  typeof SPOT_NAV_PREV;\ntype SpotNavEnumOrNone = SpotNavEnum | typeof SPOT_NAV_NONE;\n\nexport const SPOT_STATE_REGULAR = 1;\nexport const SPOT_STATE_DOWN = 2;\nexport const SPOT_STATE_FOCUSED = 3;\nexport const SPOT_STATE_DISABLED = 4;\nexport type SpotStateEnum = typeof SPOT_STATE_REGULAR |\n  typeof SPOT_STATE_DOWN |\n  typeof SPOT_STATE_FOCUSED |\n  typeof SPOT_STATE_DISABLED;\n\n\ntype SpotCustomNavTarget = null | // indicates the spot should do no navigation, but allow the caller to handle\n  undefined | // indicates navigation should target nothing (keys not consumed)\n  string; // the key of a custom element\n\ntype SpotCustomNav = Partial<Record<SpotNavEnum, SpotCustomNavTarget>>;\n\n\n// See SPOT_DEFAULT for defaults\nexport interface SpotParamBase {\n  key?: string; // defaults to from x,y otherwise\n  disabled: boolean;\n  in_event_cb: EventCallback | null; // for clicks and key presses\n  drag_target: boolean; // receive dragDrop events\n  drag_over: boolean; // consume dragOver events\n  button: ButtonIndex; // respond to which mouse button\n  is_button: boolean; // can be activated/clicked/etc\n  button_long_press: boolean; // detect long press differently than a regular click/tap\n  pad_focusable: boolean; // is a target for keyboard/gamepad focus; set to false if only accessible via hotkey/button\n  spatial_focus: boolean; // if pad_focusable: can be focused spatialy (via d-pad/etc), otherwise only through tab\n  auto_focus: boolean; // if this spot is new this frame, and doing pad (not mouse/touch) focusing, automatically focus\n  long_press_focuses: boolean; // a long press will focus an element (triggering tooltips, etc, on touch devices)\n  sound_button: string | null; // when activated\n  sound_rollover: string | null; // when mouse movement triggers focus\n  touch_focuses: boolean; // first touch focuses (on touch devices), showing tooltip, etc, second activates the button\n  disabled_focusable: boolean; // allow focusing even if disabled (e.g. to show tooltip)\n  hotkey: number | null; // optional keyboard hotkey\n  hotkeys: number[] | null; // optional keyboard hotkeys\n  hotpad: number | null; // optional gamepad button\n  // (silently) ensures we have the focus this frame (e.g. if dragging a slider, the slider\n  // should retain focus even without mouseover)\n  focus_steal: boolean;\n  sticky_focus: boolean; // focus is not lost due to mouseover elsewhere\n  // optional map of SPOT_NAV_* to either:\n  //   null: indicates the spot should not do navigation, but allow the caller to handle (sets param.out.nav)\n  //   undefined: indicates navigation should target nothing (and those keys will not be consumed)\n  //   a string key: a custom element to target with navigation\n  custom_nav: SpotCustomNav | null;\n}\n\nexport const SPOT_DEFAULT = {\n  key: undefined, // defaults to from x,y\n  disabled: false,\n  in_event_cb: null,\n  drag_target: false,\n  drag_over: false,\n  button: BUTTON_ANY,\n  is_button: false,\n  button_long_press: false,\n  pad_focusable: true,\n  spatial_focus: true,\n  auto_focus: false,\n  long_press_focuses: true,\n  sound_button: 'button_click',\n  sound_rollover: 'rollover',\n  touch_focuses: false,\n  disabled_focusable: true,\n  hotkey: null,\n  hotkeys: null,\n  hotpad: null,\n  focus_steal: false,\n  sticky_focus: false,\n  custom_nav: null,\n};\n\nexport const SPOT_DEFAULT_BUTTON: SpotParamBase = {\n  ...SPOT_DEFAULT,\n  is_button: true,\n};\n\nexport const SPOT_DEFAULT_BUTTON_DISABLED: SpotParamBase = {\n  ...SPOT_DEFAULT,\n  disabled: true,\n  sound_rollover: null,\n};\n\nexport const SPOT_DEFAULT_BUTTON_DRAW_ONLY: SpotParamBase = {\n  // Matches previous { draw_only: true, draw_only_mouseover: true, disabled_mouseover: true } option to ui.buttonShared\n  ...SPOT_DEFAULT,\n  pad_focusable: false,\n};\n\nexport const SPOT_DEFAULT_LABEL: SpotParamBase = {\n  ...SPOT_DEFAULT,\n  sound_rollover: null,\n  touch_focuses: true, // usually want this?\n};\n\ntype SpotKeyableKeyed = {\n  key: string;\n};\ntype SpotKeyableAuto = Point2D;\n\nexport type SpotKeyable = (SpotKeyableKeyed | SpotKeyableAuto) & {\n  // computed\n  key_computed?: string;\n};\n\nexport type SpotRet = {\n  focused: boolean; // focused by any means\n  kb_focused: boolean; // focused for the purpose of receiving keyboard input (focused and no other sticky focus)\n  spot_state: SpotStateEnum;\n  ret: number; // if `param.is_button` and was activated (0/1 or more if clicked multiple times in a frame)\n  long_press?: boolean; // if button_long_press and ret and was a long press, set to true\n  button?: number; // if ret, set to mouse button used to click it\n  pos?: Vec2 | null | undefined; // if ret, set to position of the click\n  double_click?: boolean; // if ret, set to true if it was a double click/tap/button press/etc\n  drag_drop?: unknown | null; // if drag_target and a drop happened, contains dragDrop event { drag_payload }\n  nav?: SpotNavEnumOrNone; // if custom_nav, and the user navigated, set to the navigation event\n  allow_focus?: boolean; // set and used internally if this spot is allowed to be focused\n};\n\ntype SpotComputedFields = {\n  // internal run-time fields that might be useful to callers\n  key_computed?: string;\n  dom_pos?: Box;\n  out?: SpotRet;\n};\n\nexport interface SpotParam extends Partial<SpotParamBase>, Box, SpotComputedFields {\n  def: SpotParamBase; // inherit all undefined SpotParamBase members from this\n  hook?: HookList;\n  url?: string;\n  internal?: boolean; // For links (spots with `url`): default `true`\n  // from TooltipBoxParam\n  tooltip?: TooltipValue | null;\n  tooltip_width?: number;\n  tooltip_above?: boolean;\n  tooltip_right?: boolean;\n  tooltip_center?: boolean;\n  tooltip_markdown?: boolean;\n}\n\nexport interface SpotSubParam extends Box, SpotComputedFields {\n  key: string;\n}\n\ninterface SpotInternal extends SpotParam {\n  // internal run-time fields\n  dom_pos: Box;\n  key_computed: string;\n  sub_rect: SpotSubInternal | null;\n  out: SpotRet;\n\n  // only on fake Spots from spotMouseoverHook\n  only_mouseover?: true;\n  spot_debug_ignore?: boolean;\n}\n\ninterface SpotSubInternal extends SpotSubParam {\n  // internal run-time fields\n  dom_pos: Box;\n  key_computed: string;\n  sub_rect: SpotSubInternal | null;\n\n  is_sub_rect: true;\n  is_empty_sub_rect: boolean;\n}\n\ntype SpotListElem = SpotInternal | SpotSubInternal;\n\n// TODO: move to input.js when converted to TypeScript\ntype MouseOverParam = {\n  peek?: boolean;\n  eat_clicks?: boolean;\n  spot_debug_ignore?: boolean;\n};\n\nimport assert from 'assert';\nconst { abs, max } = Math;\nimport verify from 'glov/common/verify';\nimport { Vec2, Vec4 } from 'glov/common/vmath.js';\nimport * as camera2d from './camera2d.js';\nimport * as engine from './engine.js';\nimport {\n  FontStyle,\n  fontStyle,\n} from './font.js';\nimport { Box, Point2D } from './geom_types';\nimport {\n  KEYS,\n  PAD,\n  dragDrop,\n  dragOver,\n  inputClick,\n  inputEatenMouse,\n  inputTouchMode,\n  keyDown,\n  keyDownEdge,\n  longPress,\n  mouseButtonHadEdge,\n  mouseDomPos,\n  mouseDownAnywhere,\n  mouseDownEdge,\n  mouseDownMidClick,\n  mouseMoved,\n  mouseOver,\n  mousePosIsTouch,\n  padButtonDownEdge,\n} from './input.js';\nimport { link } from './link';\nimport * as settings from './settings.js';\nimport * as ui from './ui.js';\nimport {\n  EventCallback,\n  HookList,\n  TooltipBoxParam,\n  TooltipValue,\n  drawLine,\n  drawRect,\n  drawTooltipBox,\n  playUISound,\n} from './ui.js';\nconst { checkHooks } = ui.internal;\n\nlet focus_sub_rect = null as (SpotSubInternal | null);\nlet focus_sub_rect_elem = null as (SpotInternal | null);\nlet sub_stack: [typeof focus_sub_rect, typeof focus_sub_rect_elem][] = [];\nlet focus_key: string | null = null;\n// sticky focus: used for edit boxes so that they do not lose focus even when\n//   mousing over other elements (those elements become the temporary `nonsticky`\n//   focus.\nlet focus_is_sticky = false;\nlet focus_key_nonsticky: string | null = null;\nlet focus_pos: Box = { x: 0, y: 0, w: 0, h: 0 };\nlet last_frame_spots: SpotListElem[] = [];\nlet frame_spots: SpotListElem[] = [];\nlet focus_next: (SpotInternal|null|undefined)[] = []; // indexed by SPOT_NAV_*\nlet focus_next_via: (SpotSubInternal|undefined)[] = []; // just for spotDebug\nlet frame_autofocus_spots: Partial<Record<string, SpotInternal>> = {};\nlet last_frame_autofocus_spots: typeof frame_autofocus_spots = {};\n// pad_mode: really \"non-mouse-mode\" - touch triggers this in various situations\n// non-pad_mode (mouse mode) requires constant mouse over state to maintain focus\nlet pad_mode = false;\nlet suppress_pad = false;\nlet async_activate_key: string | null = null;\n\nfunction isSubRect(area: SpotListElem): area is SpotSubInternal {\n  return (area as SpotSubInternal).is_sub_rect;\n}\n\nexport function spotPadMode(): boolean {\n  return pad_mode;\n}\n\nexport function spotSetPadMode(new_mode: boolean): void {\n  pad_mode = new_mode;\n}\n\nexport function spotlog(...args: unknown[]): void {\n  // const { getFrameIndex } = require('./engine.js'); // eslint-disable-line global-require\n  // console.log(`spotlog(${getFrameIndex()}): `, ...args);\n}\n\nexport function spotGet(key: string, last_frame: boolean): SpotListElem | null {\n  let frames = last_frame ? last_frame_spots : frame_spots;\n  let key_computed_spot = null;\n  // Match first by key, and afterwards by key_computed\n  for (let ii = 0; ii < frames.length; ++ii) {\n    if (key === frames[ii].key) {\n      return frames[ii];\n    }\n    if (key === frames[ii].key_computed) {\n      key_computed_spot = frames[ii];\n    }\n  }\n  return key_computed_spot;\n}\n\nexport function spotKey(param: SpotKeyable): string {\n  if (param.key_computed) {\n    // already computed, early this frame, or in a persistent object, use it\n    if (!engine.defines.SPOT_DEBUG) {\n      return param.key_computed;\n    }\n  }\n  profilerStartFunc();\n  let key = (param as SpotKeyableKeyed).key ||\n    (`${focus_sub_rect ? focus_sub_rect.key_computed : ''}_` +\n    `${(param as SpotKeyableAuto).x}_${(param as SpotKeyableAuto).y}`);\n  if (param.key_computed) {\n    // ensure two different spots on the same frame are not using the same param object\n    assert.equal(param.key_computed, key);\n  } else {\n    param.key_computed = key;\n  }\n  profilerStopFunc();\n  return param.key_computed;\n}\n\nfunction spotFocusSet(param: SpotInternal, from_mouseover: boolean, force: boolean, log: string): boolean {\n  if (from_mouseover && (!mouseMoved() || mousePosIsTouch())) {\n    return false;\n  }\n  const def = param.def || SPOT_DEFAULT;\n  const sound_rollover = param.sound_rollover === undefined ? def.sound_rollover : param.sound_rollover;\n  const key = param.key_computed || spotKey(param);\n  const use_nonsticky = focus_is_sticky && !force && from_mouseover && key !== focus_key;\n  const key_prev = use_nonsticky ? focus_key_nonsticky : focus_key;\n  if ((sound_rollover || !from_mouseover) && key_prev !== key) {\n    playUISound(sound_rollover || SPOT_DEFAULT.sound_rollover);\n  }\n  if (key_prev !== key || pad_mode !== !from_mouseover) {\n    spotlog('spotFocusSet', key, log, from_mouseover ? '' : 'pad_mode', use_nonsticky ? 'nonsticky' : '');\n  }\n  pad_mode = !from_mouseover;\n  if (use_nonsticky) {\n    focus_key_nonsticky = key;\n  } else {\n    focus_key = key;\n    const sticky_focus = param.sticky_focus === undefined ? def.sticky_focus : param.sticky_focus;\n    focus_is_sticky = sticky_focus;\n    focus_key_nonsticky = null;\n  }\n  assert(param.dom_pos);\n  return true;\n}\n\nexport function spotUnfocus(): void {\n  spotlog('spotUnfocus');\n  focus_key = null;\n  focus_is_sticky = false;\n  focus_key_nonsticky = null;\n  pad_mode = false;\n}\n\ntype SpotNavKeysEntry = {\n  keys?: number[];\n  pads?: number[];\n  shift_keys?: number[];\n  unshift_keys?: number[];\n};\ntype SpotNavKeys = Record<SpotNavEnum, SpotNavKeysEntry>;\nconst spot_nav_keys_base: SpotNavKeys = {\n  [SPOT_NAV_LEFT]: {\n    pads: [PAD.LEFT],\n  },\n  [SPOT_NAV_UP]: {\n    pads: [PAD.UP],\n  },\n  [SPOT_NAV_RIGHT]: {\n    pads: [PAD.RIGHT],\n  },\n  [SPOT_NAV_DOWN]: {\n    pads: [PAD.DOWN],\n  },\n  [SPOT_NAV_PREV]: {\n    shift_keys: [KEYS.TAB],\n    pads: [PAD.LEFT_BUMPER],\n  },\n  [SPOT_NAV_NEXT]: {\n    pads: [PAD.RIGHT_BUMPER],\n    unshift_keys: [KEYS.TAB],\n  },\n};\nconst spot_nav_keys_simple: SpotNavKeys = {\n  [SPOT_NAV_LEFT]: {\n    keys: [KEYS.LEFT],\n    pads: spot_nav_keys_base[SPOT_NAV_LEFT].pads,\n  },\n  [SPOT_NAV_UP]: {\n    keys: [KEYS.UP],\n    pads: spot_nav_keys_base[SPOT_NAV_UP].pads,\n  },\n  [SPOT_NAV_RIGHT]: {\n    keys: [KEYS.RIGHT],\n    pads: spot_nav_keys_base[SPOT_NAV_RIGHT].pads,\n  },\n  [SPOT_NAV_DOWN]: {\n    keys: [KEYS.DOWN],\n    pads: spot_nav_keys_base[SPOT_NAV_DOWN].pads,\n  },\n  [SPOT_NAV_PREV]: spot_nav_keys_base[SPOT_NAV_PREV],\n  [SPOT_NAV_NEXT]: spot_nav_keys_base[SPOT_NAV_NEXT],\n};\nconst spot_nav_keys_extended: SpotNavKeys = {\n  [SPOT_NAV_LEFT]: {\n    keys: spot_nav_keys_simple[SPOT_NAV_LEFT].keys!.concat([KEYS.A, KEYS.NUMPAD4]),\n    pads: spot_nav_keys_simple[SPOT_NAV_LEFT].pads,\n  },\n  [SPOT_NAV_UP]: {\n    keys: spot_nav_keys_simple[SPOT_NAV_UP].keys!.concat([KEYS.W, KEYS.NUMPAD8]),\n    pads: spot_nav_keys_simple[SPOT_NAV_UP].pads,\n  },\n  [SPOT_NAV_RIGHT]: {\n    keys: spot_nav_keys_simple[SPOT_NAV_RIGHT].keys!.concat([KEYS.D, KEYS.NUMPAD6]),\n    pads: spot_nav_keys_simple[SPOT_NAV_RIGHT].pads,\n  },\n  [SPOT_NAV_DOWN]: {\n    keys: spot_nav_keys_simple[SPOT_NAV_DOWN].keys!.concat([KEYS.S, KEYS.NUMPAD5, KEYS.NUMPAD2]),\n    pads: spot_nav_keys_simple[SPOT_NAV_DOWN].pads,\n  },\n  [SPOT_NAV_PREV]: spot_nav_keys_base[SPOT_NAV_PREV],\n  [SPOT_NAV_NEXT]: spot_nav_keys_base[SPOT_NAV_NEXT],\n};\nfunction keyDownShifted(key: number): boolean {\n  return keyDown(KEYS.SHIFT) && keyDownEdge(key);\n}\nfunction keyDownUnshifted(key: number): boolean {\n  return !keyDown(KEYS.SHIFT) && keyDownEdge(key);\n}\nfunction compileSpotNavKeysEntry(entry: SpotNavKeysEntry): () => boolean {\n  let fns: ((() => boolean) | (() => number))[] = [];\n  if (entry.keys) {\n    for (let ii = 0; ii < entry.keys.length; ++ii) {\n      fns.push(keyDownEdge.bind(null, entry.keys[ii]));\n    }\n  }\n  if (entry.pads) {\n    for (let ii = 0; ii < entry.pads.length; ++ii) {\n      fns.push(padButtonDownEdge.bind(null, entry.pads[ii]));\n    }\n  }\n  if (entry.shift_keys) {\n    for (let ii = 0; ii < entry.shift_keys.length; ++ii) {\n      fns.push(keyDownShifted.bind(null, entry.shift_keys[ii]));\n    }\n  }\n  if (entry.unshift_keys) {\n    for (let ii = 0; ii < entry.unshift_keys.length; ++ii) {\n      fns.push(keyDownUnshifted.bind(null, entry.unshift_keys[ii]));\n    }\n  }\n  return function () {\n    for (let ii = 0; ii < fns.length; ++ii) {\n      if (fns[ii]()) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\ntype SpotNavKeysCompiled = Record<SpotNavEnum, () => boolean>;\nfunction compileSpotNavKeys(keys: SpotNavKeys): SpotNavKeysCompiled {\n  return {\n    [SPOT_NAV_LEFT]: compileSpotNavKeysEntry(keys[SPOT_NAV_LEFT]),\n    [SPOT_NAV_UP]: compileSpotNavKeysEntry(keys[SPOT_NAV_UP]),\n    [SPOT_NAV_RIGHT]: compileSpotNavKeysEntry(keys[SPOT_NAV_RIGHT]),\n    [SPOT_NAV_DOWN]: compileSpotNavKeysEntry(keys[SPOT_NAV_DOWN]),\n    [SPOT_NAV_PREV]: compileSpotNavKeysEntry(keys[SPOT_NAV_PREV]),\n    [SPOT_NAV_NEXT]: compileSpotNavKeysEntry(keys[SPOT_NAV_NEXT]),\n  };\n}\nconst compiled_nav_base = compileSpotNavKeys(spot_nav_keys_base);\nconst compiled_nav_simple = compileSpotNavKeys(spot_nav_keys_simple);\nconst compiled_nav_extended = compileSpotNavKeys(spot_nav_keys_extended);\nlet spot_nav_type: SpotNavtypeEnum;\nlet spot_nav_keys: SpotNavKeysCompiled;\nexport function spotSetNavtype(type: SpotNavtypeEnum): void {\n  spot_nav_type = type;\n  spot_nav_keys = (type === SPOT_NAVTYPE_SIMPLE) ? compiled_nav_simple : compiled_nav_extended;\n}\nspotSetNavtype(SPOT_NAVTYPE_EXTENDED);\nfunction resetNavKeys(): void {\n  spot_nav_keys = (spot_nav_type === SPOT_NAVTYPE_SIMPLE) ? compiled_nav_simple : compiled_nav_extended;\n}\nlet suppress_kb_nav_this_frame = false;\n\nexport function spotSuppressKBNav(left_right: boolean, up_down: boolean): void {\n  suppress_kb_nav_this_frame = true;\n  assert(left_right);\n  let active = (spot_nav_type === SPOT_NAVTYPE_SIMPLE) ? compiled_nav_simple : compiled_nav_extended;\n  if (up_down) {\n    spot_nav_keys = {\n      [SPOT_NAV_LEFT]: compiled_nav_base[SPOT_NAV_LEFT],\n      [SPOT_NAV_UP]: compiled_nav_base[SPOT_NAV_UP],\n      [SPOT_NAV_RIGHT]: compiled_nav_base[SPOT_NAV_RIGHT],\n      [SPOT_NAV_DOWN]: compiled_nav_base[SPOT_NAV_DOWN],\n      [SPOT_NAV_PREV]: active[SPOT_NAV_PREV],\n      [SPOT_NAV_NEXT]: active[SPOT_NAV_NEXT],\n    };\n  } else {\n    // just left/right arrows, but still all text input keys\n    spot_nav_keys = {\n      [SPOT_NAV_LEFT]: compiled_nav_base[SPOT_NAV_LEFT],\n      [SPOT_NAV_UP]: compiled_nav_simple[SPOT_NAV_UP],\n      [SPOT_NAV_RIGHT]: compiled_nav_base[SPOT_NAV_RIGHT],\n      [SPOT_NAV_DOWN]: compiled_nav_simple[SPOT_NAV_DOWN],\n      [SPOT_NAV_PREV]: active[SPOT_NAV_PREV],\n      [SPOT_NAV_NEXT]: active[SPOT_NAV_NEXT],\n    };\n  }\n}\n\n\nconst TARGET_QUAD = 0;\nconst TARGET_HALF = 1;\nconst TARGET_ALL = 2;\ntype TargetTypeEnum = typeof TARGET_QUAD | typeof TARGET_HALF | typeof TARGET_ALL;\n\nfunction findBestTargetInternal(\n  nav: SpotNavEnum,\n  dom_pos: Box,\n  targets: SpotListElem[],\n  precision: TargetTypeEnum,\n  filter: (param: SpotListElem) => boolean\n): SpotListElem | null {\n  let start_w2 = dom_pos.w/2;\n  let start_h2 = dom_pos.h/2;\n  let start_x = dom_pos.x + start_w2;\n  let start_y = dom_pos.y + start_h2;\n  let start_left = dom_pos.x;\n  let start_right = dom_pos.x + dom_pos.w;\n  let start_top = dom_pos.y;\n  let start_bottom = dom_pos.y + dom_pos.h;\n  let best = null;\n  let bestd;\n  for (let ii = 0; ii < targets.length; ++ii) {\n    let param = targets[ii];\n    if (!filter(param)) {\n      continue;\n    }\n    let target = param.dom_pos;\n    let d;\n    if (precision === TARGET_QUAD) {\n      let quadrant;\n      // edge facing quadrant calc: to be to the \"left\" our right edge must be\n      //   in the quadrant formed by the 2 45-degree lines passing through the\n      //   left 2 points of the start rect.\n      // In this case, for `d`, use the Manhattan distance from the center of\n      //   the start edge to the nearest point in the target, this will favor\n      //   those that are nearby and aligned without skipping past a large, wide\n      //   button in favor of a small (closer) button on the other side of it.\n      let target_right = target.x + target.w;\n      let target_bottom = target.y + target.h;\n      let left_dx = start_left - target_right;\n      let right_dx = target.x - start_right;\n      let top_dy = start_top - target_bottom;\n      let bottom_dy = target.y - start_bottom;\n      if (left_dx >= -start_w2 && target_bottom > start_top - left_dx && target.y < start_bottom + left_dx) {\n        quadrant = SPOT_NAV_LEFT;\n        d = left_dx + max(target.y - start_y, start_y - target_bottom, 0);\n      } else if (right_dx >= -start_w2 && target_bottom > start_top - right_dx && target.y < start_bottom + right_dx) {\n        quadrant = SPOT_NAV_RIGHT;\n        d = right_dx + max(target.y - start_y, start_y - target_bottom, 0);\n      } else if (top_dy >= -start_h2 && target_right >= start_left - top_dy && target.x <= start_right + top_dy) {\n        quadrant = SPOT_NAV_UP;\n        d = top_dy + max(target.x - start_x, start_x - target_right, 0);\n      } else if (bottom_dy >= -start_h2 && target_right >= start_left - bottom_dy &&\n        target.x <= start_right + bottom_dy\n      ) {\n        quadrant = SPOT_NAV_DOWN;\n        d = bottom_dy + max(target.x - start_x, start_x - target_right, 0);\n      }\n\n      if (quadrant === undefined) {\n        // smart logic didn't work, perhaps heavily overlapping, instead use\n        // simple center-point quadrant calc:\n        let x = target.x + target.w/2;\n        let y = target.y + target.h/2;\n        let dx = x - start_x;\n        let dy = y - start_y;\n        d = abs(dx) + abs(dy);\n        if (abs(dx) > abs(dy)) {\n          if (dx > 0) {\n            quadrant = SPOT_NAV_RIGHT;\n          } else {\n            quadrant = SPOT_NAV_LEFT;\n          }\n        } else {\n          if (dy > 0) {\n            quadrant = SPOT_NAV_DOWN;\n          } else {\n            quadrant = SPOT_NAV_UP;\n          }\n        }\n      }\n      if (quadrant !== nav) {\n        continue;\n      }\n    } else {\n      let x = target.x + target.w/2;\n      let y = target.y + target.h/2;\n      let dx = x - start_x;\n      let dy = y - start_y;\n      d = abs(dx) + abs(dy);\n      if (precision === TARGET_HALF) {\n        if (dx <= 0 && nav === SPOT_NAV_RIGHT ||\n          dx >= 0 && nav === SPOT_NAV_LEFT ||\n          dy <= 0 && nav === SPOT_NAV_DOWN ||\n          dy >= 0 && nav === SPOT_NAV_UP\n        ) {\n          continue;\n        }\n      } else {\n        // allow any, just find closest\n      }\n    }\n    if (!best || (d as number) < (bestd as number)) {\n      best = param;\n      bestd = d;\n    }\n  }\n  return best;\n}\n\nconst EPSILON = 0.00001;\nlet debug_style: FontStyle;\nfunction spotDebugList(show_all: boolean, list: SpotListElem[]): void {\n  if (!debug_style) {\n    debug_style = fontStyle(null, {\n      color: 0x000000ff,\n      outline_color: 0xFFFFFFcc,\n      outline_width: 2,\n    });\n  }\n  for (let ii = 0; ii < list.length; ++ii) {\n    let area = list[ii];\n    let pos = area.dom_pos;\n    let color: Vec4 | undefined;\n    if (isSubRect(area)) {\n      if (show_all) {\n        ui.font.drawSizedAligned(debug_style, pos.x, pos.y, Z.DEBUG, 8,\n          ui.font.ALIGN.HVCENTERFIT, pos.w, pos.h, area.key_computed || 'unknown');\n      }\n      continue;\n    }\n    if (area.spot_debug_ignore) {\n      continue;\n    }\n    if (area.only_mouseover) {\n      color = [1,0.5,0, 0.5];\n    } else {\n      const def = area.def || SPOT_DEFAULT;\n      const pad_focusable = area.pad_focusable === undefined ? def.pad_focusable : area.pad_focusable;\n      if (!pad_focusable) {\n        continue;\n      }\n      const spatial_focus = area.spatial_focus === undefined ? def.spatial_focus : area.spatial_focus;\n      if (!spatial_focus) {\n        continue;\n      }\n      for (let jj = 0; jj < list.length; ++jj) {\n        if (ii === jj) {\n          continue;\n        }\n        let other = list[jj];\n        if (isSubRect(other)) {\n          continue;\n        }\n        if (other.sub_rect !== area.sub_rect) {\n          continue;\n        }\n        const other_def = other.def || SPOT_DEFAULT;\n        const other_pad_focusable = other.pad_focusable === undefined ? other_def.pad_focusable : other.pad_focusable;\n        if (other.only_mouseover || !other_pad_focusable) {\n          continue;\n        }\n        const other_spatial_focus = other.spatial_focus === undefined ? other_def.spatial_focus : other.spatial_focus;\n        if (!other_spatial_focus) {\n          continue;\n        }\n        let other_pos = other.dom_pos;\n        if (pos.x < other_pos.x + other_pos.w - EPSILON && pos.x + pos.w > other_pos.x + EPSILON &&\n          pos.y < other_pos.y + other_pos.h - EPSILON && pos.y + pos.h > other_pos.y + EPSILON\n        ) {\n          color = [1,0,0, 0.5];\n        }\n      }\n    }\n    if (!show_all && !color) {\n      continue;\n    }\n    drawRect(pos.x, pos.y, pos.x + pos.w, pos.y + pos.h, Z.DEBUG, color || [1,1,0, 0.5]);\n    ui.font.drawSizedAligned(debug_style, pos.x, pos.y, Z.DEBUG, 8,\n      ui.font.ALIGN.HVCENTERFIT, pos.w, pos.h, area.key_computed || 'unknown');\n  }\n}\nfunction spotDebug(): void {\n  camera2d.push();\n  camera2d.setDOMMapped();\n  let show_all = keyDown(KEYS.SHIFT);\n  spotDebugList(show_all, frame_spots);\n\n  if (pad_mode || show_all) {\n    for (let ii = SPOT_NAV_LEFT; ii <= SPOT_NAV_DOWN; ++ii) {\n      let next_spot = focus_next[ii];\n      if (next_spot) {\n        let pos = focus_pos;\n        let next = next_spot.dom_pos;\n        let via = focus_next_via[ii];\n        if (via) {\n          pos = via.dom_pos;\n          drawLine(pos.x + pos.w/2, pos.y + pos.h/2, next.x + next.w/2, next.y+next.h/2,\n            Z.DEBUG, 1, 0.95, [1, 0.5, 0, 1]);\n          pos = focus_pos;\n          next = via.dom_pos;\n        }\n        drawLine(pos.x + pos.w/2, pos.y + pos.h/2, next.x + next.w/2, next.y+next.h/2,\n          Z.DEBUG, 1, 0.95, [1, 1, 0, 1]);\n      }\n    }\n  }\n\n  camera2d.pop();\n}\n\nlet filter_sub_rect: SpotSubInternal | null;\nlet filter_not: SpotListElem | null;\nfunction filterMatchesSubrect(param: SpotListElem): boolean {\n  return param !== filter_not && param.sub_rect === filter_sub_rect;\n}\n\nfunction overlaps(r1: Box, r2: Box): boolean {\n  return r1.x + r1.w > r2.x && r1.x < r2.x + r2.w &&\n    r1.y + r1.h > r2.y && r1.y < r2.y + r2.h;\n}\nfunction contains(outer: Box, inner: Box): boolean {\n  return inner.x >= outer.x && inner.x + inner.w <= outer.x + outer.w &&\n    inner.y >= outer.y && inner.y + inner.h <= outer.y + outer.h;\n}\n\nfunction filterInSubrectView(param: SpotListElem): boolean {\n  if (param.sub_rect !== filter_sub_rect) {\n    return false;\n  }\n  return overlaps(param.dom_pos, (filter_sub_rect as SpotSubInternal).dom_pos);\n}\n\nfunction filterMatchesSubrectOrInVisibleChild(param: SpotListElem): boolean {\n  if (param === filter_not) {\n    return false;\n  }\n  if (param.sub_rect === filter_sub_rect) {\n    return true;\n  }\n  if (param.sub_rect && param.sub_rect.sub_rect === filter_sub_rect) {\n    // in immediate child\n    return overlaps(param.dom_pos, param.sub_rect.dom_pos);\n  }\n  return false;\n}\n\nconst SUBRECT_FILTERS = [filterInSubrectView, filterMatchesSubrect];\nfunction findBestWithinSubrect(\n  nav: SpotNavEnum,\n  dom_pos: Box,\n  pad_focusable_list: SpotListElem[],\n  best: SpotSubInternal,\n  precision_max: TargetTypeEnum,\n): SpotInternal | null {\n  // we hit a sub rect, find the best target inside it, first trying all\n  //   in view (all precision), then all out of view\n  filter_sub_rect = best;\n  for (let jj = 0; jj < SUBRECT_FILTERS.length; ++jj) {\n    let filter = SUBRECT_FILTERS[jj];\n    for (let precision = 0 as TargetTypeEnum; precision <= precision_max; ++precision) {\n      let best_inside = findBestTargetInternal(nav, dom_pos, pad_focusable_list, precision, filter);\n      if (best_inside) {\n        assert(!isSubRect(best_inside));\n        return best_inside;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findBestTargetFromSubRect(\n  start_sub_rect: SpotSubInternal | null,\n  nav: SpotNavEnum,\n  dom_pos: Box,\n  pad_focusable_list: SpotListElem[],\n  precision: TargetTypeEnum,\n): SpotInternal | null {\n  // Go to the one in the appropriate quadrant which has the smallest Manhattan distance\n  filter_sub_rect = start_sub_rect;\n  let best = findBestTargetInternal(nav, dom_pos, pad_focusable_list, precision, filterMatchesSubrectOrInVisibleChild);\n  if (best) {\n    if (isSubRect(best)) {\n      focus_next_via[nav] = best;\n      best = findBestWithinSubrect(nav, dom_pos, pad_focusable_list, best, precision);\n      if (!best) {\n        focus_next_via[nav] = undefined;\n      }\n    }\n  }\n  return best;\n}\n\nfunction spotCalcNavTargets(): void {\n  // Computes, for each direction, where we would target from the current focus\n  //   state, to be used next frame if a focus key is pressed.\n  // Note: cannot compute this trivially only upon keypress since we do not know\n  //   which keys to check until we reached a focused / focusable element.  We\n  //   could, however, instead, do this at the beginning of the frame only if\n  //   we peek at the key/pad state and see that it *might be* pressed this\n  //   frame.\n  for (let ii = 1; ii < SPOT_NAV_MAX; ++ii) {\n    focus_next[ii] = undefined;\n    focus_next_via[ii] = undefined;\n  }\n  // First, find current focused element (if any) and gather the list of potentially\n  //  focusable elements, computing where \"prev\" and \"next should go (based on\n  //  the in-frame order).\n  let start;\n  let pad_focusable_list = [];\n  let prev;\n  let first_non_sub_rect;\n  for (let ii = 0; ii < frame_spots.length; ++ii) {\n    let param = frame_spots[ii];\n    if (isSubRect(param)) {\n      // Not actually \"focusable\", but need to target it to then target its contents\n      if (!param.is_empty_sub_rect) {\n        pad_focusable_list.push(param);\n      }\n    } else if (param.key_computed === focus_key) {\n      if (!focus_next[SPOT_NAV_PREV] && prev) {\n        focus_next[SPOT_NAV_PREV] = prev;\n      }\n      start = param;\n    } else {\n      const def = param.def || SPOT_DEFAULT;\n      const pad_focusable = param.pad_focusable === undefined ? def.pad_focusable : param.pad_focusable;\n      if (pad_focusable) {\n        if (!first_non_sub_rect) {\n          first_non_sub_rect = param;\n        }\n        prev = param;\n        if (!focus_next[SPOT_NAV_NEXT] && start) {\n          focus_next[SPOT_NAV_NEXT] = param;\n        }\n        const spatial_focus = param.spatial_focus === undefined ? def.spatial_focus : param.spatial_focus;\n        if (spatial_focus) {\n          pad_focusable_list.push(param);\n        }\n      }\n    }\n  }\n  if (!focus_next[SPOT_NAV_PREV] && prev) {\n    // but, didn't trigger above, must have been first, wrap to end\n    focus_next[SPOT_NAV_PREV] = prev;\n  }\n  if (!focus_next[SPOT_NAV_NEXT]) {\n    // nothing next, go to first non-sub_rect\n    focus_next[SPOT_NAV_NEXT] = first_non_sub_rect;\n  }\n  let precision_max;\n  let start_sub_rect: SpotSubInternal | null;\n  if (start) {\n    start_sub_rect = start.sub_rect;\n    focus_pos.x = start.dom_pos.x;\n    focus_pos.y = start.dom_pos.y;\n    focus_pos.w = start.dom_pos.w;\n    focus_pos.h = start.dom_pos.h;\n    precision_max = TARGET_HALF;\n  } else {\n    // use the subrect overlapped, if any\n    start_sub_rect = null;\n    for (let ii = 0; ii < frame_spots.length; ++ii) {\n      let param = frame_spots[ii];\n      if (isSubRect(param)) {\n        if (contains(param.dom_pos, focus_pos)) {\n          start_sub_rect = param;\n        }\n      }\n    }\n    if (start_sub_rect) {\n      precision_max = TARGET_HALF;\n    } else {\n      precision_max = TARGET_ALL;\n    }\n  }\n\n  // Second, using the currently focused rect as a starting point, find\n  //   appropriate elements to focus in each of the cardinal directions.\n  for (let nav = 1 as SpotNavEnum; nav <= SPOT_NAV_DOWN; ++nav) {\n    for (let precision = 0 as TargetTypeEnum; precision <= precision_max; ++precision) {\n      filter_not = null;\n      let best = findBestTargetFromSubRect(start_sub_rect, nav, focus_pos, pad_focusable_list, precision);\n      if (best) {\n        focus_next[nav] = best;\n        break;\n      }\n      if (start_sub_rect) {\n        // Did not find anything within our subrect, try searching outside, from the subrect itself\n        filter_not = start_sub_rect; // do not target oneself\n        best = findBestTargetFromSubRect(start_sub_rect.sub_rect, nav, focus_pos,\n          pad_focusable_list, precision);\n        if (best) {\n          focus_next[nav] = best;\n          break;\n        }\n      }\n    }\n  }\n\n  // Finally, apply any custom navigation instructions (keys which should not change\n  //   focus or which target a particular other element by key) based on the currently\n  //   focused element.\n  if (start) {\n    const def = start.def || SPOT_DEFAULT;\n    const custom_nav = start.custom_nav === undefined ? def.custom_nav : start.custom_nav;\n    if (custom_nav) {\n      let by_key: Partial<Record<string,SpotInternal>> | undefined;\n      for (let key_string in custom_nav) {\n        let key = Number(key_string) as SpotNavEnum;\n        let target = custom_nav[key];\n        if (target === null || target === undefined) {\n          focus_next[key] = target;\n        } else {\n          if (!by_key) {\n            by_key = {};\n            for (let ii = 0; ii < frame_spots.length; ++ii) {\n              let param = frame_spots[ii];\n              if (!isSubRect(param)) {\n                by_key[param.key_computed] = param;\n              }\n            }\n          }\n          if (by_key[target]) {\n            focus_next[key] = by_key[target];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function spotTopOfFrame(): void {\n  if (mouseMoved()) {\n    let pos = mouseDomPos();\n    focus_pos.x = pos[0];\n    focus_pos.y = pos[1];\n    focus_pos.w = 0;\n    focus_pos.h = 0;\n  }\n  if (mouseDownEdge({ peek: true })) {\n    pad_mode = false;\n  }\n  sub_stack.length = 0;\n  focus_sub_rect = null;\n}\n\nexport function spotSuppressPad(): void {\n  suppress_pad = true;\n  if (pad_mode && focus_key && !focus_is_sticky) {\n    spotUnfocus();\n    pad_mode = true; // but, keep pad_mode set\n  }\n}\n\nexport function spotPadSuppressed(): boolean {\n  return suppress_pad;\n}\n\nexport function spotEndOfFrame(): void {\n  spotCalcNavTargets();\n\n  last_frame_autofocus_spots = frame_autofocus_spots;\n  suppress_pad = false;\n  last_frame_spots = frame_spots;\n  frame_spots = [];\n  frame_autofocus_spots = {};\n  async_activate_key = null;\n  if (!suppress_kb_nav_this_frame) {\n    resetNavKeys();\n  }\n  suppress_kb_nav_this_frame = false;\n}\n\nfunction frameSpotsPush(param: SpotListElem): void {\n  assert(param.dom_pos);\n  verify(isFinite(param.dom_pos.x));\n  verify(isFinite(param.dom_pos.y));\n  verify(isFinite(param.dom_pos.w));\n  verify(isFinite(param.dom_pos.h));\n  param.sub_rect = focus_sub_rect;\n  frame_spots.push(param);\n  if (focus_sub_rect) {\n    focus_sub_rect.is_empty_sub_rect = false;\n  }\n}\n\ntype HasPosCache = {\n  dom_pos: Box;\n};\n\nfunction spotEntirelyObscured(param: HasPosCache): boolean {\n  let pos = param.dom_pos;\n  for (let ii = 0; ii < frame_spots.length; ++ii) {\n    let other = frame_spots[ii];\n    if (isSubRect(other)) {\n      continue;\n    }\n    if (other.sub_rect !== focus_sub_rect) {\n      continue;\n    }\n    let other_pos = other.dom_pos;\n    if (other_pos.x <= pos.x && other_pos.x + other_pos.w >= pos.x + pos.w &&\n      other_pos.y <= pos.y && other_pos.y + other_pos.h >= pos.y + pos.h\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function spotSubPush(): void {\n  sub_stack.push([focus_sub_rect, focus_sub_rect_elem]);\n  focus_sub_rect = null;\n}\nexport function spotSubPop(): void {\n  ([focus_sub_rect, focus_sub_rect_elem] = verify(sub_stack.pop()));\n}\n\nexport function spotSubBegin(param_in: SpotSubParam): void {\n  assert(param_in.key);\n  if (focus_sub_rect) {\n    // no recursive nesting supported yet\n    assert(!focus_sub_rect, `Recursive spot, parent:${focus_sub_rect.key},` +\n      ` self:${param_in.key},` +\n      ` same=${param_in === focus_sub_rect}`);\n  }\n  spotKey(param_in);\n  let sub_rect = param_in as SpotSubInternal;\n  sub_rect.is_sub_rect = true;\n  if (!sub_rect.dom_pos) {\n    sub_rect.dom_pos = {} as Box;\n  }\n  camera2d.virtualToDomPosParam(sub_rect.dom_pos, sub_rect);\n  if (!spotEntirelyObscured(sub_rect)) {\n    frameSpotsPush(sub_rect);\n  }\n  focus_sub_rect = sub_rect;\n  focus_sub_rect.is_empty_sub_rect = true;\n  focus_sub_rect_elem = null;\n}\n\nexport function spotSubEnd(): SpotParam | null {\n  assert(focus_sub_rect);\n  focus_sub_rect = null;\n  return focus_sub_rect_elem;\n}\n\nexport function spotMouseoverHook(pos_param_in: Box, param: MouseOverParam): void {\n  if (inputEatenMouse() || param.peek) {\n    return;\n  }\n  if ((param as SpotParam).key_computed) { // presumably in a call to `spot()`\n    return;\n  }\n  let pos_param = pos_param_in as Box & HasPosCache;\n  if (!pos_param.dom_pos) {\n    pos_param.dom_pos = {} as Box;\n  }\n  camera2d.virtualToDomPosParam(pos_param.dom_pos, pos_param);\n  if (!spotEntirelyObscured(pos_param)) {\n    let area = pos_param as SpotInternal;\n    area.only_mouseover = true;\n    area.pad_focusable = false;\n    if (engine.defines.SPOT_DEBUG) {\n      area.spot_debug_ignore = param.eat_clicks || // just consuming mouseover, not a button / etc\n        param.spot_debug_ignore;\n    }\n    frameSpotsPush(area);\n  }\n}\n\nfunction keyCheck(nav_dir: SpotNavEnum): boolean {\n  if (suppress_pad) {\n    return false;\n  }\n  return spot_nav_keys[nav_dir]();\n}\n\ntype SpotParamWithOut = SpotParam & {\n  out: SpotRet;\n};\n\nfunction spotFocusCheckNavButtonsFocused(param: SpotParamWithOut): void {\n  for (let ii = 1 as SpotNavEnum; ii < SPOT_NAV_MAX; ++ii) {\n    let elem = focus_next[ii];\n    if (elem !== undefined && keyCheck(ii)) {\n      if (elem) {\n        spotFocusSet(elem, false, false, 'nav_focused');\n      } else {\n        param.out.nav = ii;\n      }\n    }\n  }\n}\n\nfunction spotFocusCheckNavButtonsUnfocused(param: SpotParamWithOut): void {\n  for (let ii = 1 as SpotNavEnum; ii < SPOT_NAV_MAX; ++ii) {\n    let elem = focus_next[ii];\n    if (elem && elem.key_computed === param.key_computed && keyCheck(ii)) {\n      spotFocusSet(elem, false, false, 'nav_unfocused');\n    }\n  }\n}\n\n// Silently steal (keep) focus\nfunction spotFocusSetSilent(param: SpotParam): void {\n  const key = spotKey(param);\n  const def = param.def || SPOT_DEFAULT;\n  focus_key = key;\n  const sticky_focus = param.sticky_focus === undefined ? def.sticky_focus : param.sticky_focus;\n  focus_is_sticky = sticky_focus;\n  focus_key_nonsticky = null;\n}\n\nexport function spotGetCurrentFocusKey(): string {\n  return [focus_key, focus_is_sticky, focus_key_nonsticky].join(';');\n}\n\nexport function spotFocusSteal(param: SpotParam): void {\n  const key = spotKey(param);\n  spotlog('spotFocusSteal', key, false);\n  // Silent, no sound, no checking parameters, just set the key string\n  pad_mode = true;\n  spotFocusSetSilent(param);\n}\n\nfunction spotParamAddOut(param: SpotParam): asserts param is SpotParamWithOut {\n  if (!param.out) {\n    param.out = {} as SpotRet;\n  }\n}\n\nfunction spotParamAddPosCache(param: SpotParamWithOut): asserts param is SpotInternal {\n  assert(param.key_computed);\n  if (!param.dom_pos) {\n    param.dom_pos = {} as Box;\n  }\n}\n\nfunction spotParamIsSpotInternal(param: SpotParam): asserts param is SpotInternal {\n  // nothing, just for TypeScript\n}\n\n// sets param.out.allow_focus, param.out.nav, and param.dom_pos (if allow_focus)\nexport function spotFocusCheck(param: SpotParam): SpotRet {\n  spotParamAddOut(param);\n  let out = param.out;\n  out.focused = false;\n  out.kb_focused = false;\n  out.allow_focus = false;\n  const key = spotKey(param); // Doing this even if disabled for spotDebug()\n  const def = param.def || SPOT_DEFAULT;\n  const disabled = param.disabled === undefined ? def.disabled : param.disabled;\n  if (disabled) {\n    const disabled_focusable = param.disabled_focusable === undefined ? def.disabled_focusable :\n      param.disabled_focusable;\n    if (!disabled_focusable) {\n      return out;\n    }\n    // Otherwise disabled_focusable - allow focusing\n  }\n  const focus_steal = param.focus_steal === undefined ? def.focus_steal : param.focus_steal;\n  if (focus_steal) {\n    // Silently steal (keep) focus\n    spotFocusSetSilent(param);\n  }\n  if (focus_key === key) {\n    // last_frame_focus_found = true;\n    spotFocusCheckNavButtonsFocused(param);\n  } else {\n    spotFocusCheckNavButtonsUnfocused(param);\n  }\n  let focused = focus_key === key || focus_key_nonsticky === key;\n  if (inputEatenMouse()) {\n    if (focus_key === key) {\n      spotUnfocus();\n      focused = false;\n    }\n    if (focus_key_nonsticky === key) {\n      focus_key_nonsticky = null;\n      focused = false;\n    }\n  } else {\n    out.allow_focus = true;\n    spotParamAddPosCache(param);\n    camera2d.virtualToDomPosParam(param.dom_pos, param);\n    const auto_focus = param.auto_focus === undefined ? def.auto_focus : param.auto_focus;\n    if (!spotEntirelyObscured(param) || focused && focus_is_sticky) {\n      frameSpotsPush(param);\n      if (auto_focus) {\n        if (!focused && !last_frame_autofocus_spots[key] && pad_mode) {\n          spotlog('auto_focus', key);\n          // play no sound, etc, just silently steal focus\n          spotFocusSetSilent(param);\n          focused = true;\n        }\n      }\n    }\n    if (auto_focus) {\n      frame_autofocus_spots[key] = param;\n    }\n    if (focus_sub_rect && focus_key === key) {\n      focus_sub_rect_elem = param;\n    }\n  }\n\n  out.kb_focused = focus_key === key;\n  out.focused = focused;\n  return out;\n}\n\nexport function spotEndInput(): void {\n  if (engine.defines.SPOT_DEBUG) {\n    spotDebug();\n  }\n}\n\n// This is useful for preemptively triggering a button press within an in_event_cb that has\n// a side-effect (such as rotating the screen) that might cause the actual button press to\n// not reach the appropriate button.\nexport function spotAsyncActivateButton(key: string): void {\n  async_activate_key = key;\n}\n\nlet last_signal = {\n  key: '',\n  timestamp: 0,\n};\nfunction spotSignalRet(param: SpotInternal): void {\n  let out = param.out;\n  let key = param.key_computed;\n  assert(key);\n  out.double_click = key === last_signal.key &&\n    engine.frame_timestamp - last_signal.timestamp <\n    // TODO: After input.js and settings.js are converted to TypeScript, remove type casts\n    (settings as unknown as { double_click_time:number }).double_click_time;\n  last_signal.key = key;\n  last_signal.timestamp = engine.frame_timestamp;\n  out.ret++;\n}\n\n// param:\n//   See SPOT_DEFAULT, additionally:\n//   x,y,w,h : number // only parameters not inherited from `def`\n//   def: used for any undefined parameters (defaults to SPOT_DEFAULT)\n//   out: object // holds return values, lazy-allocated if needed\n// returns/modifies param.out:\n//   focused : boolean // focused by any means\n//   kb_focused : boolean // focused for the purpose of receiving keyboard input (focused and no other sticky focus)\n//   spot_state: one of SPOT_STATE_*\n//   ret: number // if `param.is_button` and was activated (0/1 or more if clicked multiple times in a frame)\n//   long_press: boolean // if button_long_press and ret and was a long press, set to true\n//   button: number // if ret, set to mouse button used to click it\n//   pos: vec2 // if ret, set to position of the click\n//   double_click: boolean // if ret, set to true if it was a double click/tap/button press/etc\n//   drag_drop: any // if drag_target and a drop happened, contains dragDrop event { drag_payload }\n//   nav: SPOT_NAV_* // if custom_nav, and the user navigated, set to the navigation event\nexport function spot(param: SpotParam): SpotRet {\n  profilerStartFunc();\n  const def = param.def || SPOT_DEFAULT;\n  const disabled = param.disabled === undefined ? def.disabled : param.disabled;\n  const is_button = param.is_button === undefined ? def.is_button : param.is_button;\n  const button_long_press = param.button_long_press === undefined ? def.button_long_press : param.button_long_press;\n  const in_event_cb = param.in_event_cb === undefined ? def.in_event_cb : param.in_event_cb;\n  const drag_target = param.drag_target === undefined ? def.drag_target : param.drag_target;\n  const drag_over = param.drag_over === undefined ? def.drag_over : param.drag_over;\n  const touch_focuses = param.touch_focuses === undefined ? def.touch_focuses : param.touch_focuses;\n  const focus_steal = param.focus_steal === undefined ? def.focus_steal : param.focus_steal;\n  const custom_nav = param.custom_nav === undefined ? def.custom_nav : param.custom_nav;\n\n  spotParamAddOut(param);\n  let out = param.out;\n  out.focused = false;\n  out.ret = 0;\n  if (button_long_press) {\n    out.long_press = false;\n  }\n  if (drag_target) {\n    out.drag_drop = null;\n  }\n  if (custom_nav) {\n    out.nav = SPOT_NAV_NONE;\n  }\n\n  let state: SpotStateEnum = SPOT_STATE_REGULAR;\n  let { focused, allow_focus, kb_focused } = spotFocusCheck(param);\n  spotParamIsSpotInternal(param); // massaged in spotFocusCheck(), but type assertion is lost\n  if (disabled) {\n    state = SPOT_STATE_DISABLED;\n  } else {\n    let button_click;\n    let long_press_ret;\n    if (drag_target && (out.drag_drop = dragDrop(param))) {\n      spotFocusSet(param, true, true, 'drag_drop');\n      spotSignalRet(param);\n      focused = true;\n    } else if (button_long_press && (long_press_ret = longPress(param)) ||\n        is_button && (button_click = inputClick(param))\n    ) {\n      // TODO: change `ret` to be a count of how many clicks/taps happened?\n      if (long_press_ret) {\n        out.long_press = long_press_ret.long_press;\n        out.button = long_press_ret.button;\n        out.pos = undefined;\n      } else {\n        assert(button_click);\n        out.button = button_click.button;\n        out.pos = button_click.pos as Vec2;\n      }\n      // Not using button_click.was_double_click: relying on doubly activating this exact spot instead\n      // out.double_click = button_click.was_double_click;\n      if (mousePosIsTouch()) {\n        if (touch_focuses) {\n          if (!focused) {\n            // Just focus, show tooltip\n            // touch_changed_focus = true;\n            // Considering this a \"pad\" focus, not mouse, as it's sticky\n            spotFocusSet(param, false, false, 'touch_focus');\n            focused = true;\n          } else {\n            // activate, and also unfocus\n            spotSignalRet(param);\n            spotUnfocus();\n            focused = false;\n          }\n        } else {\n          // not focusing, would flicker a tooltip for 1 frame\n          // also, unfocusing, in case it was focused via long_press_focuses\n          spotSignalRet(param);\n          spotUnfocus();\n          focused = false;\n        }\n      } else {\n        spotSignalRet(param);\n        spotFocusSet(param, true, true, 'click');\n        focused = true;\n      }\n    } else if (!is_button && touch_focuses && mousePosIsTouch() && inputClick(param)) {\n      // Considering this a \"pad\" focus, not mouse, as it's sticky\n      spotFocusSet(param, false, false, 'touch_focus');\n      focused = true;\n    } else if (drag_target && dragOver(param)) {\n      spotFocusSet(param, true, false, 'drag_over');\n      focused = true;\n      if (mouseDownAnywhere()) {\n        state = SPOT_STATE_DOWN;\n      }\n    } else if (drag_over && dragOver(param)) {\n      // do nothing, just consume event\n      // not even set focus?\n    }\n  }\n  // Long-press (on touch) focuses, a la mouse rollover\n  if (allow_focus && inputTouchMode()) {\n    const long_press_focuses = param.long_press_focuses === undefined ?\n      def.long_press_focuses : param.long_press_focuses;\n    if (long_press_focuses && longPress(param)) {\n      // Considering this a \"pad\" focus, not mouse, as it's sticky\n      spotFocusSet(param, false, false, 'long_press');\n      focused = true;\n    }\n  }\n  let is_mouseover = mouseOver(param);\n  if (focused && !focus_steal && !is_mouseover) {\n    // Want to unfocus if mouse is in use\n    if (mouseButtonHadEdge()) {\n      // Unfocus regardless\n      focused = false;\n      spotUnfocus();\n    } else if (mouseMoved()) {\n      // Unfocus just focus_non_sticky if appropriate\n      focused = false;\n      if (focus_key === param.key_computed) {\n        spotUnfocus();\n      } else if (focus_key_nonsticky === param.key_computed) {\n        focus_key_nonsticky = null;\n      }\n    }\n  }\n  if (is_mouseover) {\n    if (allow_focus) {\n      if (spotFocusSet(param, true, false, 'mouseover')) {\n        focused = true;\n      }\n    }\n  }\n  if (is_button && is_mouseover && mouseDownMidClick(param)) {\n    if (!disabled) {\n      state = SPOT_STATE_DOWN;\n    }\n  }\n\n  let button_activate = false;\n  if (focused) {\n    if (state === SPOT_STATE_REGULAR) {\n      state = SPOT_STATE_FOCUSED;\n    }\n    if (is_button && !disabled && kb_focused && !suppress_pad) {\n      let key_opts = in_event_cb ? { in_event_cb } : null;\n      if (keyDownEdge(KEYS.SPACE, key_opts) || keyDownEdge(KEYS.RETURN, key_opts) || padButtonDownEdge(PAD.A)) {\n        button_activate = true;\n      }\n    }\n  }\n  if (!disabled) {\n    const hotkey = param.hotkey === undefined ? def.hotkey : param.hotkey;\n    const hotkeys = param.hotkeys === undefined ? def.hotkeys : param.hotkeys;\n    const hotpad = param.hotpad === undefined ? def.hotpad : param.hotpad;\n    if (hotkey || hotkeys) {\n      let key_opts = in_event_cb ? { in_event_cb } : null;\n      if (hotkey && keyDownEdge(hotkey, key_opts)) {\n        button_activate = true;\n      }\n      if (hotkeys) {\n        for (let ii = 0; ii < hotkeys.length; ++ii) {\n          if (keyDownEdge(hotkeys[ii], key_opts)) {\n            button_activate = true;\n          }\n        }\n      }\n    }\n    if (hotpad) {\n      if (padButtonDownEdge(hotpad)) {\n        button_activate = true;\n      }\n    }\n    if (async_activate_key === param.key_computed) {\n      button_activate = true;\n    }\n  }\n  if (param.url) {\n    if (param.internal === undefined) {\n      param.internal = true;\n    }\n    if (link(param)) {\n      button_activate = true;\n    }\n  }\n  if (button_activate) {\n    spotSignalRet(param);\n    out.button = 0;\n    out.pos = null;\n  }\n\n  out.focused = focused;\n  if (out.ret) {\n    state = SPOT_STATE_DOWN;\n    const sound_button = param.sound_button === undefined ? def.sound_button : param.sound_button;\n    if (sound_button) {\n      playUISound(sound_button);\n    }\n  }\n  if (out.focused && param.tooltip) {\n    drawTooltipBox(param as TooltipBoxParam);\n  }\n  checkHooks(param, Boolean(out.ret));\n  out.spot_state = state;\n\n  profilerStopFunc();\n  return out;\n}\n","const assert = require('assert');\n\nconst sprite_sets = {\n  stone: {\n    button: { atlas: 'stone' },\n    button_rollover: { atlas: 'stone' },\n    button_down: { atlas: 'stone' },\n    button_disabled: { atlas: 'stone' },\n  },\n  pixely: {\n    color_set_shades: [0.8, 1, 1],\n    slider_params: [1, 1, 0.3],\n\n    button: { atlas: 'pixely' },\n    button_rollover: { atlas: 'pixely' },\n    button_down: { atlas: 'pixely' },\n    button_disabled: { atlas: 'pixely' },\n    panel: { atlas: 'pixely' },\n    menu_entry: { atlas: 'pixely' },\n    menu_selected: { atlas: 'pixely' },\n    menu_down: { atlas: 'pixely' },\n    menu_header: { atlas: 'pixely' },\n    slider: { atlas: 'pixely' },\n    // slider_notch: { atlas: 'pixely' },\n    slider_handle: { atlas: 'pixely' },\n\n    checked: { atlas: 'pixely' },\n    unchecked: { atlas: 'pixely' },\n\n    scrollbar_bottom: { atlas: 'pixely' },\n    scrollbar_trough: { atlas: 'pixely' },\n    scrollbar_top: { atlas: 'pixely' },\n    scrollbar_handle_grabber: { atlas: 'pixely' },\n    scrollbar_handle: { atlas: 'pixely' },\n    progress_bar: { atlas: 'pixely' },\n    progress_bar_trough: { atlas: 'pixely' },\n\n    collapsagories: { atlas: 'pixely' },\n    collapsagories_rollover: { atlas: 'pixely' },\n    collapsagories_shadow_down: { atlas: 'pixely' },\n  },\n};\n\nexport function spriteSetGet(key) {\n  assert(sprite_sets[key]);\n  return sprite_sets[key];\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Some code from Turbulenz: Copyright (c) 2012-2013 Turbulenz Limited\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Legacy APIs\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.createSprite = spriteCreate;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.create = spriteCreate;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.queueraw4color = spriteQueueRaw4Color;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.queueraw4colorBuffer = spriteQueueRaw4ColorBuffer;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.queueraw4 = spriteQueueRaw4;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.queueraw = spriteQueueRaw;\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexports.queuesprite = spriteQueueSprite;\n\nexport const BlendMode = {\n  BLEND_ALPHA: 0,\n  BLEND_ADDITIVE: 1,\n  BLEND_PREMULALPHA: 2,\n};\nexport const BLEND_ALPHA = 0;\nexport const BLEND_ADDITIVE = 1;\nexport const BLEND_PREMULALPHA = 2;\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst camera2d = require('./camera2d.js');\nconst { dynGeomQueueSprite } = require('./dyn_geom.js');\nconst engine = require('./engine.js');\nconst geom = require('./geom.js');\nconst { cos, max, min, round, sin } = Math;\nconst {\n  textureCmpArray,\n  textureBindArray,\n  textureLoad,\n  textureFilterKey,\n} = require('./textures.js');\nconst {\n  SEMANTIC,\n  shaderCreate,\n  shadersBind,\n  shadersPrelink,\n} = require('./shaders.js');\nconst { deprecate, nextHighestPowerOfTwo } = require('glov/common/util.js');\nconst {\n  vec2,\n  vec4,\n  v2set,\n  v4set,\n} = require('glov/common/vmath.js');\n\ndeprecate(exports, 'clip', 'spriteClip');\ndeprecate(exports, 'clipped', 'spriteClipped');\ndeprecate(exports, 'clipPush', 'spriteClipPush');\ndeprecate(exports, 'clipPop', 'spriteClipPop');\ndeprecate(exports, 'clipPause', 'spriteClipPause');\ndeprecate(exports, 'clipResume', 'spriteClipResume');\ndeprecate(exports, 'queuefn', 'spriteQueueFn');\ndeprecate(exports, 'draw', 'spriteDraw');\ndeprecate(exports, 'drawPartial', 'spriteDrawPartial');\n\nexport let sprite_vshader;\nexport let sprite_fshader;\nlet sprite_dual_fshader;\nlet clip_space = vec4();\nlet sprite_shader_params = {\n  clip_space\n};\nlet last_uid = 0;\nlet geom_stats;\n\nlet sprite_queue = [];\n\nlet sprite_freelist = [];\n\nlet sprite_queue_stack = [];\nexport function spriteQueuePush(new_list) {\n  assert(sprite_queue_stack.length < 10); // probably leaking\n  sprite_queue_stack.push(sprite_queue);\n  sprite_queue = new_list || [];\n}\nexport function spriteQueuePop(for_pause) {\n  assert(sprite_queue_stack.length);\n  assert(for_pause || !sprite_queue.length);\n  sprite_queue = sprite_queue_stack.pop();\n}\n\nfunction SpriteData() {\n  // x y cr cg cb ca u v (x4)\n  // data for GL queuing\n  this.data = new Float32Array(32);\n  // data for sorting/binding/etc\n  this.texs = null;\n  this.shader = null;\n  this.shader_params = null;\n  this.x = 0;\n  this.y = 0;\n  this.z = 0;\n  this.blend = 0; // BLEND_ALPHA\n  this.uid = 0;\n  this.chained = false;\n  this.next = null;\n}\n\nSpriteData.prototype.queue = function (z) {\n  ++geom_stats.sprites;\n  if (!this.chained) {\n    this.z = z;\n    this.uid = ++last_uid;\n    sprite_queue.push(this);\n  }\n};\n\nlet is_chained = false;\nlet chained_prev = null;\nexport function spriteChainedStart() {\n  is_chained = true;\n  chained_prev = null;\n}\nexport function spriteChainedStop() {\n  is_chained = false;\n  chained_prev = null;\n}\n\nexport function spriteDataAlloc(texs, shader, shader_params, blend) {\n  let ret;\n  if (sprite_freelist.length) {\n    ret = sprite_freelist.pop();\n  } else {\n    ret = new SpriteData();\n  }\n  ret.texs = texs;\n  if (is_chained && chained_prev) {\n    ret.chained = true;\n    chained_prev.next = ret;\n  } else {\n    ret.chained = false;\n    ret.shader = shader || null;\n    if (shader_params) {\n      shader_params.clip_space = sprite_shader_params.clip_space;\n      ret.shader_params = shader_params;\n    } else {\n      ret.shader_params = null;\n    }\n    ret.blend = blend || 0; // BLEND_ALPHA\n  }\n  if (is_chained) {\n    chained_prev = ret;\n  }\n  return ret;\n}\n\nfunction cmpSprite(a, b) {\n  ++geom_stats.sprite_sort_cmps;\n  if (a.z !== b.z) {\n    return a.z - b.z;\n  }\n  if (a.blend === BLEND_ADDITIVE && b.blend === BLEND_ADDITIVE) {\n    // both additive at the same Z, do not sort for performance reasons\n    return 0;\n  }\n  if (a.y !== b.y) {\n    return a.y - b.y;\n  }\n  if (a.x !== b.x) {\n    return a.x - b.x;\n  }\n  return a.uid - b.uid;\n}\n\nexport function spriteQueueFn(z, fn) {\n  assert(isFinite(z));\n  sprite_queue.push({\n    fn,\n    x: 0,\n    y: 0,\n    z,\n    uid: ++last_uid,\n  });\n}\n\n// 4 arbitrary positions, colors, uvs\n// coordinates must be in counter-clockwise winding order\nexport function spriteQueueRaw4Color(\n  texs,\n  x0, y0, c0, u0, v0,\n  x1, y1, c1, u1, v1,\n  x2, y2, c2, u2, v2,\n  x3, y3, c3, u3, v3,\n  z,\n  shader, shader_params, blend\n) {\n  assert(isFinite(z));\n  let elem = spriteDataAlloc(texs, shader, shader_params, blend);\n  let data = elem.data;\n  // x1 y1 x2 y2 x3 y3 x4 y4 - vertices [0,8)\n  // cr cg cb ca u1 v1 u2 v2 - normalized color + texture [8,16)\n  // Minor perf improvement: convert by clip_space here (still just a single MAD\n  //   if pre-calculated in the camera) and remove it from the shader.\n  data[0] = (x0 - camera2d.data[0]) * camera2d.data[4];\n  data[1] = (y0 - camera2d.data[1]) * camera2d.data[5];\n  // Note: measurably slower: data.set(c0, 2);\n  data[2] = c0[0];\n  data[3] = c0[1];\n  data[4] = c0[2];\n  data[5] = c0[3];\n  data[6] = u0;\n  data[7] = v0;\n\n  data[8] = (x1 - camera2d.data[0]) * camera2d.data[4];\n  data[9] = (y1 - camera2d.data[1]) * camera2d.data[5];\n  data[10] = c1[0];\n  data[11] = c1[1];\n  data[12] = c1[2];\n  data[13] = c1[3];\n  data[14] = u1;\n  data[15] = v1;\n\n  data[16] = (x2 - camera2d.data[0]) * camera2d.data[4];\n  data[17] = (y2 - camera2d.data[1]) * camera2d.data[5];\n  data[18] = c2[0];\n  data[19] = c2[1];\n  data[20] = c2[2];\n  data[21] = c2[3];\n  data[22] = u2;\n  data[23] = v2;\n\n  data[24] = (x3 - camera2d.data[0]) * camera2d.data[4];\n  data[25] = (y3 - camera2d.data[1]) * camera2d.data[5];\n  data[26] = c3[0];\n  data[27] = c3[1];\n  data[28] = c3[2];\n  data[29] = c3[3];\n  data[30] = u3;\n  data[31] = v3;\n\n  elem.x = data[0];\n  elem.y = data[1];\n  elem.queue(z);\n  return elem;\n}\n\n// 4 arbitrary positions\n// coordinates must be in counter-clockwise winding order\nexport function spriteQueueRaw4(\n  texs, x0, y0, x1, y1, x2, y2, x3, y3, z,\n  u0, v0, u1, v1,\n  color, shader, shader_params, blend\n) {\n  return spriteQueueRaw4Color(texs,\n    x0, y0, color, u0, v0,\n    x1, y1, color, u0, v1,\n    x2, y2, color, u1, v1,\n    x3, y3, color, u1, v0,\n    z,\n    shader, shader_params, blend);\n}\n\n// allocate with spriteDataAlloc() and then fill .data\nexport function queueSpriteData(elem, z) {\n  assert(isFinite(z));\n  let data = elem.data;\n  data[0] = (data[0] - camera2d.data[0]) * camera2d.data[4];\n  data[1] = (data[1] - camera2d.data[1]) * camera2d.data[5];\n\n  data[8] = (data[8] - camera2d.data[0]) * camera2d.data[4];\n  data[9] = (data[9] - camera2d.data[1]) * camera2d.data[5];\n\n  data[16] = (data[16] - camera2d.data[0]) * camera2d.data[4];\n  data[17] = (data[17] - camera2d.data[1]) * camera2d.data[5];\n\n  data[24] = (data[24] - camera2d.data[0]) * camera2d.data[4];\n  data[25] = (data[25] - camera2d.data[1]) * camera2d.data[5];\n\n  elem.x = data[0];\n  elem.y = data[1];\n  elem.queue(z);\n  return elem;\n}\n\n// Expects a buffer in the form of:\n//   x, y, r, g, b, a, u, v, (x4)\nexport function spriteQueueRaw4ColorBuffer(\n  texs, buf,\n  z, shader, shader_params, blend\n) {\n  assert(isFinite(z));\n  let elem = spriteDataAlloc(texs, shader, shader_params, blend);\n  let data = elem.data;\n  for (let ii = 0; ii < 32; ++ii) {\n    data[ii] = buf[ii];\n  }\n  queueSpriteData(elem, z);\n  return elem;\n}\n\nexport function spriteQueueRaw(\n  texs, x, y, z, w, h,\n  u0, v0, u1, v1,\n  color, shader, shader_params, blend\n) {\n  return spriteQueueRaw4Color(texs,\n    x, y, color, u0, v0,\n    x, y + h, color, u0, v1,\n    x + w, y + h, color, u1, v1,\n    x + w, y, color, u1, v0,\n    z,\n    shader, shader_params, blend);\n}\n\nlet temp_uvs = vec4();\nfunction fillUVs(tex, w, h, nozoom, uvs) {\n  let ubias = 0;\n  let vbias = 0;\n  if (!nozoom && !tex.nozoom) {\n    // Bias the texture coordinates depending on the minification/magnification\n    //   level so we do not get pixels from neighboring frames bleeding in\n    // Use min here (was max in libGlov), to solve tooltip edges being wrong in strict pixely\n    // Use max here to solve box buttons not lining up, but instead using nozoom in drawBox/drawHBox,\n    //   but, that only works for magnification - need the max here for minification!\n    let zoom_level = max(\n      (uvs[2] - uvs[0]) * tex.width / w,\n      (uvs[3] - uvs[1]) * tex.height / h,\n    ); // in texels per pixel\n    if (zoom_level < 1) { // magnification\n      if (tex.filter_mag === gl.LINEAR) {\n        // Need to bias by half a texel, so we're doing absolutely no blending with the neighboring texel\n        ubias = vbias = 0.5;\n      } else if (tex.filter_mag === gl.NEAREST) {\n        if (engine.antialias) {\n          // When antialiasing is on, even nearest sampling samples from adjacent texels, do slight bias\n          // Want to bias by one *pixel's* worth\n          ubias = vbias = zoom_level / 2;\n        } else {\n          // even without it, running into problems, just add a tiny bias!\n          // In theory, don't want this if UVs are 0/1 and we're clamping?\n          ubias = vbias = zoom_level * 0.01;\n        }\n      }\n    } else if (zoom_level > 1) { // minification\n      // need to apply this bias even with nearest filtering, not exactly sure why\n      let mipped_texels = zoom_level / 2;\n      ubias = vbias = 0.5 + mipped_texels;\n\n    }\n    if (uvs[0] > uvs[2]) {\n      ubias *= -1;\n    }\n    if (uvs[1] > uvs[3]) {\n      vbias *= -1;\n    }\n  }\n\n  temp_uvs[0] = uvs[0] + ubias / tex.width;\n  temp_uvs[1] = uvs[1] + vbias / tex.height;\n  temp_uvs[2] = uvs[2] - ubias / tex.width;\n  temp_uvs[3] = uvs[3] - vbias / tex.height;\n}\n\nlet qsp = {};\nfunction queuesprite4colorObj() {\n  let {\n    rot, z, sprite,\n    color_ul, color_ll, color_lr, color_ur,\n  } = qsp;\n  assert(isFinite(z));\n  let elem = spriteDataAlloc(sprite.texs, qsp.shader, qsp.shader_params, qsp.blend);\n  let x = (qsp.x - camera2d.data[0]) * camera2d.data[4];\n  let y = (qsp.y - camera2d.data[1]) * camera2d.data[5];\n  let w = qsp.w * camera2d.data[4];\n  let h = qsp.h * camera2d.data[5];\n  if (qsp.pixel_perfect) {\n    x |= 0;\n    y |= 0;\n    w |= 0;\n    h |= 0;\n  }\n  elem.x = x;\n  elem.y = y;\n  let data = elem.data;\n  if (!rot) {\n    let x1 = x - sprite.origin[0] * w;\n    let y1 = y - sprite.origin[1] * h;\n    let x2 = x1 + w;\n    let y2 = y1 + h;\n    data[0] = x1;\n    data[1] = y1;\n    data[8] = x1;\n    data[9] = y2;\n    data[16] = x2;\n    data[17] = y2;\n    data[24] = x2;\n    data[25] = y1;\n  } else {\n    let dx = sprite.origin[0] * w;\n    let dy = sprite.origin[1] * h;\n\n    let cosr = cos(rot);\n    let sinr = sin(rot);\n\n    let x1 = x - cosr * dx + sinr * dy;\n    let y1 = y - sinr * dx - cosr * dy;\n    let ch = cosr * h;\n    let cw = cosr * w;\n    let sh = sinr * h;\n    let sw = sinr * w;\n\n    data[0] = x1;\n    data[1] = y1;\n    data[8] = x1 - sh;\n    data[9] = y1 + ch;\n    data[16] = x1 + cw - sh;\n    data[17] = y1 + sw + ch;\n    data[24] = x1 + cw;\n    data[25] = y1 + sw;\n  }\n\n  fillUVs(elem.texs[0], w, h, qsp.nozoom, qsp.uvs);\n  data[2] = color_ul[0];\n  data[3] = color_ul[1];\n  data[4] = color_ul[2];\n  data[5] = color_ul[3];\n  data[6] = temp_uvs[0];\n  data[7] = temp_uvs[1];\n\n  data[10] = color_ll[0];\n  data[11] = color_ll[1];\n  data[12] = color_ll[2];\n  data[13] = color_ll[3];\n  data[14] = temp_uvs[0];\n  data[15] = temp_uvs[3];\n\n  data[18] = color_lr[0];\n  data[19] = color_lr[1];\n  data[20] = color_lr[2];\n  data[21] = color_lr[3];\n  data[22] = temp_uvs[2];\n  data[23] = temp_uvs[3];\n\n  data[26] = color_ur[0];\n  data[27] = color_ur[1];\n  data[28] = color_ur[2];\n  data[29] = color_ur[3];\n  data[30] = temp_uvs[2];\n  data[31] = temp_uvs[1];\n\n  elem.queue(z);\n  return elem;\n}\n\nexport function spriteQueueSprite(\n  sprite, x, y, z, w, h, rot, uvs, color, shader, shader_params, nozoom,\n  pixel_perfect, blend,\n) {\n  assert(!sprite.lazy_load); // Would be pretty easy to add support if needed\n  color = color || sprite.color;\n  qsp.sprite = sprite;\n  qsp.x = x;\n  qsp.y = y;\n  qsp.z = z;\n  qsp.w = w;\n  qsp.h = h;\n  qsp.rot = rot;\n  qsp.uvs = uvs;\n  qsp.color_ul = color;\n  qsp.color_ll = color;\n  qsp.color_lr = color;\n  qsp.color_ur = color;\n  qsp.shader = shader;\n  qsp.shader_params = shader_params;\n  qsp.nozoom = nozoom;\n  qsp.pixel_perfect = pixel_perfect;\n  qsp.blend = blend;\n  return queuesprite4colorObj(qsp);\n}\n\nlet clip_temp_xy = vec2();\nlet clip_temp_wh = vec2();\nexport function clipCoordsScissor(x, y, w, h) {\n  camera2d.virtualToCanvas(clip_temp_xy, [x, y]);\n  clip_temp_xy[0] = round(clip_temp_xy[0]);\n  clip_temp_xy[1] = round(clip_temp_xy[1]);\n  camera2d.virtualToCanvas(clip_temp_wh, [x + w, y + h]);\n  clip_temp_wh[0] = round(clip_temp_wh[0]) - clip_temp_xy[0];\n  clip_temp_wh[1] = round(clip_temp_wh[1]) - clip_temp_xy[1];\n\n  // let gd_w = engine.render_width || engine.width;\n  let gd_h = engine.render_height || engine.height;\n  return [clip_temp_xy[0], gd_h - (clip_temp_xy[1] + clip_temp_wh[1]), clip_temp_wh[0], clip_temp_wh[1]];\n}\n\nfunction clipCoordsDom(x, y, w, h) {\n  let xywh = vec4();\n  camera2d.virtualToDom(xywh, [x + w, y + h]);\n  xywh[2] = xywh[0];\n  xywh[3] = xywh[1];\n  camera2d.virtualToDom(xywh, [x, y]);\n  xywh[0] = round(xywh[0]);\n  xywh[1] = round(xywh[1]);\n  xywh[2] = round(xywh[2]) - xywh[0];\n  xywh[3] = round(xywh[3]) - xywh[1];\n\n  return xywh;\n}\n\nlet active_scissor = null;\nfunction scissorSet(scissor) {\n  if (!active_scissor) {\n    gl.enable(gl.SCISSOR_TEST);\n  }\n  gl.scissor(scissor[0], scissor[1], scissor[2], scissor[3]);\n  active_scissor = scissor;\n}\nfunction scisssorClear() {\n  gl.disable(gl.SCISSOR_TEST);\n  active_scissor = null;\n}\n\nlet scissor_stack = [];\nexport function scissorPush(new_scissor) {\n  scissor_stack.push(active_scissor);\n  if (new_scissor) {\n    scissorSet(new_scissor);\n  } else {\n    scisssorClear();\n  }\n}\nexport function scissorPushIntersection(new_scissor) {\n  scissor_stack.push(active_scissor);\n  if (new_scissor) {\n    if (active_scissor) {\n      let x0 = max(active_scissor[0], new_scissor[0]);\n      let x1 = max(x0, min(active_scissor[0] + active_scissor[2], new_scissor[0] + new_scissor[2]));\n      let y0 = max(active_scissor[1], new_scissor[1]);\n      let y1 = max(y0, min(active_scissor[1] + active_scissor[3], new_scissor[1] + new_scissor[3]));\n      let temp_scissor = [x0, y0, x1 - x0, y1 - y0];\n      scissorSet(temp_scissor);\n    } else {\n      scissorSet(new_scissor);\n    }\n  } else {\n    // leave active scissor, or not\n  }\n}\nexport function scissorPop() {\n  let prev_scissor = scissor_stack.pop();\n  if (prev_scissor) {\n    scissorSet(prev_scissor);\n  } else {\n    scisssorClear();\n  }\n}\n\nexport function spriteClip(z_start, z_end, x, y, w, h) {\n  let scissor = clipCoordsScissor(x, y, w, h);\n  spriteQueueFn(z_start - 0.01, scissorSet.bind(null, scissor));\n  spriteQueueFn(z_end - 0.01, scisssorClear);\n}\n\nlet clip_stack = [];\n\nexport function spriteResetTopOfFrame() {\n  // In case something crashed and leftover from last frame\n  clip_stack.length = 0;\n  sprite_queue_stack.length = 0;\n}\n\nlet clip_paused;\nexport function spriteClipped(including_paused) {\n  return clip_stack.length > 0 && (including_paused || !clip_paused);\n}\n\nlet clipped_viewport_temp_in = vec2();\nlet clipped_viewport_temp_pos = vec2();\nlet clipped_viewport_temp_wh = vec2();\nexport function spriteClippedViewport() {\n  assert(clip_stack.length > 0);\n  let tail = clip_stack[clip_stack.length - 1];\n  camera2d.domToVirtual(clipped_viewport_temp_pos, tail.dom_clip);\n  v2set(clipped_viewport_temp_in, tail.dom_clip[2], tail.dom_clip[3]);\n  camera2d.domDeltaToVirtual(clipped_viewport_temp_wh, clipped_viewport_temp_in);\n  return {\n    x: clipped_viewport_temp_pos[0],\n    y: clipped_viewport_temp_pos[1],\n    w: clipped_viewport_temp_wh[0],\n    h: clipped_viewport_temp_wh[1],\n  };\n}\n\nexport function spriteClipPush(z, x, y, w, h) {\n  assert(clip_stack.length < 10); // probably leaking\n  let scissor = clipCoordsScissor(x, y, w, h);\n  let dom_clip = clipCoordsDom(x, y, w, h);\n  camera2d.setInputClipping(dom_clip);\n  spriteQueuePush();\n  clip_stack.push({\n    z, scissor, dom_clip,\n  });\n}\n\nexport function spriteClipPop() {\n  assert(spriteClipped(true));\n  spriteQueueFn(Z.TOOLTIP - 0.1, scisssorClear);\n  let { z, scissor } = clip_stack.pop();\n  let sprites = sprite_queue;\n  spriteQueuePop(true);\n  if (clip_stack.length) {\n    let { dom_clip } = clip_stack[clip_stack.length - 1];\n    camera2d.setInputClipping(dom_clip);\n  } else {\n    camera2d.setInputClipping(null);\n  }\n  spriteQueueFn(z, () => {\n    scissorPush(scissor);\n    spriteQueuePush();\n    sprite_queue = sprites;\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    spriteDraw();\n    spriteQueuePop();\n    // already done at Z.TOOLTIP within spriteDraw(): scisssorClear(), but scissorPop() would take care of it\n    scissorPop();\n  });\n}\n\nexport function spriteClipPause() {\n  // Queue back into the root sprite queue\n  assert(spriteClipped(true));\n  assert(!clip_paused);\n  clip_paused = true;\n  spriteQueuePush(sprite_queue_stack[0]);\n  camera2d.setInputClipping(null);\n  // push onto the clip stack so if there's another clip push/pop we get back to\n  // escaped when it pops.\n  clip_stack.push({ dom_clip: null });\n}\nexport function spriteClipResume() {\n  assert(spriteClipped(true));\n  assert(clip_paused);\n  clip_stack.pop(); // remove us\n  clip_paused = false;\n  assert(spriteClipped(true));\n  let { dom_clip } = clip_stack[clip_stack.length - 1];\n  spriteQueuePop(true);\n  camera2d.setInputClipping(dom_clip);\n}\n\nlet batch_state;\nlet sprite_geom;\nlet sprite_buffer; // Float32Array with 8 entries per vert\nlet sprite_buffer_len = 0; // in verts\nlet sprite_buffer_batch_start = 0;\nlet sprite_buffer_idx = 0; // in verts\n\nlet last_blend_mode;\nlet last_bound_shader;\nconst MAX_VERT_COUNT = 65532; // strictly less than 65536, as index 65535 is special in WebGL2\nlet batches = [];\n\nfunction commit() {\n  if (sprite_buffer_idx === sprite_buffer_batch_start) {\n    return;\n  }\n  batches.push({\n    state: batch_state,\n    start: sprite_buffer_batch_start,\n    end: sprite_buffer_idx,\n  });\n  sprite_buffer_batch_start = sprite_buffer_idx;\n}\n\nexport function blendModeSet(blend) {\n  if (last_blend_mode !== blend) {\n    last_blend_mode = blend;\n    if (last_blend_mode === BLEND_ADDITIVE) {\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n    } else if (last_blend_mode === BLEND_PREMULALPHA) {\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    } else {\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    }\n  }\n}\n\nexport function blendModeReset(force) {\n  if (last_blend_mode !== BLEND_ALPHA || force) {\n    // always reset to this\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    last_blend_mode = BLEND_ALPHA;\n  }\n}\n\nfunction commitAndFlush() {\n  commit();\n  if (!batches.length) {\n    return;\n  }\n  assert(sprite_buffer_idx);\n  sprite_geom.update(sprite_buffer, sprite_buffer_idx);\n  sprite_geom.bind();\n\n  for (let ii = 0; ii < batches.length; ++ii) {\n    let batch = batches[ii];\n    let { state, start, end } = batch;\n    if (last_bound_shader !== state.shader || state.shader_params) {\n      shadersBind(sprite_vshader,\n        state.shader || sprite_fshader,\n        state.shader_params || sprite_shader_params);\n      last_bound_shader = state.shader;\n    }\n    if (last_blend_mode !== state.blend) {\n      blendModeSet(state.blend);\n    }\n    textureBindArray(state.texs);\n    ++geom_stats.draw_calls_sprite;\n    gl.drawElements(sprite_geom.mode, (end - start) * 3 / 2, gl.UNSIGNED_SHORT, start * 3);\n  }\n\n  batches.length = 0;\n  sprite_buffer_idx = 0;\n  sprite_buffer_batch_start = 0;\n}\n\nfunction drawSetup() {\n  if (engine.defines.NOSPRITES) {\n    sprite_queue.length = 0;\n  }\n  if (!sprite_queue.length) {\n    return;\n  }\n\n  clip_space[0] = 2 / engine.viewport[2];\n  clip_space[1] = -2 / engine.viewport[3];\n\n  last_blend_mode = -1;\n  last_bound_shader = -1;\n\n  if (!sprite_geom) {\n    sprite_geom = geom.create([\n      [SEMANTIC.POSITION, gl.FLOAT, 2, false],\n      [SEMANTIC.COLOR, gl.FLOAT, 4, false],\n      [SEMANTIC.TEXCOORD, gl.FLOAT, 2, false],\n    ], [], null, geom.QUADS);\n    sprite_buffer = new Float32Array(1024);\n    sprite_buffer_len = sprite_buffer.length / 8;\n  }\n\n  profilerStart('sort');\n  sprite_queue.sort(cmpSprite);\n  geom_stats.sprite_sort_elems += sprite_queue.length;\n  profilerStop('sort');\n\n  batch_state = null;\n  assert.equal(sprite_buffer_idx, 0);\n  assert.equal(sprite_buffer_batch_start, 0);\n  assert.equal(batches.length, 0);\n}\n\nfunction growSpriteBuffer() {\n  let new_length = min((sprite_buffer_len * 1.25 + 3) & ~3, MAX_VERT_COUNT);\n  sprite_buffer_len = new_length;\n  sprite_buffer = new Float32Array(new_length * 8);\n}\n\nfunction drawElem(elem) {\n  let count = 0;\n  if (elem.fn) {\n    commitAndFlush();\n    batch_state = null;\n    elem.fn();\n    last_bound_shader = -1;\n    last_blend_mode = -1;\n    assert.equal(sprite_buffer_idx, 0);\n    assert.equal(sprite_buffer_batch_start, 0);\n    assert.equal(batches.length, 0);\n\n    clip_space[0] = 2 / engine.viewport[2];\n    clip_space[1] = -2 / engine.viewport[3];\n    count++;\n  } else {\n    if (!batch_state ||\n      textureCmpArray(elem.texs, batch_state.texs) ||\n      elem.shader !== batch_state.shader ||\n      elem.shader_params !== batch_state.shader_params ||\n      elem.blend !== batch_state.blend\n    ) {\n      commit();\n      batch_state = elem;\n    }\n    do {\n      if (sprite_buffer_idx + 4 > sprite_buffer_len) {\n        commitAndFlush();\n        // batch_state left alone\n        if (sprite_buffer_len !== MAX_VERT_COUNT) {\n          growSpriteBuffer();\n        }\n      }\n\n      let index = sprite_buffer_idx * 8;\n      sprite_buffer_idx += 4;\n\n      // measurably slower:\n      // for (let ii = 0; ii < 32; ++ii) {\n      //   sprite_buffer[index + ii] = elem.data[ii];\n      // }\n      sprite_buffer.set(elem.data, index);\n      count++;\n\n      sprite_freelist.push(elem);\n      let next = elem.next;\n      elem.next = null;\n      elem = next;\n    } while (elem);\n  }\n  return count;\n}\n\nfunction finishDraw() {\n  commitAndFlush();\n  blendModeReset();\n}\n\nexport function spriteDrawReset() {\n  if (active_scissor) {\n    gl.disable(gl.SCISSOR_TEST);\n    active_scissor = null;\n  }\n}\n\nexport function spriteDraw() {\n  profilerStart('sprites:draw');\n  drawSetup();\n  profilerStart('drawElem');\n  for (let ii = 0; ii < sprite_queue.length; ++ii) {\n    let elem = sprite_queue[ii];\n    drawElem(elem);\n  }\n  profilerStop('drawElem');\n  sprite_queue.length = 0;\n  finishDraw();\n  profilerStop('sprites:draw');\n}\n\nexport function spriteDrawPartial(z) {\n  profilerStart('sprites:drawPartial');\n  drawSetup();\n  profilerStart('drawElem');\n  for (let ii = 0; ii < sprite_queue.length; ++ii) {\n    let elem = sprite_queue[ii];\n    if (elem.z > z) {\n      sprite_queue = sprite_queue.slice(ii);\n      break;\n    }\n    drawElem(elem);\n  }\n  profilerStop('drawElem');\n  finishDraw();\n  profilerStop('sprites:drawPartial');\n}\n\nexport function buildRects(ws, hs, tex) {\n  if (typeof ws === 'number') {\n    ws = new Array(ws);\n    for (let ii = 0; ii < ws.length; ++ii) {\n      ws[ii] = 1;\n    }\n  }\n  if (typeof hs === 'number') {\n    hs = new Array(hs);\n    for (let ii = 0; ii < hs.length; ++ii) {\n      hs[ii] = 1;\n    }\n  }\n  let rects = [];\n  let total_w = 0;\n  for (let ii = 0; ii < ws.length; ++ii) {\n    total_w += ws[ii];\n  }\n  let total_h = 0;\n  for (let ii = 0; ii < hs.length; ++ii) {\n    total_h += hs[ii];\n  }\n  let tex_w;\n  let tex_h;\n  if (!tex || nextHighestPowerOfTwo(tex.src_width) === tex.width &&\n    nextHighestPowerOfTwo(tex.src_height) === tex.height\n  ) {\n    // texture is in fact power of two, or assume it will be\n    tex_w = nextHighestPowerOfTwo(total_w);\n    tex_h = nextHighestPowerOfTwo(total_h);\n  } else {\n    // Assume snuggly fitting, use the summed w/h, which might be a multiple of\n    //   the actual w/h, but should be correct relative to the specified `ws` and `hs`\n    tex_w = total_w;\n    tex_h = total_h;\n  }\n  let wh = [];\n  for (let ii = 0; ii < ws.length; ++ii) {\n    wh.push(ws[ii] / total_h);\n  }\n  let hw = [];\n  for (let ii = 0; ii < hs.length; ++ii) {\n    hw.push(hs[ii] / total_w);\n  }\n  let aspect = [];\n  let non_square = false;\n  let y = 0;\n  for (let jj = 0; jj < hs.length; ++jj) {\n    let x = 0;\n    for (let ii = 0; ii < ws.length; ++ii) {\n      let r = vec4(x / tex_w, y / tex_h,\n        (x + ws[ii]) / tex_w, (y + hs[jj]) / tex_h);\n      rects.push(r);\n      let asp = ws[ii] / hs[jj];\n      if (asp !== 1) {\n        non_square = true;\n      }\n      aspect.push(asp);\n      x += ws[ii];\n    }\n    y += hs[jj];\n  }\n  return {\n    widths: ws,\n    heights: hs,\n    wh,\n    hw,\n    rects,\n    aspect: non_square ? aspect : null,\n    total_w,\n    total_h,\n  };\n}\n\nfunction flipRectHoriz(a) {\n  return vec4(a[0], a[3], a[2], a[1]);\n}\n\nexport function spriteFlippedUVsApplyHFlip(spr) {\n  if (!spr.uidata.rects_orig) {\n    spr.uidata.rects_orig = spr.uidata.rects;\n  }\n  if (!spr.uidata.rects_flipped) {\n    spr.uidata.rects_flipped = spr.uidata.rects.map(flipRectHoriz);\n  }\n  spr.uidata.rects = spr.uidata.rects_flipped;\n}\n\nexport function spriteFlippedUVsRestore(spr) {\n  if (spr.uidata.rects_orig) {\n    spr.uidata.rects = spr.uidata.rects_orig;\n  }\n}\n\nfunction Sprite(params) {\n  this.lazy_load = null;\n\n  if (params.texs) {\n    this.texs = params.texs;\n  } else {\n    let ext = params.ext || '.png';\n    this.texs = [];\n    if (params.tex) {\n      assert(!params.lazy_load);\n      this.texs.push(params.tex);\n    } else if (params.layers) {\n      assert(params.name);\n      assert(!params.lazy_load); // Not currently supported for multi-layer sprites\n      this.texs = [];\n      for (let ii = 0; ii < params.layers; ++ii) {\n        this.texs.push(textureLoad({\n          url: `img/${params.name}_${ii}${ext}`,\n          filter_min: params.filter_min,\n          filter_mag: params.filter_mag,\n          wrap_s: params.wrap_s,\n          wrap_t: params.wrap_t,\n          load_filter: params.load_filter,\n        }));\n      }\n    } else {\n      let tex_param;\n      if (params.name) {\n        tex_param = {\n          url: `img/${params.name}${ext}#${textureFilterKey(params)}`,\n          filter_min: params.filter_min,\n          filter_mag: params.filter_mag,\n          wrap_s: params.wrap_s,\n          wrap_t: params.wrap_t,\n          soft_error: params.soft_error,\n          load_filter: params.load_filter,\n        };\n      } else {\n        assert(params.url);\n        tex_param = params;\n      }\n      if (params.lazy_load) {\n        this.lazy_load = tex_param;\n      } else {\n        this.texs.push(textureLoad(tex_param));\n      }\n    }\n  }\n\n  this.origin = params.origin || vec2(0, 0); // [0,1] range\n  this.size = params.size || vec2(1, 1);\n  this.color = params.color || vec4(1,1,1,1);\n  this.uvs = params.uvs || vec4(0, 0, 1, 1);\n  if (params.ws) {\n    this.uidata = buildRects(params.ws, params.hs);\n  }\n  this.shader = params.shader || null;\n\n  let tex_on_load = (tex) => {\n    if (!params.uvs) {\n      // Fix up non-power-of-two textures\n      this.uvs[2] = tex.src_width / tex.width;\n      this.uvs[3] = tex.src_height / tex.height;\n    }\n    if (params.ws) {\n      this.uidata = buildRects(params.ws, params.hs, tex);\n    }\n  };\n  if (this.texs.length) {\n    this.texs[0].onLoad(tex_on_load);\n  } else {\n    this.tex_on_load = tex_on_load;\n  }\n}\n\nSprite.prototype.getAspect = function () {\n  let tex = this.texs[0];\n  if (!tex) {\n    return 1;\n  }\n  return tex.src_width / tex.src_height;\n};\n\nSprite.prototype.withOrigin = function (new_origin) {\n  let cache_v = String(new_origin[0] + new_origin[1] * 1007);\n  if (!this.origin_cache) {\n    this.origin_cache = {};\n  }\n  if (!this.origin_cache[cache_v]) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    let new_sprite = this.origin_cache[cache_v] = spriteCreate({\n      texs: this.texs,\n      origin: new_origin,\n      size: this.size,\n      color: this.color,\n      uvs: this.uvs,\n    });\n    new_sprite.uidata = this.uidata;\n  }\n  return this.origin_cache[cache_v];\n};\n\nSprite.prototype.lazyLoadInit = function () {\n  let tex = textureLoad({\n    ...this.lazy_load,\n    auto_unload: () => {\n      this.texs = [];\n    },\n  });\n  this.texs.push(tex);\n  this.loaded_at = 0;\n  if (tex.loaded) {\n    // already completely loaded\n    this.tex_on_load(tex);\n  } else {\n    tex.onLoad(() => {\n      this.loaded_at = engine.frame_timestamp;\n      this.tex_on_load(tex);\n    });\n  }\n};\n\nSprite.prototype.isLazyLoad = function () {\n  return Boolean(this.lazy_load);\n};\n\nSprite.prototype.lazyLoad = function () {\n  if (!this.texs.length) {\n    this.lazyLoadInit();\n  }\n  if (!this.texs[0].loaded) {\n    // Still loading, don't let it be unloaded in the meantime though!\n    for (let ii = 0; ii < this.texs.length; ++ii) {\n      this.texs[ii].last_use = engine.frame_timestamp;\n    }\n    return 0;\n  }\n  if (!this.loaded_at) {\n    return 1;\n  }\n  let dt = engine.frame_timestamp - this.loaded_at;\n  let alpha = dt / 250;\n  if (alpha >= 1) {\n    this.loaded_at = 0;\n    return 1;\n  }\n  return alpha;\n};\n\nlet temp_color = vec4();\n\n// params:\n//   required: x, y\n//   optional: z, w, h, uvs, color, nozoom, pixel_perfect\nSprite.prototype.draw = function (params) {\n  if (params.w === 0 || params.h === 0) {\n    return null;\n  }\n  let color = params.color || this.color;\n  if (this.lazy_load) {\n    let alpha = this.lazyLoad();\n    if (!alpha) {\n      return null;\n    }\n    if (alpha !== 1) {\n      color = v4set(temp_color, color[0], color[1], color[2], color[3] * alpha);\n    }\n  }\n  let w = (params.w || 1) * this.size[0];\n  let h = (params.h || 1) * this.size[1];\n  let uvs = ((params.frame !== undefined) ? this.uidata.rects[params.frame] : params.uvs) || this.uvs;\n  qsp.sprite = this;\n  qsp.x = params.x;\n  qsp.y = params.y;\n  qsp.z = params.z || Z.UI;\n  qsp.w = w;\n  qsp.h = h;\n  qsp.rot = params.rot;\n  qsp.uvs = uvs;\n  qsp.color_ul = color;\n  qsp.color_ll = color;\n  qsp.color_lr = color;\n  qsp.color_ur = color;\n  qsp.shader = params.shader || this.shader;\n  qsp.shader_params = params.shader_params;\n  qsp.nozoom = params.nozoom;\n  qsp.pixel_perfect = params.pixel_perfect;\n  qsp.blend = params.blend;\n  return queuesprite4colorObj(qsp);\n};\n\nSprite.prototype.drawDualTint = function (params) {\n  params.shader = sprite_dual_fshader;\n  params.shader_params = {\n    color1: params.color1,\n  };\n  return this.draw(params);\n};\n\nlet temp_color_ul = vec4();\nlet temp_color_ll = vec4();\nlet temp_color_ur = vec4();\nlet temp_color_lr = vec4();\nSprite.prototype.draw4Color = function (params) {\n  if (params.w === 0 || params.h === 0) {\n    return null;\n  }\n  qsp.color_ul = params.color_ul;\n  qsp.color_ll = params.color_ll;\n  qsp.color_lr = params.color_lr;\n  qsp.color_ur = params.color_ur;\n  if (this.lazy_load) {\n    let alpha = this.lazyLoad();\n    if (!alpha) {\n      return null;\n    }\n    if (alpha !== 1) {\n      qsp.color_ul = v4set(temp_color_ul, qsp.color_ul[0], qsp.color_ul[1], qsp.color_ul[2], qsp.color_ul[3] * alpha);\n      qsp.color_ll = v4set(temp_color_ll, qsp.color_ll[0], qsp.color_ll[1], qsp.color_ll[2], qsp.color_ll[3] * alpha);\n      qsp.color_ur = v4set(temp_color_ur, qsp.color_ur[0], qsp.color_ur[1], qsp.color_ur[2], qsp.color_ur[3] * alpha);\n      qsp.color_lr = v4set(temp_color_lr, qsp.color_lr[0], qsp.color_lr[1], qsp.color_lr[2], qsp.color_lr[3] * alpha);\n    }\n  }\n  let w = (params.w || 1) * this.size[0];\n  let h = (params.h || 1) * this.size[1];\n  let uvs = (typeof params.frame === 'number') ? this.uidata.rects[params.frame] : (params.uvs || this.uvs);\n  qsp.sprite = this;\n  qsp.x = params.x;\n  qsp.y = params.y;\n  qsp.z = params.z || Z.UI;\n  qsp.w = w;\n  qsp.h = h;\n  qsp.rot = params.rot;\n  qsp.uvs = uvs;\n  qsp.shader = params.shader || this.shader;\n  qsp.shader_params = params.shader_params;\n  qsp.nozoom = params.nozoom;\n  qsp.pixel_perfect = params.pixel_perfect;\n  qsp.blend = params.blend;\n  return queuesprite4colorObj(qsp);\n};\n\nSprite.prototype.draw3D = function (params) {\n  // Note: ignoring this.size[] for now for simplicity, is this useful?\n  // let w = (params.size[0] || 1) * this.size[0];\n  // let h = (params.size[1] || 1) * this.size[1];\n  if (typeof params.frame === 'number') {\n    params.uvs = this.uidata.rects[params.frame];\n  } else if (!params.uvs) {\n    params.uvs = this.uvs;\n  }\n  dynGeomQueueSprite(this, params);\n};\n\n\nexport function spriteCreate(params) {\n  return new Sprite(params);\n}\n\nexport function spriteStartup() {\n  geom_stats = geom.stats;\n  clip_space[2] = -1;\n  clip_space[3] = 1;\n  sprite_vshader = shaderCreate('shaders/sprite.vp');\n  sprite_fshader = shaderCreate('shaders/sprite.fp');\n  sprite_dual_fshader = shaderCreate('shaders/sprite_dual.fp');\n  shadersPrelink(sprite_vshader, sprite_fshader);\n  shadersPrelink(sprite_vshader, sprite_dual_fshader);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport assert from 'assert';\nimport {\n  externalUsersAutoLoginFallbackProvider,\n  externalUsersAutoLoginProvider,\n  externalUsersCurrentUser,\n  externalUsersEmailPassLoginProvider,\n  externalUsersEnabled,\n  externalUsersLogIn,\n  externalUsersLogOut,\n  externalUsersSendEmailConfirmation,\n} from 'glov/client/external_users_client';\nimport {\n  chunkedReceiverFinish,\n  chunkedReceiverFreeFile,\n  chunkedReceiverGetFile,\n  chunkedReceiverInit,\n  chunkedReceiverOnChunk,\n  chunkedReceiverStart,\n} from 'glov/common/chunked_send';\nimport * as dot_prop from 'glov/common/dot-prop';\nimport { ERR_NO_USER_ID } from 'glov/common/external_users_common';\nimport * as md5 from 'glov/common/md5';\nimport { isPacket } from 'glov/common/packet';\nimport { perfCounterAdd } from 'glov/common/perfcounters';\nimport * as EventEmitter from 'glov/common/tiny-events';\nimport * as util from 'glov/common/util';\nimport { cloneShallow } from 'glov/common/util';\nimport { platformParameterGet } from './client_config';\nimport * as local_storage from './local_storage';\nimport { netDisconnected, netDisconnectedRaw } from './net';\nimport * as walltime from './walltime';\n\n// relevant events:\n//   .on('channel_data', cb(data [, mod_key, mod_value]));\n\nfunction ClientChannelWorker(subs, channel_id, base_handlers, base_event_listeners) {\n  EventEmitter.call(this);\n  this.subs = subs;\n  this.channel_id = channel_id;\n  let m = channel_id.match(/^([^.]*)\\.(.*)$/);\n  assert(m);\n  this.channel_type = m[1];\n  this.channel_subid = m[2];\n  this.subscriptions = 0;\n  this.subscribe_failed = false;\n  this.got_subscribe = false;\n  this.immediate_subscribe = 0;\n  this.channel_data_ver = 0; // for polling for changes\n  this.handlers = Object.create(base_handlers);\n  this.base_event_listeners = base_event_listeners;\n  this.data = {};\n}\nutil.inherits(ClientChannelWorker, EventEmitter);\n\nClientChannelWorker.prototype.getChannelID = function () {\n  return this.channel_id;\n};\n\nClientChannelWorker.prototype.emit = function (event) {\n  // Using `arguments` instead of rest params because Babel is generating pretty\n  //   bloated code and this is a hot path.\n  // eslint-disable-next-line prefer-rest-params\n  let args = arguments;\n  EventEmitter.prototype.emit.apply(this, args);\n  if (this.base_event_listeners) {\n    let listeners = this.base_event_listeners[event];\n    if (listeners) {\n      for (let ii = 0; ii < listeners.length; ++ii) {\n        listeners[ii].apply(this, Array.prototype.slice.call(args, 1));\n      }\n    }\n  }\n};\n\n// cb(data)\nClientChannelWorker.prototype.onSubscribe = function (cb) {\n  assert(this.subscriptions || this.autosubscribed);\n  this.on('subscribe', cb);\n  if (this.got_subscribe) {\n    cb(this.data);\n  }\n};\n\n// cb(data)\nClientChannelWorker.prototype.onceSubscribe = function (cb) {\n  assert(this.subscriptions || this.autosubscribed);\n  if (this.got_subscribe) {\n    cb(this.data);\n  } else {\n    this.once('subscribe', cb);\n  }\n};\n\nClientChannelWorker.prototype.numSubscriptions = function () {\n  return this.subscriptions;\n};\n\nClientChannelWorker.prototype.isFullySubscribed = function () {\n  return this.got_subscribe;\n};\n\nClientChannelWorker.prototype.handleChannelData = function (data, resp_func) {\n  console.log(`got channel_data(${this.channel_id}):  ${JSON.stringify(data)}`);\n  this.data = data;\n  ++this.channel_data_ver;\n  this.emit('channel_data', this.data);\n  this.got_subscribe = true;\n  this.emit('subscribe', this.data);\n\n  // Get command list upon first connect\n  let channel_type = this.channel_id.split('.')[0];\n  let cmd_list = this.subs.cmds_fetched_by_type;\n  if (cmd_list && !cmd_list[channel_type]) {\n    cmd_list[channel_type] = true;\n    this.send('cmdparse', 'cmd_list', (err, resp) => {\n      if (err) { // already unsubscribed?\n        console.error(`Error getting cmd_list for ${channel_type}`);\n        delete cmd_list[channel_type];\n      } else {\n        this.subs.cmd_parse.addServerCommands(resp);\n      }\n    });\n  }\n\n  resp_func();\n};\n\nClientChannelWorker.prototype.handleApplyChannelData = function (data, resp_func) {\n  // already logged in handleChannelMessage\n  // if (!data.q) {\n  //   console.log(`got channel data mod: ${JSON.stringify(data)}`);\n  // }\n  if (data.value === undefined) {\n    dot_prop.delete(this.data, data.key);\n  } else {\n    dot_prop.set(this.data, data.key, data.value);\n  }\n  ++this.channel_data_ver;\n  this.emit('channel_data', this.data, data.key, data.value);\n  resp_func();\n};\n\nClientChannelWorker.prototype.handleBatchSet = function (data, resp_func) {\n  for (let ii = 0; ii < data.length; ++ii) {\n    let [key, value] = data[ii];\n    if (value === undefined) {\n      dot_prop.delete(this.data.public, key);\n    } else {\n      dot_prop.set(this.data.public, key, value);\n    }\n    // Question: Should this just be one event at the end?\n    ++this.channel_data_ver;\n    this.emit('channel_data', this.data, `public.${key}`, value);\n  }\n  resp_func();\n};\n\nClientChannelWorker.prototype.getChannelData = function (key, default_value) {\n  return dot_prop.get(this.data, key, default_value);\n};\n\nClientChannelWorker.prototype.predictSetChannelData = function (key, value) {\n  dot_prop.set(this.data, key, value);\n};\n\nClientChannelWorker.prototype.setChannelData = function (key, value, skip_predict, resp_func) {\n  if (!skip_predict) {\n    dot_prop.set(this.data, key, value);\n  }\n  let q = value && value.q || undefined;\n  let pak = this.subs.client.pak('set_channel_data', `${this.channel_type}.set_channel_data`);\n  pak.writeAnsiString(this.channel_id);\n  pak.writeBool(q);\n  pak.writeAnsiString(key);\n  pak.writeJSON(value);\n  pak.send(resp_func);\n};\n\nClientChannelWorker.prototype.removeMsgHandler = function (msg, cb) {\n  assert(this.handlers[msg] === cb);\n  delete this.handlers[msg];\n};\n\nClientChannelWorker.prototype.onMsg = function (msg, cb) {\n  assert(!this.handlers[msg] || this.handlers[msg] === cb);\n  this.handlers[msg] = cb;\n};\n\nClientChannelWorker.prototype.pak = function (msg) {\n  let pak = this.subs.client.pak('channel_msg', `cm:${this.channel_type}.${msg}`);\n  pak.writeAnsiString(this.channel_id);\n  pak.writeAnsiString(msg);\n  // pak.writeInt(flags);\n  return pak;\n};\n\nClientChannelWorker.prototype.send = function (msg, data, resp_func, old_fourth) {\n  assert(!resp_func || typeof resp_func === 'function');\n  assert(!old_fourth);\n  this.subs.client.send('channel_msg', {\n    channel_id: this.channel_id,\n    msg, data,\n  }, `cm:${this.channel_type}.${msg}`, resp_func);\n};\n\nClientChannelWorker.prototype.cmdParse = function (cmd, resp_func) {\n  this.send('cmdparse', cmd, resp_func);\n};\n\nClientChannelWorker.prototype.unsubscribe = function () {\n  this.subs.unsubscribe(this.channel_id);\n};\n\nfunction SubscriptionManager(client, cmd_parse) {\n  EventEmitter.call(this);\n  this.client = client;\n  this.channels = {};\n  this.logged_in = false;\n  this.login_response_data = null;\n  this.login_credentials = null;\n  this.logged_in_email = null;\n  this.logged_in_username = null;\n  this.logged_in_display_name = null;\n  this.was_logged_in = false;\n  this.logging_in = false;\n  this.logging_out = false;\n  this.auto_create_user = false;\n  this.allow_anon = false;\n  this.no_auto_login = false;\n  this.auto_login_error = undefined;\n  this.cmd_parse = cmd_parse;\n  if (cmd_parse) {\n    this.cmds_fetched_by_type = {};\n  }\n  this.base_handlers = {};\n  this.channel_handlers = {}; // channel type -> msg -> handler\n  this.channel_event_listeners = {}; // channel type -> event -> array of listeners\n  this.quiet_messages = Object.create(null);\n\n  this.first_connect = true;\n  this.server_time = 0;\n  this.server_time_interp = 0;\n  this.cack_data = {};\n  client.onMsg('connect', this.handleConnect.bind(this));\n  client.onMsg('disconnect', this.handleDisconnect.bind(this));\n  client.onMsg('channel_msg', this.handleChannelMessage.bind(this));\n  client.onMsg('server_time', this.handleServerTime.bind(this));\n  client.onMsg('chat_broadcast', this.handleChatBroadcast.bind(this));\n  client.onMsg('restarting', this.handleRestarting.bind(this));\n  if (cmd_parse) {\n    client.onMsg('csr_to_client', this.handleCSRToClient.bind(this));\n  }\n  this.chunked = null;\n  client.onMsg('upload_start', this.handleUploadStart.bind(this));\n  client.onMsg('upload_chunk', this.handleUploadChunk.bind(this));\n  client.onMsg('upload_finish', this.handleUploadFinish.bind(this));\n  // Add handlers for all channel types\n  this.onChannelMsg(null, 'channel_data', ClientChannelWorker.prototype.handleChannelData);\n  this.onChannelMsg(null, 'apply_channel_data', ClientChannelWorker.prototype.handleApplyChannelData);\n  this.onChannelMsg(null, 'batch_set', ClientChannelWorker.prototype.handleBatchSet);\n}\nutil.inherits(SubscriptionManager, EventEmitter);\n\nSubscriptionManager.prototype.onceConnected = function (cb) {\n  if (this.client.connected && this.client.socket.readyState === 1) {\n    return void cb();\n  }\n  this.once('connect', cb);\n};\n\nSubscriptionManager.prototype.getBaseHandlers = function (channel_type) {\n  let handlers = this.channel_handlers[channel_type];\n  if (!handlers) {\n    handlers = this.channel_handlers[channel_type] = Object.create(this.base_handlers);\n  }\n  return handlers;\n};\n\nSubscriptionManager.prototype.onChannelMsg = function (channel_type, msg, cb) {\n  let handlers = channel_type ? this.getBaseHandlers(channel_type) : this.base_handlers;\n  assert(!handlers[msg]);\n  handlers[msg] = cb;\n};\n\nSubscriptionManager.prototype.onChannelEvent = function (channel_type, event, cb) {\n  let listeners = this.channel_event_listeners[channel_type];\n  if (!listeners) {\n    listeners = this.channel_event_listeners[channel_type] = {};\n  }\n  if (!listeners[event]) {\n    listeners[event] = [];\n  }\n  listeners[event].push(cb);\n};\n\nSubscriptionManager.prototype.handleChatBroadcast = function (data) {\n  console.error(`[${data.src}] ${data.msg}`);\n  this.emit('chat_broadcast', data);\n};\n\nSubscriptionManager.prototype.handleRestarting = function (data) {\n  this.restarting = data;\n  this.emit('restarting', data);\n};\n\nSubscriptionManager.prototype.handleDisconnect = function (data) {\n  this.emit('disconnect', data);\n};\n\nSubscriptionManager.prototype.sendResubscribe = function () {\n  assert(!this.logging_in);\n  assert(this.need_resub);\n  if (netDisconnectedRaw()) {\n    // Will re-send upon reconnect\n    return;\n  }\n  // (re-)subscribe to all channels\n  for (let channel_id in this.channels) {\n    let channel = this.channels[channel_id];\n    if (channel.subscriptions) {\n      this.client.send('subscribe', channel_id, null, function (err) {\n        if (err) {\n          channel.subscribe_failed = true;\n          console.error(`Error subscribing to ${channel_id}: ${err}`);\n          channel.emit('subscribe_fail', err);\n        }\n      });\n    }\n  }\n  this.emit('connect', this.need_resub.reconnect);\n  this.need_resub = null;\n};\n\nSubscriptionManager.prototype.getCackAppData = function () {\n  return this.cack_data?.app_data || null;\n};\n\nSubscriptionManager.prototype.handleConnect = function (data) {\n  let reconnect = false;\n  if (this.first_connect) {\n    this.first_connect = false;\n  } else {\n    reconnect = true;\n  }\n  this.need_resub = { reconnect };\n  this.restarting = Boolean(data.restarting);\n  this.cack_data = data;\n  walltime.sync(data.time);\n\n  if (netDisconnectedRaw()) {\n    // we got disconnected while trying to log in, we'll retry after reconnecting\n    return;\n  }\n\n  if (this.logging_in) {\n    // already have a login in-flight, it should error before we try again\n  } else if (this.was_logged_in) {\n    // Try to re-connect to existing login\n    this.loginRetry((err) => {\n      if (err && err === 'ERR_FAILALL_DISCONNECT') {\n        // we got disconnected while trying to log in, we'll retry after reconnecting\n      } else if (err) {\n        this.auto_login_error = err;\n      }\n    });\n  } else if (!this.no_auto_login) {\n    let auto_login_provider = externalUsersAutoLoginProvider(); // something like FBInstant - always auto logged in\n    let saved_provider;\n    if (auto_login_provider && externalUsersEnabled(auto_login_provider)) {\n      // Try auto-login but ignore any error\n      this.loginExternal({ provider: auto_login_provider }, (err) => {\n        if (err === ERR_NO_USER_ID && externalUsersAutoLoginFallbackProvider()) {\n          // Login was validated, but no user id exists, and was not auto-created,\n          //   send the credentials to the fallback provider to auto-create a user.\n          this.loginExternal({\n            provider: externalUsersAutoLoginFallbackProvider(),\n            external_login_data: cloneShallow(this.login_credentials.external_login_data),\n            creation_display_name: this.login_credentials.creation_display_name,\n          }, (err) => {\n            this.auto_login_error = err;\n          });\n          return;\n        }\n        this.auto_login_error = err;\n      });\n    } else if (local_storage.get('name') && local_storage.get('password')) {\n      this.login(local_storage.get('name'), local_storage.get('password'), (err) => {\n        this.auto_login_error = err;\n      });\n    } else if ((saved_provider = local_storage.get('login_external'))) {\n      let credentials = { provider: saved_provider };\n      this.loginInternal(credentials, (err) => {\n        if (err) {\n          this.auto_login_error = err;\n          // if the server returns an error log out\n          externalUsersLogOut(saved_provider);\n        }\n      });\n    }\n  }\n\n  // If logging in, will happen later; if disconnected, maybe have already triggered as an error\n  if (!this.logging_in && this.need_resub) {\n    this.sendResubscribe();\n  }\n\n  this.fetchCmds();\n};\n\nSubscriptionManager.prototype.fetchCmds = function () {\n  let channel_type = 'client';\n  let cmd_list = this.cmds_fetched_by_type;\n  if (cmd_list && !cmd_list[channel_type]) {\n    cmd_list[channel_type] = true;\n    this.client.send('cmd_parse_list_client', null, null, (err, resp) => {\n      if (!err) {\n        this.cmd_parse.addServerCommands(resp);\n      }\n    });\n  }\n};\n\nSubscriptionManager.prototype.quietMessagesSet = function (list) {\n  for (let ii = 0; ii < list.length; ++ii) {\n    this.quiet_messages[list[ii]] = true;\n  }\n};\n\nSubscriptionManager.prototype.quietMessage = function (msg, payload) {\n  return /*msg === 'set_user' && payload && payload.key === 'pos' || */this.quiet_messages[msg];\n};\n\nSubscriptionManager.prototype.handleChannelMessage = function (pak, resp_func) {\n  assert(isPacket(pak));\n  let channel_id = pak.readAnsiString();\n  let msg = pak.readAnsiString();\n  let is_packet = pak.readBool();\n  let data = is_packet ? pak : pak.readJSON();\n  if (!this.quietMessage(msg) && (!data || !data.q)) {\n    let debug_msg;\n    if (!is_packet) {\n      debug_msg = JSON.stringify(data);\n    } else if (typeof data.contents === 'function') {\n      debug_msg = data.contents();\n    } else {\n      debug_msg = '(pak)';\n    }\n    console.log(`got channel_msg(${channel_id}) ${msg}: ${debug_msg}`);\n  }\n  let channel = this.getChannel(channel_id);\n  let handler = channel.handlers[msg];\n  if (!handler) {\n    console.error(`no handler for channel_msg(${channel_id}) ${msg}: ${JSON.stringify(data)}`);\n    return;\n  }\n  let msg_name = `${channel_id.split('.')[0]}.${msg}`;\n  perfCounterAdd(`cm.${msg_name}`);\n  profilerStart(msg_name);\n  handler.call(channel, data, resp_func);\n  profilerStop(msg_name);\n};\n\nSubscriptionManager.prototype.handleServerTime = function (pak) {\n  this.server_time = pak.readInt();\n  if (this.server_time < this.server_time_interp && this.server_time > this.server_time_interp - 250) {\n    // slight time travel backwards, this one packet must have been delayed,\n    // since we once got a packet quicker. Just ignore this, interpolate from\n    // where we were before\n    // TODO: If the server had a short stall (less than 250ms) we might be\n    // ahead from now on!  Slowly interp back to the specified time\n    // (run speed at 90% until it matches?, same thing for catching up to\n    // small jumps ahead)\n  } else {\n    this.server_time_interp = this.server_time;\n  }\n  walltime.sync(pak.readInt());\n};\n\n// DEPRECATED: Not actually a useful unit of time, if your client worker is on a\n//   different process than a particular game worker.\nSubscriptionManager.prototype.getServerTime = function () {\n  // Interpolated server time as of start of last tick\n  return this.server_time_interp;\n};\n\nSubscriptionManager.prototype.tick = function (dt) {\n  this.server_time_interp += dt;\n  if (!netDisconnected()) {\n    // do not tick immediate subscriptions while disconnected *or* while logging in\n    //   as they will not be re-established (upon a disconnection) until *after*\n    //   login has finished.\n    for (let channel_id in this.channels) {\n      let channel = this.channels[channel_id];\n      if (channel.immediate_subscribe) {\n        if (dt >= channel.immediate_subscribe) {\n          channel.immediate_subscribe = 0;\n          this.unsubscribe(channel_id);\n        } else {\n          channel.immediate_subscribe -= dt;\n        }\n      }\n    }\n  }\n};\n\n\nSubscriptionManager.prototype.onUploadProgress = function (mime_type, cb) {\n  if (!this.upload_progress_cbs) {\n    this.upload_progress_cbs = {};\n  }\n  assert(!this.upload_progress_cbs[mime_type]);\n  this.upload_progress_cbs[mime_type] = cb;\n  if (!this.chunked) {\n    this.chunked = chunkedReceiverInit('client_receive', Infinity);\n  }\n  if (!this.chunked.on_progress) {\n    this.chunked.on_progress = (progress, total, type) => {\n      if (this.upload_progress_cbs[type]) {\n        this.upload_progress_cbs[type](progress, total);\n      }\n    };\n  }\n};\n\nSubscriptionManager.prototype.handleUploadStart = function (pak, resp_func) {\n  if (!this.chunked) {\n    this.chunked = chunkedReceiverInit('client_receive', Infinity);\n  }\n  chunkedReceiverStart(this.chunked, pak, resp_func);\n};\n\nSubscriptionManager.prototype.handleUploadChunk = function (pak, resp_func) {\n  chunkedReceiverOnChunk(this.chunked, pak, resp_func);\n};\n\nSubscriptionManager.prototype.handleUploadFinish = function (pak, resp_func) {\n  chunkedReceiverFinish(this.chunked, pak, resp_func);\n};\n\nSubscriptionManager.prototype.uploadGetFile = function (file_id) {\n  return chunkedReceiverGetFile(this.chunked, file_id);\n};\n\nSubscriptionManager.prototype.uploadFreeFile = function (file_data) {\n  return chunkedReceiverFreeFile(file_data);\n};\n\n\nSubscriptionManager.prototype.subscribe = function (channel_id) {\n  this.getChannel(channel_id, true);\n};\n\nSubscriptionManager.prototype.getChannel = function (channel_id, do_subscribe) {\n  let channel = this.channels[channel_id];\n  if (!channel) {\n    let channel_type = channel_id.split('.')[0];\n    let handlers = this.getBaseHandlers(channel_type);\n    let event_listeners = this.channel_event_listeners[channel_type];\n    channel = this.channels[channel_id] = new ClientChannelWorker(this, channel_id, handlers, event_listeners);\n  }\n  if (do_subscribe) {\n    channel.subscriptions++;\n    if (!netDisconnectedRaw() && channel.subscriptions === 1) {\n      channel.subscribe_failed = false;\n      this.client.send('subscribe', channel_id, null, function (err) {\n        if (err) {\n          channel.subscribe_failed = true;\n          console.error(`Error subscribing to ${channel_id}: ${err}`);\n          channel.emit('subscribe_fail', err);\n        }\n      });\n    }\n  }\n  return channel;\n};\n\nSubscriptionManager.prototype.getUserId = function () {\n  return this.loggedIn();\n};\n\nSubscriptionManager.prototype.getDisplayName = function () {\n  return this.logged_in_display_name;\n};\n\nSubscriptionManager.prototype.getLoginProvider = function () {\n  return this.login_provider;\n};\n\nSubscriptionManager.prototype.getMyUserChannel = function () {\n  let user_id = this.loggedIn();\n  if (!user_id) {\n    return null;\n  }\n  let channel = this.getChannel(`user.${user_id}`);\n  if (!this.logging_out) {\n    channel.autosubscribed = true;\n  }\n  return channel;\n};\n\nSubscriptionManager.prototype.unsubscribe = function (channel_id) {\n  let channel = this.channels[channel_id];\n  assert(channel);\n  assert(channel.subscriptions);\n  channel.subscriptions--;\n  if (!channel.subscriptions && !channel.autosubscribed) {\n    channel.got_subscribe = false;\n    channel.emit('unsubscribe');\n  }\n  if (!netDisconnectedRaw() && !channel.subscriptions && !channel.subscribe_failed) {\n    this.client.send('unsubscribe', channel_id);\n  }\n};\n\n// Immediate-mode channel subscription; will unsubscribe automatically on logout\n//   or if not accessed for some time\nSubscriptionManager.prototype.getChannelImmediate = function (channel_id, timeout) {\n  timeout = timeout || 60000;\n  let channel = this.getChannel(channel_id);\n  if (!channel.immediate_subscribe) {\n    this.subscribe(channel_id);\n  }\n  channel.immediate_subscribe = timeout;\n  return channel;\n};\n\nSubscriptionManager.prototype.onLogin = function (cb) {\n  this.on('login', cb);\n  if (this.logged_in) {\n    return void cb();\n  }\n};\n\nSubscriptionManager.prototype.onceLoggedIn = function (cb) {\n  if (this.logged_in) {\n    return void cb();\n  }\n  this.once('login', cb);\n};\n\nSubscriptionManager.prototype.loggedIn = function () {\n  return this.logging_out ? null : this.logged_in ? this.logged_in_username || 'missing_name' : null;\n};\n\nSubscriptionManager.prototype.userOnChannelData = function (expected_user_id, data, key, value) {\n  if (expected_user_id !== this.getUserId()) {\n    // must have logged out\n    return;\n  }\n  if (key === 'public.display_name') {\n    this.logged_in_display_name = value;\n  }\n};\n\nSubscriptionManager.prototype.handleLoginResponse = function (resp_func, err, resp) {\n  this.logging_in = false;\n  let evt = 'login_fail';\n  if (!err) {\n    evt = 'login';\n    this.login_response_data = resp;\n    this.logged_in_email = resp.email || null;\n    this.logged_in_username = resp.user_id;\n    this.logged_in_display_name = resp.display_name;\n    this.logged_in = true;\n    this.was_logged_in = true;\n    let user_channel = this.getMyUserChannel(); // auto-subscribe to it\n    user_channel.onceSubscribe(() => {\n      if (!this.did_master_subscribe) {\n        // For cmd_parse access\n        let perms = user_channel.getChannelData('public.permissions', {});\n        if (perms.sysadmin) {\n          this.subscribe('master.master');\n        }\n        if (perms.sysadmin || perms.csr) {\n          this.did_master_subscribe = true;\n          this.subscribe('global.global');\n        }\n      }\n    });\n\n    if (!user_channel.subs_added_user_on_channel_data) {\n      user_channel.on('channel_data', this.userOnChannelData.bind(this, this.logged_in_username));\n      user_channel.subs_added_user_on_channel_data = true;\n    }\n    if (this.need_resub) {\n      this.sendResubscribe();\n    }\n\n    if (resp.hash && this.login_credentials?.password) {\n      let plaintext_password = this.login_credentials.password;\n      // If we didn't log in with password this time, must be a cookie/etc\n      if (plaintext_password) {\n        let hashed_salted_password = md5(md5(this.logged_in_username.toLowerCase()) + plaintext_password);\n        let onetime_hash = md5(this.client.secret + hashed_salted_password);\n        if (onetime_hash !== resp.hash) {\n          this.getMyUserChannel().send('set_external_password', { hash: hashed_salted_password });\n        }\n      }\n    }\n  }\n  if (this.need_resub) {\n    this.sendResubscribe();\n  }\n  this.emit(evt, err);\n  resp_func(err);\n};\n\nSubscriptionManager.prototype.loginRetry = function (resp_func) {\n  this.loginInternal(this.login_credentials, (err) => {\n    this.auto_login_error = err;\n    if (err === ERR_NO_USER_ID && externalUsersAutoLoginFallbackProvider() &&\n      this.login_credentials.provider === externalUsersAutoLoginProvider() &&\n      externalUsersEnabled(externalUsersAutoLoginProvider())\n    ) {\n      // Login was validated, but no user id exists, and was not auto-created,\n      //   send the credentials to the fallback provider to auto-create a user.\n      this.loginExternal({\n        provider: externalUsersAutoLoginFallbackProvider(),\n        external_login_data: cloneShallow(this.login_credentials.external_login_data),\n        creation_display_name: this.login_credentials.creation_display_name,\n      }, (err) => {\n        this.auto_login_error = err;\n        resp_func(err);\n      });\n    } else {\n      resp_func(err);\n    }\n  });\n};\n\nSubscriptionManager.prototype.getLastLoginCredentials = function () {\n  return this.login_credentials;\n};\n\nSubscriptionManager.prototype.loginInternalExternalUsers = function (provider, login_credentials, resp_func) {\n  const {\n    email, password, do_creation, creation_display_name, external_login_data\n  } = login_credentials;\n  const login_options = {\n    user_initiated: true,\n    do_creation,\n    creation_display_name,\n    email,\n    password,\n    external_login_data\n  };\n  return void externalUsersLogIn(provider, login_options, (err, login_data) => {\n    this.login_credentials.external_login_data = login_data;\n\n    if (err) {\n      local_storage.set('login_external', this.login_provider = undefined);\n      this.serverLog(`authentication_failed_${provider}`, {\n        creation_mode: do_creation,\n        email,\n        passlen: password && password.length,\n        external_data: Boolean(external_login_data),\n        err,\n      });\n      return void this.handleLoginResponse(resp_func, err);\n    }\n\n    local_storage.set('login_external', this.login_provider = provider);\n    local_storage.set('password', undefined);\n\n    externalUsersCurrentUser(provider, (err, user_info) => {\n      if (err) {\n        // Ignore the error, display_name is optional\n      }\n      if (netDisconnectedRaw()) {\n        return void this.handleLoginResponse(resp_func, 'ERR_DISCONNECTED');\n      }\n\n      let display_name = user_info?.name || '';\n      if (platformParameterGet('random_creation_name')) {\n        display_name = ''; // Server side will generate randomised name for empty string\n      }\n\n      let request_data = {\n        provider,\n        validation_data: login_data.validation_data,\n        display_name: display_name,\n      };\n      if (user_info?.name) {\n        this.login_credentials.creation_display_name = user_info.name;\n      }\n      this.client.send('login_external', request_data, null, this.handleLoginResponse.bind(this, resp_func));\n    });\n  });\n};\n\nSubscriptionManager.prototype.sessionHashedPassword = function () {\n  assert(this.login_credentials.password);\n  return md5(this.client.secret + this.login_credentials.password);\n};\n\nSubscriptionManager.prototype.loginInternal = function (login_credentials, resp_func) {\n  if (this.logging_in) {\n    return void resp_func('Login already in progress');\n  }\n  this.auto_login_error = null;\n  this.logging_in = true;\n  this.logged_in = false;\n  this.login_credentials = login_credentials;\n  if (login_credentials.do_creation) {\n    // Only used once, never use upon reconnect, auto-login, etc\n    this.login_credentials = cloneShallow(login_credentials);\n    delete this.login_credentials.do_creation;\n  }\n\n  const { provider } = login_credentials;\n  if (provider) {\n    this.loginInternalExternalUsers(provider, login_credentials, resp_func);\n  } else {\n    const {\n      user_id,\n    } = login_credentials;\n    this.client.send('login', {\n      user_id,\n      password: this.sessionHashedPassword(),\n    }, null, this.handleLoginResponse.bind(this, resp_func));\n  }\n};\n\nSubscriptionManager.prototype.userCreateInternal = function (params, resp_func) {\n  if (this.logging_in) {\n    return resp_func('Login already in progress');\n  }\n  this.logging_in = true;\n  this.logged_in = false;\n  return this.client.send('user_create', params, null, this.handleLoginResponse.bind(this, resp_func));\n};\n\nfunction hashedPassword(user_id, password) {\n  let split = password.split('$$');\n  if (split.length === 2 && split[0] === 'prehashed' && split[1].length === 32) {\n    password = split[1];\n  } else {\n    password = md5(md5(user_id.toLowerCase()) + password);\n  }\n  return password;\n}\n\n\nSubscriptionManager.prototype.login = function (username, password, resp_func) {\n  username = (username || '').trim();\n  if (!username) {\n    return resp_func('Missing username');\n  }\n  password = (password || '').trim();\n  if (!password) {\n    return resp_func('Missing password');\n  }\n  let hashed_password = hashedPassword(username, password);\n  if (hashed_password !== password) {\n    local_storage.set('password', `prehashed$$${hashed_password}`);\n  }\n  let credentials = { user_id: username, password: hashed_password };\n  if (!this.auto_create_user) {\n    // Just return result directly\n    return this.loginInternal(credentials, resp_func);\n  }\n  return this.loginInternal(credentials, (err, data) => {\n    if (!err || err !== 'ERR_USER_NOT_FOUND') {\n      return void resp_func(err, data);\n    }\n    // user not found, auto-create\n    this.userCreate({\n      user_id: username,\n      password,\n      password_confirm: password,\n      email: 'autocreate@glovjs.org',\n    }, resp_func);\n  });\n};\n\nSubscriptionManager.prototype.loginEmailPass = function (credentials, resp_func) {\n  credentials = {\n    email: credentials.email,\n    password: credentials.password,\n    provider: externalUsersEmailPassLoginProvider(),\n    do_creation: credentials.do_creation,\n    creation_display_name: credentials.creation_display_name,\n  };\n  return this.loginInternal(credentials, resp_func);\n};\n\nSubscriptionManager.prototype.loginExternal = function (credentials, resp_func) {\n  return this.loginInternal(cloneShallow(credentials), resp_func);\n};\n\nSubscriptionManager.prototype.sendActivationEmail = function (email, resp_func) {\n  return externalUsersSendEmailConfirmation(email, resp_func);\n};\n\nSubscriptionManager.prototype.userCreate = function (params, resp_func) {\n  params.user_id = (params.user_id || '').trim();\n  if (!params.user_id) {\n    return resp_func('Missing username');\n  }\n  params.password = (params.password || '').trim();\n  if (!params.password) {\n    return resp_func('Missing password');\n  }\n  params.password_confirm = (params.password_confirm || '').trim();\n  if (!this.auto_create_user && !params.password_confirm) {\n    return resp_func('Missing password confirmation');\n  }\n  params.email = (params.email || '').trim();\n  if (!this.auto_create_user && !params.email) {\n    return resp_func('Missing email');\n  }\n  params.display_name = (params.display_name || '').trim();\n  let hashed_password = hashedPassword(params.user_id, params.password);\n  if (hashed_password !== params.password) {\n    local_storage.set('password', `prehashed$$${hashed_password}`);\n  }\n  let hashed_password_confirm = hashedPassword(params.user_id, params.password_confirm);\n  if (hashed_password !== hashed_password_confirm) {\n    return resp_func('Passwords do not match');\n  }\n  this.login_credentials = { user_id: params.user_id, password: hashed_password };\n  return this.userCreateInternal({\n    display_name: params.display_name || params.user_id,\n    user_id: params.user_id,\n    email: params.email,\n    password: hashed_password,\n  }, resp_func);\n};\n\n\nSubscriptionManager.prototype.logout = function () {\n  assert(this.logged_in);\n  assert(!this.logging_in);\n  assert(!this.logging_out);\n  // Don't know how to gracefully handle logging out with app-level subscriptions\n  //   currently, clean up those we can, assert we have no others\n  if (this.did_master_subscribe) {\n    this.did_master_subscribe = false;\n    let user_channel = this.getMyUserChannel(); // auto-subscribe to it\n    let perms = user_channel && user_channel.getChannelData('public.permissions', {});\n    if (perms && perms.sysadmin) {\n      this.unsubscribe('master.master');\n    }\n    this.unsubscribe('global.global');\n  }\n  this.emit('prelogout');\n  for (let channel_id in this.channels) {\n    let channel = this.channels[channel_id];\n    if (channel.immediate_subscribe) {\n      channel.immediate_subscribe = 0;\n      this.unsubscribe(channel_id);\n    }\n    assert(!channel.subscriptions, `Remaining active subscription for ${channel_id}`);\n    if (channel.autosubscribed) {\n      channel.autosubscribed = false;\n    }\n  }\n\n  this.logging_out = true;\n  this.client.send('logout', null, null, (err) => {\n    this.logging_out = false;\n    if (!err) {\n      local_storage.set('password', undefined);\n      local_storage.set('login_external', this.login_provider = undefined);\n      this.login_response_data = null;\n      this.logged_in = false;\n      this.logged_in_username = null;\n      this.logged_in_display_name = null;\n      this.was_logged_in = false;\n      this.login_credentials = null;\n      this.emit('logout');\n    }\n  });\n};\n\nSubscriptionManager.prototype.getLoginResponseData = function () {\n  return this.login_response_data || {};\n};\n\nSubscriptionManager.prototype.serverLogSetExtraData = function (data) {\n  this.server_log_extra_data = data;\n};\n\nSubscriptionManager.prototype.serverLog = function (type, data) {\n  this.onceConnected(() => {\n    this.client.send('log', { type, data, ...this.server_log_extra_data });\n  });\n};\n\nSubscriptionManager.prototype.sendCmdParse = function (command, resp_func) {\n  this.onceConnected(() => {\n    let pak = this.client.pak('cmd_parse_auto');\n    pak.writeString(command);\n    pak.send(resp_func);\n  });\n};\n\nSubscriptionManager.prototype.handleCSRToClient = function (pak, resp_func) {\n  let cmd = pak.readString();\n  let access = pak.readJSON();\n  this.cmd_parse.handle({ access }, cmd, (err, resp) => {\n    if (err && this.cmd_parse.was_not_found) {\n      // bounce back to server\n      return resp_func(null, { found: 0, err });\n    }\n    return resp_func(err, { found: 1, resp });\n  });\n};\n\nexport function create(client, cmd_parse) {\n  return new SubscriptionManager(client, cmd_parse);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint-env browser */\n\nimport * as assert from 'assert';\nimport { asyncParallel, asyncSeries } from 'glov-async';\nimport {\n  FORMAT_PACK,\n  FORMAT_PNG,\n  TEXPACK_MAGIC,\n} from 'glov/common/texpack_common';\nimport {\n  callEach,\n  callbackify,\n  isPowerOfTwo,\n  nextHighestPowerOfTwo,\n  ridx,\n} from 'glov/common/util';\nimport * as engine from './engine';\nimport { fetch } from './fetch';\nimport { filewatchOn } from './filewatch';\nimport {\n  localStorageGetJSON,\n  localStorageSetJSON,\n} from './local_storage';\nimport { locateAsset } from './locate_asset';\nimport * as settings from './settings';\nimport { shadersSetGLErrorReportDetails } from './shaders';\nimport * as urlhash from './urlhash';\nimport { webFSExists, webFSGetFile } from './webfs';\n\nconst { floor } = Math;\n\nconst TEX_UNLOAD_TIME = 5 * 60 * 1000; // for textures loaded (each frame) with auto_unload: true\n\nconst textures = {};\nlet load_count = 0;\nexport function textureLoadCount() {\n  return load_count;\n}\nlet aniso = 4;\nlet max_aniso = 0;\nlet aniso_enum;\n\nlet default_filter_min;\nlet default_filter_mag;\n\nconst cube_faces = [\n  { target: 'TEXTURE_CUBE_MAP_NEGATIVE_X', pos: [0,1] },\n  { target: 'TEXTURE_CUBE_MAP_POSITIVE_X', pos: [0,0] },\n  { target: 'TEXTURE_CUBE_MAP_NEGATIVE_Y', pos: [1,0] },\n  { target: 'TEXTURE_CUBE_MAP_POSITIVE_Y', pos: [1,1] },\n  { target: 'TEXTURE_CUBE_MAP_NEGATIVE_Z', pos: [2,0] },\n  { target: 'TEXTURE_CUBE_MAP_POSITIVE_Z', pos: [2,1] },\n];\n\nexport const TEXTURE_FORMAT = {\n  R8: { count: 1 },\n  RGB8: { count: 3 },\n  RGBA8: { count: 4 },\n  DEPTH16: { count: 1 },\n  DEPTH24: { count: 1 },\n};\n\nexport function textureDefaultFilters(min, mag) {\n  default_filter_min = min;\n  default_filter_mag = mag;\n}\n\nexport function textureDefaultIsNearest() {\n  return default_filter_mag === gl.NEAREST;\n}\n\nlet bound_unit = null;\nlet bound_tex = [];\n\nlet handle_loading;\nlet handle_error;\n\nlet frame_timestamp;\n\nfunction setUnit(unit) {\n  if (unit !== bound_unit) {\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    bound_unit = unit;\n  }\n}\n\nfunction bindHandle(unit, target, handle) {\n  if (bound_tex[unit] !== handle) {\n    setUnit(unit);\n    gl.bindTexture(target, handle);\n    bound_tex[unit] = handle;\n  }\n}\n\nfunction unbindAll(target) {\n  for (let unit = 0; unit < bound_tex.length; ++unit) {\n    setUnit(unit);\n    gl.bindTexture(target, target === gl.TEXTURE_2D ? handle_loading : null);\n    bound_tex[unit] = null;\n  }\n}\n\nexport function textureGetAll() {\n  return textures;\n}\n\nexport function textureWhite() {\n  return textures.white;\n}\nexport function textureError() {\n  return textures.error;\n}\n\nexport function textureBind(unit, tex) {\n  tex.last_use = frame_timestamp;\n  // May or may not change the unit\n  bindHandle(unit, tex.target, tex.eff_handle);\n}\n\n// hot path inlined for perf\nexport function textureBindArray(texs) {\n  for (let ii = 0; ii < texs.length; ++ii) {\n    let tex = texs[ii];\n    tex.last_use = frame_timestamp;\n    let handle = tex.eff_handle;\n    if (bound_tex[ii] !== handle) {\n      if (ii !== bound_unit) {\n        gl.activeTexture(gl.TEXTURE0 + ii);\n        bound_unit = ii;\n      }\n      gl.bindTexture(tex.target, handle);\n      bound_tex[ii] = handle;\n    }\n  }\n}\n\nexport function textureCmpArray(texsa, texsb) {\n  let d = texsa.length - texsb.length;\n  if (d) {\n    return d;\n  }\n  for (let ii = 0; ii < texsa.length; ++ii) {\n    d = texsa[ii].id - texsb[ii].id;\n    if (d) {\n      return d;\n    }\n  }\n  return 0;\n}\n\nexport function textureIsArrayBound(texs) {\n  for (let ii = 0; ii < texs.length; ++ii) {\n    let tex = texs[ii];\n    let handle = tex.eff_handle;\n    if (bound_tex[ii] !== handle) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function textureResetState() {\n  bound_unit = -1;\n  if (engine.webgl2) {\n    unbindAll(gl.TEXTURE_2D_ARRAY);\n  }\n  unbindAll(gl.TEXTURE_2D);\n  setUnit(0);\n  // Disabling this.  In theory clearing the GL error at the beginning of the frame\n  //   is good for debugging, and shouldn't actually harm anything (possibly stall\n  //   as it's the first GL call of the frame, but theoretically not much more than\n  //   whatever the next GL call would be), however in practice this is adding up\n  //   to a couple ms (when running at /max_fps 1000) in Chrome.  Does not seem to\n  //   have any effect either way under GPU-bound conditions though.\n  // profilerStart('gl.getError()');\n  // gl.getError();\n  // profilerStop('gl.getError()');\n}\n\nexport function textureCname(key) {\n  let idx = key.lastIndexOf('/');\n  if (idx !== -1) {\n    key = key.slice(idx+1);\n  }\n  idx = key.indexOf('.');\n  if (idx !== -1) {\n    key = key.slice(0, idx);\n  }\n  return key.toLowerCase();\n}\n\nlet auto_unload_textures = [];\n\nlet last_id = 0;\nfunction Texture(params) {\n  this.id = ++last_id;\n  this.name = params.name;\n  this.cname = textureCname(this.name); // Note: many loaded textures may have the same `cname`\n  this.loaded = false;\n  this.load_fail = false;\n  this.target = params.target || gl.TEXTURE_2D;\n  this.is_array = this.target === gl.TEXTURE_2D_ARRAY;\n  this.is_cube = this.target === gl.TEXTURE_CUBE_MAP;\n  this.packed_mips = Boolean(params.packed_mips);\n  if (this.packed_mips) {\n    assert(this.is_array); // only path it's supported on currently\n  }\n  this.handle = gl.createTexture();\n  this.eff_handle = handle_loading;\n  this.setSamplerState(params);\n  this.src_width = this.src_height = 1;\n  this.width = this.height = 1;\n  this.nozoom = params.nozoom || false;\n  this.on_load = [];\n  this.gpu_mem = 0;\n  this.soft_error = params.soft_error || false;\n  this.last_use = frame_timestamp;\n  this.auto_unload = params.auto_unload ? [] : null;\n  if (typeof params.auto_unload === 'function') {\n    this.auto_unload.push(params.auto_unload);\n  }\n  if (this.auto_unload) {\n    auto_unload_textures.push(this);\n  }\n  this.load_filter = params.load_filter || null;\n\n  this.format = params.format || TEXTURE_FORMAT.RGBA8;\n\n  if (params.data) {\n    let err = this.updateData(params.width, params.height, params.data);\n    if (err) {\n      shadersSetGLErrorReportDetails();\n      assert(false, `Error loading ${params.name}: ${err}`);\n    }\n  } else {\n    // texture is not valid, do not leave bound\n    unbindAll(this.target);\n    if (params.url) {\n      this.format = TEXTURE_FORMAT.RGBA8;\n      this.url = params.url;\n      this.loadURL(params.url, this.load_filter);\n    }\n  }\n}\n\nTexture.prototype.updateGPUMem = function () {\n  let new_size = this.width * this.height * this.format.count;\n  if (this.mipmaps) {\n    new_size *= 1.5;\n  }\n  let diff = new_size - this.gpu_mem;\n  engine.perf_state.gpu_mem.tex += diff;\n  this.gpu_mem = diff;\n};\n\nfunction bindForced(tex) {\n  let target = tex.target;\n  setUnit(0);\n  bound_tex[0] = null; // Force a re-bind, no matter what\n  bindHandle(0, target, tex.handle);\n}\n\nexport function textureFilterKey(params) {\n  let filter_min = params.filter_min || default_filter_min;\n  let filter_mag = params.filter_mag || default_filter_mag;\n  return filter_min + filter_mag * 10000;\n}\n\nTexture.prototype.setSamplerState = function (params) {\n  let target = this.target;\n  bindForced(this);\n\n  this.filter_min = params.filter_min || default_filter_min;\n  this.filter_mag = params.filter_mag || default_filter_mag;\n  gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, this.filter_min);\n  gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, this.filter_mag);\n  this.wrap_s = params.wrap_s || gl.REPEAT;\n  this.wrap_t = params.wrap_t || gl.REPEAT;\n  gl.texParameteri(target, gl.TEXTURE_WRAP_S, this.wrap_s);\n  gl.texParameteri(target, gl.TEXTURE_WRAP_T, this.wrap_t);\n\n  this.mipmaps = this.filter_min >= 0x2700 && this.filter_min <= 0x2703 || // Probably gl.LINEAR_MIPMAP_LINEAR\n    params.force_mipmaps;\n\n  if (max_aniso) {\n    if (this.mipmaps && params.filter_mag !== gl.NEAREST) {\n      gl.texParameterf(gl.TEXTURE_2D, aniso_enum, aniso);\n    } else {\n      gl.texParameterf(gl.TEXTURE_2D, aniso_enum, 1);\n    }\n  }\n};\n\n// Texture.prototype.generateManualArrayMipmaps = function (img) {\n//   let w = img.width;\n//   let h = img.height;\n//   let num_images = h / w;\n//   // This was already called:\n//   // gl.texImage3D(this.target, 0, this.format.internal_type, w, w,\n//   //   num_images, 0, this.format.internal_type, this.format.gl_type, data);\n\n//   let level = 0;\n//   let canvas = document.createElement('canvas');\n//   let ctx = canvas.getContext('2d');\n//   while (w > 1) {\n//     ++level;\n//     w = max(1, floor(w / 2));\n//     canvas.width = w;\n//     let eff_h = w * num_images;\n//     canvas.height = eff_h;\n//     // TODO: filter here instead of nearest (1px canvas blur on each step would do it?)\n//     ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, w, eff_h);\n//     gl.texImage3D(this.target, level, this.format.internal_type, w, w,\n//       num_images, 0, this.format.internal_type, this.format.gl_type, canvas);\n//   }\n// };\n\n// function countMipLevels(dim) {\n//   let ret = 1;\n//   while (dim > 1) {\n//     ++ret;\n//     dim = floor(dim/2);\n//   }\n//   return ret;\n// }\n\nTexture.prototype.uploadPackedTexArrayWithMips = function uploadPackedTexArrayWithMips(\n  per_mipmap_data, tile_w, num_images, orig_img\n) {\n  let temp_canvas;\n  let level = 0;\n  let last_w = tile_w;\n  while (last_w >= 1) {\n    let img = per_mipmap_data[level];\n    assert(img);\n    gl.texImage3D(this.target, level, this.format.internal_type, last_w, last_w,\n      num_images, 0, this.format.internal_type, this.format.gl_type, level === 0 ? orig_img : img);\n\n    if (gl.getError()) {\n      // Reproducing Samsung fix from below, assumed also needed here\n      temp_canvas = temp_canvas || document.createElement('canvas');\n      temp_canvas.width = last_w;\n      temp_canvas.height = last_w * num_images;\n      let ctx = temp_canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      gl.texImage3D(this.target, level, this.format.internal_type, last_w, last_w,\n        num_images, 0, this.format.internal_type, this.format.gl_type, temp_canvas);\n    }\n\n    level++;\n    last_w = floor(last_w / 2);\n  }\n  assert(!per_mipmap_data[level]);\n};\n\nTexture.prototype.updateData = function updateData(w, h, data, per_mipmap_data) {\n  profilerStart('Texture:updateData');\n  assert(!this.destroyed);\n  bindForced(this);\n  this.last_use = frame_timestamp;\n  this.src_width = w;\n  this.src_height = h;\n  this.width = w;\n  this.height = h;\n  // clear the error flag(s) if there are any\n  for (let ii = 0; ii < 10 && gl.getError(); ++ii) {\n    // Error cleared with gl.getError()\n  }\n  // Resize NP2 if this is not being used for a texture array, and it is not explicitly allowed (non-mipmapped, clamped)\n  let np2 = (!isPowerOfTwo(w) || !isPowerOfTwo(h)) && !this.is_array && !this.is_cube &&\n    !(!this.mipmaps && this.wrap_s === gl.CLAMP_TO_EDGE && this.wrap_t === gl.CLAMP_TO_EDGE);\n  if (np2) {\n    this.width = nextHighestPowerOfTwo(w);\n    this.height = nextHighestPowerOfTwo(h);\n    gl.texImage2D(this.target, 0, this.format.internal_type, this.width, this.height, 0,\n      this.format.internal_type, this.format.gl_type, null);\n  }\n  if (data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n    assert(!per_mipmap_data); // not implemented\n    assert(data.length >= w * h * this.format.count);\n    assert(!this.is_cube);\n    if (this.is_array) {\n      let num_images = h / w; // assume square\n      gl.texImage3D(this.target, 0, this.format.internal_type, w, w,\n        num_images, 0, this.format.internal_type, this.format.gl_type, data);\n    } else if (np2) {\n      // Could do multiple upload thing like below, but smarter, but we really shouldn't be doing this for\n      // in-process generated images!\n      gl.texSubImage2D(this.target, 0, 0, 0, w, h, this.format.internal_type, this.format.gl_type, data);\n    } else {\n      gl.texImage2D(this.target, 0, this.format.internal_type, w, h, 0,\n        this.format.internal_type, this.format.gl_type, data);\n    }\n  } else {\n    // Ensure this is an Image or Canvas\n    if (!data.width) {\n      profilerStop();\n      return `Missing width (${data.width}) (\"${String(data).slice(0, 100)}\")`;\n    }\n    if (this.is_cube) {\n      assert(!per_mipmap_data); // not implemented\n      assert.equal(w * 2, h * 3);\n      let tex_size = h / 2;\n      let canvas = document.createElement('canvas');\n      canvas.width = tex_size;\n      canvas.height = tex_size;\n      let ctx = canvas.getContext('2d');\n      for (let ii = 0; ii < cube_faces.length; ++ii) {\n        let face = cube_faces[ii];\n        ctx.drawImage(data, face.pos[0] * tex_size, face.pos[1] * tex_size, tex_size, tex_size,\n          0, 0, tex_size, tex_size);\n        gl.texImage2D(gl[face.target], 0, this.format.internal_type, this.format.internal_type, this.format.gl_type,\n          canvas);\n      }\n    } else if (this.is_array && per_mipmap_data) {\n      let tile_w = per_mipmap_data[0].width;\n      assert(per_mipmap_data[0].height % tile_w === 0);\n      let num_images = per_mipmap_data[0].height / tile_w;\n\n      this.uploadPackedTexArrayWithMips(per_mipmap_data, tile_w, num_images, data);\n    } else if (this.is_array) {\n      assert(!per_mipmap_data); // not implemented\n      let num_images = h / w;\n      gl.texImage3D(this.target, 0, this.format.internal_type, w, w,\n        num_images, 0, this.format.internal_type, this.format.gl_type, data);\n\n      if (gl.getError()) {\n        // Fix for Samsung devices (Chris's and Galaxy S8 on CrossBrowserTesting)\n        // Also fixes locally on Chrome when using a 8K source texture (was 896x57344),\n        //  perhaps some auto-scaling is going on in the gl.texImage3D call if required?\n        // Try drawing to canvas first\n        let canvas = document.createElement('canvas');\n        canvas.width = w;\n        canvas.height = h;\n        let ctx = canvas.getContext('2d');\n        ctx.drawImage(data, 0, 0);\n        gl.texImage3D(this.target, 0, this.format.internal_type, w, w,\n          num_images, 0, this.format.internal_type, this.format.gl_type, canvas);\n      }\n\n      // if (engine.defines.MIP) {\n      //   this.generateManualArrayMipmaps(data);\n      //   did_mipmaps = true;\n      // }\n\n    } else if (np2) {\n      assert(!per_mipmap_data); // not implemented\n      // Pad up to power of two\n      // Duplicate right and bottom pixel row by sending image 3 times\n      if (w !== this.width) {\n        gl.texSubImage2D(this.target, 0, 1, 0, this.format.internal_type, this.format.gl_type, data);\n      }\n      if (h !== this.height) {\n        gl.texSubImage2D(this.target, 0, 0, 1, this.format.internal_type, this.format.gl_type, data);\n      }\n      gl.texSubImage2D(this.target, 0, 0, 0, this.format.internal_type, this.format.gl_type, data);\n    } else {\n      assert(!per_mipmap_data); // not implemented\n      gl.texImage2D(this.target, 0, this.format.internal_type, this.format.internal_type, this.format.gl_type, data);\n    }\n  }\n  let err = null;\n  let gl_err = gl.getError();\n  if (gl_err) {\n    err = `GLError(${gl_err})`;\n  }\n  if (!err && this.mipmaps && !per_mipmap_data) {\n    gl.generateMipmap(this.target);\n    gl_err = gl.getError();\n    if (gl_err) {\n      err = `GLError(${gl_err})`;\n    }\n  }\n  if (!err) {\n    this.updateGPUMem();\n    this.eff_handle = this.handle;\n    this.loaded = true;\n\n    callEach(this.on_load, this.on_load = null, this);\n  }\n\n  profilerStop();\n  return err;\n};\n\nTexture.prototype.onLoad = function (cb) {\n  if (this.loaded) {\n    cb(this);\n  } else {\n    this.on_load.push(cb);\n  }\n};\n\nlet has_content_security_policy = localStorageGetJSON('has_csp', false);\ndocument.addEventListener('securitypolicyviolation', function () {\n  localStorageSetJSON('has_csp', true);\n  has_content_security_policy = true;\n});\n\nconst createImageBitmap = callbackify(window.createImageBitmap);\n\nlet blob_supported;\nfunction blobSupported() {\n  if (blob_supported !== undefined) {\n    return blob_supported;\n  }\n  if (typeof window.Blob === 'undefined') {\n    blob_supported = false;\n    return false;\n  }\n  try {\n    let view = new Uint8Array(4);\n    let url_object = URL.createObjectURL(new Blob([view], { type: 'image/png' }));\n    URL.revokeObjectURL(url_object);\n    blob_supported = true;\n  } catch (e) {\n    blob_supported = false;\n  }\n  return blob_supported;\n}\n\nfunction removeHash(url) {\n  let idx = url.indexOf('#');\n  if (idx === -1) {\n    return url;\n  }\n  return url.slice(0, idx);\n}\n\nconst TEX_RETRY_COUNT = 4;\nTexture.prototype.loadURL = function loadURL(url, filter) {\n  let tex = this;\n  assert(!tex.destroyed);\n\n  let tflags;\n  let load_gen = tex.load_gen = (tex.load_gen || 0) + 1;\n  function tryLoad(next) {\n    profilerStart('Texture:tryLoad');\n\n    let url_use = url;\n    let did_next = false;\n    function done(err, img) {\n      profilerStart('Texture:onload');\n      if (!did_next) {\n        did_next = true;\n        next(err, img, url_use);\n      }\n      profilerStop();\n    }\n\n    tflags = 0;\n\n    if (url_use.includes(':')) {\n      url_use = locateAsset(removeHash(url_use));\n    } // note: above line may make the below clause _also_ true\n    let is_external = url_use.includes(':');\n    if (!is_external) {\n      // Additional logic for non-external textures\n      // Fetching tflags in each load attempt, they may have changed/been reloaded in development\n      let ext_idx = url_use.lastIndexOf('.');\n      assert(ext_idx !== -1);\n      let filename_no_ext = url_use.slice(0, ext_idx);\n      let png_name = `${filename_no_ext}.png`;\n      let tflag_file = `${filename_no_ext}.tflag`;\n      if (webFSExists(tflag_file)) {\n        tflags = webFSGetFile(tflag_file, 'jsobj');\n        assert.equal(typeof tflags, 'number');\n        if (tflags & FORMAT_PACK) {\n          url_use = `${filename_no_ext}.txp`;\n        }\n      }\n\n      if (webFSExists(png_name) && blobSupported()) {\n        assert(!(tflags & FORMAT_PACK)); // not supported/tested, but should be trivial?\n\n        let view = webFSGetFile(png_name);\n        let url_object = URL.createObjectURL(new Blob([view], { type: 'image/png' }));\n        let img = new Image();\n        img.onload = function () {\n          URL.revokeObjectURL(url_object);\n          done(null, img);\n        };\n        img.onerror = function () {\n          URL.revokeObjectURL(url_object);\n          done('img decode error');\n        };\n        img.src = url_object;\n        profilerStop();\n        return;\n      }\n\n      url_use = locateAsset(removeHash(url_use));\n      // When our browser's location has been changed from 'site.com/foo/' to\n      //  'site.com/foo/bar/7' our relative image URLs are still relative to the\n      //  base.  Maybe should set some meta tag to do this instead?\n      url_use = `${urlhash.getURLBase()}${url_use}`;\n    }\n\n    if (tflags & FORMAT_PACK) {\n      fetch({\n        url: url_use,\n        response_type: 'arraybuffer',\n      }, done);\n      profilerStop();\n      return;\n    }\n\n    if (is_external && blobSupported() && has_content_security_policy) {\n      // Use `fetch` to get around content security policy\n      fetch({\n        url: url_use,\n        response_type: 'arraybuffer',\n      }, done);\n      profilerStop();\n      return;\n    }\n\n    let img = new Image();\n    img.onload = function () {\n      done(null, img);\n    };\n    img.onerror = function () {\n      done('error', null);\n    };\n    img.crossOrigin = 'anonymous';\n    img.src = url_use;\n    profilerStop();\n  }\n\n  function decodeTexturePack(arraybuffer, next) {\n    assert(arraybuffer instanceof ArrayBuffer);\n    let dv = new DataView(arraybuffer);\n    let header_offs = 0;\n    let header = dv.getUint32(header_offs, true);\n    header_offs += 4;\n    if (header !== TEXPACK_MAGIC) {\n      return void next('TXP: Invalid header');\n    }\n    let num_images = dv.getUint32(header_offs, true);\n    if (num_images > 32) {\n      return void next('TXP: Data out of bounds');\n    }\n    header_offs += 4;\n    let txp_flags = dv.getUint32(header_offs, true);\n    header_offs += 4;\n\n    let mipmaps = [];\n    let tasks = [];\n    function decodeLevelPNG(level, offset, length, next) {\n      let img_out = new Image();\n      let view = new Uint8Array(arraybuffer, offset, length);\n      let url_object = URL.createObjectURL(new Blob([view], { type: 'image/png' }));\n      img_out.onload = function () {\n        URL.revokeObjectURL(url_object);\n        mipmaps[level] = img_out;\n        next();\n      };\n      img_out.onerror = function () {\n        URL.revokeObjectURL(url_object);\n        next('img load error');\n      };\n      img_out.src = url_object;\n    }\n    let data_offs = header_offs + num_images * 4;\n    for (let level = 0; level < num_images; ++level) {\n      let len = dv.getUint32(header_offs, true);\n      header_offs += 4;\n      if (txp_flags & FORMAT_PNG) {\n        tasks.push(decodeLevelPNG.bind(null, level, data_offs, len));\n      } else {\n        return void next(`TXP: Unknown format ${txp_flags}`);\n      }\n      data_offs += len;\n    }\n    if (data_offs !== arraybuffer.byteLength) {\n      if (data_offs > arraybuffer.byteLength) {\n        return void next(`TXP: Unexpected end of file (${data_offs} > ${arraybuffer.byteLength})`);\n      } else {\n        assert(false, `TXP: Unexpected end of file (${data_offs} != ${arraybuffer.byteLength})`);\n      }\n    }\n    asyncSeries(tasks, function (err) {\n      next(err, mipmaps[0], mipmaps);\n    });\n  }\n\n  function decodeFetchedImage(arraybuffer, next) {\n    assert(arraybuffer instanceof ArrayBuffer);\n    let img_out = new Image();\n    let view = new Uint8Array(arraybuffer);\n    let url_object = URL.createObjectURL(new Blob([view], { type: 'image/png' }));\n    img_out.onload = function () {\n      URL.revokeObjectURL(url_object);\n      next(null, img_out);\n    };\n    img_out.onerror = function () {\n      URL.revokeObjectURL(url_object);\n      next('img load error');\n    };\n    img_out.src = url_object;\n  }\n\n  // next(err, img, mipmaps)\n  function prepImage(err, img, next) {\n    if (err || !img) {\n      return void next(err || 'error', img);\n    }\n    if (tflags & FORMAT_PACK) {\n      return void decodeTexturePack(img, next);\n    }\n    let unpack_mips = tex.is_array && tex.packed_mips;\n    if (img instanceof ArrayBuffer) {\n      assert(!unpack_mips);\n      return void decodeFetchedImage(img, next);\n    }\n    if (filter) {\n      img = filter(tex, img);\n    }\n    if (!unpack_mips) {\n      return void next(null, img);\n    }\n\n    let mipmaps = [];\n    let tasks = [];\n    let w = img.width;\n    let h = img.height;\n    let tile_w = w * 2 / 3;\n    assert.equal(floor(tile_w), tile_w);\n    let num_images = h / tile_w;\n\n    if (engine.defines.ARRAYNOMIP) {\n      img.width = tile_w;\n      img.height = num_images * tile_w;\n      return void next(null, img);\n    }\n\n    function getLevel(level, x, y, wh, next) {\n      createImageBitmap(img, x, y, wh, wh * num_images,\n        { premultiplyAlpha: 'none', colorSpaceConversion: 'none' },\n        function (err, result) {\n          if (err) {\n            return void next(err);\n          }\n          mipmaps[level] = result;\n          next();\n        }\n      );\n    }\n\n    let level = 0;\n    let last_w = tile_w;\n    let next_y = 0;\n    let next_x = 0;\n    while (last_w >= 1) {\n      tasks.push(getLevel.bind(null, level, next_x, next_y, last_w));\n      if (next_x) {\n        next_y += last_w * num_images;\n      } else {\n        next_x = last_w;\n      }\n      last_w = floor(last_w/2);\n      ++level;\n    }\n\n    asyncParallel(tasks, function (err) {\n      next(err, img, mipmaps);\n    });\n  }\n\n  ++load_count;\n  let retries = 0;\n  function handleLoad(err, img, url_use_debug) {\n    if (tex.load_gen !== load_gen || tex.destroyed) {\n      // someone else requested this texture to be loaded!  Or, it was already unloaded\n      --load_count;\n      return;\n    }\n    prepImage(err, img, function (err_prep, img_new, mipmaps) {\n      if (tex.load_gen !== load_gen || tex.destroyed) {\n        // someone else requested this texture to be loaded!  Or, it was already unloaded\n        --load_count;\n        return;\n      }\n      img = img_new;\n      let err_details = '';\n      if (err_prep) {\n        err_details = err_prep;\n      } else if (img) {\n        let err = tex.updateData(img.width, img.height, img, mipmaps);\n        if (err) {\n          err_details = String(err);\n          // Samsung TV gets 1282 on texture arrays\n          // Samsung Galaxy S6 gets 1281 on texture arrays\n          // Note: Any failed image load (partial read of a bad png, etc) also results in 1281!\n          if (tex.is_array && (err === 'GLError(1282)' || err === 'GLError(1281)') && engine.webgl2 && !engine.DEBUG) {\n            localStorageSetJSON('webgl2_disable', {\n              ua: navigator.userAgent,\n              ts: Date.now(),\n            });\n            console.error(`Error loading array texture \"${url_use_debug}\": ${err_details}, reloading without WebGL2..`);\n            engine.reloadSafe();\n            return;\n          }\n          if (!tex.for_reload) {\n            retries = TEX_RETRY_COUNT; // do not retry this\n          }\n        } else {\n          --load_count;\n          return;\n        }\n      }\n      let err_url = url_use_debug && url_use_debug.length > 200 ? `${url_use_debug.slice(0, 200)}...` : url_use_debug;\n      let err = `Error loading texture \"${err_url}\": ${err_details}`;\n      retries++;\n      if (retries > TEX_RETRY_COUNT) {\n        --load_count;\n        tex.eff_handle = handle_error;\n        tex.load_fail = true;\n        console.error(`${err}: ${err_details}, retries failed`);\n        if (tex.soft_error) {\n          tex.err = 'Load failed';\n        } else {\n          shadersSetGLErrorReportDetails();\n          assert(false, err);\n        }\n        return;\n      }\n      console.error(`${err}: ${err_details}, retrying... `);\n      setTimeout(tryLoad.bind(null, handleLoad), 100 * retries * retries);\n    });\n  }\n  tryLoad(handleLoad);\n};\n\nTexture.prototype.allocFBO = function (w, h) {\n  const fbo_format = settings.fbo_rgba ? gl.RGBA : gl.RGB;\n  bindForced(this);\n  gl.texImage2D(this.target, 0, fbo_format, w, h, 0, fbo_format, gl.UNSIGNED_BYTE, null);\n\n  this.fbo = gl.createFramebuffer();\n  assert(this.fbo); // If this is firing, it's probably due to context loss\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.handle, 0);\n\n  this.last_use = frame_timestamp;\n  this.src_width = this.width = w;\n  this.src_height = this.height = h;\n  this.updateGPUMem();\n};\n\nTexture.prototype.allocDepth = function (w, h) {\n  bindForced(this);\n  gl.texImage2D(gl.TEXTURE_2D, 0, this.format.internal_type,\n    w, h, 0, this.format.format, this.format.gl_type, null);\n\n  this.last_use = frame_timestamp;\n  this.src_width = this.width = w;\n  this.src_height = this.height = h;\n  this.updateGPUMem();\n};\n\nTexture.prototype.captureStart = function (w, h) {\n  assert(!this.capture);\n  this.capture = { w, h };\n  if (this.fbo) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n  } else {\n    assert(w); // will assert in captureEnd:copyTexImage\n    assert(h);\n  }\n};\n\nTexture.prototype.captureEnd = function (filter_linear, wrap) {\n  assert(this.capture);\n  let capture = this.capture;\n  this.capture = null;\n  if (this.fbo) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  } else {\n    this.copyTexImage(0, 0, capture.w, capture.h);\n  }\n  let filter = filter_linear ? gl.LINEAR : gl.NEAREST;\n  this.setSamplerState({\n    filter_min: filter,\n    filter_mag: filter,\n    wrap_s: wrap ? gl.REPEAT : gl.CLAMP_TO_EDGE,\n    wrap_t: wrap ? gl.REPEAT : gl.CLAMP_TO_EDGE,\n  });\n};\n\nTexture.prototype.copyTexImage = function (x, y, w, h) {\n  assert(!this.destroyed);\n  assert(w && h);\n  bindHandle(0, this.target, this.handle);\n  gl.copyTexImage2D(this.target, 0, gl.RGB, x, y, w, h, 0);\n  this.last_use = frame_timestamp;\n  this.src_width = this.width = w;\n  this.src_height = this.height = h;\n  this.updateGPUMem();\n};\n\nTexture.prototype.destroy = function () {\n  if (this.destroyed) {\n    return;\n  }\n  profilerStart('Texture:destroy');\n  assert(this.name);\n  let auto_unload = this.auto_unload;\n  if (auto_unload) {\n    this.auto_unload = null;\n    let idx = auto_unload_textures.indexOf(this);\n    assert(idx !== -1);\n    ridx(auto_unload_textures, idx);\n  }\n  delete textures[this.name];\n  unbindAll(this.target);\n  gl.deleteTexture(this.handle);\n  if (this.fbo) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.fbo);\n  }\n  this.width = this.height = 0;\n  this.updateGPUMem();\n  this.destroyed = true;\n  if (auto_unload) {\n    for (let ii = 0; ii < auto_unload.length; ++ii) {\n      auto_unload[ii]();\n    }\n  }\n  profilerStop('Texture:destroy');\n};\n\nfunction create(params) {\n  assert(params.name);\n  let texture = new Texture(params);\n  textures[params.name] = texture;\n  return texture;\n}\n\nlet last_temporary_id = 0;\nexport function textureCreateForCapture(unique_name, auto_unload) {\n  let name = unique_name || `screen_temporary_tex_${++last_temporary_id}`;\n  assert(!textures[name]);\n  let texture = create({\n    filter_min: gl.NEAREST,\n    filter_mag: gl.NEAREST,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n    format: TEXTURE_FORMAT.RGB8,\n    name,\n    auto_unload,\n  });\n  texture.loaded = true;\n  texture.eff_handle = texture.handle;\n  return texture;\n}\n\nexport function textureCreateForDepthCapture(unique_name, tex_format) {\n  let name = unique_name || `screen_temporary_tex_${++last_temporary_id}`;\n  assert(!textures[name]);\n  let texture = create({\n    filter_min: gl.NEAREST,\n    filter_mag: gl.NEAREST,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n    format: tex_format,\n    name,\n  });\n  texture.loaded = true;\n  texture.eff_handle = texture.handle;\n  return texture;\n}\n\nexport function textureLoad(params) {\n  let key = params.name = params.name || params.url;\n  assert(key);\n  let tex = textures[key];\n  if (!tex) {\n    tex = create(params);\n  } else {\n    if (typeof params.auto_unload === 'function') {\n      assert(tex.auto_unload);\n      tex.auto_unload.push(params.auto_unload);\n    }\n  }\n  tex.last_use = frame_timestamp;\n  return tex;\n}\n\nexport function textureFindForReplacement(search_key) {\n  search_key = textureCname(search_key);\n  for (let key in textures) {\n    let tex = textures[key];\n    if (tex.cname === search_key) {\n      return textures[key];\n    }\n  }\n  return null;\n}\n\nlet tick_next_tex = 0;\nexport function textureTick() {\n  frame_timestamp = engine.frame_timestamp;\n  let len = auto_unload_textures.length;\n  if (!len) {\n    return;\n  }\n  if (tick_next_tex >= len) {\n    tick_next_tex = 0;\n  }\n  let tex = auto_unload_textures[tick_next_tex];\n  if (tex.last_use < frame_timestamp - TEX_UNLOAD_TIME) {\n    console.log(`Unloading texture ${tex.name}`);\n    tex.destroy();\n  } else {\n    ++tick_next_tex;\n  }\n}\n\nexport function textureUnloadDynamic() {\n  while (auto_unload_textures.length) {\n    auto_unload_textures[0].destroy();\n  }\n}\n\nfunction textureReload(filename) {\n  let ret = false;\n  let cname = textureCname(filename);\n  for (let key in textures) {\n    let tex = textures[key];\n    if (tex.cname === cname && tex.url) {\n      tex.for_reload = true;\n      tex.loadURL(`${removeHash(tex.url)}?rl=${Date.now()}`, tex.load_filter);\n      ret = true;\n    }\n  }\n  return ret;\n}\n\nlet depth_supported;\nexport function textureSupportsDepth() {\n  return depth_supported;\n}\n\nexport function textureStartup() {\n\n  default_filter_min = gl.LINEAR_MIPMAP_LINEAR;\n  default_filter_mag = gl.LINEAR;\n\n  TEXTURE_FORMAT.R8.internal_type = gl.LUMINANCE;\n  TEXTURE_FORMAT.R8.gl_type = gl.UNSIGNED_BYTE;\n  TEXTURE_FORMAT.RGB8.internal_type = gl.RGB;\n  TEXTURE_FORMAT.RGB8.gl_type = gl.UNSIGNED_BYTE;\n  TEXTURE_FORMAT.RGBA8.internal_type = gl.RGBA;\n  TEXTURE_FORMAT.RGBA8.gl_type = gl.UNSIGNED_BYTE;\n\n  let UNSIGNED_INT_24_8;\n  if (engine.webgl2) {\n    depth_supported = true;\n    UNSIGNED_INT_24_8 = gl.UNSIGNED_INT_24_8;\n  } else {\n    let ext = gl.getExtension('WEBGL_depth_texture');\n    if (ext) {\n      UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL;\n      depth_supported = true;\n    }\n  }\n  if (depth_supported) {\n    TEXTURE_FORMAT.DEPTH16.internal_type = engine.webgl2 ? gl.DEPTH_COMPONENT16 : gl.DEPTH_COMPONENT;\n    TEXTURE_FORMAT.DEPTH16.format = gl.DEPTH_COMPONENT;\n    TEXTURE_FORMAT.DEPTH16.gl_type = gl.UNSIGNED_SHORT;\n    TEXTURE_FORMAT.DEPTH24.internal_type = engine.webgl2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL;\n    TEXTURE_FORMAT.DEPTH24.format = gl.DEPTH_STENCIL;\n    TEXTURE_FORMAT.DEPTH24.gl_type = UNSIGNED_INT_24_8;\n  }\n\n  let ext_anisotropic = (\n    gl.getExtension('EXT_texture_filter_anisotropic') ||\n    gl.getExtension('MOZ_EXT_texture_filter_anisotropic') ||\n    gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic')\n  );\n  if (ext_anisotropic) {\n    aniso_enum = ext_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT;\n    aniso = max_aniso = gl.getParameter(ext_anisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n  }\n\n  handle_error = textureLoad({\n    name: 'error',\n    width: 2, height: 2,\n    nozoom: true,\n    format: TEXTURE_FORMAT.RGBA8,\n    filter_mag: gl.NEAREST,\n    data: new Uint8Array([\n      255, 20, 147, 255,\n      255, 0, 0, 255,\n      255, 255, 255, 255,\n      255, 20, 147, 255\n    ]),\n  }).handle;\n\n  handle_loading = textureLoad({\n    name: 'loading',\n    width: 2, height: 2,\n    nozoom: true,\n    format: TEXTURE_FORMAT.RGBA8,\n    data: new Uint8Array([\n      127, 127, 127, 255,\n      0, 0, 0, 255,\n      64, 64, 64, 255,\n      127, 127, 127, 255,\n    ]),\n  }).handle;\n\n  textureLoad({\n    name: 'white',\n    width: 2, height: 2,\n    nozoom: true,\n    format: TEXTURE_FORMAT.RGBA8,\n    data: new Uint8Array([\n      255, 255, 255, 255,\n      255, 255, 255, 255,\n      255, 255, 255, 255,\n      255, 255, 255, 255,\n    ]),\n  });\n\n  textureLoad({\n    name: 'invisible',\n    width: 2, height: 2,\n    nozoom: true,\n    format: TEXTURE_FORMAT.RGBA8,\n    data: new Uint8Array([\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n      0, 0, 0, 0,\n    ]),\n  });\n\n  filewatchOn('.png', textureReload);\n  filewatchOn('.jpg', textureReload);\n  filewatchOn('.txp', textureReload);\n}\n\n// Legacy API\nexports.format = TEXTURE_FORMAT;\nexports.defaultFilters = textureDefaultFilters;\nexports.texturesUnloadDynamic = textureUnloadDynamic;\nexports.bind = textureBind;\nexports.bindArray = textureBindArray;\nexports.load = textureLoad;\nexports.cmpTextureArray = textureCmpArray;\nexports.isArrayBound = textureIsArrayBound;\nexports.createForCapture = textureCreateForCapture;\nexports.createForDepthCapture = textureCreateForDepthCapture;\nexports.cname = textureCname;\nexports.findTexForReplacement = textureFindForReplacement;\nexports.textures = textures;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport assert from 'assert';\nimport {\n  easeOut,\n  lerp,\n} from 'glov/common/util';\nimport * as verify from 'glov/common/verify';\nimport { unit_vec, vec4 } from 'glov/common/vmath';\nimport * as camera2d from './camera2d';\nimport {\n  applyCopy,\n  effectsIsFinal,\n  effectsQueue,\n} from './effects';\nimport * as glov_engine from './engine';\nimport {\n  framebufferCapture,\n  framebufferEnd,\n  framebufferStart,\n  temporaryTextureClaim,\n} from './framebuffer';\nimport { shaderCreate } from './shaders';\nimport {\n  spriteQueueRaw,\n  spriteQueueRaw4,\n  spriteQueueRaw4Color,\n} from './sprites';\nimport { textureCreateForCapture } from './textures';\nimport * as glov_ui from './ui';\n\nconst { PI, abs, cos, floor, min, pow, random, sin, sqrt } = Math;\nconst SQRT1_2 = sqrt(1/2);\nconst PI_4 = PI/4;\nconst PI_2 = PI/2;\n\nlet transitions = [];\n\nexport const IMMEDIATE = 'immediate';\n\nexport const REMOVE = 'remove';\nexport const CONTINUE = 'continue';\n\nconst shader_data = {\n  transition_pixelate: {\n    fp: 'shaders/transition_pixelate.fp',\n  },\n};\n\nfunction getShader(key) {\n  let elem = shader_data[key];\n  if (!elem.shader) {\n    elem.shader = shaderCreate(elem.fp);\n  }\n  return elem.shader;\n}\n\nfunction GlovTransition(z, func) {\n  this.z = z;\n  this.capture = null;\n  this.func = func;\n  this.accum_time = 0;\n}\n\nfunction transitionCapture(trans) {\n  // Warning: Slow on iOS\n  assert(!trans.capture);\n  trans.capture = textureCreateForCapture();\n  framebufferCapture(trans.capture);\n}\n\nfunction transitionCaptureFramebuffer(trans) {\n  assert(!trans.capture);\n  trans.capture = framebufferEnd();\n  temporaryTextureClaim(trans.capture);\n  if (trans.capture.fbo) {\n    // new framebuffer bound, effectively cleared, need to blit this to it!\n    applyCopy({ source: trans.capture, final: effectsIsFinal() });\n  } else {\n    framebufferStart({\n      width: trans.capture.width,\n      height: trans.capture.height,\n      final: effectsIsFinal(),\n    });\n  }\n}\n\nexport function queue(z, fn) {\n  assert(!glov_engine.had_3d_this_frame); // Cannot queue a transition after we've already started 3d rendering/cleared\n  let immediate = false;\n  if (z === IMMEDIATE) {\n    immediate = true;\n    z = Z.TRANSITION_FINAL;\n  }\n\n  for (let ii = 0; ii < transitions.length; ++ii) {\n    let trans = transitions[ii];\n    if (trans.z === z) {\n      // same Z\n      if (!verify(trans.capture)) {\n        // two transitions at the same Z on one frame!  ignore second\n        return false;\n      }\n    }\n  }\n  let trans = new GlovTransition(z, fn);\n  transitions.push(trans);\n\n  if (immediate) {\n    transitionCapture(trans);\n  } else {\n    // queue up a capture past the specified Z, so transitions rendering at that Z (plus a handful) get captured\n    effectsQueue(z + Z.TRANSITION_RANGE, transitionCaptureFramebuffer.bind(null, trans));\n    //spriteQueueFn(z + Z.TRANSITION_RANGE, transitionCapture.bind(null, trans));\n  }\n  return true;\n}\n\nfunction destroyTexture(tex) {\n  profilerStart('transition:destroyTexture');\n  tex.destroy();\n  profilerStop();\n}\n\nexport function render(dt) {\n  dt = min(dt, 100); // debug: clamp frame times\n  for (let trans_idx = 0; trans_idx < transitions.length; ++trans_idx) {\n    let trans = transitions[trans_idx];\n    trans.accum_time += dt;\n    assert(trans.capture);\n    // call the function and give them the Z\n    // If not the last one, want it to end now!\n    let force_end = trans_idx < transitions.length - 1;\n    let ret = trans.func(trans.z, trans.capture, trans.accum_time, force_end);\n    if (ret === REMOVE) {\n      setTimeout(destroyTexture.bind(null, trans.capture), 0);\n      transitions.splice(trans_idx, 1);\n      trans_idx--;\n    }\n  }\n}\n\nexport function active() {\n  return transitions.length;\n}\n\nfunction glovTransitionFadeFunc(fade_time, z, initial, ms_since_start, force_end) {\n  let progress = min(ms_since_start / fade_time, 1);\n  let alpha = (1 - easeOut(progress, 2));\n  let color = vec4(1, 1, 1, alpha);\n  camera2d.setNormalized();\n  spriteQueueRaw4([initial],\n    0, 0, 0, 1,\n    1, 1, 1, 0,\n    z,\n    0, 1, 1, 0,\n    color);\n\n  if (force_end || progress === 1) {\n    return REMOVE;\n  }\n  return CONTINUE;\n}\n\n\nfunction glovTransitionWipeFunc(wipe_time, wipe_angle, z, tex, ms_since_start, force_end) {\n  let progress = min(ms_since_start / wipe_time, 1);\n\n  camera2d.setNormalized();\n\n  let uvs = [[0,1], [1,0]];\n\n  let points = [{}, {}, {}, {}];\n  for (let ii = 0; ii < 4; ii++) {\n    let x = (ii === 1 || ii === 2) ? 1 : 0;\n    let y = (ii >= 2) ? 1 : 0;\n    points[ii].x = x;\n    points[ii].y = y;\n  }\n\n  // change 0 degrees to be up, not right, to match other things.\n  wipe_angle -= PI/2;\n\n  while (wipe_angle > PI) {\n    wipe_angle -= (2 * PI);\n  }\n  while (wipe_angle < -PI) {\n    wipe_angle += (2 * PI);\n  }\n\n  if (wipe_angle >= -PI_4 && wipe_angle <= PI_4) {\n    // horizontal wipe from left to right\n    let x0 = progress * 2; // rightmost x\n    let x1 = x0 - sin(abs(wipe_angle)) / SQRT1_2; // leftmost x\n    if (wipe_angle < 0) {\n      points[0].x = x1;\n      points[3].x = x0;\n    } else {\n      points[0].x = x0;\n      points[3].x = x1;\n    }\n    points[1].x = points[2].x = 2;\n  } else if (wipe_angle >= PI_2 + PI_4 || wipe_angle <= -PI_2 - PI_4) {\n    // horizontal wipe from right to left\n    let x0 = 1 - progress * 2; // leftmost x\n    let x1 = x0 + sin(abs(wipe_angle)) / SQRT1_2; // rightmost x,\n    if (wipe_angle < 0) {\n      points[1].x = x1;\n      points[2].x = x0;\n    } else {\n      points[1].x = x0;\n      points[2].x = x1;\n    }\n    points[0].x = points[3].x = -1;\n  } else if (wipe_angle > PI_4 && wipe_angle <= PI_2 + PI_4) {\n    // vertical wipe, top to bottom\n    let y0 = progress * 2; // bottommost y\n    let offs = cos(wipe_angle) / SQRT1_2;\n    let y1 = y0 - abs(offs); // topmost y,\n    if (offs > 0) {\n      points[0].y = y0;\n      points[1].y = y1;\n    } else {\n      points[0].y = y1;\n      points[1].y = y0;\n    }\n    points[2].y = points[3].y = 2;\n  } else {\n    // vertical wipe, bottom to top\n    let y0 = 1 - progress * 2; // topmost y\n    let offs = cos(wipe_angle) / SQRT1_2;\n    let y1 = y0 + abs(offs); // bottommost y,\n    if (offs > 0) {\n      points[2].y = y1;\n      points[3].y = y0;\n    } else {\n      points[2].y = y0;\n      points[3].y = y1;\n    }\n    points[0].y = points[1].y = -1;\n  }\n  // interp UVs based on points\n  points[0].u = lerp(points[0].x, uvs[0][0], uvs[1][0]);\n  points[1].u = lerp(points[1].x, uvs[0][0], uvs[1][0]);\n  points[2].u = lerp(points[2].x, uvs[0][0], uvs[1][0]);\n  points[3].u = lerp(points[3].x, uvs[0][0], uvs[1][0]);\n  points[0].v = lerp(points[0].y, uvs[0][1], uvs[1][1]);\n  points[1].v = lerp(points[1].y, uvs[0][1], uvs[1][1]);\n  points[2].v = lerp(points[2].y, uvs[0][1], uvs[1][1]);\n  points[3].v = lerp(points[3].y, uvs[0][1], uvs[1][1]);\n\n  spriteQueueRaw4Color([tex],\n    points[0].x, points[0].y, unit_vec, points[0].u, points[0].v,\n    points[3].x, points[3].y, unit_vec, points[3].u, points[3].v,\n    points[2].x, points[2].y, unit_vec, points[2].u, points[2].v,\n    points[1].x, points[1].y, unit_vec, points[1].u, points[1].v,\n    z);\n\n  if (force_end || progress === 1) {\n    return REMOVE;\n  }\n  return CONTINUE;\n}\n\nfunction glovTransitionSplitScreenFunc(time, border_width, slide_window, z, tex, ms_since_start, force_end) {\n  let border_color = vec4(1, 1, 1, 1);\n  let progress = easeOut(min(ms_since_start / time, 1), 2);\n  camera2d.setNormalized();\n\n  let uvs = [[0,1], [1,0]];\n\n  let xoffs = progress;\n  let v_half = uvs[0][1] + (uvs[1][1] - uvs[0][1]) / 2;\n  if (slide_window) { // slide window\n    spriteQueueRaw([tex], 0, 0, z, 1 - xoffs, 1 / 2,\n      0, uvs[0][1], uvs[1][0] * (1 - progress), v_half,\n      unit_vec);\n    spriteQueueRaw([tex], 0 + xoffs, 1 / 2, z, 1 - xoffs, 1 / 2,\n      uvs[1][0] * progress, v_half, uvs[1][0], uvs[1][1],\n      unit_vec);\n  } else { // slide image\n    spriteQueueRaw([tex], 0 - xoffs, 0, z, 1, 1 / 2,\n      uvs[0][0], uvs[0][1], uvs[1][0], v_half,\n      unit_vec);\n    spriteQueueRaw([tex], 0 + xoffs, 1 / 2, z, 1, 1 / 2,\n      uvs[0][0], v_half, uvs[1][0], uvs[1][1],\n      unit_vec);\n  }\n  let border_grow_progress = min(progress * 4, 1);\n  border_color[3] = border_grow_progress;\n  border_width *= border_grow_progress;\n  // TODO: Would look better if the horizontal border grew from the middle out, so the overlapping bit is identical\n  // on both sides\n  glov_ui.drawRect(0, 0.5 - border_width, 1 - xoffs, 0.5, z + 1, border_color);\n  glov_ui.drawRect(1 - xoffs - border_width, 0, 1 - xoffs, 0.5, z + 1, border_color);\n  glov_ui.drawRect(xoffs, 0.5, 1, 0.5 + border_width, z + 1, border_color);\n  glov_ui.drawRect(xoffs, 0.5, xoffs + border_width, 1, z + 1, border_color);\n\n  if (force_end || progress === 1) {\n    return REMOVE;\n  }\n  return CONTINUE;\n}\n\nconst render_scale = 1;\nlet transition_pixelate_textures = [null];\n\nfunction transitionPixelateCapture() {\n  let tex = framebufferEnd();\n  framebufferStart({\n    width: tex.width,\n    height: tex.height,\n    final: effectsIsFinal(),\n  });\n  transition_pixelate_textures[0] = tex;\n}\n\nfunction glovTransitionPixelateFunc(time, z, tex, ms_since_start, force_end) {\n  //ms_since_start %= time;\n  //let viewport = glov_engine.graphics_device.getViewport();\n  //let gd_width = viewport[2];\n  let gd_width = glov_engine.width;\n  let progress = min(ms_since_start / time, 1);\n  camera2d.setNormalized();\n\n  transition_pixelate_textures[0] = tex;\n  if (progress > 0.5) {\n    effectsQueue(z, transitionPixelateCapture); // modifies transition_pixelate_textures[]\n  }\n\n  let partial_progress = (progress > 0.5 ? 1 - progress : progress) * 2;\n  // Use power of two scalings, but then scale relative to a 1024px virtual screen, so the biggest\n  //  pixel is about the same percentage of the screen regardless of resolution.\n  let pixel_scale = pow(2, floor(partial_progress * 8.9)) / 1024 * gd_width * render_scale;\n\n  let param0 = vec4(tex.width / pixel_scale, tex.height / pixel_scale,\n    pixel_scale / tex.width, pixel_scale / tex.height);\n  let param1 = vec4(0.5 / tex.width, 0.5 / tex.height,\n    (tex.texSizeX - 1) / tex.width, (tex.texSizeY - 1) / tex.height);\n\n\n  spriteQueueRaw(transition_pixelate_textures, 0, 0, z + 1, 1, 1,\n    0, 1, 1, 0,\n    unit_vec, getShader('transition_pixelate'), {\n      param0,\n      param1,\n    });\n\n  if (force_end || progress === 1) {\n    return REMOVE;\n  }\n  return CONTINUE;\n}\n\nexport function fade(fade_time) {\n  return glovTransitionFadeFunc.bind(null, fade_time);\n}\n\nexport function wipe(wipe_time, wipe_angle) {\n  return glovTransitionWipeFunc.bind(null, wipe_time, wipe_angle);\n}\n\n// border_width in camera-relative size\nexport function splitScreen(time, border_width, slide_window) {\n  border_width /= camera2d.w(); // convert to normalized units\n  return glovTransitionSplitScreenFunc.bind(null, time, border_width, slide_window);\n}\n\nexport function pixelate(fade_time) {\n  return glovTransitionPixelateFunc.bind(null, fade_time);\n}\n\n// export function logoZoom(time, logo) {\n//   return glovTransitionLogoZoomFunc.bind(null, time, logo);\n// }\n\nexport function randomTransition(fade_time_scale) {\n  fade_time_scale = fade_time_scale || 1;\n  let idx = floor(random() * 3);\n  switch (idx) {\n    case 0:\n      return fade(500 * fade_time_scale);\n    case 1:\n      return splitScreen(250 * fade_time_scale, 2, false);\n    case 2:\n      return pixelate(750 * fade_time_scale);\n    case 3:\n      return wipe(250 * fade_time_scale, random() * 2 * PI);\n    // case 4:\n    //   if (!logo) {\n    //     GlovTextureLoadOptions options;\n    //     options.wrap_s = options.wrap_t = gl.CLAMP_TO_EDGE;\n    //     logo = GlovTextures::loadtex(\"data/SampleLogoTransition.png\", &options);\n    //   }\n    //   glovTransitionQueue(Z_TRANSITION_FINAL, glovTransitionLogoZoom(500, logo));\n    //   break;\n    default:\n      assert(0);\n  }\n  return null;\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint no-underscore-dangle:off */\n\nwindow.Z = window.Z || {};\nexport const Z = window.Z;\n\nexport const Z_MIN_INC = 1e-5;\n\nZ.BORDERS = Z.BORDERS || 90;\nZ.UI = Z.UI || 100;\nZ.MODAL = Z.MODAL || 1000;\nZ.TOOLTIP = Z.TOOLTIP || 2000;\nZ.DEBUG = Z.DEBUG || 9800;\n\n// very high, but can still add integers\nZ.TRANSITION_FINAL = Z.TRANSITION_FINAL || 9900;\n// how much Z range can be used for rendering transitions - the capture happens at z + Z_TRANSITION_RANGE\nZ.TRANSITION_RANGE = Z.TRANSITION_RANGE || 10;\n\nZ.FPSMETER = Z.FPSMETER || 10000;\n\nexport const LINE_ALIGN = 1<<0;\nexport const LINE_CAP_SQUARE = 1<<1;\nexport const LINE_CAP_ROUND = 1<<2;\nexport const LINE_NO_AA = 1<<3;\n\nexport const internal = {\n  checkHooks, // eslint-disable-line @typescript-eslint/no-use-before-define\n  cleanupDOMElems, // eslint-disable-line @typescript-eslint/no-use-before-define\n  uiEndFrame, // eslint-disable-line @typescript-eslint/no-use-before-define\n  uiSetFonts, // eslint-disable-line @typescript-eslint/no-use-before-define\n  uiStartup, // eslint-disable-line @typescript-eslint/no-use-before-define\n  uiTick, // eslint-disable-line @typescript-eslint/no-use-before-define\n  uiApplyStyle, // eslint-disable-line @typescript-eslint/no-use-before-define\n};\n\nexport const sprites = {};\n\n/* eslint-disable import/order */\nconst assert = require('assert');\nconst { autoAtlas } = require('./autoatlas');\nconst camera2d = require('./camera2d.js');\nconst { editBoxCreate, editBoxTick } = require('./edit_box.js');\nconst effects = require('./effects.js');\nconst { effectsQueue } = effects;\nconst glov_engine = require('./engine.js');\nconst glov_font = require('./font.js');\nconst { ALIGN, fontSetDefaultSize, fontStyle, fontStyleColored } = glov_font;\nconst glov_input = require('./input.js');\nconst { linkTick, linkObscureRect } = require('./link.js');\nconst { getStringFromLocalizable } = require('./localization.js');\nconst { markdownAuto } = require('./markdown');\nconst { abs, floor, max, min, round, sqrt } = Math;\nconst { scrollAreaSetPixelScale } = require('./scroll_area.js');\nconst { sliderSetDefaultShrink } = require('./slider.js');\nconst { soundLoad, soundPlay } = require('./sound.js');\nconst {\n  SPOT_DEFAULT_BUTTON,\n  SPOT_DEFAULT_BUTTON_DRAW_ONLY,\n  SPOT_DEFAULT_LABEL,\n  SPOT_STATE_REGULAR,\n  SPOT_STATE_DOWN,\n  SPOT_STATE_FOCUSED,\n  SPOT_STATE_DISABLED,\n  spot,\n  spotEndOfFrame,\n  spotKey,\n  spotPadMode,\n  spotPadSuppressed,\n  spotTopOfFrame,\n  spotUnfocus,\n} = require('./spot.js');\nconst {\n  BLEND_ADDITIVE,\n  BLEND_PREMULALPHA,\n  spriteClipped,\n  spriteClipPause,\n  spriteClipResume,\n  spriteChainedStart,\n  spriteChainedStop,\n  spriteCreate,\n  spriteQueueRaw,\n  spriteQueueRaw4,\n} = require('./sprites.js');\nconst { TEXTURE_FORMAT } = require('./textures.js');\nconst {\n  uiStyleDefault,\n  uiStyleModify,\n  uiStyleTopOfFrame,\n} = require('./uistyle.js');\nconst { clamp, clone, defaults, deprecate, lerp, merge } = require('glov/common/util.js');\nconst { mat43, m43identity, m43mul } = require('./mat43.js');\nconst { vec2, vec4, v4copy, v3scale, unit_vec } = require('glov/common/vmath.js');\n\ndeprecate(exports, 'slider_dragging', 'slider.js:sliderIsDragging()');\ndeprecate(exports, 'slider_rollover', 'slider.js:sliderIsFocused()');\ndeprecate(exports, 'setSliderDefaultShrink', 'slider.js:sliderSetDefaultShrink()');\ndeprecate(exports, 'slider', 'slider.js:slider()');\ndeprecate(exports, 'bindSounds', 'uiBindSounds');\ndeprecate(exports, 'modal_font_style', 'uiFontStyleModal()');\ndeprecate(exports, 'font_style_noraml', 'uiFontStyleNoraml()');\ndeprecate(exports, 'font_style_focused', 'uiFontStyleFocused()');\ndeprecate(exports, 'color_button', 'uiSetButtonColorSet()');\n\n\nconst MODAL_DARKEN = 0.75;\nlet KEYS;\nlet PAD;\n\nlet ui_style_current;\n\nconst menu_fade_params_default = {\n  blur: [0.125, 0.865],\n  saturation: [0.5, 0.1],\n  brightness: [1, 1 - MODAL_DARKEN],\n  fallback_darken: vec4(0, 0, 0, MODAL_DARKEN),\n  z: Z.MODAL,\n};\n\nlet color_set_shades = vec4(1, 0.8, 1, 1);\n\nlet color_sets = [];\nfunction applyColorSet(color_set) {\n  v3scale(color_set.regular, color_set.color, color_set_shades[0]);\n  v3scale(color_set.rollover, color_set.color, color_set_shades[1]);\n  v3scale(color_set.down, color_set.color, color_set_shades[2]);\n  v3scale(color_set.disabled, color_set.color, color_set_shades[3]);\n}\nexport function makeColorSet(color) {\n  let ret = {\n    color,\n    regular: vec4(),\n    rollover: vec4(),\n    down: vec4(),\n    disabled: vec4(),\n  };\n  for (let field in ret) {\n    ret[field][3] = color[3];\n  }\n  color_sets.push(ret);\n  applyColorSet(ret);\n  return ret;\n}\n\nexport function colorSetMakeCustom(regular, rollover, down, disabled) {\n  return {\n    regular,\n    rollover,\n    down,\n    disabled,\n  };\n}\n\nlet hooks = [];\nexport function addHook(draw, click) {\n  hooks.push({\n    draw,\n    click,\n  });\n}\n\nlet per_frame_dom_alloc = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\nlet per_frame_dom_suppress = 0;\nexport function suppressNewDOMElemWarnings() {\n  per_frame_dom_suppress = glov_engine.frame_index + 1;\n}\nfunction uiElemAllocCheck() {\n  if (glov_engine.DEBUG && !glov_engine.resizing() && glov_engine.frame_index > per_frame_dom_suppress) {\n    per_frame_dom_alloc[glov_engine.frame_index % per_frame_dom_alloc.length] = 1;\n    let sum = 0;\n    for (let ii = 0; ii < per_frame_dom_alloc.length; ++ii) {\n      sum += per_frame_dom_alloc[ii];\n    }\n    assert(sum < per_frame_dom_alloc.length, 'Allocated new UI elements for too many consecutive frames');\n  }\n}\n\nlet ui_elem_data = {};\n// Gets per-element state data that allows a paradigm of inter-frame state but\n//   without the caller being required to allocate a state container.\nexport function getUIElemData(type, param, allocator) {\n  let key = spotKey(param);\n  let by_type = ui_elem_data[type];\n  if (!by_type) {\n    by_type = ui_elem_data[type] = {};\n  }\n  let elem_data = by_type[key];\n  if (!elem_data) {\n    elem_data = by_type[key] = allocator ? allocator(param) : {};\n    uiElemAllocCheck();\n  }\n  elem_data.frame_index = glov_engine.frame_index;\n  return elem_data;\n}\n\nfunction doBlurEffect(factor) {\n  effects.applyGaussianBlur({\n    blur: factor,\n    // min_size: 128,\n  });\n}\n\nlet desaturate_xform = mat43();\nlet desaturate_tmp = mat43();\nfunction doDesaturateEffect(saturation, brightness) {\n  m43identity(desaturate_xform);\n\n  effects.saturationMatrix(desaturate_tmp, saturation);\n  m43mul(desaturate_xform, desaturate_xform, desaturate_tmp);\n\n  effects.brightnessScaleMatrix(desaturate_tmp, brightness);\n  m43mul(desaturate_xform, desaturate_xform, desaturate_tmp);\n\n  // if ((hue % (Math.PI * 2)) !== 0) {\n  //   effects.hueMatrix(tmp, hue);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (contrast !== 1) {\n  //   effects.contrastMatrix(tmp, contrast);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (brightness !== 0) {\n  //   effects.brightnessMatrix(tmp, brightness);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (additiveRGB[0] !== 0 || additiveRGB[1] !== 0 || additiveRGB[2] !== 0) {\n  //   effects.additiveMatrix(tmp, additiveRGB);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (grayscale) {\n  //   effects.grayScaleMatrix(tmp);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (negative) {\n  //   effects.negativeMatrix(tmp);\n  //   m43mul(xform, xform, tmp);\n  // }\n  // if (sepia) {\n  //   effects.sepiaMatrix(tmp);\n  //   m43mul(xform, xform, tmp);\n  // }\n  effects.applyColorMatrix({\n    colorMatrix: desaturate_xform,\n  });\n}\n\n// DEPRECATED: use uiStyleCurrent().foo instead\n// exports.font_height;\n// export let button_height = 32;\n// export let button_width = 200;\n\n// overrideable default parameters\nexport let modal_button_width = 100;\nexport let modal_width = 600;\nexport let modal_y0 = 200;\nexport let modal_title_scale = 1.2;\nexport let modal_pad = 16;\nexport let panel_pixel_scale = 32 / 13; // button_height / button pixel resolution\nexport let tooltip_panel_pixel_scale = panel_pixel_scale;\nexport let tooltip_width = 400;\nexport let tooltip_pad = 8;\nlet tooltip_text_offs = 0;\n\n// export let font_style_focused = fontStyle(null, {\n//   color: 0x000000ff,\n//   outline_width: 2,\n//   outline_color: 0xFFFFFFff,\n// });\nlet font_style_normal;\nlet font_style_focused;\nlet font_style_disabled;\nlet font_style_modal;\n\nexport function setFontStyles(normal, focused, modal, disabled) {\n  font_style_normal = normal || fontStyleColored(null, 0x000000ff);\n  font_style_focused = focused || fontStyle(font_style_normal, {});\n  font_style_modal = modal || fontStyle(font_style_normal, {});\n  font_style_disabled = disabled || fontStyleColored(font_style_normal, 0x222222ff);\n}\nsetFontStyles();\n\nexport function uiFontStyleNormal() {\n  return font_style_normal;\n}\nexport function uiFontStyleFocused() {\n  return font_style_focused;\n}\nexport function uiFontStyleDisabled() {\n  return font_style_modal;\n}\nexport function uiFontStyleModal() {\n  return font_style_modal;\n}\n\nexport function uiTextHeight() {\n  return ui_style_current.text_height;\n}\nexport function uiButtonHeight() {\n  return ui_style_current.button_height;\n}\nexport function uiButtonWidth() {\n  return ui_style_current.button_width;\n}\n\nexport function uiGetTooltipPad() {\n  return tooltip_pad;\n}\nexport function uiGetTooltipPanelPixelScale() {\n  return tooltip_panel_pixel_scale;\n}\n\nexport let font;\nexport let title_font;\n\nexport function uiGetFont() {\n  return font;\n}\nexport function uiGetTitleFont() {\n  return title_font;\n}\n\nlet color_button = makeColorSet([1,1,1,1]);\nexport function uiSetButtonColorSet(color_button_in) {\n  color_button = color_button_in;\n}\nexport function uiGetButtonRolloverColor() {\n  return color_button.rollover;\n}\nexport const color_panel = vec4(1, 1, 0.75, 1);\n\n\nlet sounds = {};\nexport let button_mouseover = false; // for callers to poll the very last button\nexport let button_focused = false; // for callers to poll the very last button\nexport let button_click = null; // on click, for callers to poll which mouse button, etc\nexport let button_last_spot_ret = null;\n\nexport function buttonWasFocused() {\n  return button_focused;\n}\n\nexport function buttonLastSpotRet() {\n  return button_last_spot_ret;\n}\n\nlet modal_dialog = null;\nexport let menu_up = false; // Boolean to be set by app to impact behavior, similar to a modal\nlet menu_fade_params = merge({}, menu_fade_params_default);\nlet menu_up_time = 0;\n\nlet dom_elems = [];\nlet dom_elems_issued = 0;\n\n// for modal dialogs\nlet button_keys;\n\nlet default_line_mode;\n\n// These can be of types string or LocalizableString\nlet buttons_default_labels = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  yes: 'Yes',\n  no: 'No',\n};\nlet default_copy_success_msg = 'Text copied to clipboard!';\nlet default_copy_failure_msg = 'Copy to clipboard FAILED, please copy from below.';\n\nexport function colorSetSetShades(rollover, down, disabled) {\n  color_set_shades[1] = rollover;\n  color_set_shades[2] = down;\n  color_set_shades[3] = disabled;\n  for (let ii = 0; ii < color_sets.length; ++ii) {\n    applyColorSet(color_sets[ii]);\n  }\n}\n\nexport function uiGetFontStyleFocused() {\n  return font_style_focused;\n}\n\nexport function uiSetFontStyleFocused(new_style) {\n  font_style_focused = new_style;\n}\n\nexport function uiSetPanelColor(color) {\n  v4copy(color_panel, color);\n}\nexport function uiGetPanelColor() {\n  return color_panel;\n}\n\nexport function loadUISprite(name, ws, hs) {\n  let wrap_s = gl.CLAMP_TO_EDGE;\n  let wrap_t = gl.CLAMP_TO_EDGE;\n  sprites[name] = spriteCreate({\n    name: `ui/${name}`,\n    ws,\n    hs,\n    wrap_s,\n    wrap_t,\n  });\n}\n\nexport function loadUISprite2(name, param) {\n  if (param === null) {\n    // skip it, assume not used\n    return;\n  }\n  if (param.atlas) {\n    sprites[name] = autoAtlas(param.atlas, param.name || name);\n    return;\n  }\n  let wrap_s = gl.CLAMP_TO_EDGE;\n  let wrap_t = param.wrap_t ? gl.REPEAT : gl.CLAMP_TO_EDGE;\n  let sprite_param = {\n    ws: param.ws,\n    hs: param.hs,\n    wrap_s,\n    wrap_t,\n    layers: param.layers,\n  };\n  if (param.url) {\n    sprite_param.url = param.url;\n  } else {\n    sprite_param.name = `ui/${param.name || name}`;\n  }\n  sprites[name] = spriteCreate(sprite_param);\n}\n\nfunction uiSetFonts(new_font, new_title_font) {\n  font = new_font;\n  title_font = new_title_font || font;\n}\n\nexport function setButtonsDefaultLabels(buttons_labels) {\n  for (const key in buttons_labels) {\n    buttons_default_labels[key.toLowerCase()] = buttons_labels[key];\n  }\n}\n\nexport function setProvideUserStringDefaultMessages(success_msg, failure_msg) {\n  default_copy_success_msg = success_msg;\n  default_copy_failure_msg = failure_msg;\n}\n\nconst base_ui_sprites = {\n  color_set_shades: [1, 1, 1],\n\n  white: { url: 'white' },\n\n  button: { atlas: 'default' },\n  button_rollover: { atlas: 'default' },\n  button_down: { atlas: 'default' },\n  button_disabled: { atlas: 'default' },\n  panel: { atlas: 'default' },\n\n  menu_entry: { atlas: 'default' },\n  menu_selected: { atlas: 'default' },\n  menu_down: { atlas: 'default' },\n  menu_header: { atlas: 'default' },\n  slider: { atlas: 'default' },\n  // slider_notch: { atlas: 'default' },\n  slider_handle: { atlas: 'default' },\n\n  checked: { atlas: 'default' },\n  unchecked: { atlas: 'default' },\n\n  scrollbar_bottom: { atlas: 'default' },\n  scrollbar_trough: { atlas: 'default' },\n  scrollbar_top: { atlas: 'default' },\n  scrollbar_handle_grabber: { atlas: 'default' },\n  scrollbar_handle: { atlas: 'default' },\n  progress_bar: { atlas: 'default' },\n  progress_bar_trough: { atlas: 'default' },\n\n  collapsagories: { atlas: 'default' },\n  collapsagories_rollover: { atlas: 'default' },\n  collapsagories_shadow_down: { atlas: 'default' },\n  collapsagories_shadow_up: null,\n};\n\nfunction uiStartup(param) {\n  font = param.font;\n  title_font = param.title_font || font;\n  KEYS = glov_input.KEYS;\n  PAD = glov_input.PAD;\n\n  let ui_sprites = {\n    ...base_ui_sprites,\n    ...param.ui_sprites,\n  };\n\n  for (let key in ui_sprites) {\n    let elem = ui_sprites[key];\n    if (typeof elem === 'object' && !Array.isArray(elem)) {\n      loadUISprite2(key, elem);\n    }\n  }\n  sprites.button_regular = sprites.button;\n\n  if (ui_sprites.color_set_shades) {\n    colorSetSetShades(...ui_sprites.color_set_shades);\n  }\n  if (ui_sprites.slider_params) {\n    sliderSetDefaultShrink(...ui_sprites.slider_params);\n  }\n\n  // Not doing this, instead, ignoring the color shades when specific sprites exist\n  // if (sprites.button_rollover && color_set_shades[1] !== 1) {\n  //   colorSetSetShades(1, color_set_shades[2], color_set_shades[3]);\n  // }\n  // if (sprites.button_down && color_set_shades[2] !== 1) {\n  //   colorSetSetShades(color_set_shades[1], 1, color_set_shades[3]);\n  // }\n  // if (sprites.button_disabled && color_set_shades[3] !== 1) {\n  //   colorSetSetShades(color_set_shades[1], color_set_shades[2], 1);\n  // }\n\n  button_keys = {\n    ok: { key: [KEYS.O], pad: [PAD.X], low_key: [KEYS.ESC] },\n    cancel: { key: [KEYS.ESC], pad: [PAD.B, PAD.Y] },\n  };\n  button_keys.yes = clone(button_keys.ok);\n  button_keys.yes.key.push(KEYS.Y);\n  button_keys.no = clone(button_keys.cancel);\n  button_keys.no.key.push(KEYS.N);\n\n  if (param.line_mode !== undefined) {\n    default_line_mode = param.line_mode;\n  } else {\n    default_line_mode = LINE_ALIGN|LINE_CAP_ROUND;\n    // let is_pixely = param.pixely && param.pixely !== 'off';\n    // if (is_pixely) {\n    //   // Maybe want to not do aligning here, causes inconsistencies when smoothly scrolling\n    //   default_line_mode = 0;\n    // }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  scaleSizes(1);\n}\n\nlet dynamic_text_elem;\nexport function uiGetDOMElem(last_elem, allow_modal) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  if (isMenuUp() && !allow_modal) {\n    // Note: this case is no longer needed for edit boxes (spot's focus logic\n    //   handles this), but links still rely on this\n    return null;\n  }\n  if (dom_elems_issued >= dom_elems.length || !last_elem) {\n    let elem = document.createElement('div');\n    uiElemAllocCheck();\n    elem.setAttribute('class', 'glovui_dynamic');\n    if (!dynamic_text_elem) {\n      dynamic_text_elem = document.getElementById('dynamic_text');\n    }\n    dynamic_text_elem.appendChild(elem);\n    dom_elems.push(elem);\n    last_elem = elem;\n  }\n  if (dom_elems[dom_elems_issued] !== last_elem) {\n    for (let ii = dom_elems_issued + 1; ii < dom_elems.length; ++ii) {\n      if (dom_elems[ii] === last_elem) {\n        dom_elems[ii] = dom_elems[dom_elems_issued];\n        dom_elems[dom_elems_issued] = last_elem;\n      }\n    }\n  }\n  let elem = dom_elems[dom_elems_issued];\n  dom_elems_issued++;\n  return elem;\n}\nlet dom_tab_index = 0;\nexport function uiGetDOMTabIndex() {\n  return ++dom_tab_index;\n}\n\nconst base_ui_sounds = {\n  button_click: 'button_click',\n  rollover: 'rollover',\n};\n\nexport function uiBindSounds(_sounds) {\n  sounds = defaults(_sounds || {}, base_ui_sounds);\n  for (let key in sounds) {\n    if (sounds[key]) {\n      soundLoad(sounds[key], sounds[key].opts);\n    }\n  }\n}\n\nlet draw_box_param = {\n  nozoom: true, // nozoom since different parts of the box get zoomed differently\n};\nexport function drawHBox(coords, s, color) {\n  spriteChainedStart();\n  let uidata = s.uidata;\n  let x = coords.x;\n  let ws = [uidata.wh[0] * coords.h, 0, (uidata.wh[2] || 0) * coords.h];\n  if (coords.no_min_width && ws[0] + ws[2] > coords.w) {\n    let scale = coords.w / (ws[0] + ws[2]);\n    ws[0] *= scale;\n    ws[2] *= scale;\n  } else if (uidata.wh[1]) {\n    ws[1] = max(0, coords.w - ws[0] - ws[2]);\n  } else {\n    // no rects, do simple stretch\n    ws[0] = coords.w;\n  }\n  draw_box_param.y = coords.y;\n  draw_box_param.z = coords.z;\n  draw_box_param.h = coords.h;\n  draw_box_param.color = color;\n  draw_box_param.color1 = coords.color1;\n  draw_box_param.shader = null; // gets overridden in drawDualTint\n  for (let ii = 0; ii < ws.length; ++ii) {\n    let my_w = ws[ii];\n    if (my_w) {\n      draw_box_param.x = x;\n      draw_box_param.w = my_w;\n      draw_box_param.uvs = uidata.rects[ii];\n      if (coords.color1) {\n        s.drawDualTint(draw_box_param);\n      } else {\n        s.draw(draw_box_param);\n      }\n    }\n    x += my_w;\n  }\n  spriteChainedStop();\n}\n\nexport function drawVBox(coords, s, color) {\n  spriteChainedStart();\n  let uidata = s.uidata;\n  let hs = [uidata.hw[0] * coords.w, 0, (uidata.hw[2] || 0) * coords.w];\n  let y = coords.y;\n  hs[1] = max(0, coords.h - hs[0] - hs[2]);\n  draw_box_param.x = coords.x;\n  draw_box_param.z = coords.z;\n  draw_box_param.w = coords.w;\n  draw_box_param.color = color;\n  draw_box_param.shader = null;\n  for (let ii = 0; ii < hs.length; ++ii) {\n    let my_h = hs[ii];\n    draw_box_param.y = y;\n    draw_box_param.h = my_h;\n    draw_box_param.uvs = uidata.rects[ii];\n    s.draw(draw_box_param);\n    y += my_h;\n  }\n  spriteChainedStop();\n}\n\nexport function drawBox(coords, s, pixel_scale, color, color1) {\n  spriteChainedStart();\n  let uidata = s.uidata;\n  let scale = pixel_scale;\n  let ws = [uidata.widths[0] * scale, 0, uidata.widths[2] * scale];\n  ws[1] = max(0, coords.w - ws[0] - ws[2]);\n  let hs = [uidata.heights[0] * scale, 0, uidata.heights[2] * scale];\n  hs[1] = max(0, coords.h - hs[0] - hs[2]);\n  let x = coords.x;\n  draw_box_param.z = coords.z;\n  draw_box_param.color = color;\n  draw_box_param.shader = null;\n  if (color1) {\n    draw_box_param.color1 = color1;\n  }\n  for (let ii = 0; ii < ws.length; ++ii) {\n    let my_w = ws[ii];\n    if (my_w) {\n      draw_box_param.x = x;\n      draw_box_param.w = my_w;\n      let y = coords.y;\n      for (let jj = 0; jj < hs.length; ++jj) {\n        let my_h = hs[jj];\n        if (my_h) {\n          draw_box_param.y = y;\n          draw_box_param.h = my_h;\n          draw_box_param.uvs = uidata.rects[jj * 3 + ii];\n          if (color1) {\n            s.drawDualTint(draw_box_param);\n          } else {\n            s.draw(draw_box_param);\n          }\n          y += my_h;\n        }\n      }\n      x += my_w;\n    }\n  }\n  spriteChainedStop();\n}\n\nexport function drawMultiPartBox(coords, scaleable_data, s, pixel_scale, color) {\n  spriteChainedStart();\n  let uidata = s.uidata;\n  let scale = pixel_scale;\n\n  let ws = [];\n  let fixed_w_sum = 0;\n  let scaleable_sum = 0;\n  for (let i = 0; i < uidata.widths.length; i++) {\n    if (scaleable_data.widths[i] < 0) {\n      ws.push(uidata.widths[i] * scale);\n      fixed_w_sum += uidata.widths[i] * scale;\n    } else {\n      ws.push(0);\n      scaleable_sum += scaleable_data.widths[i];\n    }\n  }\n  assert(scaleable_sum === 1);\n  for (let i = 0; i < uidata.widths.length; i++) {\n    if (scaleable_data.widths[i] >= 0) {\n      ws[i] = max(0, (coords.w - fixed_w_sum) * scaleable_data.widths[i]);\n    }\n  }\n\n  scaleable_sum = 0;\n  let hs = [];\n  let fixed_h_sum = 0;\n  for (let i = 0; i < uidata.heights.length; i++) {\n    if (scaleable_data.heights[i] < 0) {\n      hs.push(uidata.heights[i] * scale);\n      fixed_h_sum += uidata.heights[i] * scale;\n    } else {\n      hs.push(0);\n      scaleable_sum += scaleable_data.heights[i];\n    }\n  }\n  assert(scaleable_sum === 1);\n  for (let i = 0; i < uidata.heights.length; i++) {\n    if (scaleable_data.heights[i] >= 0) {\n      hs[i] = max(0, (coords.h - fixed_h_sum) * scaleable_data.heights[i]);\n    }\n  }\n  let x = coords.x;\n  for (let ii = 0; ii < ws.length; ++ii) {\n    let my_w = ws[ii];\n    if (my_w) {\n      let y = coords.y;\n      for (let jj = 0; jj < hs.length; ++jj) {\n        let my_h = hs[jj];\n        if (my_h) {\n          s.draw({\n            x, y, z: coords.z,\n            color,\n            w: my_w,\n            h: my_h,\n            uvs: uidata.rects[jj * ws.length + ii],\n            nozoom: true, // nozoom since different parts of the box get zoomed differently\n          });\n          y += my_h;\n        }\n      }\n      x += my_w;\n    }\n  }\n  spriteChainedStop();\n}\n\nexport function playUISound(name, volume) {\n  profilerStartFunc();\n  if (name === 'select') {\n    name = 'button_click';\n  }\n  if (sounds[name]) {\n    soundPlay(sounds[name], volume);\n  }\n  profilerStopFunc();\n}\n\nexport function focusCanvas() {\n  spotUnfocus();\n}\n\n// Returns true if the navigation inputs (arrows, etc) should go to the UI, not the app\nexport function uiHandlingNav() {\n  return menu_up || !spotPadSuppressed();\n}\n\nexport function panel(param) {\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(typeof param.w === 'number');\n  assert(typeof param.h === 'number');\n  param.z = param.z || (Z.UI - 1);\n  param.eat_clicks = param.eat_clicks === undefined ? true : param.eat_clicks;\n  let color = param.color || color_panel;\n  drawBox(param, param.sprite || sprites.panel, param.pixel_scale || panel_pixel_scale, color);\n  if (param.eat_clicks) {\n    glov_input.mouseOver(param);\n    linkObscureRect(param); // should this just happen for all non-peeking mouseOver() calls?\n  }\n}\n\nexport function drawTooltip(param) {\n  let { tooltip } = param;\n  if (typeof tooltip === 'function') {\n    tooltip = tooltip(param);\n    if (!tooltip) {\n      return;\n    }\n  }\n  tooltip = getStringFromLocalizable(tooltip);\n\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(typeof tooltip === 'string');\n\n  let clip_pause = spriteClipped();\n  if (clip_pause) {\n    spriteClipPause();\n  }\n\n  let spuid = sprites.panel.uidata;\n  let pixel_scale = param.pixel_scale || tooltip_panel_pixel_scale;\n  let tooltip_w = param.tooltip_width || tooltip_width;\n  let z = param.z || Z.TOOLTIP;\n  let tooltip_y0 = param.y;\n  let eff_tooltip_pad_left = param.tooltip_pad || (spuid.padh && spuid.padh[0]) * pixel_scale || tooltip_pad;\n  let eff_tooltip_pad_right = param.tooltip_pad || (spuid.padh && spuid.padh[2]) * pixel_scale || tooltip_pad;\n  let eff_tooltip_pad_top = param.tooltip_pad || (spuid.padv && spuid.padv[0]) * pixel_scale || tooltip_pad;\n  let eff_tooltip_pad_bottom = param.tooltip_pad || (spuid.padv && spuid.padv[2]) * pixel_scale || tooltip_pad;\n  let w = tooltip_w - eff_tooltip_pad_left - eff_tooltip_pad_right;\n  let do_markdown = param.tooltip_markdown !== false;\n  let dims;\n  if (do_markdown) {\n    dims = markdownAuto({\n      font_style: font_style_modal,\n      w,\n      align: ALIGN.HWRAP,\n      text_height: ui_style_current.text_height,\n      text: tooltip,\n      no_draw: true,\n    });\n  } else {\n    dims = font.dims(font_style_modal, w, 0, ui_style_current.text_height, tooltip);\n  }\n  let above = param.tooltip_above;\n  if (!above && param.tooltip_auto_above_offset) {\n    above = tooltip_y0 + dims.h + eff_tooltip_pad_top + eff_tooltip_pad_bottom > camera2d.y1();\n  }\n  let x = param.x;\n  let eff_tooltip_w = dims.w + eff_tooltip_pad_left + eff_tooltip_pad_right;\n  let right = param.tooltip_right;\n  let center = param.tooltip_center;\n  if (right && param.tooltip_auto_right_offset) {\n    // TODO: just use markdown align right instead\n    x += param.tooltip_auto_right_offset - eff_tooltip_w;\n  } else if (center && param.tooltip_auto_right_offset) {\n    // TODO: just use markdown align center instead\n    x += (param.tooltip_auto_right_offset - eff_tooltip_w) / 2;\n  }\n  if (x + eff_tooltip_w > camera2d.x1()) {\n    x = camera2d.x1() - eff_tooltip_w;\n  }\n\n  if (above) {\n    tooltip_y0 -= dims.h + eff_tooltip_pad_top + eff_tooltip_pad_bottom + (param.tooltip_auto_above_offset || 0);\n  }\n  let y = tooltip_y0 + eff_tooltip_pad_top;\n  if (param.tooltip_markdown === false) {\n    y += font.drawSizedWrapped(font_style_modal,\n      x + eff_tooltip_pad_left, y + tooltip_text_offs, z+1, w, 0, ui_style_current.text_height,\n      tooltip);\n  } else {\n    let mddims = markdownAuto({\n      font_style: font_style_modal,\n      x: x + eff_tooltip_pad_left,\n      y: y + tooltip_text_offs,\n      z: z+1,\n      w,\n      align: ALIGN.HWRAP,\n      text_height: ui_style_current.text_height,\n      text: tooltip\n    });\n    eff_tooltip_w = max(mddims.w + eff_tooltip_pad_left + eff_tooltip_pad_right, eff_tooltip_w);\n    y += mddims.h;\n  }\n  y += eff_tooltip_pad_bottom;\n\n  panel({\n    x,\n    y: tooltip_y0,\n    z,\n    w: eff_tooltip_w,\n    h: y - tooltip_y0,\n    pixel_scale,\n    eat_clicks: false,\n  });\n  if (clip_pause) {\n    spriteClipResume();\n  }\n}\n\nfunction checkHooks(param, click) {\n  if (param.hook) {\n    for (let ii = 0; ii < hooks.length; ++ii) {\n      if (click) {\n        hooks[ii].click(param);\n      }\n      hooks[ii].draw(param);\n    }\n  }\n}\n\nexport function drawTooltipBox(param) {\n  let { tooltip } = param;\n  if (typeof tooltip === 'function') {\n    tooltip = tooltip(param);\n    if (!tooltip) {\n      return;\n    }\n  }\n  drawTooltip({\n    x: param.x,\n    y: param.y + param.h + 2,\n    tooltip_auto_above_offset: param.h + 4,\n    tooltip_above: param.tooltip_above,\n    tooltip_auto_right_offset: param.w,\n    tooltip_right: param.tooltip_right,\n    tooltip_center: param.tooltip_center,\n    tooltip,\n    tooltip_width: param.tooltip_width,\n    tooltip_markdown: param.tooltip_markdown,\n  });\n}\n\nexport function progressBar(param) {\n  drawHBox(param, sprites.progress_bar_trough, param.color_trough || param.color || unit_vec);\n  let progress = clamp(param.progress, 0, 1);\n  drawHBox({\n    x: param.x + (param.centered ? param.w * (1-progress) * 0.5 : 0),\n    y: param.y,\n    z: (param.z || Z.UI) + Z_MIN_INC,\n    w: param.w * progress,\n    h: param.h,\n    no_min_width: true,\n  }, sprites.progress_bar, param.color || unit_vec);\n  if (param.tooltip) {\n    spot({\n      x: param.x, y: param.y,\n      w: param.w, h: param.h,\n      tooltip: param.tooltip,\n      def: SPOT_DEFAULT_LABEL,\n    });\n  }\n}\n\n\nlet button_y_offs = {\n  regular: 0,\n  down: 0,\n  rollover: 0,\n  disabled: 0,\n};\nexport function buttonSetDefaultYOffs(y_offs) {\n  merge(button_y_offs, y_offs);\n}\n\n// TODO: refactor so callers all use the new states 'focused'\nconst SPOT_STATE_TO_UI_BUTTON_STATE = {\n  [SPOT_STATE_REGULAR]: 'regular',\n  [SPOT_STATE_DOWN]: 'down',\n  [SPOT_STATE_FOCUSED]: 'rollover',\n  [SPOT_STATE_DISABLED]: 'disabled',\n};\n\nconst UISPOT_BUTTON_DISABLED = {\n  ...SPOT_DEFAULT_BUTTON,\n  disabled: true,\n  disabled_focusable: false,\n  sound_rollover: null,\n};\n\n\nexport function buttonShared(param) {\n  profilerStartFunc();\n  param.z = param.z || Z.UI;\n  if (param.rollover_quiet) {\n    param.sound_rollover = null;\n  }\n  let spot_ret;\n  if (param.draw_only && !param.draw_only_mouseover) {\n    // no spot() needed\n    spot_ret = { ret: false, state: 'regular', focused: false };\n  } else {\n    if (param.draw_only) {\n      assert(!param.def || param.def === SPOT_DEFAULT_BUTTON_DRAW_ONLY);\n      param.def = SPOT_DEFAULT_BUTTON_DRAW_ONLY;\n    } else if (param.disabled && !param.disabled_focusable) {\n      param.def = param.def || UISPOT_BUTTON_DISABLED;\n    } else {\n      param.def = param.def || SPOT_DEFAULT_BUTTON;\n    }\n    if (param.sound) {\n      param.sound_button = param.sound;\n    }\n    spot_ret = spot(param);\n    spot_ret.state = SPOT_STATE_TO_UI_BUTTON_STATE[spot_ret.spot_state];\n    if (spot_ret.ret) {\n      // TODO: refactor callers to gather this from spot_ret, passes as return from button()/etc\n      button_click = spot_ret;\n      button_click.was_double_click = spot_ret.double_click;\n    }\n  }\n\n  button_focused = button_mouseover = spot_ret.focused;\n  param.z += param.z_bias && param.z_bias[spot_ret.state] || 0;\n  button_last_spot_ret = spot_ret;\n  profilerStopFunc();\n  return spot_ret;\n}\n\nexport let button_last_color;\nexport function buttonBackgroundDraw(param, state) {\n  profilerStartFunc();\n  let colors = param.colors || color_button;\n  let color = button_last_color = param.color || colors[state];\n  if (!param.no_bg) {\n    let base_name = param.base_name || ((param.w/param.h < 1.5 && sprites.squarebutton) ? 'squarebutton' : 'button');\n    let sprite_name = `${base_name}_${state}`;\n    let sprite = sprites[sprite_name];\n    if (sprite) {\n      color = colors.regular;\n    } else {\n      sprite = sprites[base_name];\n    }\n\n    if (sprite.uidata.rects.length === 9) {\n      drawBox(param, sprite, param.pixel_scale || 1, color);\n    } else {\n      drawHBox(param, sprite, color);\n    }\n  }\n  profilerStopFunc();\n}\n\nexport function buttonSpotBackgroundDraw(param, spot_state) {\n  profilerStartFunc();\n  buttonBackgroundDraw(param, SPOT_STATE_TO_UI_BUTTON_STATE[spot_state]);\n  profilerStopFunc();\n}\n\nexport function buttonTextDraw(param, state, focused) {\n  profilerStartFunc();\n  buttonBackgroundDraw(param, state);\n  let hpad = min(param.font_height * 0.25, param.w * 0.1);\n  let yoffs = (param.yoffs && param.yoffs[state] !== undefined) ? param.yoffs[state] : button_y_offs[state];\n  let disabled = state === 'disabled';\n  let font_use = (param.font || font);\n  let font_style = disabled ? param.font_style_disabled || font_style_disabled :\n    focused ? param.font_style_focused || font_style_focused :\n    param.font_style_normal || font_style_normal;\n  let x = param.x + hpad;\n  let y = param.y + yoffs;\n  let z = param.z + 0.1;\n  let w = param.w - hpad * 2;\n  let align = param.align || glov_font.ALIGN.HVCENTERFIT;\n  let text_height = param.font_height;\n  if (param.markdown) {\n    markdownAuto({\n      font: font_use,\n      font_style,\n      x, y, z,\n      w, h: param.h,\n      align,\n      text_height,\n      text: param.text\n    });\n  } else {\n    font_use.drawSizedAligned(\n      font_style,\n      x, y, z,\n      text_height, align, w, param.h, param.text);\n  }\n  profilerStopFunc();\n}\n\nexport function buttonText(param) {\n  profilerStartFunc();\n  param.text = getStringFromLocalizable(param.text);\n\n  // required params\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(typeof param.text === 'string');\n  // optional params\n  // param.z = param.z || Z.UI;\n  param.w = param.w || ui_style_current.button_width;\n  param.h = param.h || ui_style_current.button_height;\n  param.font_height = param.font_height || (param.style || ui_style_current).text_height;\n\n  let spot_ret = buttonShared(param);\n  let { ret, state, focused } = spot_ret;\n  buttonTextDraw(param, state, focused);\n  profilerStopFunc();\n  return ret ? spot_ret : null;\n}\n\nfunction buttonImageDraw(param, state, focused) {\n  profilerStartFunc();\n  let uvs = param.img_rect;\n  let img = param.imgs && param.imgs[state] || param.img;\n  if (typeof param.frame === 'number') {\n    uvs = img.uidata.rects[param.frame];\n  }\n  buttonBackgroundDraw(param, state);\n  let color = button_last_color;\n  let img_origin = img.origin;\n  let img_w = img.size[0];\n  let img_h = img.size[1];\n  let aspect = img_w / img_h;\n  if (typeof param.frame === 'number') {\n    aspect = img.uidata.aspect ? img.uidata.aspect[param.frame] : 1;\n  }\n  let largest_w_horiz = param.w * param.shrink;\n  let largest_w_vert = param.h * param.shrink * aspect;\n  img_w = min(largest_w_horiz, largest_w_vert);\n  img_h = img_w / aspect;\n  let yoffs = (param.yoffs && param.yoffs[state] !== undefined) ? param.yoffs[state] : button_y_offs[state];\n  let pad_top = (param.h - img_h) / 2;\n  let draw_param = {\n    x: param.x + (param.left_align ? pad_top : (param.w - img_w) / 2) + img_origin[0] * img_w,\n    y: param.y + pad_top + img_origin[1] * img_h + yoffs,\n    z: param.z + (param.z_inc || Z_MIN_INC),\n    // use img_color if provided, use explicit tint if doing dual-tinting, otherwise button color\n    color: param.img_color || param.color1 && param.color || color,\n    color1: param.color1,\n    w: img_w / img.size[0],\n    h: img_h / img.size[1],\n    uvs,\n    rot: param.rotation,\n  };\n  if (param.flip) {\n    let { x, w } = draw_param;\n    draw_param.x = x + w;\n    draw_param.w = -w;\n  }\n  if (param.color1) {\n    img.drawDualTint(draw_param);\n  } else {\n    img.draw(draw_param);\n  }\n  profilerStopFunc();\n}\n\nexport function buttonImage(param) {\n  profilerStartFunc();\n  // required params\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(param.imgs || param.img && param.img.draw); // should be a sprite\n  // optional params\n  param.z = param.z || Z.UI;\n  param.w = param.w || ui_style_current.button_height;\n  param.h = param.h || param.w || ui_style_current.button_height;\n  param.shrink = param.shrink || 0.75;\n  //param.img_rect; null -> full image\n\n  let spot_ret = buttonShared(param);\n  let { ret, state, focused } = spot_ret;\n  buttonImageDraw(param, state, focused);\n  profilerStopFunc();\n  return ret ? spot_ret : null;\n}\n\nexport function button(param) {\n  if (param.img && !param.text) {\n    return buttonImage(param);\n  } else if (param.text && !param.img) {\n    return buttonText(param);\n  }\n  profilerStartFunc();\n\n  // required params\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  assert(param.img && param.img.draw); // should be a sprite\n  // optional params\n  param.z = param.z || Z.UI;\n  // w/h initialize differently than either buttonText or buttonImage\n  param.h = param.h || ui_style_current.button_height;\n  param.w = param.w || ui_style_current.button_width;\n  param.shrink = param.shrink || 0.75;\n  //param.img_rect; null -> full image\n  param.left_align = true; // always left-align images\n  param.font_height = param.font_height || (param.style || ui_style_current).text_height;\n\n  let spot_ret = buttonShared(param);\n  let { ret, state, focused } = spot_ret;\n  buttonImageDraw(param, state, focused);\n  // Hide some stuff on the second draw\n  let saved_no_bg = param.no_bg;\n  let saved_w = param.w;\n  let saved_x = param.x;\n  param.no_bg = true;\n  let img_size = param.h * param.shrink;\n  let img_pad = param.h * (1 - param.shrink) / 2;\n  param.x += img_pad + img_size;\n  param.w -= img_pad + img_size;\n  buttonTextDraw(param, state, focused);\n\n  param.no_bg = saved_no_bg;\n  param.w = saved_w;\n  param.x = saved_x;\n  profilerStopFunc();\n  return ret ? spot_ret : null;\n}\n\nexport function print(font_style, x, y, z, text) {\n  return font.drawSized(font_style, x, y, z, ui_style_current.text_height, text);\n}\n\nexport function label(param) {\n  profilerStartFunc();\n  let {\n    font_style,\n    font_style_focused: label_font_style_focused,\n    x, y,\n    align,\n    w, h,\n    text,\n    tooltip,\n    tooltip_markdown,\n    tooltip_above,\n    tooltip_right,\n    img,\n    frame,\n    img_color,\n    img_color_focused,\n  } = param;\n  if (param.style) {\n    assert(!param.style.color); // Received a FontStyle, expecting a UIStyle\n  }\n  let z = param.z || Z.UI;\n  assert(isFinite(x));\n  assert(isFinite(y));\n  let style = param.style || ui_style_current;\n  let use_font = param.font || font;\n  let size = param.size || style.text_height;\n  if (img) {\n    // nothing?  add alignment support?\n  } else {\n    assert(text !== undefined);\n    text = getStringFromLocalizable(text);\n    if (tooltip) {\n      if (!w) {\n        w = use_font.getStringWidth(font_style, size, text);\n        if (align & ALIGN.HRIGHT) {\n          x -= w;\n        } else if (align & ALIGN.HCENTER) {\n          x -= w/2;\n        }\n      }\n      if (!h) {\n        h = size;\n        if (align & ALIGN.VBOTTOM) {\n          y -= h;\n        } else if (align & ALIGN.VCENTER) {\n          y -= h/2;\n        }\n      }\n    }\n  }\n\n  if (tooltip) {\n    assert(isFinite(w));\n    assert(isFinite(h));\n    let spot_ret = spot({\n      x, y, w, h,\n      tooltip,\n      tooltip_markdown,\n      tooltip_width: param.tooltip_width,\n      tooltip_above,\n      tooltip_right: tooltip_right || param.align & ALIGN.HRIGHT,\n      tooltip_center: param.align & ALIGN.HCENTER,\n      def: SPOT_DEFAULT_LABEL,\n    });\n    if (spot_ret.focused && spotPadMode()) {\n      let need_focus_indicator = false;\n      if (img) {\n        if (img_color_focused) {\n          img_color = img_color_focused;\n        } else {\n          need_focus_indicator = true;\n        }\n      } else {\n        if (label_font_style_focused) {\n          font_style = label_font_style_focused;\n        } else {\n          need_focus_indicator = true;\n        }\n      }\n      if (need_focus_indicator) {\n        // No focused style provided, do a generic glow instead?\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        drawElipse(x - w*0.25, y-h*0.25, x + w*1.25, y + h*1.25, z - 0.001, 0.5, unit_vec);\n      }\n    }\n  }\n  let text_w = 0;\n  if (img) {\n    img.draw({\n      x, y, z, w, h,\n      color: img_color,\n      frame,\n    });\n  } else {\n    if (text) {\n      if (align) {\n        text_w = use_font.drawSizedAligned(font_style, x, y, z, size, align, w, h, text);\n      } else {\n        text_w = use_font.drawSized(font_style, x, y, z, size, text);\n      }\n    }\n  }\n  profilerStopFunc();\n  return w || text_w;\n}\n\nexport function checkbox(value, param) {\n  profilerStartFunc();\n\n  param.text = getStringFromLocalizable(param.text);\n\n  // required params\n  assert(typeof param.x === 'number');\n  assert(typeof param.y === 'number');\n  // optional params\n  param.z = param.z || Z.UI;\n  let { text } = param;\n  param.h = param.h || ui_style_current.button_height;\n  param.w = param.w || (text ? ui_style_current.button_width : param.h);\n  param.font_height = param.font_height || (param.style || ui_style_current).text_height;\n  param.align = param.align || (ALIGN.VCENTER | ALIGN.HLEFT | ALIGN.HFIT);\n\n  // do focus / tooltip / action\n  if (buttonText({\n    ...param,\n    no_bg: true,\n    text: '',\n    tooltip: param.tooltip,\n  })) {\n    value = !value;\n  }\n  let spot_ret = button_last_spot_ret;\n  let focused = spot_ret.focused;\n  let base_name_checked = param.base_name_checked || 'checked';\n  let base_name_unchecked = param.base_name_checked || 'unchecked';\n\n  // draw button / check box / check mark\n  buttonSpotBackgroundDraw({\n    ...param,\n    w: param.h,\n    base_name: value ? base_name_checked : base_name_unchecked,\n  }, spot_ret.spot_state);\n\n  // draw text\n  if (text) {\n    let font_use = param.font || font;\n    let disabled = param.disabled;\n    let font_style = disabled ? param.font_style_disabled || font_style_disabled :\n      focused ? param.font_style_focused || font_style_focused :\n      param.font_style_normal || font_style_normal;\n    text = getStringFromLocalizable(text);\n    let text_height = param.font_height;\n    let xoffs = param.h + font_use.getCharacterWidth(font_style, text_height, 0x20);\n    let x = param.x + xoffs;\n    let y = param.y;\n    let z = param.z + 0.1;\n    let w = param.w - xoffs;\n    let h = param.h;\n    let align = param.align;\n    if (param.markdown) {\n      markdownAuto({\n        font: font_use,\n        font_style,\n        x, y, z,\n        w, h,\n        align,\n        text_height,\n        text: text\n      });\n    } else {\n      font_use.drawSizedAligned(\n        font_style,\n        x, y, z,\n        text_height, align, w, h, text);\n    }\n  }\n\n  profilerStopFunc();\n  return value;\n}\n\n// Note: modal dialogs not really compatible with HTML overlay on top of the canvas!\nexport function modalDialog(param) {\n  param.title = getStringFromLocalizable(param.title);\n  param.text = `${getStringFromLocalizable(param.text) || ''}`;\n\n  assert(!param.title || typeof param.title === 'string');\n  assert(!param.text || typeof param.text === 'string');\n  assert(!param.buttons || typeof param.buttons === 'object');\n  if (param.buttons) {\n    for (let key in param.buttons) {\n      if (typeof param.buttons[key] !== 'object') {\n        // Button is function or null\n        param.buttons[key] = { cb: param.buttons[key] };\n      }\n    }\n  }\n  // assert(Object.keys(param.buttons).length);\n  modal_dialog = param;\n}\n\nexport function modalDialogClear() {\n  modal_dialog = null;\n}\n\nlet dom_requirement = vec2(24,24);\nlet virtual_size = vec2();\nfunction modalDialogRun() {\n  camera2d.domDeltaToVirtual(virtual_size, dom_requirement);\n  let fullscreen_mode = false;\n  let eff_font_height = modal_dialog.font_height || (modal_dialog.style || ui_style_current).text_height;\n  let eff_button_height = ui_style_current.button_height;\n  let pad = modal_pad;\n  let vpad = modal_pad * 0.5;\n  let general_scale = 1;\n  let exit_lock = true;\n  let num_lines;\n  if (!modal_dialog.no_fullscreen_zoom && virtual_size[0] > 0.05 * camera2d.h() && camera2d.w() > camera2d.h() * 2) {\n    // If a 24-pt font is more than 5% of the camera height, we're probably super-wide-screen\n    // on a mobile device due to keyboard being visible\n    fullscreen_mode = true;\n    eff_button_height = eff_font_height;\n    vpad = pad = 4;\n\n    let old_h = camera2d.h();\n    camera2d.push();\n    // Find a number of lines (and implicit scaling) such they all fit\n    for (num_lines = 1; ; num_lines++) {\n      camera2d.setAspectFixed2(1, eff_font_height * (modal_title_scale + 1 + num_lines) + pad * 4.5);\n      general_scale = camera2d.h() / old_h;\n      if (!modal_dialog.text) {\n        break;\n      }\n      const game_width = camera2d.x1() - camera2d.x0();\n      const text_w = game_width - pad * 2;\n      let wrapped_numlines = font.numLines(font_style_modal, text_w, 0, eff_font_height, modal_dialog.text);\n      if (wrapped_numlines <= num_lines) {\n        break;\n      }\n    }\n  }\n\n  let { buttons, click_anywhere } = modal_dialog;\n  let keys = Object.keys(buttons || {});\n\n  const game_width = camera2d.x1() - camera2d.x0();\n  const eff_modal_width = fullscreen_mode ? game_width : (modal_dialog.width || modal_width);\n  let eff_button_width = modal_dialog.button_width || modal_button_width;\n  let max_total_button_width = eff_modal_width * 2 / 3;\n  eff_button_width = min(eff_button_width, max_total_button_width / keys.length);\n  const text_w = eff_modal_width - pad * 2;\n  const x0 = camera2d.x0() + round((game_width - eff_modal_width) / 2);\n  let x = x0 + pad;\n  const y0 = fullscreen_mode ? 0 : (modal_dialog.y0 || modal_y0);\n  let y = round(y0 + pad);\n\n  if (modal_dialog.title) {\n    if (fullscreen_mode) {\n      title_font.drawSizedAligned(font_style_modal, x, y, Z.MODAL, eff_font_height * modal_title_scale,\n        glov_font.ALIGN.HFIT, text_w, 0, modal_dialog.title);\n      y += eff_font_height * modal_title_scale;\n    } else {\n      y += title_font.drawSizedWrapped(font_style_modal,\n        x, y, Z.MODAL, text_w, 0, eff_font_height * modal_title_scale,\n        modal_dialog.title);\n    }\n    y = round(y + vpad * 1.5);\n  }\n\n  if (modal_dialog.text || fullscreen_mode) {\n    if (fullscreen_mode) {\n      if (modal_dialog.text) {\n        font.drawSizedAligned(font_style_modal, x, y, Z.MODAL, eff_font_height,\n          glov_font.ALIGN.HWRAP, text_w, 0, modal_dialog.text);\n      }\n      y += eff_font_height * num_lines;\n    } else {\n      y += font.drawSizedWrapped(font_style_modal, x, y, Z.MODAL, text_w, 0, eff_font_height,\n        modal_dialog.text);\n    }\n    y = round(y + vpad);\n  }\n\n  let panel_color = modal_dialog.color || null; // tick might clear modalDialog\n\n  let tick_key;\n  if (modal_dialog.tick) {\n    let avail_width = eff_modal_width - pad * 2;\n    if (fullscreen_mode) {\n      avail_width -= (pad + eff_button_width) * keys.length;\n    }\n    let param = {\n      x0, y0, x, y,\n      modal_width: eff_modal_width,\n      avail_width,\n      font_height: eff_font_height,\n      fullscreen_mode,\n    };\n    tick_key = modal_dialog.tick(param);\n    y = param.y;\n  }\n\n  x = x0 + eff_modal_width - (pad + eff_button_width) * keys.length;\n  let did_button = -1;\n  for (let ii = 0; ii < keys.length; ++ii) {\n    let key = keys[ii];\n    let key_lower = key.toLowerCase();\n    let cur_button = buttons[key] = buttons[key] || {};\n    let eff_button_keys = button_keys[key_lower];\n    let pressed = 0;\n    if (eff_button_keys) {\n      for (let jj = 0; jj < eff_button_keys.key.length; ++jj) {\n        pressed += glov_input.keyUpEdge(eff_button_keys.key[jj], cur_button.in_event_cb);\n        if (eff_button_keys.key[jj] === tick_key) {\n          pressed++;\n        }\n      }\n      for (let jj = 0; jj < eff_button_keys.pad.length; ++jj) {\n        pressed += glov_input.padButtonUpEdge(eff_button_keys.pad[jj]);\n      }\n    }\n    if (click_anywhere && ii === 0 && glov_input.click()) {\n      ++pressed;\n    }\n    if (pressed) {\n      did_button = ii;\n    }\n    let but_label = cur_button.label || buttons_default_labels[key_lower] || key;\n    if (button(defaults({\n      key: `md_${key}`,\n      x, y, z: Z.MODAL,\n      w: eff_button_width,\n      h: eff_button_height,\n      text: but_label,\n      auto_focus: ii === 0,\n      focus_steal: keys.length === 1 && !modal_dialog.tick,\n    }, cur_button))) {\n      did_button = ii;\n    }\n    x = round(x + pad + eff_button_width);\n  }\n  // Also check low-priority keys\n  if (did_button === -1) {\n    for (let ii = 0; ii < keys.length; ++ii) {\n      let key = keys[ii];\n      let eff_button_keys = button_keys[key.toLowerCase()];\n      if (eff_button_keys && eff_button_keys.low_key) {\n        for (let jj = 0; jj < eff_button_keys.low_key.length; ++jj) {\n          if (glov_input.keyUpEdge(eff_button_keys.low_key[jj], buttons[key].in_event_cb) ||\n          eff_button_keys.low_key[jj] === tick_key) {\n            did_button = ii;\n          }\n        }\n      }\n    }\n  }\n  if (did_button !== -1) {\n    let key = keys[did_button];\n    playUISound('button_click');\n    modal_dialog = null;\n    if (buttons[key].cb) {\n      buttons[key].cb();\n    }\n    exit_lock = false;\n  }\n  if (keys.length > 0) {\n    y += eff_button_height;\n  }\n  y = round(y + vpad + pad);\n  panel({\n    x: x0,\n    y: y0,\n    z: Z.MODAL - 1,\n    w: eff_modal_width,\n    h: (fullscreen_mode ? camera2d.y1() : y) - y0,\n    pixel_scale: panel_pixel_scale * general_scale,\n    color: panel_color,\n  });\n\n  if (glov_input.pointerLocked() && exit_lock) {\n    glov_input.pointerLockExit();\n  }\n\n  glov_input.eatAllInput();\n  if (fullscreen_mode) {\n    camera2d.pop();\n  }\n}\n\nexport function modalTextEntry(param) {\n  let eb = editBoxCreate({\n    initial_focus: true,\n    spellcheck: false,\n    initial_select: true,\n    text: param.edit_text,\n    multiline: param.multiline,\n    enforce_multiline: param.enforce_multiline,\n    max_len: param.max_len,\n    max_visual_size: param.max_visual_size,\n    esc_clears: false,\n    auto_unfocus: true,\n  });\n  let buttons = {};\n  for (let key in param.buttons) {\n    let cb = param.buttons[key];\n    if ((cb !== null) && (typeof cb === 'object') && ('cb' in cb)) {\n      cb = param.buttons[key].cb;\n    }\n    if (typeof cb === 'function') {\n      cb = (function (old_fn) {\n        return function () {\n          old_fn(eb.getText());\n        };\n      }(cb));\n    }\n    buttons[key] = defaults({ cb }, param.buttons[key]);\n  }\n  param.buttons = buttons;\n  param.text = `${param.text || ''}`;\n  let old_tick = param.tick;\n  param.tick = function (params) {\n    let eb_ret = eb.run({\n      x: params.x,\n      y: params.y,\n      w: params.avail_width || param.edit_w,\n      font_height: params.font_height,\n    });\n    if (!params.fullscreen_mode) {\n      params.y += params.font_height * (param.multiline || 1) + modal_pad;\n    }\n    let ret;\n    if (eb_ret === eb.SUBMIT) {\n      ret = KEYS.O; // Do OK, Yes\n    } else if (eb_ret === eb.CANCEL) {\n      ret = KEYS.ESC; // Do Cancel, No\n    }\n    if (old_tick) {\n      ret = old_tick(params) || ret;\n    }\n    return ret;\n  };\n  modalDialog(param);\n}\n\n\nexport function createEditBox(param) {\n  return editBoxCreate(param);\n}\n\nlet pp_bad_frames = 0;\n\nexport function isMenuUp() {\n  return modal_dialog || menu_up;\n}\n\nfunction releaseOldUIElemData() {\n  for (let type in ui_elem_data) {\n    let by_type = ui_elem_data[type];\n    let any = false;\n    let keys = Object.keys(by_type);\n    for (let ii = 0; ii < keys.length; ++ii) {\n      let key = keys[ii];\n      let elem_data = by_type[key];\n      if (elem_data.frame_index < glov_engine.frame_index - 1) {\n        delete by_type[key];\n      } else {\n        any = true;\n      }\n    }\n    if (!any) {\n      delete ui_elem_data[type];\n    }\n  }\n}\n\nfunction uiTick(dt) {\n  per_frame_dom_alloc[glov_engine.frame_index % per_frame_dom_alloc.length] = 0;\n  releaseOldUIElemData();\n\n  editBoxTick();\n  linkTick();\n\n  dom_elems_issued = 0;\n  dom_tab_index = 0;\n\n  let pp_this_frame = false;\n  if (modal_dialog || menu_up) {\n    let params = menu_fade_params;\n    if (!menu_up) {\n      // Modals get defaults\n      params = menu_fade_params_default;\n    }\n    menu_up_time += dt;\n    // Effects during modal dialogs\n    if (glov_engine.postprocessing && !glov_engine.defines.NOPP) {\n      let factor = min(menu_up_time / 500, 1);\n      if (factor < 1) {\n        glov_engine.renderNeeded();\n      }\n      // Note: this lerp used to be done later in the frame (during drawing, not queueing) a problem?\n      let blur_factor = lerp(factor, params.blur[0], params.blur[1]);\n      if (blur_factor) {\n        effectsQueue(params.z - 2, doBlurEffect.bind(null, blur_factor));\n      }\n      let saturation = lerp(factor, params.saturation[0], params.saturation[1]);\n      let brightness = lerp(factor, params.brightness[0], params.brightness[1]);\n      if (saturation !== 1 || brightness !== 1) {\n        effectsQueue(params.z - 1, doDesaturateEffect.bind(null, saturation, brightness));\n      }\n      pp_this_frame = true;\n    } else {\n      // Or, just darken\n      sprites.white.draw({\n        x: camera2d.x0Real(),\n        y: camera2d.y0Real(),\n        z: params.z - 2,\n        color: params.fallback_darken,\n        w: camera2d.wReal(),\n        h: camera2d.hReal(),\n      });\n    }\n  } else {\n    menu_up_time = 0;\n  }\n  menu_up = false;\n\n  if (!glov_engine.is_loading && glov_engine.getFrameDtActual() > 50 && pp_this_frame) {\n    pp_bad_frames = (pp_bad_frames || 0) + 1;\n    if (pp_bad_frames >= 6) { // 6 in a row, disable superfluous postprocessing\n      glov_engine.postprocessingAllow(false);\n    }\n  } else if (pp_bad_frames) {\n    pp_bad_frames = 0;\n  }\n\n  spotTopOfFrame();\n  uiStyleTopOfFrame();\n\n  if (modal_dialog) {\n    modalDialogRun();\n  }\n}\n\nfunction uiEndFrame() {\n  spotEndOfFrame();\n\n  if (glov_input.click({\n    x: -Infinity, y: -Infinity,\n    w: Infinity, h: Infinity,\n  })) {\n    spotUnfocus();\n  }\n\n  while (dom_elems_issued < dom_elems.length) {\n    let elem = dom_elems.pop();\n    dynamic_text_elem.removeChild(elem);\n  }\n}\n\nfunction cleanupDOMElems() {\n  while (dom_elems.length) {\n    let elem = dom_elems.pop();\n    dynamic_text_elem.removeChild(elem);\n  }\n}\n\nexport function menuUp(param) {\n  merge(menu_fade_params, menu_fade_params_default);\n  if (param) {\n    merge(menu_fade_params, param);\n  }\n  menu_up = true;\n  glov_input.eatAllInput();\n}\n\nexport function copyTextToClipboard(text) {\n  let textArea = document.createElement('textarea');\n  textArea.style.position = 'fixed';\n  textArea.style.top = 0;\n  textArea.style.left = 0;\n  textArea.style.width = '2em';\n  textArea.style.height = '2em';\n  textArea.style.border = 'none';\n  textArea.style.outline = 'none';\n  textArea.style.boxShadow = 'none';\n  textArea.style.background = 'transparent';\n  textArea.value = text;\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  let ret = false;\n  try {\n    ret = document.execCommand('copy');\n  } catch (err) {\n    // do nothing\n  }\n\n  document.body.removeChild(textArea);\n  return ret;\n}\n\nexport function provideUserString(title, str, alt_buttons) {\n  let copy_success = copyTextToClipboard(str);\n  modalTextEntry({\n    edit_w: 400,\n    edit_text: str.replace(/[\\n\\r]/g, ' '),\n    title,\n    text: copy_success ?\n      default_copy_success_msg :\n      default_copy_failure_msg,\n    buttons: { ...(alt_buttons || {}), ok: null },\n  });\n}\n\nconst draw_rect_param = {};\nexport function drawRect(x0, y0, x1, y1, z, color) {\n  let mx = min(x0, x1);\n  let my = min(y0, y1);\n  let Mx = max(x0, x1);\n  let My = max(y0, y1);\n  draw_rect_param.x = mx;\n  draw_rect_param.y = my;\n  draw_rect_param.z = z;\n  draw_rect_param.w = Mx - mx;\n  draw_rect_param.h = My - my;\n  draw_rect_param.color = color;\n  return sprites.white.draw(draw_rect_param);\n}\n\nexport function drawRect2(param) {\n  return sprites.white.draw(param);\n}\n\nconst draw_rect_4color_param = {};\nexport function drawRect4Color(x0, y0, x1, y1, z, color_ul, color_ur, color_ll, color_lr) {\n  let mx = min(x0, x1);\n  let my = min(y0, y1);\n  let Mx = max(x0, x1);\n  let My = max(y0, y1);\n  draw_rect_4color_param.x = mx;\n  draw_rect_4color_param.y = my;\n  draw_rect_4color_param.z = z;\n  draw_rect_4color_param.w = Mx - mx;\n  draw_rect_4color_param.h = My - my;\n  draw_rect_4color_param.color_ul = color_ul;\n  draw_rect_4color_param.color_ll = color_ll;\n  draw_rect_4color_param.color_lr = color_lr;\n  draw_rect_4color_param.color_ur = color_ur;\n  return sprites.white.draw4Color(draw_rect_4color_param);\n}\n\nfunction spreadTechParams(spread) {\n  // spread=0 -> 1\n  // spread=0.5 -> 2\n  // spread=0.75 -> 4\n  // spread=1 -> large enough to AA\n  spread = min(max(spread, 0), 0.99);\n\n  let tech_params = {\n    param0: vec4(0,0,0,0),\n  };\n\n  tech_params.param0[0] = 1 / (1 - spread);\n  tech_params.param0[1] = -0.5 * tech_params.param0[0] + 0.5;\n  return tech_params;\n}\n\nlet temp_color = vec4();\nfunction premulAlphaColor(color) {\n  temp_color[0] = color[0] * color[3];\n  temp_color[1] = color[1] * color[3];\n  temp_color[2] = color[2] * color[3];\n  temp_color[3] = color[3];\n  return temp_color;\n}\nfunction premulAlphaAdditiveColor(color) {\n  temp_color[0] = color[0] * color[3];\n  temp_color[1] = color[1] * color[3];\n  temp_color[2] = color[2] * color[3];\n  temp_color[3] = 0;\n  return temp_color;\n}\nfunction drawElipseInternal(sprite, x0, y0, x1, y1, z, spread, tu0, tv0, tu1, tv1, color, blend) {\n  if (!glov_engine.defines.NOPREMUL) {\n    if (!blend) {\n      blend = BLEND_PREMULALPHA;\n      color = premulAlphaColor(color);\n    } else if (blend === BLEND_ADDITIVE) {\n      blend = BLEND_PREMULALPHA;\n      color = premulAlphaAdditiveColor(color);\n    }\n  }\n  spriteQueueRaw(sprite.texs,\n    x0, y0, z, x1 - x0, y1 - y0,\n    tu0, tv0, tu1, tv1,\n    color, glov_font.font_shaders.font_aa, spreadTechParams(spread), blend);\n}\n\nfunction drawCircleInternal(sprite, x, y, z, r, spread, tu0, tv0, tu1, tv1, color, blend) {\n  let x0 = x - r * 2 + r * 4 * tu0;\n  let x1 = x - r * 2 + r * 4 * tu1;\n  let y0 = y - r * 2 + r * 4 * tv0;\n  let y1 = y - r * 2 + r * 4 * tv1;\n  drawElipseInternal(sprite, x0, y0, x1, y1, z, spread, tu0, tv0, tu1, tv1, color, blend);\n}\n\nfunction initCircleSprite() {\n  const CIRCLE_SIZE = 32;\n  let data = new Uint8Array(CIRCLE_SIZE*CIRCLE_SIZE);\n  let midp = (CIRCLE_SIZE - 1) / 2;\n  for (let i = 0; i < CIRCLE_SIZE; i++) {\n    for (let j = 0; j < CIRCLE_SIZE; j++) {\n      let d = sqrt((i - midp)*(i - midp) + (j - midp)*(j - midp)) / midp;\n      let v = clamp(1 - d, 0, 1);\n      data[i + j*CIRCLE_SIZE] = v * 255;\n    }\n  }\n  sprites.circle = spriteCreate({\n    url: 'circle',\n    width: CIRCLE_SIZE, height: CIRCLE_SIZE,\n    format: TEXTURE_FORMAT.R8,\n    data,\n    filter_min: gl.LINEAR,\n    filter_mag: gl.LINEAR,\n    wrap_s: gl.CLAMP_TO_EDGE,\n    wrap_t: gl.CLAMP_TO_EDGE,\n    origin: vec2(0.5, 0.5),\n  });\n}\n\nexport function drawElipse(x0, y0, x1, y1, z, spread, color, blend) {\n  if (!sprites.circle) {\n    initCircleSprite();\n  }\n  drawElipseInternal(sprites.circle, x0, y0, x1, y1, z, spread, 0, 0, 1, 1, color, blend);\n}\n\nexport function drawCircle(x, y, z, r, spread, color, blend) {\n  if (!sprites.circle) {\n    initCircleSprite();\n  }\n  drawCircleInternal(sprites.circle, x, y, z, r, spread, 0, 0, 1, 1, color, blend);\n}\n\nexport function drawHollowCircle(x, y, z, r, spread, color, blend) {\n  if (!sprites.hollow_circle) {\n    const CIRCLE_SIZE = 128;\n    const LINE_W = 2;\n    let data = new Uint8Array(CIRCLE_SIZE*CIRCLE_SIZE);\n    let midp = (CIRCLE_SIZE - 1) / 2;\n    for (let i = 0; i < CIRCLE_SIZE; i++) {\n      for (let j = 0; j < CIRCLE_SIZE; j++) {\n        let d = sqrt((i - midp)*(i - midp) + (j - midp)*(j - midp)) / midp;\n        let v = clamp(1 - d, 0, 1);\n        if (v > 0.5) {\n          v = 1 - v;\n        }\n        v += (LINE_W / CIRCLE_SIZE);\n        data[i + j*CIRCLE_SIZE] = v * 255;\n      }\n    }\n    sprites.hollow_circle = spriteCreate({\n      url: 'hollow_circle',\n      width: CIRCLE_SIZE, height: CIRCLE_SIZE,\n      format: TEXTURE_FORMAT.R8,\n      data,\n      filter_min: gl.LINEAR,\n      filter_mag: gl.LINEAR,\n      wrap_s: gl.CLAMP_TO_EDGE,\n      wrap_t: gl.CLAMP_TO_EDGE,\n      origin: vec2(0.5, 0.5),\n    });\n  }\n  drawCircleInternal(sprites.hollow_circle, x, y, z, r, spread, 0, 0, 1, 1, color, blend);\n}\n\n\nconst LINE_TEX_W=16;\nconst LINE_TEX_H=16; // Only using 15, so we can have a value of 255 in the middle\nconst LINE_MIDP = floor((LINE_TEX_H - 1) / 2);\nconst LINE_V0 = 0.5/LINE_TEX_H;\nconst LINE_V1 = 1-1.5/LINE_TEX_H;\nconst LINE_U0 = 0.5/LINE_TEX_W;\nconst LINE_U1 = (LINE_MIDP + 0.5) / LINE_TEX_W;\nconst LINE_U2 = 1 - LINE_U1; // 1 texel away from LINE_U1\nconst LINE_U3 = 1 - 0.5/LINE_TEX_W;\nlet line_last_shader_param = { param0: [0,0] };\nexport function drawLine(x0, y0, x1, y1, z, w, precise, color, mode) {\n  if (mode === undefined) {\n    mode = default_line_mode;\n  }\n  let blend;\n  if (!glov_engine.defines.NOPREMUL) {\n    blend = BLEND_PREMULALPHA;\n    color = premulAlphaColor(color);\n  }\n\n  let tex_key = mode & LINE_CAP_ROUND ? 'line3' : 'line2';\n  if (!sprites[tex_key]) {\n    let data = new Uint8Array(LINE_TEX_W * LINE_TEX_H);\n    let i1 = LINE_MIDP;\n    let i2 = LINE_TEX_W - 1 - LINE_MIDP;\n    if (tex_key === 'line2') {\n      // rectangular caps\n      for (let j = 0; j < LINE_TEX_H; j++) {\n        let d = abs((j - LINE_MIDP) / LINE_MIDP);\n        let j_value = round(clamp(1 - d, 0, 1) * 255);\n        for (let i = 0; i < LINE_TEX_W; i++) {\n          d = i < i1 ? i/LINE_MIDP : i >= i2 ? 1 - (i-i2) / LINE_MIDP : 1;\n          let i_value = round(clamp(d, 0, 1) * 255);\n          data[i + j*LINE_TEX_W] = min(i_value, j_value);\n        }\n      }\n    } else {\n      // round caps\n      for (let j = 0; j < LINE_TEX_H; j++) {\n        let d = abs((j - LINE_MIDP) / LINE_MIDP);\n        for (let i = 0; i < LINE_TEX_W; i++) {\n          let id = i < i1 ? 1-i/LINE_MIDP : i >= i2 ? (i-i2) / LINE_MIDP : 0;\n          let dv = sqrt(id*id + d*d);\n          dv = clamp(1-dv, 0, 1);\n          data[i + j*LINE_TEX_W] = round(dv * 255);\n        }\n      }\n    }\n    sprites[tex_key] = spriteCreate({\n      url: tex_key,\n      width: LINE_TEX_W, height: LINE_TEX_H,\n      format: TEXTURE_FORMAT.R8,\n      data,\n      filter_min: gl.LINEAR,\n      filter_mag: gl.LINEAR,\n      wrap_s: gl.CLAMP_TO_EDGE,\n      wrap_t: gl.CLAMP_TO_EDGE,\n    });\n  }\n  let texs = sprites[tex_key].texs;\n\n  const camera_xscale = camera2d.data[4];\n  const camera_yscale = camera2d.data[5];\n  let virtual_to_pixels = (camera_xscale + camera_yscale) * 0.5;\n  let pixels_to_virutal = 1/virtual_to_pixels;\n  let w_in_pixels = w * virtual_to_pixels;\n  let draw_w_pixels = w_in_pixels + 2*2;\n  let half_draw_w_pixels = draw_w_pixels * 0.5;\n  let draw_w = half_draw_w_pixels * pixels_to_virutal;\n  // let tex_delta_for_pixel = 1 / draw_w_pixels; // should be 51/255 for width=1 (draw_w_pixels = 5)\n\n  let dx = x1 - x0;\n  let dy = y1 - y0;\n  let length = sqrt(dx*dx + dy*dy);\n  dx /= length;\n  dy /= length;\n  let tangx = -dy * draw_w;\n  let tangy = dx * draw_w;\n\n  if (mode & LINE_ALIGN) {\n    // align drawing so that the edge of the line is aligned with a pixel edge\n    //   (avoids a 0.1,1.0,0.1 line drawing in favor of 1.0,0.2, which will be crisper, if slightly visually offset)\n    let y0_real = (y0 - camera2d.data[1]) * camera2d.data[5];\n    let y0_real_aligned = round(y0_real - half_draw_w_pixels) + half_draw_w_pixels;\n    let yoffs = (y0_real_aligned - y0_real) / camera2d.data[5];\n    y0 += yoffs;\n    y1 += yoffs;\n\n    let x0_real = (x0 - camera2d.data[0]) * camera2d.data[4];\n    let x0_real_aligned = round(x0_real - half_draw_w_pixels) + half_draw_w_pixels;\n    let xoffs = (x0_real_aligned - x0_real) / camera2d.data[4];\n    x0 += xoffs;\n    x1 += xoffs;\n  }\n\n  let tex_delta_for_pixel = 2/draw_w_pixels;\n  let step_start = 1 - (w_in_pixels + 1) / draw_w_pixels;\n  let step_end = step_start + tex_delta_for_pixel;\n  step_end = 1 + precise * (step_end - 1);\n  let A = 1.0 / (step_end - step_start);\n  let B = -step_start * A;\n\n  if (mode & LINE_NO_AA) {\n    A *= 512;\n    B = B * 512 - (512/2-0.5);\n  }\n\n  let shader_param;\n  if (line_last_shader_param.param0[0] !== A ||\n    line_last_shader_param.param0[1] !== B\n  ) {\n    line_last_shader_param = { param0: [A, B] };\n  }\n  shader_param = line_last_shader_param;\n\n  spriteQueueRaw4(texs,\n    x1 + tangx, y1 + tangy,\n    x1 - tangx, y1 - tangy,\n    x0 - tangx, y0 - tangy,\n    x0 + tangx, y0 + tangy,\n    z,\n    LINE_U1, LINE_V0, LINE_U2, LINE_V1,\n    color, glov_font.font_shaders.font_aa, shader_param, blend);\n\n  if (mode & (LINE_CAP_ROUND|LINE_CAP_SQUARE)) {\n    // round caps (line3) - square caps (line2)\n    let nx = dx * w/2;\n    let ny = dy * w/2;\n    spriteQueueRaw4(texs,\n      x1 - tangx, y1 - tangy,\n      x1 + tangx, y1 + tangy,\n      x1 + tangx + nx, y1 + tangy + ny,\n      x1 - tangx + nx, y1 - tangy + ny,\n      z,\n      LINE_U2, LINE_V1, LINE_U3, LINE_V0,\n      color, glov_font.font_shaders.font_aa, shader_param, blend);\n    spriteQueueRaw4(texs,\n      x0 - tangx, y0 - tangy,\n      x0 + tangx, y0 + tangy,\n      x0 + tangx - nx, y0 + tangy - ny,\n      x0 - tangx - nx, y0 - tangy - ny,\n      z,\n      LINE_U1, LINE_V1, LINE_U0, LINE_V0,\n      color, glov_font.font_shaders.font_aa, shader_param, blend);\n  }\n}\n\nexport function drawHollowRect(x0, y0, x1, y1, z, w, precise, color, mode) {\n  drawLine(x0, y0, x1, y0, z, w, precise, color, mode);\n  drawLine(x1, y0, x1, y1, z, w, precise, color, mode);\n  drawLine(x1, y1, x0, y1, z, w, precise, color, mode);\n  drawLine(x0, y1, x0, y0, z, w, precise, color, mode);\n}\n\nexport function drawHollowRect2(param) {\n  drawHollowRect(param.x, param.y, param.x + param.w, param.y + param.h,\n    param.z || Z.UI, param.line_width || 1, param.precise || 1, param.color || unit_vec);\n}\n\nexport function drawCone(x0, y0, x1, y1, z, w0, w1, spread, color) {\n  let blend;\n  if (!glov_engine.defines.NOPREMUL) {\n    blend = BLEND_PREMULALPHA;\n    color = premulAlphaColor(color);\n  }\n  if (!sprites.cone) {\n    const CONE_SIZE = 32;\n    let data = new Uint8Array(CONE_SIZE*CONE_SIZE);\n    let midp = (CONE_SIZE - 1) / 2;\n    for (let i = 0; i < CONE_SIZE; i++) {\n      for (let j = 0; j < CONE_SIZE; j++) {\n        let dx = 0;\n        let dy = 0;\n        let d = 0;\n        if (i > midp) {\n          dx = (i - midp) / midp;\n          dy = abs(j - midp) / midp;\n          let dCircle = sqrt(dx*dx + dy*dy);\n          d = dx * dCircle;\n        }\n        let v = clamp(1 - d, 0, 1);\n        data[i + j*CONE_SIZE] = v * 255;\n      }\n    }\n    sprites.cone = spriteCreate({\n      url: 'cone',\n      width: CONE_SIZE, height: CONE_SIZE,\n      format: TEXTURE_FORMAT.R8,\n      data,\n      filter_min: gl.LINEAR,\n      filter_mag: gl.LINEAR,\n      wrap_s: gl.CLAMP_TO_EDGE,\n      wrap_t: gl.CLAMP_TO_EDGE,\n      origin: vec2(0.5, 0.5),\n    });\n  }\n  let dx = x1 - x0;\n  let dy = y1 - y0;\n  let length = sqrt(dx*dx + dy*dy);\n  dx /= length;\n  dy /= length;\n  let tangx = -dy;\n  let tangy = dx;\n  spriteQueueRaw4(sprites.cone.texs,\n    x0 - tangx*w0, y0 - tangy*w0,\n    x0 + tangx*w0, y0 + tangy*w0,\n    x1 + tangx*w1, y1 + tangy*w1,\n    x1 - tangx*w1, y1 - tangy*w1,\n    z,\n    0, 0, 1, 1,\n    color, glov_font.font_shaders.font_aa, spreadTechParams(spread), blend);\n}\n\nexport function setFontHeight(_font_height) {\n  uiStyleModify(uiStyleDefault(), {\n    text_height: _font_height,\n  });\n}\n\nfunction uiApplyStyle(style) {\n  ui_style_current = style;\n  exports.font_height = style.text_height;\n  exports.button_width = style.button_width;\n  exports.button_height = style.button_height;\n  fontSetDefaultSize(style.text_height);\n}\n\nexport function setButtonHeight(button_height) {\n  panel_pixel_scale = button_height / sprites.panel.uidata.total_h; // button_height / panel pixel resolution\n  scrollAreaSetPixelScale(button_height / sprites.button.uidata.total_h);\n  uiStyleModify(uiStyleDefault(), {\n    button_height,\n  });\n}\n\nexport function scaleSizes(scale) {\n  let text_height = round(24 * scale);\n  let button_width = round(200 * scale);\n  modal_button_width = round(button_width / 2);\n  modal_width = round(600 * scale);\n  modal_y0 = round(200 * scale);\n  modal_title_scale = 1.2;\n  modal_pad = round(16 * scale);\n  tooltip_width = round(400 * scale);\n  tooltip_pad = round(8 * scale);\n\n  // calls `uiStyleApply()`:\n  uiStyleModify(uiStyleDefault(), {\n    text_height,\n    button_width,\n  });\n  let button_height = round(32 * scale);\n  setButtonHeight(button_height);\n  tooltip_panel_pixel_scale = panel_pixel_scale; // panel_pixel_scale set in setButtonHeight()\n}\n\nexport function setPanelPixelScale(scale) {\n  tooltip_panel_pixel_scale = panel_pixel_scale = scale;\n}\n\nexport function setModalSizes(_modal_button_width, width, y0, title_scale, pad) {\n  modal_button_width = _modal_button_width || round(ui_style_current.button_width / 2);\n  modal_width = width || 600;\n  modal_y0 = y0 || 200;\n  modal_title_scale = title_scale || 1.2;\n  modal_pad = pad || modal_pad;\n}\n\nexport function setTooltipWidth(_tooltip_width, _tooltip_panel_pixel_scale) {\n  tooltip_width = _tooltip_width;\n  tooltip_panel_pixel_scale = _tooltip_panel_pixel_scale;\n  tooltip_pad = round(modal_pad / 2 * _tooltip_panel_pixel_scale);\n}\n\n// This is useful for some fonts if the UI uses primarily/entirely upper-case strings, to look more centered\n// DEPRECATED: use a 9-patch panel with padding instead\nexport function setTooltipTextOffset(_tooltip_text_offs) {\n  tooltip_text_offs = _tooltip_text_offs;\n}\n","import assert from 'assert';\nimport { tail } from 'glov/common/util';\nimport verify from 'glov/common/verify';\nimport { internal as ui_internal } from './ui';\nconst { uiApplyStyle } = ui_internal;\n\nimport type { DataObject, TSMap } from 'glov/common/types';\n\nexport type UIStyleDef = {\n  text_height?: number | string;\n  button_width?: number | string;\n  button_height?: number | string;\n};\n\nexport type UIStyleFields = {\n  // font: Font;\n  // font_style: FontStyle;\n  // font_style_focused: FontStyle;\n  // font_style_disabled: FontStyle;\n  text_height: number;\n  // text_align: ALIGN;\n  button_width: number;\n  button_height: number;\n  // color sets - always a full set, and style defs could do single color for convenience and button param tints color\n  // button_color_set: ColorSet;\n  // button_img_regular: Sprite;\n  // button_img_down: Sprite;\n  // button_img_focused: Sprite;\n  // button_img_disabled: Sprite;\n  // sound_button: string;\n  // sound_rollover: string;\n  // tooltip_width: number;\n  // tooltip_pad: number;\n  // tooltip_pixel_scale: number;\n};\n\nconst default_style_params_init: UIStyleFields = {\n  text_height: 24,\n  button_width: 200,\n  button_height: 32,\n};\n\n\nexport type UIStyle = Readonly<UIStyleFields>;\n\nlet ui_style_default: UIStyle;\nlet ui_style_current: UIStyle;\n\nclass UIStyleImpl implements UIStyleFields {\n  id_chain: string[];\n  text_height!: number;\n  button_width!: number;\n  button_height!: number;\n  constructor(id_chain: string[]) {\n    this.id_chain = id_chain;\n  }\n}\n\ntype UIStyleDefEntry = {\n  def: UIStyleDef;\n  deps: UIStyleImpl[];\n};\nlet style_params: TSMap<UIStyleDefEntry> = Object.create(null);\nlet style_param_auto_last_idx = 0;\nstyle_params.default = {\n  def: default_style_params_init,\n  deps: [],\n};\n\nfunction uiStyleCompute(style: UIStyleImpl): void {\n  let id_chain = style.id_chain;\n  // TODO: do similar inheritance for every parameter\n  let text_height!: number;\n  let button_width!: number;\n  let button_height!: number;\n  for (let ii = 0; ii < id_chain.length; ++ii) {\n    let id = id_chain[ii];\n    let entry = style_params[id];\n    assert(entry);\n    let v = entry.def.text_height;\n    if (v !== undefined) {\n      if (typeof v === 'string') {\n        let m = v.match(/^(\\d+)%$/);\n        assert(m);\n        text_height *= Number(m[1])/100;\n      } else {\n        assert.equal(typeof v, 'number');\n        text_height = v;\n      }\n    }\n    v = entry.def.button_width;\n    if (v !== undefined) {\n      if (typeof v === 'string') {\n        let m = v.match(/^(\\d+)%$/);\n        assert(m);\n        button_width *= Number(m[1])/100;\n      } else {\n        assert.equal(typeof v, 'number');\n        button_width = v;\n      }\n    }\n    v = entry.def.button_height;\n    if (v !== undefined) {\n      if (typeof v === 'string') {\n        let m = v.match(/^(\\d+)%$/);\n        assert(m);\n        button_height *= Number(m[1])/100;\n      } else {\n        assert.equal(typeof v, 'number');\n        button_height = v;\n      }\n    }\n    if (ii === 0) {\n      // First step, should always get valid values from the default style\n      assert(typeof text_height === 'number');\n      assert(typeof button_width === 'number');\n      assert(typeof button_height === 'number');\n    }\n  }\n  style.text_height = text_height;\n  style.button_width = button_width;\n  style.button_height = button_height;\n}\n\n// Potentially very slow!  Load-time/dev-time only\nexport function uiStyleModify(style: UIStyle, params: UIStyleDef): void {\n  let id = tail((style as UIStyleImpl).id_chain);\n  assert(id);\n  let entry = style_params[id];\n  assert(entry);\n  let def = entry.def as DataObject;\n  for (let key in params) {\n    let v = (params as DataObject)[key];\n    if (v === undefined) {\n      delete def[key];\n    } else {\n      def[key] = v;\n    }\n  }\n  for (let ii = 0; ii < entry.deps.length; ++ii) {\n    let style_walk = entry.deps[ii];\n    uiStyleCompute(style_walk);\n    if (style_walk === ui_style_current) {\n      uiApplyStyle(ui_style_current);\n    }\n  }\n}\n\nexport type UIStyleReference = string | UIStyleDef;\nexport function uiStyleAlloc(...args: UIStyleReference[]): UIStyle {\n  let id_chain: string[] = [];\n  id_chain.push('default');\n  for (let ii = 0; ii < args.length; ++ii) {\n    let v = args[ii];\n    let id: string;\n    if (typeof v === 'string') {\n      id = v;\n      assert(style_params[v]); // TODO: dataError instead\n    } else {\n      id = `$${++style_param_auto_last_idx})`;\n      style_params[id] = {\n        def: v,\n        deps: [],\n      };\n    }\n    id_chain.push(id);\n  }\n  let ret = new UIStyleImpl(id_chain);\n  uiStyleCompute(ret);\n  for (let ii = 0; ii < id_chain.length; ++ii) {\n    let id = id_chain[ii];\n    style_params[id]!.deps.push(ret);\n  }\n  return ret;\n}\n\nexport function uiStyleDefault(): UIStyle {\n  return ui_style_default;\n}\n\nexport function uiStyleCurrent(): UIStyle {\n  return ui_style_current;\n}\n\nexport function uiStyleSetCurrent(style: UIStyle): void {\n  ui_style_current = style;\n  uiApplyStyle(ui_style_current);\n}\n\nui_style_default = uiStyleAlloc();\nuiStyleSetCurrent(ui_style_default);\n\nlet style_stack: UIStyle[] = [];\nexport function uiStylePush(style: UIStyle): void {\n  style_stack.push(ui_style_current);\n  uiStyleSetCurrent(style);\n}\n\nexport function uiStylePop(): void {\n  let popped = style_stack.pop();\n  assert(popped);\n  uiStyleSetCurrent(popped);\n}\n\nlet did_once = false;\nexport function uiStyleTopOfFrame(): void {\n  if (style_stack.length) {\n    if (!did_once) {\n      did_once = true;\n      verify(!style_stack.length, 'Style stack push/pop mismatch');\n    }\n    style_stack.length = 0;\n  }\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/*\n  API usage:\n  engine.defines = urlhash.register({\n    key: 'D',\n    type: SET,\n  });\n  urlhash.register({\n    key: 'pos',\n    // type: TYPE_STRING,\n    change: (newvalue) => {},\n    title: (value) => 'string',\n    def: '1,2',\n    hides: { otherfield: true },\n    push: true, // do a pushState instead of replaceState when this changes\n    hide_values: { foo: true }, // do not add to URL if values is in the provided set\n    route_only: true, // never show this value, but still use it to influence routes - use with routeFixed()\n    clear_on_route_change: true, // clear this value if a route-based URL is pushed, e.g. treat as part of a route\n  });\n  urlhash.set('pos', '3,4');\n  urlhash.get('pos')\n\n  urlhash.route('w/:w')     // use URLs like foo.com/w/1   instead of foo.com/?w=1\n  urlhash.route('w/:w/:wg')  // use URLs like foo.com/w/1/2 instead of foo.com/?w=1&wg=2\n\n  // Called whenever the URL state is pushed, even if to exactly the same URL (e.g. on link click)\n  urlhash.onChange(cb)\n*/\n\nconst assert = require('assert');\nconst { callEach } = require('glov/common/util.js');\n\nconst HISTORY_UPDATE_TIME = 1000;\n\nexport let TYPE_SET = 'set';\nexport let TYPE_STRING = 'string';\n\nlet params = {};\n\nlet title_transformer;\n\nlet page_base = (document.location.href || '').match(/^[^#?]+/)[0]; // remove search and anchor\n// This used to be here, but doesn't make sense (why would it be `foo.com/file.html?` but not `foo.com/?`?\n// if (!page_base.endsWith('/')) { // e.g. http://foo.bar/index.html\n//   page_base += '?';\n// }\n// Removes index.html et all\nlet url_base = page_base.replace(/[^/]*$/,'');\nif (url_base.endsWith('/a/')) {\n  // Slightly hacky, if an index.html is stored forever in the hashed assets folder, adjust to deal with this\n  url_base = url_base.slice(0, -2);\n}\nlet on_change = [];\n\n// e.g. http://site.com/ http://company.com/app/\nexport function getURLBase() {\n  return url_base;\n}\n\n// e.g. http://site.com/ http://company.com/app/ http://site.com/page.html (for multi-page apps)\n// Probably don't want this, call getLinkURL() instead\nexport function getURLPageBase() {\n  return page_base;\n}\n\n// given something like w/1234 or ?foo=bar, return http://site.com/w/1234 or http://site.com/?foo=bar\n//  or http://site.com/page.html?w/1234 or http://site.com/page.html?foo=bar appropriately\nexport function getLinkURL(suburl) {\n  let mid = '';\n  if (!page_base.endsWith('/') && suburl && !suburl.startsWith('?')) {\n    // a page_base like `foo.com/index.html` and a route url like `user/foo`, delineate them\n    mid = '?';\n  }\n  let url = `${page_base}${mid}${suburl}`;\n  if (url.endsWith('?')) {\n    url = url.slice(0, -1);\n  }\n  return url;\n}\n\nexport function onChange(cb) {\n  on_change.push(cb);\n}\n\nfunction cmpNumKeys(a, b) {\n  let d = b.keys.length - a.keys.length;\n  if (d) {\n    return d;\n  }\n  // otherwise alphabetical for stability\n  for (let ii = 0; ii < a.keys.length; ++ii) {\n    if (a.keys[ii] < b.keys[ii]) {\n      return -1;\n    } else if (a.keys[ii] > b.keys[ii]) {\n      return 1;\n    }\n  }\n  assert(false); // two routes with identical keys\n  return 0;\n}\n\nconst route_param_regex = /:(\\w+)/g;\nlet routes = [];\n\nfunction queryString() {\n  let href = String(document.location);\n  href = href.slice(page_base.length);\n  if (href.includes('#')) {\n    href = href.slice(0, href.indexOf('#'));\n  }\n  return href;\n}\n\nconst regex_value = /[^\\w]\\w+=([^&]+)/;\nfunction getValue(query_string, opts) {\n  if (opts.routes) {\n    for (let ii = 0; ii < opts.routes.length; ++ii) {\n      let r = opts.routes[ii];\n      let m = query_string.match(r.regex);\n      if (m) {\n        if (r.value) {\n          return r.value;\n        }\n        let idx = r.keys.indexOf(opts.key);\n        return m[1 + idx];\n      }\n    }\n  }\n  let m = query_string.match(opts.regex) || [];\n  if (opts.type === TYPE_SET) {\n    let r = {};\n    for (let ii = 0; ii < m.length; ++ii) {\n      let m2 = m[ii].match(regex_value);\n      assert(m2);\n      r[m2[1]] = 1;\n    }\n    return r;\n  } else {\n    return m[1] || opts.def;\n  }\n}\n\nlet last_history_str = null; // always re-set it on the first update\n\n// if `skip_apply` is set, we update the browser's URL/history, but do _not_ call any callbacks\nfunction goInternal(query_string, for_init, skip_apply, route_only) {\n  // Update all values, except those hidden by what is currently in the query string\n  let hidden = {};\n  for (let key in params) {\n    let opts = params[key];\n    if (opts.hides) {\n      if (for_init ? opts.value : getValue(query_string, opts)) {\n        for (let otherkey in opts.hides) {\n          hidden[otherkey] = 1;\n        }\n      }\n    }\n  }\n\n  let dirty = {};\n  for (let key in params) {\n    if (hidden[key]) {\n      continue;\n    }\n    let opts = params[key];\n    let new_value = for_init ? opts.value : getValue(query_string, opts);\n    if (opts.type === TYPE_SET) {\n      for (let v in new_value) {\n        if (!opts.value[v] || for_init) {\n          opts.value[v] = 1;\n          dirty[key] = true;\n        }\n      }\n      if (route_only && !(opts.routes || opts.clear_on_route_change)) {\n        // do not clear any existing querystring values from a route_only operation\n        continue;\n      }\n      for (let v in opts.value) {\n        if (!new_value[v]) {\n          delete opts.value[v];\n          dirty[key] = true;\n        }\n      }\n    } else {\n      if (route_only && !(opts.routes || opts.clear_on_route_change) && !new_value) {\n        // do not clear any existing querystring values from a route_only operation\n        continue;\n      }\n      if (new_value !== opts.value || for_init) {\n        dirty[key] = true;\n        opts.value = new_value;\n      }\n    }\n  }\n\n  if (!skip_apply) {\n    // Call all change callbacks\n    for (let key in dirty) {\n      let opts = params[key];\n      if (opts.change) {\n        opts.change(opts.value, for_init);\n      }\n    }\n    callEach(on_change, for_init);\n  }\n}\n\nlet eff_title;\nfunction toString(route_only) {\n  eff_title = '';\n  let hidden = {};\n  for (let key in params) {\n    let opts = params[key];\n    if (opts.hides && opts.value) {\n      for (let otherkey in opts.hides) {\n        hidden[otherkey] = 1;\n      }\n    }\n  }\n  let root_value = '';\n  outer: // eslint-disable-line no-labels\n  for (let ii = 0; ii < routes.length; ++ii) {\n    let r = routes[ii];\n    let route_title = '';\n    for (let jj = 0; jj < r.keys.length; ++jj) {\n      let key = r.keys[jj];\n      if (hidden[key]) {\n        continue outer; // eslint-disable-line no-labels\n      }\n      let opts = params[key];\n      if (opts.hide_values[opts.value]) {\n        continue outer; // eslint-disable-line no-labels\n      }\n      // has a value, is not hidden, continue\n      if (!route_title && opts.title) {\n        route_title = opts.title(opts.value);\n      }\n    }\n    for (let jj = 0; jj < r.keys.length; ++jj) {\n      let key = r.keys[jj];\n      if (params[key].route_only) {\n        hidden[key] = true;\n      }\n    }\n    // route is good!\n    root_value = r.route_string.replace(route_param_regex, function (ignored, key) {\n      hidden[key] = true;\n      return String(params[key].value);\n    });\n    if (!eff_title && route_title) {\n      eff_title = route_title;\n    }\n    break;\n  }\n  let values = [];\n  for (let key in params) {\n    if (hidden[key]) {\n      continue;\n    }\n    let opts = params[key];\n    if (opts.type === TYPE_SET) {\n      for (let v in opts.value) {\n        values.push(`${key}=${v}`);\n      }\n    } else {\n      if (!opts.hide_values[opts.value]) {\n        values.push(`${key}=${opts.value}`);\n        if (!eff_title && opts.title) {\n          eff_title = opts.title(opts.value);\n        }\n      }\n    }\n  }\n  if (title_transformer) {\n    eff_title = title_transformer(eff_title);\n  }\n  eff_title = String(eff_title);\n  if (route_only) {\n    values = [];\n  }\n  return `${root_value}${values.length ? '?' : ''}${values.join('&')}`;\n}\n\nexport function refreshTitle() {\n  toString(false);\n  if (eff_title && eff_title !== document.title) {\n    document.title = eff_title;\n  }\n}\n\nfunction periodicRefreshTitle() {\n  profilerStart('periodicRefreshTitle');\n  refreshTitle();\n  setTimeout(periodicRefreshTitle, 1000);\n  profilerStop();\n}\n\nfunction onPopState() {\n  let query_string = queryString();\n  last_history_str = query_string;\n  goInternal(query_string, false, false, false);\n  refreshTitle();\n}\n\nlet on_url_change;\nexport function onURLChange(cb) {\n  on_url_change = cb;\n}\n\nlet history_update_deferred = false;\nexport function historyDeferUpdate(defer) {\n  history_update_deferred = defer;\n}\n\nlet last_history_set_time = 0;\nlet scheduled = false;\nlet need_push_state = false;\nfunction updateHistoryCommit() {\n  profilerStart('updateHistoryCommit');\n  if (history_update_deferred) {\n    setTimeout(updateHistoryCommit, 1000);\n    return void profilerStop();\n  }\n  scheduled = false;\n  last_history_set_time = Date.now();\n  let url = getLinkURL(last_history_str);\n  if (url.endsWith('?')) {\n    url = url.slice(0, -1);\n  }\n  try {\n    if (need_push_state) {\n      need_push_state = false;\n      window.history.pushState(undefined, eff_title, url);\n    } else {\n      window.history.replaceState(undefined, eff_title, url);\n    }\n  } catch (e) {\n    // ignore; some browsers disallow this, I guess\n  }\n  if (eff_title) {\n    document.title = eff_title;\n  }\n  if (on_url_change) {\n    on_url_change();\n  }\n  //window.history.replaceState(undefined, eff_title, `#${last_history_str}`);\n  profilerStop();\n}\nfunction updateHistory(new_need_push_state) {\n  let new_str = toString(false);\n  if (last_history_str === new_str) {\n    return;\n  }\n  need_push_state = need_push_state || new_need_push_state;\n  last_history_str = new_str;\n  if (scheduled) {\n    // already queued up\n    return;\n  }\n  let delay = HISTORY_UPDATE_TIME;\n  if (Date.now() - last_history_set_time > HISTORY_UPDATE_TIME) {\n    // Been awhile, apply \"instantly\" (but still wait until next tick to ensure\n    //   any other immediate changes are registered)\n    delay = 1;\n  }\n  scheduled = true;\n  setTimeout(updateHistoryCommit, delay);\n}\n\n// Optional startup\nexport function startup(param) {\n  assert(!title_transformer);\n  title_transformer = param.title_transformer;\n  if (!title_transformer && (param.title_suffix || param.title_default)) {\n    const { title_suffix, title_default } = param;\n    title_transformer = function (title) {\n      if (title_suffix && title) {\n        return `${title} | ${title_suffix}`;\n      }\n      return title || title_default || title_suffix;\n    };\n  }\n\n  // Refresh the current URL, it might be in the non-route format\n  updateHistory(false);\n\n  if (title_transformer) {\n    refreshTitle();\n    setTimeout(periodicRefreshTitle, 1000);\n  }\n}\n\n// Optional: fire all relevant `change` callbacks for any parameters with values\nexport function urlhashFireInitialChanges() {\n  goInternal(null, true, false, false);\n}\n\nfunction routeEx(new_route) {\n  let { keys } = new_route;\n  for (let ii = 0; ii < keys.length; ++ii) {\n    let opts = params[keys[ii]];\n    // Must have already registered these keys\n    assert(opts);\n    opts.routes = opts.routes || [];\n    opts.routes.push(new_route);\n    // Update initial value\n    opts.value = getValue(queryString(), opts);\n  }\n  routes.push(new_route);\n  routes.sort(cmpNumKeys);\n}\n\nexport function route(route_string) {\n  let keys = [];\n  // foo/:key/:bar => foo/([^/&?]+)/([^/&?]+)\n  let base = route_string.replace(route_param_regex, function (ignored, match) {\n    keys.push(match);\n    return '([^/&?]+)';\n  });\n  let regex = new RegExp(`^\\\\??${base}(?:$|\\\\?|#)`);\n  routeEx({\n    route_string,\n    regex,\n    keys,\n  });\n}\n\n// For a route that has no parameters, e.g. `foo.html`\n// Needs an associated key already registered, then set(key, '1') and set(key, '') enter and leave this route\nexport function routeFixed(route_string, key) {\n  let regex = new RegExp(`^\\\\??${route_string}(?:$|\\\\?|#)`);\n  routeEx({\n    route_string,\n    regex,\n    value: '1', // Just need something\n    keys: [key],\n  });\n}\n\nexport function register(opts) {\n  assert(opts.key);\n  assert(!params[opts.key]);\n  opts.type = opts.type || TYPE_STRING;\n  let regex_search = `(?:[^\\\\w])${opts.key}=([^&#]+)`;\n  let regex_type = '';\n  if (opts.type === TYPE_SET) {\n    regex_type = 'g';\n  } else {\n    opts.def = opts.def || '';\n    opts.hide_values = opts.hide_values || {};\n    opts.hide_values[opts.def] = true;\n  }\n  opts.regex = new RegExp(regex_search, regex_type);\n  params[opts.key] = opts;\n  // Get initial value\n  opts.value = getValue(queryString(), opts);\n  let ret = opts.value;\n  if (opts.type === TYPE_SET && typeof Proxy === 'function') {\n    // Auto-apply changes to URL if someone modifies the proxy\n    ret = new Proxy(opts.value, {\n      set: function (target, prop, value) {\n        if (value) {\n          target[prop] = 1;\n        } else {\n          delete target[prop];\n        }\n        updateHistory();\n        return true;\n      }\n    });\n  }\n\n  if (!window.onpopstate) {\n    window.onpopstate = onPopState;\n  }\n\n  return ret;\n}\n\nexport function set(key, value, value2) {\n  let opts = params[key];\n  assert(opts);\n  if (opts.type === TYPE_SET) {\n    if (Boolean(opts.value[value]) !== Boolean(value2)) {\n      opts.value[value] = value2 ? 1 : 0;\n      updateHistory(opts.push);\n    }\n  } else {\n    if (opts.value !== value) {\n      opts.value = value;\n      updateHistory(opts.push);\n    }\n  }\n}\n\nexport function setMulti(values) {\n  let any = false;\n  let push = false;\n  for (let key in values) {\n    let value = values[key];\n    let opts = params[key];\n    assert(opts);\n    assert(opts.type !== TYPE_SET);\n    if (opts.value !== value) {\n      opts.value = value;\n      any = true;\n      push = push || opts.push;\n    }\n  }\n  if (any) {\n    updateHistory(push);\n  }\n}\n\nexport function get(key) {\n  let opts = params[key];\n  assert(opts);\n  return opts.value;\n}\n\nexport function getRouteString() {\n  return toString(true);\n}\n\n// query_string with the '?'\nexport function go(query_string, skip_apply) {\n  goInternal(query_string, false, skip_apply, false);\n  updateHistory(true);\n}\n\n// apply primarily the route-based parts of the URL, leaving all (existing)\n// querystring-based ones alone, although this will also apply changes to\n// querystring-based values if passed in.\nexport function goRoute(route_string, skip_apply) {\n  goInternal(route_string, false, skip_apply, true);\n  updateHistory(true);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nconst { msToSS2020 } = require('glov/common/util');\n\nconst { min } = Math;\n\nlet offs = 0;\nfunction now() {\n  return Date.now() + offs;\n}\nmodule.exports = exports = now;\nexports.now = now;\nlet first = true;\nexports.sync = function (server_time) {\n  if (first) {\n    offs = server_time - Date.now();\n  } else {\n    offs = min(offs, server_time - Date.now());\n  }\n};\nexports.seconds = function () {\n  // Seconds since Jan 1st, 2020\n  return msToSS2020(now());\n};\n","import assert from 'assert';\nimport {\n  callEach,\n  clone,\n  deepEqual,\n} from 'glov/common/util';\nimport {\n  filewatchOn,\n  filewatchTriggerChange,\n} from './filewatch';\n\nlet fs;\nlet decoded = {};\nlet used = {};\nlet active_reload = false; // after an active reload, do data cloning to better detect which files changed\n// export function webFSReady() {\n//   // TODO: async ready state?\n// }\n\nlet on_ready = [];\n// Will always be synchronous in the main thread, may be async in the WebWorker\nexport function webFSOnReady(cb) {\n  if (fs) {\n    cb();\n  } else {\n    on_ready.push(cb);\n  }\n}\n\nfunction decode(data) {\n  let len = data[0];\n  let str = data[1];\n  let u8 = new Uint8Array(len);\n  let idxo = 0;\n  let idxi = 0;\n  while (idxo < len) {\n    let byte = str.charCodeAt(idxi++);\n    if (byte === 126) {\n      byte = 0;\n    } else if (byte === 27) {\n      byte = str.charCodeAt(idxi++);\n    }\n    u8[idxo++] = byte;\n  }\n  assert.equal(idxi, str.length);\n  assert.equal(idxo, len);\n  return u8;\n}\n\nexport function webFSGetFileNames(directory) {\n  assert(fs);\n  let ret = [];\n  for (let filename in fs) {\n    if (filename.startsWith(directory)) {\n      ret.push(filename);\n    }\n  }\n  return ret;\n}\n\nexport function webFSGetFile(filename, encoding) {\n  assert(fs);\n  let ret = decoded[filename];\n  if (ret) {\n    return ret;\n  }\n  used[filename] = true;\n  let data = fs[filename];\n  assert(data, `Error loading file: ${filename}`);\n  if (encoding === 'jsobj') {\n    assert(!Array.isArray(data) || !(data.length === 2 && typeof data[0] === 'number' && typeof data[1] === 'string'));\n    ret = active_reload ? clone(data) : data;\n  } else {\n    assert(Array.isArray(data));\n    if (encoding === 'text') {\n      ret = data[1];\n    } else {\n      ret = decode(data);\n    }\n  }\n  decoded[filename] = ret;\n  return ret;\n}\n\nexport function webFSExists(filename) {\n  assert(fs);\n  return Boolean(fs[filename]);\n}\n\nexport function webFSReportUnused(ignore_regex) {\n  // Don't report on files we know are loaded dynamically, and are small\n  ignore_regex = ignore_regex || /\\.(fp|vp)$/;\n  let tot_size = 0;\n  for (let filename in fs) {\n    if (!used[filename] && !filename.match(ignore_regex)) {\n      console.warn(`WebFS file bundled but unreferenced: ${filename}`);\n      tot_size += fs[filename][0];\n    }\n  }\n  if (tot_size) {\n    console.warn(`WebFS wasting ${tot_size} bytes`);\n  }\n}\n\nlet webfs_to_worker_cb;\nexport function webFSSetToWorkerCB(cb) {\n  webfs_to_worker_cb = cb;\n}\nexport function webFSGetData() {\n  return fs;\n}\n\nexport function webFSApplyReload(fs_in) {\n  let old_fs = fs;\n  fs = fs_in;\n\n  // First, send to worker(s), before any changes might be triggered\n  if (webfs_to_worker_cb) {\n    webfs_to_worker_cb(fs);\n  }\n\n  // Then, reload and fire changes\n  decoded = {};\n  used = {};\n  for (let key in fs) {\n    let old_value = old_fs[key];\n    let new_value = fs[key];\n    if (Array.isArray(old_value)) {\n      for (let ii = 0; ii < new_value.length; ++ii) {\n        if (!old_value || new_value[ii] !== old_value[ii]) {\n          filewatchTriggerChange(key);\n          break;\n        }\n      }\n    } else {\n      // Raw object\n      if (!deepEqual(old_value, new_value)) {\n        filewatchTriggerChange(key);\n      }\n    }\n  }\n  // Detect deleted files (especially e.g. a texture changing size to be large enough not to embed anymore!)\n  for (let key in old_fs) {\n    if (!fs[key]) {\n      filewatchTriggerChange(key);\n    }\n  }\n}\n\nlet base_url_for_reload;\nfunction webFSReload() {\n  // Note: only called in main thread, not in workers\n  active_reload = true;\n  window.glov_webfs = null;\n  let scriptTag = document.createElement('script');\n  scriptTag.src = `${base_url_for_reload}fsdata.js?rl=${Date.now()}`;\n  scriptTag.onload = function () {\n    if (window.glov_webfs) {\n      webFSApplyReload(window.glov_webfs);\n    }\n  };\n  document.head.appendChild(scriptTag);\n}\n\nexport function webFSStartup(fs_in, base_url_for_reload_in) {\n  fs = fs_in || {};\n  if (base_url_for_reload_in) {\n    base_url_for_reload = base_url_for_reload_in;\n    filewatchOn('fsdata.js', webFSReload);\n  }\n  if (webfs_to_worker_cb) {\n    webfs_to_worker_cb(fs);\n  }\n  callEach(on_ready, on_ready = null);\n}\n\nexport function webFSAPI() {\n  return {\n    getFileNames: webFSGetFileNames,\n    getFile: webFSGetFile,\n    filewatchOn: filewatchOn,\n  };\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport { fontSetReplacementChars } from 'glov/client/font';\nimport { locateAsset } from 'glov/client/locate_asset';\nimport { randFastCreate } from 'glov/client/rand_fast';\nimport { getURLBase } from 'glov/client/urlhash';\nimport { webFSGetFile } from 'glov/client/webfs';\nimport { mashString } from 'glov/common/rand_alea';\nimport {\n  profanityCommonStartup,\n  profanityFilterCommon,\n  profanitySetReplacementChars,\n} from 'glov/common/words/profanity_common';\n\nlet non_profanity;\n\nexport function profanityStartup() {\n  non_profanity = webFSGetFile('words/replacements.txt', 'text').split('\\n').filter((a) => a);\n  profanityCommonStartup(webFSGetFile('words/filter.gkg', 'text'),\n    webFSGetFile('words/exceptions.txt', 'text'));\n\n}\n\nexport function profanityStartupLate() {\n  // Async load of (potentially large) unicode replacement data, after all other loading is finished\n  let scriptTag = document.createElement('script');\n  scriptTag.src = `${getURLBase()}${locateAsset('replacement_chars.min.js')}`;\n  scriptTag.onload = function () {\n    if (window.unicode_replacement_chars) {\n      profanitySetReplacementChars(window.unicode_replacement_chars);\n      fontSetReplacementChars(window.unicode_replacement_chars);\n    }\n  };\n  document.getElementsByTagName('head')[0].appendChild(scriptTag);\n}\n\nlet rand = randFastCreate();\n\nlet last_word;\nfunction randWord() {\n  if (last_word === -1 || non_profanity.length === 1) {\n    last_word = rand.range(non_profanity.length);\n  } else {\n    let choice = rand.range(non_profanity.length - 1);\n    last_word = choice < last_word ? choice : choice + 1;\n  }\n  return non_profanity[last_word];\n}\n\nexport function profanityFilter(user_str) {\n  last_word = -1;\n  rand.seed = mashString(user_str);\n  return profanityFilterCommon(user_str, randWord);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* global WebSocket */\n\n/* eslint-disable import/order */\nimport { getAPIPath, setCurrentEnvironment } from 'glov/client/environments';\n\nconst ack = require('glov/common/ack.js');\nconst { ackInitReceiver } = ack;\nconst verify = require('glov/common/verify.js');\nconst assert = require('assert');\nconst { errorReportSetDetails, session_uid } = require('./error_report.js');\nconst {\n  ERR_CONNECTION,\n  fetch,\n  fetchDelaySet,\n} = require('./fetch.js');\nconst { min, random } = Math;\nconst { perfCounterAdd } = require('glov/common/perfcounters.js');\nconst urlhash = require('./urlhash.js');\nconst wscommon = require('glov/common/wscommon.js');\nconst { netDelaySet, wsHandleMessage } = wscommon;\nconst { platformGetID, getAbilityReloadUpdates } = require('glov/client/client_config.js');\n\n// let net_time = 0;\n// export function getNetTime() {\n//   let r = net_time;\n//   net_time = 0;\n//   return r;\n// }\n\n// Values exposed for `client.connect_error`\nexport const ERR_CONNECTING = 'ERR_CONNECTING';\nexport const ERR_RESTARTING = 'ERR_RESTARTING';\nexport const ERR_CLIENT_VERSION_NEW = 'ERR_CLIENT_VERSION_NEW';\nexport const ERR_CLIENT_VERSION_OLD = 'ERR_CLIENT_VERSION_OLD';\n\nexports.CURRENT_VERSION = 0;\n\nexport function WSClient(path, client_app) {\n  this.id = null;\n  this.my_ids = {}; // set of all IDs I've been during this session\n  this.handlers = {};\n  this.socket = null;\n  this.net_delayer = null;\n  this.connected = false;\n  this.disconnected = false;\n  this.retry_scheduled = false;\n  this.retry_count = 0;\n  this.retry_extra_delay = 0;\n  this.disconnect_time = Date.now();\n  this.last_receive_time = Date.now();\n  this.idle_counter = 0;\n  this.last_send_time = Date.now();\n  this.connect_error = ERR_CONNECTING;\n  this.update_available = false;\n  this.client_app = client_app || 'app';\n  ackInitReceiver(this);\n\n  if (path) {\n    this.path = path;\n  }\n\n  this.connect(false);\n\n  this.onMsg('cack', this.onConnectAck.bind(this));\n  this.onMsg('build', this.onBuildChange.bind(this));\n  this.onMsg('error', this.onError.bind(this));\n}\n\nWSClient.prototype.logPacketDispatch = function (source, pak, buf_offs, msg) {\n  perfCounterAdd(`ws.${msg}`);\n};\n\nWSClient.prototype.timeSinceDisconnect = function () {\n  return Date.now() - this.disconnect_time;\n};\n\nfunction getVersionUrlParams() {\n  return `plat=${platformGetID()}&ver=${exports.CURRENT_VERSION}&build=${BUILD_TIMESTAMP}&sesuid=${session_uid}`;\n}\n\nfunction jsonParseResponse(response) {\n  if (!response) {\n    return null;\n  }\n  if (response.trim()[0] === '<') {\n    // html response\n    return null;\n  }\n  try {\n    return JSON.parse(response);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction whenServerReady(cb) {\n  let retry_count = 0;\n  function doit() {\n    fetch({\n      url: `${getAPIPath()}ready?${getVersionUrlParams()}`,\n    }, (err, response) => {\n      if (err) {\n        let response_data = jsonParseResponse(response);\n        let status = response_data?.status;\n        if (status !== 'ERR_CLIENT_VERSION_OLD') {\n          ++retry_count;\n          setTimeout(doit, min(retry_count * retry_count * 100, 15000) * (0.75 + random() * 0.5));\n          return;\n        }\n      }\n      cb();\n    });\n  }\n  doit();\n}\n\nWSClient.prototype.onBuildChange = function (obj) {\n  // (primarily) development-time dynamic build version change, reload if it's our app that changed\n  if (obj.app !== this.client_app) {\n    return;\n  }\n  this.onBuildTimestamp(obj.ver);\n};\n\nWSClient.prototype.onBuildTimestamp = function (build_timestamp) {\n  if (build_timestamp !== BUILD_TIMESTAMP) {\n    if (this.on_build_timestamp_mismatch) {\n      this.on_build_timestamp_mismatch();\n    } else {\n      if (getAbilityReloadUpdates()) {\n        console.error(`App build mismatch (server: ${build_timestamp}, client: ${BUILD_TIMESTAMP}), reloading`);\n        whenServerReady(function () {\n          if (window.reloadSafe) {\n            window.reloadSafe();\n          } else {\n            document.location.reload();\n          }\n        });\n      } else {\n        // Not allowed to reload, or reloading would not get the new version anyway\n        console.warn(`App build mismatch (server: ${build_timestamp}, client: ${BUILD_TIMESTAMP}), ignoring`);\n      }\n    }\n  }\n};\n\nWSClient.prototype.onConnectAck = function (data, resp_func) {\n  let client = this;\n  client.connected = true;\n  client.connect_error = null;\n  client.disconnected = false;\n  client.id = data.id;\n  client.my_ids[data.id] = true;\n  errorReportSetDetails('client_id', client.id);\n  client.secret = data.secret;\n  if (data.build) {\n    client.onBuildTimestamp(data.build);\n  }\n  if (data.net_delay) {\n    netDelaySet(data.net_delay[0], data.net_delay[1]);\n    fetchDelaySet(data.net_delay[0], data.net_delay[1]);\n  }\n  // Fire subscription_manager connect handler\n  assert(client.handlers.connect);\n  data.client_id = client.id;\n  client.handlers.connect(client, data);\n  resp_func();\n};\n\n\nWSClient.prototype.pak = function (msg, msg_debug_name) {\n  return wscommon.wsPak(msg, null, this, msg_debug_name);\n};\n\nWSClient.prototype.send = function (msg, data, msg_debug_name, resp_func) {\n  if (!verify(typeof msg_debug_name !== 'function')) {\n    // Old API\n    resp_func = msg_debug_name;\n    msg_debug_name = null;\n  }\n  wscommon.sendMessage.call(this, msg, data, msg_debug_name, resp_func);\n};\n\nWSClient.prototype.onError = function (e) {\n  console.error('WSClient Error');\n  console.error(e);\n  if (!(e instanceof Error)) {\n    e = new Error(e);\n  }\n  throw e;\n};\n\n// cb(client, data, resp_func)\nWSClient.prototype.onMsg = function (msg, cb) {\n  assert.ok(!this.handlers[msg]);\n  this.handlers[msg] = function wrappedCallback(client, data, resp_func) {\n    // Client interface does not need a client passed to it!\n    return cb(data, resp_func);\n  };\n};\n\nWSClient.prototype.checkForNewAppBuild = function () {\n  if (!getAbilityReloadUpdates()) {\n    // would do nothing with it, don't bother checking\n    return;\n  }\n  if (this.new_build_check_in_progress) {\n    return;\n  }\n  this.new_build_check_in_progress = true;\n  fetch({\n    url: `${urlhash.getURLBase()}app.ver.json`,\n    response_type: 'json'\n  }, (err, obj) => {\n    this.new_build_check_in_progress = false;\n    if (obj && obj.ver) {\n      this.onBuildTimestamp(obj.ver);\n    }\n    if (err && err !== ERR_CONNECTION) {\n      // If this is not triggered on connection errors, only if we got a (non-parseable) response from the server\n      if (!this.delayed_recheck) {\n        this.delayed_recheck = true;\n        setTimeout(() => {\n          this.delayed_recheck = false;\n          this.checkForNewAppBuild();\n        }, 1000);\n      }\n    }\n  });\n};\n\nWSClient.prototype.retryConnection = function () {\n  let client = this;\n  assert(!client.socket);\n  assert(!client.retry_scheduled);\n  client.retry_scheduled = true;\n  ++client.retry_count;\n  this.checkForNewAppBuild();\n  setTimeout(function () {\n    assert(client.retry_scheduled);\n    assert(!client.socket);\n    client.retry_scheduled = false;\n    client.connect(true);\n  }, min(client.retry_count * client.retry_count * 100, 15000) * (0.75 + random() * 0.5) + this.retry_extra_delay);\n  this.retry_extra_delay = 0;\n};\n\nWSClient.prototype.checkDisconnect = function () {\n  if (this.connected && this.socket.readyState !== 1) { // WebSocket.OPEN\n    // We think we're connected, but we're not, we must have received an\n    // animation frame before the close event when phone was locked or something\n    this.on_close();\n    assert(!this.connected);\n  }\n};\n\nWSClient.prototype.connect = function (for_reconnect) {\n  let client = this;\n  client.socket = { readyState: 0 }; // Placeholder so it appears disconnected\n\n  assert(!this.ready_check_in_progress);\n  this.ready_check_in_progress = true;\n  // retry hitting status endpoint until it says it's okay to make a WebSocket connection\n  fetch({\n    url: `${getAPIPath()}ready?${getVersionUrlParams()}`,\n  }, (err, response) => {\n    let response_data = jsonParseResponse(response);\n    let status = response_data?.status;\n    let redirect_environment = response_data?.redirect_environment;\n    this.update_available = response_data?.update_available;\n    let should_reload = this.update_available && getAbilityReloadUpdates();\n\n    assert(this.ready_check_in_progress);\n    this.ready_check_in_progress = false;\n    this.connect_error = ERR_CONNECTING;\n\n    if (!err && !redirect_environment && !should_reload) {\n      if (this.update_available) {\n        // TODO: Inform the user that a new version is available,\n        // even though the current version is still supported\n      }\n      return void this.connectAfterReady(for_reconnect);\n    }\n\n    console.log(`Server not ready, err=${err}, response=${response}`);\n    // Handle known error strings\n    if (status === 'ERR_RESTARTING' || status === 'ERR_STARTUP') {\n      client.connect_error = ERR_RESTARTING;\n    } else if (status === 'ERR_CLIENT_VERSION_NEW') {\n      client.connect_error = ERR_CLIENT_VERSION_NEW;\n    } else if (status === 'ERR_CLIENT_VERSION_OLD') {\n      client.connect_error = ERR_CLIENT_VERSION_OLD;\n    }\n\n    if (redirect_environment) {\n      setCurrentEnvironment(redirect_environment);\n    }\n\n    client.socket = null;\n    client.net_delayer = null;\n    this.retryConnection();\n  });\n};\n\nlet connect_url_params = '';\nlet connect_url_extra = {};\nexport function wsclientSetExtraParam(key, value) {\n  if (!value) {\n    delete connect_url_extra[key];\n  } else {\n    connect_url_extra[key] = value;\n  }\n  let pairs = [];\n  for (let walk in connect_url_extra) {\n    pairs.push(`${walk}=${connect_url_extra[walk]}`);\n  }\n  if (pairs.length) {\n    connect_url_params = `&${pairs.join('&')}`;\n  } else {\n    connect_url_params = '';\n  }\n}\n\nWSClient.prototype.connectAfterReady = function (for_reconnect) {\n  let client = this;\n\n  let path = client.path ||\n    getAPIPath()      // 'https://foo.com/product/api/'\n    .replace(/^http/, 'ws')\n    .replace(/api\\/$/, 'ws'); // 'wss://foo.com/product/ws';\n  path = `${path}?${getVersionUrlParams()}${\n    for_reconnect && client.id && client.secret ? `&reconnect=${client.id}&secret=${client.secret}` : ''\n  }${connect_url_params}`;\n  let socket = new WebSocket(path);\n  socket.binaryType = 'arraybuffer';\n  client.socket = socket;\n\n  // Protect callbacks from ever firing if we've already disconnected this socket\n  //   from the WSClient\n  function guard(fn) {\n    return function (...args) {\n      if (client.socket !== socket) {\n        return;\n      }\n      fn(...args);\n    };\n  }\n\n  function abort(skip_close) {\n    client.socket = null;\n    client.net_delayer = null;\n    if (client.connected) {\n      client.disconnect_time = Date.now();\n      client.disconnected = true;\n      errorReportSetDetails('disconnected', 1);\n    }\n    client.connected = false;\n    client.connect_error = ERR_CONNECTING;\n    if (!skip_close) {\n      try {\n        socket.close();\n      } catch (e) {\n        // ignore\n      }\n    }\n    // Fire subscription_manager disconnect handler\n    client.handlers.disconnect();\n    ack.failAll(client);\n  }\n\n  function retry(skip_close) {\n    abort(skip_close);\n    client.retryConnection();\n  }\n\n  // Local state, for this one connection\n  let connected = false;\n  client.socket.addEventListener('error', guard(function (err) {\n    if (!connected) {\n      console.log('WebSocket error during initial connection, retrying...', err);\n      retry();\n    } else {\n      console.error('WebSocket error', err);\n      // Disconnect and reconnect here, is this a terminal error? Probably not, we'll get a 'close' event if it is?\n      // We some error occasionally on iOS, not sure what error, but it auto-reconnects fine, so let's\n      // not do a throw\n      // client.onError(err);\n    }\n  }));\n\n  client.socket.addEventListener('message', guard(function (message) {\n    profilerStart('WS');\n    // net_time -= Date.now();\n    assert(message.data instanceof ArrayBuffer);\n    wsHandleMessage(client, new Uint8Array(message.data));\n    // net_time += Date.now();\n    profilerStop('WS');\n  }));\n\n  client.socket.addEventListener('open', guard(function () {\n    console.log('WebSocket open');\n    connected = true;\n    // reset retry count so next retry is fast if we get disconnected\n    client.retry_count = 0;\n  }));\n\n  // This may get called before the close event gets to use\n  client.on_close = guard(function () {\n    console.log('WebSocket close, retrying connection...');\n    retry(true);\n  });\n  client.socket.addEventListener('close', client.on_close);\n\n  let doPing = guard(function () {\n    if (Date.now() - client.last_send_time >= wscommon.PING_TIME &&\n      client.connected && client.socket.readyState === 1\n    ) {\n      client.send('ping');\n    }\n    setTimeout(doPing, wscommon.PING_TIME / 2);\n  });\n  setTimeout(doPing, wscommon.PING_TIME / 2);\n\n  // For debugging reconnect handling\n  // setTimeout(function () {\n  //   if (connected) {\n  //     socket.close();\n  //   }\n  // }, 5000);\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint no-bitwise:off */\n\nconst assert = require('assert');\nconst { isPacket } = require('./packet.js');\nconst { perfCounterAddValue } = require('./perfcounters.js');\n\nexport function ackInitReceiver(receiver) {\n  receiver.last_pak_id = 0;\n  receiver.resp_cbs = {};\n  receiver.responses_waiting = 0;\n}\n\nconst ERR_FAILALL_DISCONNECT = 'ERR_FAILALL_DISCONNECT';\n\nconst ACKFLAG_IS_RESP = 1<<3;\nconst ACKFLAG_ERR = 1<<4;\nconst ACKFLAG_DATA_JSON = 1<<5;\n// `receiver` is really the sender, here, but will receive any response\nexport function ackWrapPakStart(pak, receiver, msg, msg_debug_name) {\n  let flags = 0;\n\n  pak.ack_data = {\n    receiver,\n    msg_dbg_name: msg_debug_name || msg,\n  };\n\n  if (typeof msg === 'number') {\n    flags |= ACKFLAG_IS_RESP;\n    pak.writeInt(msg);\n  } else {\n    pak.writeAnsiString(msg);\n  }\n  let resp_pak_id = receiver ? ++receiver.last_pak_id : 0;\n  pak.ack_data.resp_pak_id = resp_pak_id;\n  pak.ack_data.resp_pak_id_offs = pak.getOffset();\n  pak.writeInt(resp_pak_id);\n\n  pak.ack_data.data_offs = pak.getOffset();\n  pak.ack_data.flags = flags;\n}\n\nexport function ackWrapPakPayload(pak, data) {\n  if (isPacket(data)) {\n    pak.appendRemaining(data);\n  } else {\n    pak.ack_data.flags |= ACKFLAG_DATA_JSON;\n    pak.writeJSON(data);\n  }\n}\n\nexport function ackWrapPakFinish(pak, err, resp_func) {\n  let flags = pak.ack_data.flags;\n  let offs = pak.getOffset();\n  if (err) {\n    // Nothing else must have been written\n    assert.equal(pak.ack_data.data_offs, offs);\n    flags |= ACKFLAG_ERR;\n    pak.writeString(String(err));\n    offs = pak.getOffset();\n  }\n  pak.makeReadable();\n  let resp_pak_id = 0;\n  if (resp_func && resp_func.expecting_response !== false) {\n    resp_pak_id = pak.ack_data.resp_pak_id;\n    assert(resp_pak_id);\n    assert(pak.ack_data.receiver);\n    assert(pak.ack_data.msg_dbg_name);\n    let ack_name = `ack.${pak.ack_data.msg_dbg_name}`;\n    pak.ack_data.receiver.resp_cbs[resp_pak_id] = { func: resp_func, ack_name };\n  } else {\n    pak.seek(pak.ack_data.resp_pak_id_offs);\n    pak.zeroInt();\n    pak.seek(offs);\n  }\n  pak.updateFlags(flags);\n  delete pak.ack_data;\n  return resp_pak_id;\n}\n\nexport function ackReadHeader(pak) {\n  let flags = pak.getFlags();\n  let msg = (flags & ACKFLAG_IS_RESP) ? pak.readInt() : pak.readAnsiString();\n  let pak_id = pak.readInt();\n  let err = (flags & ACKFLAG_ERR) ? pak.readString() : undefined;\n  let data;\n  if (flags & ACKFLAG_DATA_JSON) {\n    data = pak.readJSON();\n  } else {\n    data = pak;\n  }\n  return {\n    msg,\n    err,\n    data,\n    pak_id,\n  };\n}\n\nexport function failAll(receiver, err) {\n  err = err || ERR_FAILALL_DISCONNECT;\n  let cbs = receiver.resp_cbs;\n  receiver.resp_cbs = {};\n  receiver.responses_waiting = 0;\n  for (let pak_id in cbs) {\n    cbs[pak_id].func(err);\n  }\n}\n\n// `source` is a string for debug/logging only\n// `receiver` needs initReceicver called on it, have .onError() in the prototype and optionally .log()\n// sendFunc(msg, err, data, resp_func)\n// handleFunc(msg, data, resp_func)\nexport function ackHandleMessage(receiver, source, pak, send_func, pak_func, handle_func, filter_func) {\n  let pak_initial_offs = pak.getOffset();\n  let { err, data, msg, pak_id } = ackReadHeader(pak);\n  let msg_name;\n  if (typeof msg === 'number') {\n    let pair = receiver.resp_cbs[msg];\n    assert(!pair || pair.ack_name);\n    if (pair && pair.ack_name) {\n      msg_name = pair.ack_name;\n    } else {\n      msg_name = 'ack';\n    }\n  } else {\n    msg_name = msg;\n  }\n  if (receiver.logPacketDispatch) {\n    perfCounterAddValue('net.recv_bytes.total', pak.totalSize());\n    perfCounterAddValue(`net.recv_bytes.${msg_name}`, pak.totalSize());\n    receiver.logPacketDispatch(source, pak, pak_initial_offs, msg_name);\n  }\n  let now = Date.now();\n  let expecting_response = Boolean(pak_id);\n  let timeout_id;\n  if (expecting_response) {\n    timeout_id = 'pending';\n  }\n  let sent_response = false;\n  let start_time = now;\n\n  if (filter_func && !filter_func(receiver, msg, data)) {\n    // Simply discard this message\n    return;\n  }\n\n  function preSendResp(err) {\n    assert(!sent_response, 'Response function called twice');\n    sent_response = true;\n\n    if (expecting_response) {\n      if (timeout_id) {\n        if (timeout_id !== 'pending') {\n          clearTimeout(timeout_id);\n        }\n      } else {\n        if (err === ERR_FAILALL_DISCONNECT) {\n          // this is the result of a failAll() call, a response was not actually sent!\n        } else {\n          (receiver.log ? receiver : console).log(`Response finally sent for ${msg_name\n          } after ${((Date.now() - start_time) / 1000).toFixed(1)}s`);\n        }\n      }\n      receiver.responses_waiting--;\n    }\n  }\n\n  function respFunc(err, resp_data, resp_func) {\n    preSendResp(err);\n    // the callback wants to send a response, and possibly get a response from that!\n    if (!expecting_response) {\n      // But, the other end is not expecting a response from this packet, black-hole it\n      if (resp_func && resp_func.expecting_response !== false) {\n        // We better not be expecting a response to our response!\n        receiver.onError(`Sending a response to a packet (${msg_name}) that did not expect` +\n          ' one, but we are expecting a response');\n        return;\n      }\n      // however, if there was an error, let's forward that along as an error message\n      if (err) {\n        send_func('error', null, err, null);\n      }\n      return;\n    }\n    send_func(pak_id, err, resp_data, resp_func);\n  }\n  respFunc.expecting_response = expecting_response;\n  respFunc.pak = function (ref_pak) {\n    assert(expecting_response);\n    let pak = pak_func(pak_id, ref_pak);\n    let orig_send = pak.send;\n    pak.send = function (err, resp_func) {\n      preSendResp(err);\n      orig_send.call(pak, err, resp_func);\n    };\n    return pak;\n  };\n\n  if (typeof msg === 'number') {\n    let cb = receiver.resp_cbs[msg];\n    if (!cb) {\n      return void receiver.onError(`Received response to unknown packet with id ${msg} from ${source}`);\n    }\n    delete receiver.resp_cbs[msg];\n    profilerStart('response');\n    cb.func(err, data, respFunc);\n    profilerStop('response');\n  } else {\n    if (!msg) {\n      return void receiver.onError(`Received message with no .msg from ${source}`);\n    }\n    profilerStart(msg);\n    handle_func(msg, data, respFunc);\n    profilerStop(msg);\n  }\n  if (expecting_response) {\n    // Note, this may be -1 if respFunc has already been called\n    receiver.responses_waiting++;\n    if (!sent_response && !respFunc.suppress_timeout) {\n      // timeout warning for response\n      timeout_id = setTimeout(function () {\n        timeout_id = null;\n        if (!respFunc.suppress_timeout) {\n          (receiver.log ? receiver : console).log(`Response not sent for ${msg_name\n          } from ${source} after ${((Date.now() - start_time) / 1000).toFixed(1)}s`);\n        }\n      }, 15*1000);\n    }\n  }\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint no-bitwise:off */\n\n\n// Encoding is fastest with non-native calls: http://jsperf.com/base64-encode\n// Decoding is fastest using window.btoa: http://jsperf.com/base64-decode\n\nconst { floor } = Math;\n\nconst chr_table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\nconst PAD = '=';\n\n// dv is a DataView with a .u8 property\nfunction encode(dv, offset, length) {\n  let data = dv.u8;\n  let result = '';\n  let i;\n  let effi;\n  // Convert every three bytes to 4 ascii characters.\n  for (i = 0; i < (length - 2); i += 3) {\n    effi = offset + i;\n    result += chr_table[data[effi] >> 2];\n    result += chr_table[((data[effi] & 0x03) << 4) + (data[effi + 1] >> 4)];\n    result += chr_table[((data[effi + 1] & 0x0f) << 2) + (data[effi + 2] >> 6)];\n    result += chr_table[data[effi + 2] & 0x3f];\n  }\n\n  // Convert the remaining 1 or 2 bytes, pad out to 4 characters.\n  if (length % 3) {\n    i = length - (length % 3);\n    effi = offset + i;\n    result += chr_table[data[effi] >> 2];\n    if ((length % 3) === 2) {\n      result += chr_table[((data[effi] & 0x03) << 4) + (data[effi + 1] >> 4)];\n      result += chr_table[(data[effi + 1] & 0x0f) << 2];\n      result += PAD;\n    } else {\n      result += chr_table[(data[effi] & 0x03) << 4];\n      result += PAD + PAD;\n    }\n  }\n\n  return result;\n}\n\nfunction decodeNativeBrowser(data, allocator) {\n  let str = window.atob(data);\n  let len = str.length;\n  let dv = allocator(len);\n  let u8 = dv.u8;\n  for (let ii = 0; ii < len; ++ii) {\n    u8[ii] = str.charCodeAt(ii);\n  }\n  dv.decode_size = len;\n  return dv;\n}\n\nfunction encodeNativeNode(dv, offset, length) {\n  // Allocates a Buffer() object each time - could have our allocDataView do that if needed for perf\n  return Buffer.from(dv.buffer).toString('base64', offset, offset + length);\n}\n// Faster, but uses an internal function that might break:\n// function encodeNativeNode(dv, offset, length) {\n//   return Buffer.prototype.base64Slice.call(dv.u8, offset, offset + length);\n// }\n\nfunction decodeNativeNode(data, allocator) {\n  let buffer_len = (data.length >> 2) * 3 + floor((data.length % 4) / 1.5);\n  let dv = allocator(buffer_len);\n  let buffer = Buffer.from(dv.buffer);\n  dv.decode_size = buffer.write(data, 'base64');\n  return dv;\n}\n\nconst BROWSER = typeof window !== 'undefined';\n\n// string -> Uint8Array or Buffer\nexports.base64Decode = BROWSER ? decodeNativeBrowser : decodeNativeNode;\n// Uint8Array or Buffer -> string\nexports.base64Encode = BROWSER ? encode : encodeNativeNode;\n\nexports.base64CharTable = chr_table;\n","// Portions Copyright 2020 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nconst assert = require('assert');\nconst { asyncParallelLimit, asyncSeries } = require('glov-async');\nconst crc32 = require('./crc32.js');\nconst { ceil, min } = Math;\nconst { packetBufPoolAlloc, packetBufPoolFree } = require('./packet.js');\n\n// combined size of all chunked sends at any given time\nexport const MAX_CLIENT_UPLOAD_SIZE = 2*1024*1024;\n\nconst CHUNK_SIZE = 8192 - 100; // Should fit in a 8kb packet after headers and such; used by sender only\n\nfunction cleanupFile(state, file_id, pool) {\n  let file_data = state.files[file_id];\n  if (file_data.dv) {\n    // Pool?\n    packetBufPoolFree(file_data.dv);\n    delete file_data.dv;\n  }\n  state.buffer_size -= file_data.length;\n  assert(state.buffer_size >= 0);\n  delete state.files[file_id];\n}\n\nexport function chunkedReceiverInit(name, max_buffer_size) {\n  return {\n    name,\n    max_buffer_size,\n    last_file_id: 0,\n    buffer_size: 0,\n    files: {},\n  };\n}\n\nexport function chunkedReceiverCleanup(state) {\n  if (!state || !state.files) {\n    return;\n  }\n  for (let file_id in state.files) {\n    cleanupFile(state, file_id);\n  }\n}\n\nexport function chunkedReceiverFreeFile(container) {\n  let { buffer, dv } = container;\n  assert(buffer);\n  assert(dv);\n  packetBufPoolFree(dv);\n  delete container.buffer;\n}\n\nexport function chunkedReceiverGetFile(state, file_id) {\n  if (!state) {\n    return { err: 'ERR_NOT_INITIALIZED' };\n  }\n  function err(msg) {\n    console.error(`${state.name}: chunkedReceiverGetFile(${file_id}): ${msg}`);\n    return { err: msg };\n  }\n  if (!state.files) {\n    return err('ERR_FILE_NOT_FOUND');\n  }\n  let file_data = state.files[file_id];\n  if (!file_data) {\n    return err('ERR_FILE_NOT_FOUND');\n  }\n  if (!file_data.finished) {\n    cleanupFile(state, file_id);\n    return err('ERR_UPLOAD_UNFINISHED');\n  }\n  let { dv, mime_type, length } = file_data;\n  file_data.buffer = null;\n  file_data.dv = null;\n  cleanupFile(state, file_id);\n  let buffer = new Uint8Array(dv.buffer, dv.byteOffset, length);\n  return {\n    dv,\n    mime_type,\n    buffer,\n  };\n}\n\nexport function chunkedReceiverStart(state, pak, resp_func) {\n  assert(state);\n  let length = pak.readInt();\n  let crc = pak.readU32();\n  let mime_type = pak.readAnsiString();\n  let log = `${state.name}: chunkedReceiverStart length=${length} crc=${crc} mime=${mime_type}`;\n\n  if (length > state.max_buffer_size) {\n    console.error(`${log}: ERR_TOO_LARGE`);\n    return void resp_func('ERR_TOO_LARGE');\n  }\n  if (state.buffer_size + length > state.max_buffer_size) {\n    console.error(`${log}: ERR_OUT_OF_SPACE`);\n    return void resp_func('ERR_OUT_OF_SPACE');\n  }\n\n  state.buffer_size += length;\n\n  let id = ++state.last_file_id;\n  console.log(`${log} id=${id}`);\n  state.files[id] = {\n    length,\n    crc,\n    mime_type,\n    total: 0,\n    dv: packetBufPoolAlloc(length),\n  };\n  resp_func(null, id);\n}\n\nexport function chunkedReceiverOnChunk(state, pak, resp_func) {\n  if (!state) {\n    pak.pool();\n    return void resp_func('ERR_NOT_INITED');\n  }\n  let id = pak.readInt();\n  let offs = pak.readInt();\n  let buf = pak.readBuffer(false);\n  let log = `${state.name}: chunkedReceiverOnChunk id=${id} offs=${offs} length=${buf.length}`;\n  let file_data = state.files && state.files[id];\n  if (!file_data) {\n    console.error(`${log}: ERR_INVALID_FILE_ID`);\n    return void resp_func('ERR_INVALID_FILE_ID');\n  }\n  if (file_data.total + buf.length > file_data.length) {\n    cleanupFile(state, id);\n    console.error(`${log}: ERR_BUFFER_OVERRUN`);\n    return void resp_func('ERR_BUFFER_OVERRUN');\n  }\n  console.debug(log);\n  file_data.total += buf.length;\n  file_data.dv.u8.set(buf, offs);\n  if (state.on_progress) {\n    state.on_progress(file_data.total, file_data.length, file_data.mime_type, id);\n  }\n  resp_func();\n}\n\n// Optional? do some final checks\nexport function chunkedReceiverFinish(state, pak, resp_func) {\n  let id = pak.readInt();\n  if (!state) {\n    return void resp_func('ERR_NOT_INITED');\n  }\n  let file_data = state.files && state.files[id];\n  let log = `${state.name}: chunkedReceiverFinish id=${id}`;\n  if (!file_data) {\n    console.error(`${log}: ERR_INVALID_FILE_ID`);\n    return void resp_func('ERR_INVALID_FILE_ID');\n  }\n  if (file_data.total !== file_data.length) {\n    cleanupFile(state, id);\n    console.error(`${log}: ERR_INCOMPLETE (total=${file_data.total} length=${file_data.length})`);\n    return void resp_func('ERR_INCOMPLETE');\n  }\n  let crc = crc32(file_data.dv.u8, file_data.length);\n  if (crc !== file_data.crc) {\n    cleanupFile(state, id);\n    console.error(`${log}: ERR_CRC_MISMATCH (expected=${file_data.crc} actual=${crc})`);\n    return void resp_func('ERR_CRC_MISMATCH');\n  }\n  file_data.finished = true;\n  resp_func();\n}\n\n// cb(err, id)\nexport function chunkedSend(opts, cb) {\n  let { client, buffer, mime_type, max_in_flight } = opts;\n  assert(buffer instanceof Uint8Array, 'Invalid data type');\n  assert(mime_type, 'Missing mime_type');\n\n  let length = buffer.length;\n  assert(length);\n  let crc = crc32(buffer);\n\n  let id;\n  asyncSeries([\n    function getID(next) {\n      let pak = client.pak('upload_start');\n      pak.writeInt(length);\n      pak.writeU32(crc);\n      pak.writeAnsiString(mime_type);\n      pak.send(function (err, assigned_id) {\n        id = assigned_id;\n        next(err);\n      });\n    },\n    function streamFile(next) {\n      let num_chunks = ceil(length / CHUNK_SIZE);\n\n      let any_error = false;\n      function sendChunk(idx, next) {\n        if (any_error) {\n          // Already had an error, fail-fast, don't try to send on disconnected link, etc\n          return void next();\n        }\n        assert(idx < num_chunks);\n        let pak = client.pak('upload_chunk');\n        pak.writeInt(id);\n        let start = idx * CHUNK_SIZE;\n        pak.writeInt(start);\n        let chunk_len = min(CHUNK_SIZE, length - start);\n        pak.writeBuffer(new Uint8Array(buffer.buffer, buffer.byteOffset + start, chunk_len));\n        pak.send(function (err) {\n          if (err) {\n            any_error = true;\n          }\n          next(err);\n        });\n      }\n      let tasks = [];\n      for (let ii = 0; ii < num_chunks; ++ii) {\n        tasks.push(sendChunk.bind(null, ii));\n      }\n      asyncParallelLimit(tasks, max_in_flight, next);\n    },\n    function finish(next) {\n      let pak = client.pak('upload_finish');\n      pak.writeInt(id);\n      pak.send(next);\n    },\n  ], function (err) {\n    cb(err, id);\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport type { // eslint-disable-line import/order\n  ErrorCallback,\n  Roles,\n  TSMap,\n} from 'glov/common/types';\n\nexport const TYPE_INT = 0;\nexport const TYPE_FLOAT = 1;\nexport const TYPE_STRING = 2;\n\nexport type CmdParseType = typeof TYPE_INT | typeof TYPE_FLOAT | typeof TYPE_STRING;\n\nexport type CmdRespFunc<T=string | unknown> = ErrorCallback<T, string | null>;\nexport type CmdDef = {\n  cmd: string;\n  help?: string;\n  usage?: string;\n  prefix_usage_with_help?: boolean;\n  access_show?: string[];\n  access_run?: string[];\n  store_data?: {\n    store_key: string;\n    param: CmdValueDefBase;\n  };\n  override?: boolean; // Allows replacing a command registered earlier by an engine module\n  expose_global?: boolean; // expose the command on `window` for easy use, defaults true if !access_show/_run\n  func(this: AccessContainer | undefined, str: string, resp_func: CmdRespFunc): void;\n};\n\ntype CmdDefRegistered = Omit<CmdDef, 'cmd' | 'func' | 'override'> & {\n  name: string;\n  fn(this: AccessContainer | undefined, str: string, resp_func: CmdRespFunc): void;\n};\n\ntype CmdValueDefBase<T=string|number> = {\n  type: CmdParseType;\n  label?: string;\n  range?: [number, number]; // TYPE_INT or TYPE_FLOAT\n  store?: boolean;\n  ver?: number;\n  help?: string;\n  usage?: string;\n  prefix_usage_with_help?: boolean;\n  on_change?: (is_startup: boolean) => void;\n  access_run?: string[];\n  access_show?: string[];\n  default_value?: string | number;\n  enum_lookup?: TSMap<number>; // TYPE_INT only\n  is_toggle?: boolean;\n  set?: (str: T) => void;\n  get?: () => T;\n};\n\nexport type CmdValueDef = (\n  { type: typeof TYPE_INT } & CmdValueDefBase<number>\n) | (\n  { type: typeof TYPE_FLOAT } & CmdValueDefBase<number>\n) | (\n  { type: typeof TYPE_STRING } & CmdValueDefBase<string>\n);\n\nexports.create = cmdParseCreate; // eslint-disable-line @typescript-eslint/no-use-before-define\n\nimport assert from 'assert';\nimport { perfCounterAdd } from './perfcounters';\nimport { isInteger } from './util';\n\nexport function canonical(cmd: string): string {\n  return cmd.toLowerCase().replace(/[_.]/g, '');\n}\n\nconst TYPE_NAME = ['INTEGER', 'NUMBER', 'STRING'];\n\nexport function defaultHandler(err?: string | null, resp?: unknown): void {\n  if (err) {\n    console.error(err, resp);\n  } else {\n    console.info(resp);\n  }\n}\n\nfunction checkAccess(access: Roles | null, implied_access: TSMap<Roles>, list?: string[]): boolean {\n  if (list) {\n    if (!access) {\n      return false;\n    }\n    for (let ii = 0; ii < list.length; ++ii) {\n      let role = list[ii];\n      if (!access[role]) {\n        // Check for access via implied access\n        let ok = false;\n        for (let my_role in access) {\n          let extra = implied_access[my_role];\n          if (extra && extra[role]) {\n            ok = true;\n            break;\n          }\n        }\n        if (!ok) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction formatUsage(usage?: string, help?: string, prefix_help?: boolean): string | undefined {\n  return !usage ? undefined :\n    prefix_help ? `${help}\\n${usage}`:\n    help ? String(usage).replace(/\\$HELP/, help) :\n    String(usage);\n}\n\nfunction formatRangeValue(type: CmdParseType, value: number | string): string {\n  let ret = String(value);\n  if (type === TYPE_FLOAT && !ret.includes('.')) {\n    ret += '.00';\n  }\n  return ret;\n}\n\nfunction formatEnumValue(enum_lookup: TSMap<number> | undefined, value: string | number): string | number {\n  if (enum_lookup) {\n    for (let key in enum_lookup) {\n      if (enum_lookup[key] === value) {\n        return key;\n      }\n    }\n  }\n  return value;\n}\n\nfunction lookupEnumValue(enum_lookup: TSMap<number>, str: string): number | null {\n  str = str.toUpperCase();\n  let v = enum_lookup[str];\n  if (typeof v === 'number') {\n    return v;\n  }\n  let n = Number(str);\n  if (Object.values(enum_lookup).includes(n)) {\n    return n;\n  }\n  for (let key in enum_lookup) {\n    if (key.startsWith(str)) {\n      return enum_lookup[key]!;\n    }\n  }\n  return null;\n}\n\nconst BOOLEAN_LOOKUP: TSMap<number> = {\n  OFF: 0,\n  ON: 1,\n};\n\nconst CMD_STORAGE_PREFIX = 'cmd_parse_';\n\nfunction cmpCmd(a: { cname: string }, b: { cname: string }): number {\n  if (a.cname < b.cname) {\n    return -1;\n  }\n  return 1;\n}\n\nexport type StorageProvider = {\n  setJSON<T = unknown>(key: string, value: T): void;\n  getJSON<T = unknown>(key: string, def?: T): T | undefined;\n  set(key: string, value: undefined): void; // to delete\n  localStorageExportAll(prefix: string): TSMap<string>;\n};\n\nexport type CmdParseOpts = {\n  storage?: StorageProvider;\n};\n\nexport type AccessContainer = {\n  access?: Roles | null;\n};\n\nexport type CmdAutoCompleteEntry = {\n  cname: string;\n  cmd: string;\n  help: string;\n  usage?: string;\n};\n\ntype CmdListEntry = {\n  name: string;\n  help?: string;\n  usage?: string;\n  access_show?: string[];\n  access_run?: string[];\n  prefix_usage_with_help?: boolean; // will be there on client commands, but already applied on server commands\n};\n\nexport type CmdParse = CmdParseImpl;\nclass CmdParseImpl {\n  declare TYPE_INT: typeof TYPE_INT;\n  declare TYPE_FLOAT: typeof TYPE_FLOAT;\n  declare TYPE_STRING: typeof TYPE_STRING;\n  declare canonical: typeof canonical;\n\n  private default_handler: CmdRespFunc = defaultHandler;\n  last_access: Roles | null = null;\n  was_not_found = false;\n  private storage?: StorageProvider;\n  private cmds: TSMap<CmdDefRegistered>;\n  private cmds_for_complete: TSMap<CmdListEntry>;\n  private implied_access: TSMap<Roles>;\n  private last_cmd_data?: CmdDefRegistered;\n\n  constructor(params?: CmdParseOpts) {\n    this.cmds = {};\n    this.cmds_for_complete = this.cmds;\n    this.storage = params && params.storage;\n    this.register({\n      cmd: 'cmd_list',\n      func: this.cmdList.bind(this),\n      access_show: ['hidden'],\n    });\n    this.implied_access = {\n      sysadmin: { csr: 1 },\n    };\n  }\n\n  private cmd_list?: TSMap<CmdListEntry>;\n  private cmdList(str: string, resp_func: CmdRespFunc<TSMap<CmdListEntry>>): void {\n    if (!this.cmd_list) {\n      this.cmd_list = {};\n      let list = this.cmd_list;\n      for (let cmd in this.cmds) {\n        let cmd_data = this.cmds[cmd]!;\n        let access: string[] = []; // combine for data compaction\n        if (cmd_data.access_show) {\n          access = access.concat(cmd_data.access_show);\n        }\n        if (cmd_data.access_run) {\n          access = access.concat(cmd_data.access_run);\n        }\n        if (access.indexOf('hidden') !== -1) {\n          continue;\n        }\n        let data: CmdListEntry = {\n          name: cmd_data.name,\n          help: String(cmd_data.help),\n        };\n        if (cmd_data.usage) {\n          data.usage = formatUsage(cmd_data.usage, cmd_data.help, cmd_data.prefix_usage_with_help);\n        }\n        if (access.length) {\n          data.access_show = access;\n        }\n        list[cmd] = data;\n      }\n    }\n    resp_func(null, this.cmd_list);\n  }\n\n  setDefaultHandler(fn: CmdRespFunc): void {\n    assert(this.default_handler === defaultHandler); // Should only set this once\n    this.default_handler = fn;\n  }\n  checkAccess(access_list?: string[]): boolean {\n    return checkAccess(this.last_access, this.implied_access, access_list);\n  }\n\n  handle(self: AccessContainer | undefined, str: string, resp_func: CmdRespFunc): boolean {\n    resp_func = resp_func || this.default_handler;\n    this.was_not_found = false;\n    this.last_cmd_data = undefined;\n    let m = str.match(/^([^\\s]+)(?:\\s+(.*))?$/);\n    if (!m) {\n      resp_func('Missing command');\n      return true;\n    }\n    let cmd = canonical(m[1]);\n    let cmd_data = this.cmds[cmd];\n    this.last_access = self && self.access || null;\n    if (cmd_data && !this.checkAccess(cmd_data.access_run)) {\n      // this.was_not_found = true;\n      resp_func(`Access denied: \"${m[1]}\"`);\n      return false;\n    }\n    if (!cmd_data) {\n      this.was_not_found = true;\n      resp_func(`Unknown command: \"${m[1]}\"`);\n      this.was_not_found = false;\n      return false;\n    }\n    perfCounterAdd(`cmd.${cmd}`);\n    this.last_cmd_data = cmd_data;\n    cmd_data.fn.call(self, m[2] || '', resp_func);\n    return true;\n  }\n\n  getLastSuccessfulCmdData(): CmdDefRegistered | undefined {\n    return this.last_cmd_data;\n  }\n\n  exposeGlobal(cmd: string, override?: boolean): void {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    let func_name = cmd.replace(/_(.)/g, function (a, b) {\n      return b.toUpperCase();\n    });\n    type Funcs = TSMap<(a: string) => void>;\n    if ((window as unknown as Funcs)[func_name] && !override) {\n      return;\n    }\n    (window as unknown as Funcs)[func_name] = (...args) => {\n      let is_sync = true;\n      let sync_ret;\n      this.handle(undefined, `${cmd} ${args.join(' ')}`,\n        function (err?: string | null, resp?: unknown): void {\n          if (err) {\n            if (is_sync && !resp) {\n              sync_ret = err;\n            } else {\n              console.error(err, resp);\n            }\n          } else {\n            if (is_sync) {\n              sync_ret = resp;\n            } else {\n              console.info(resp);\n            }\n          }\n        }\n      );\n      is_sync = false;\n      return sync_ret;\n    };\n  }\n\n  register(param: CmdDef): void {\n    assert.equal(typeof param, 'object');\n    let {\n      cmd,\n      func,\n      help,\n      usage,\n      prefix_usage_with_help,\n      access_show,\n      access_run,\n      store_data,\n      override,\n      expose_global,\n    } = param;\n    assert(cmd);\n    assert(func, `Missing function for command \"${cmd}\"`);\n    let help_lower = String(help || '').toLowerCase();\n    if (help_lower.includes('(admin)')) {\n      assert(access_run && access_run.includes('sysadmin'));\n    }\n    if (help_lower.includes('(csr)')) {\n      assert(access_run && access_run.includes('csr'));\n    }\n    if (help_lower.includes('(hidden)')) {\n      assert(access_show && access_show.length);\n    }\n    let canon = canonical(cmd);\n    assert(!this.cmds[canon] || override, `Duplicate commands registered as \"${canon}\"`);\n    if (expose_global === undefined) {\n      expose_global = !access_show && !access_run;\n    }\n    if (expose_global) {\n      this.exposeGlobal(cmd, override);\n    }\n    this.cmds[canon] = {\n      name: cmd,\n      fn: func,\n      help,\n      usage,\n      prefix_usage_with_help,\n      access_show,\n      access_run,\n      store_data, // just for resetSettings\n    };\n  }\n\n  registerValue(cmd: string, param_in: CmdValueDef): void {\n    let param: CmdValueDefBase = param_in as CmdValueDefBase;\n    assert(TYPE_NAME[param.type] || !param.set);\n    assert(param.set || param.get);\n    let label = param.label || cmd;\n    let store = param.store && this.storage || false;\n    let enum_lookup = param.enum_lookup;\n    if (enum_lookup) {\n      assert.equal(param.type, TYPE_INT);\n    }\n    let store_key = `${CMD_STORAGE_PREFIX}${canonical(cmd)}`;\n    if (param.ver) {\n      store_key += `_${param.ver}`;\n    }\n    let is_toggle = param.is_toggle;\n    if (is_toggle) {\n      assert(param.get && param.set && param.range);\n    }\n    let store_data;\n    if (store) {\n      assert(this.storage);\n      assert(param.set);\n      store_data = {\n        store_key,\n        param,\n      };\n      let init_value: string | number | undefined = this.storage.getJSON(store_key);\n      if (init_value !== undefined) {\n        // enforce stored values within current range\n        if (param.range) {\n          init_value = Number(init_value);\n          if (!isFinite(init_value) || init_value < param.range[0] || init_value > param.range[1]) {\n            init_value = undefined;\n          }\n        }\n        if (init_value !== undefined) {\n          param.set(init_value);\n          if (param.on_change) {\n            param.on_change(true);\n          }\n        }\n      }\n    }\n    if (!enum_lookup && param.type === TYPE_INT &&\n      param.range && param.range[0] === 0 && param.range[1] === 1\n    ) {\n      enum_lookup = BOOLEAN_LOOKUP;\n    }\n    let param_label = TYPE_NAME[param.type];\n    if (enum_lookup) {\n      param_label = Object.keys(enum_lookup).join('|');\n    }\n    let fn = (str: string, resp_func: CmdRespFunc): void => {\n      function value(): void {\n        resp_func(null, `${label} = **${formatEnumValue(enum_lookup, param.get!())}**`);\n      }\n      function usage(): void {\n        resp_func(`Usage: **/${cmd} ${param_label}**`);\n      }\n      if (!str && is_toggle) {\n        if (param.get!() === param.range![0]) {\n          str = String(param.range![1]);\n        } else {\n          str = String(param.range![0]);\n        }\n      }\n      if (!str) {\n        if (param.get && param.set) {\n          // More explicit help for these automatic value settings\n          let help = [\n            `${label}:`,\n          ];\n          if (param.range && !(enum_lookup && param.type === TYPE_INT)) {\n            help.push(`Valid range: [${formatRangeValue(param.type, param.range[0])}...` +\n              `${formatRangeValue(param.type, param.range[1])}]`);\n          }\n          let cur_value = param.get();\n          let value_example: string | number = param.range ?\n            cur_value === param.range[0] ? param.range[1] : param.range[0] : 1;\n          if (enum_lookup) {\n            value_example = Object.keys(enum_lookup)[0];\n          }\n          help.push(`To change: **/${cmd} ${param_label}**`);\n          help.push(`  example: **/${cmd} ${value_example}**`);\n          let def_value = param.default_value;\n          if (def_value !== undefined) {\n            help.push(`Default value = **${formatEnumValue(enum_lookup, def_value)}**`);\n          }\n          help.push(`Current value = **${formatEnumValue(enum_lookup, cur_value)}**`);\n          return resp_func(null, help.join('\\n'));\n        } else if (param.get) {\n          return value();\n        } else {\n          return usage();\n        }\n      }\n      if (!param.set) {\n        return resp_func(`Usage: **/${cmd}**`);\n      }\n      let n = Number(str);\n      if (enum_lookup) {\n        let n_test: number | null = lookupEnumValue(enum_lookup, str);\n        if (n_test === null) {\n          return usage();\n        }\n        n = n_test;\n      }\n      if (param.range) {\n        if (n < param.range[0]) {\n          n = param.range[0];\n        } else if (n > param.range[1]) {\n          n = param.range[1];\n        }\n      }\n      let store_value: string | number = n;\n      if (param.type === TYPE_INT) {\n        if (!isInteger(n)) {\n          return usage();\n        }\n        param.set(n);\n      } else if (param.type === TYPE_FLOAT) {\n        if (!isFinite(n)) {\n          return usage();\n        }\n        param.set(n);\n      } else {\n        store_value = str;\n        param.set(str);\n      }\n      if (store) {\n        this.storage!.setJSON(store_key, store_value);\n      }\n      if (param.on_change) {\n        param.on_change(false);\n      }\n      if (param.get) {\n        return value();\n      } else {\n        return resp_func(null, `${label} updated`);\n      }\n    };\n    this.register({\n      cmd,\n      func: fn,\n      help: param.help || ((param.get && param.set) ?\n        `Set or display *${label}* value` :\n        param.set ? `Set *${label}* value` : `Display *${label}* value`),\n      usage: param.usage || ((param.get ? `Display *${label}* value\\n  Usage: **/${cmd}**\\n` : '') +\n        (param.set ? `Set *${label}* value\\n  Usage: **/${cmd} ${param_label}**` : '')),\n      prefix_usage_with_help: param.prefix_usage_with_help,\n      access_show: param.access_show,\n      access_run: param.access_run,\n      store_data,\n    });\n  }\n\n  resetSettings(): string[] {\n    assert(this.storage);\n    let results = [];\n    let all_saved_data = this.storage.localStorageExportAll(CMD_STORAGE_PREFIX);\n    let count = 0;\n    for (let key in all_saved_data) {\n      let value = all_saved_data[key];\n      let cmd_name = key.slice(CMD_STORAGE_PREFIX.length);\n      let version;\n      ([cmd_name, version] = cmd_name.split('_')); // grab and strip version\n      let cmd_data = this.cmds[cmd_name];\n      if (!cmd_data) {\n        this.storage.set(key, undefined);\n        results.push(`Cleared unknown setting \"${cmd_name}\" = ${value}`);\n        ++count;\n      } else {\n        let { name, store_data } = cmd_data;\n        let default_value = store_data?.param?.default_value;\n        if (store_data && store_data.store_key !== key) {\n          this.storage.set(key, undefined);\n          results.push(`Cleared old setting \"${name} (v${version || 0})\"`);\n          ++count;\n        } else if (default_value !== undefined) {\n          if (JSON.stringify(default_value) === value) {\n            // Already at default value, \"clear\" this silently, just remove from storage\n            this.storage.set(key, undefined);\n            // results.push(`Cleared setting \"${name}\" already at default value`);\n            // ++count;\n          } else {\n            this.storage.set(key, undefined);\n            results.push(`Cleared setting \"${name}\" = ${value} (default = ${default_value})`);\n            ++count;\n          }\n        } else {\n          this.storage.set(key, undefined);\n          results.push(`Cleared setting \"${name}\" = ${value}`);\n          ++count;\n        }\n      }\n    }\n\n    if (results.length) {\n      results.push(`Reset ${count} setting(s)`);\n    }\n    return results;\n  }\n\n  // for auto-complete\n  addServerCommands(new_cmds: TSMap<CmdListEntry>): void {\n    let cmds = this.cmds_for_complete;\n    if (this.cmds_for_complete === this.cmds) {\n      cmds = this.cmds_for_complete = {};\n      for (let cname in this.cmds) {\n        cmds[cname] = this.cmds[cname];\n      }\n    }\n    for (let cname in new_cmds) {\n      if (!cmds[cname]) {\n        cmds[cname] = new_cmds[cname]!;\n      }\n    }\n  }\n\n  autoComplete(str_in: string, access: Roles | null): CmdAutoCompleteEntry[] {\n    let list: CmdAutoCompleteEntry[] = [];\n    let str = str_in.split(' ');\n    let first_tok = canonical(str[0]);\n    this.last_access = access;\n    for (let cname in this.cmds_for_complete) {\n      if (str.length === 1 && cname.slice(0, first_tok.length) === first_tok ||\n        str.length > 1 && cname === first_tok\n      ) {\n        let cmd_data = this.cmds_for_complete[cname]!;\n        if (this.checkAccess(cmd_data.access_show) && this.checkAccess(cmd_data.access_run)) {\n          list.push({\n            cname,\n            cmd: cmd_data.name,\n            help: String(cmd_data.help),\n            usage: formatUsage(cmd_data.usage, cmd_data.help, cmd_data.prefix_usage_with_help),\n          });\n        }\n      }\n    }\n    list.sort(cmpCmd);\n    return list; // .slice(0, 20); Maybe?\n  }\n}\n\nCmdParseImpl.prototype.canonical = canonical;\n\nCmdParseImpl.prototype.TYPE_INT = TYPE_INT;\nCmdParseImpl.prototype.TYPE_FLOAT = TYPE_FLOAT;\nCmdParseImpl.prototype.TYPE_STRING = TYPE_STRING;\n\nexport function cmdParseCreate(params?: CmdParseOpts): CmdParse {\n  return new CmdParseImpl(params);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Possibly originally from PNG Specification Appendix: https://www.w3.org/TR/PNG-CRCAppendix.html\n\n// Table of CRCs of all 8-bit messages.\nlet crc_table = new Array(256);\n\n// Make the table for a fast CRC.\n(function () {\n  for (let n = 0; n < 256; n++) {\n    let c = n;\n    for (let k = 0; k < 8; k++) {\n      if (c & 1) {\n        c = -306674912 ^ (c >>> 1);\n      } else {\n        c >>>= 1;\n      }\n    }\n    crc_table[n] = c;\n  }\n}());\n\n\n/* Update a running CRC with the bytes buf[0..len-1]--the CRC\nshould be initialized to all 1's, and the transmitted value\nis the 1's complement of the final running CRC (see the\ncrc32() routine below)). */\n\nfunction update_crc(crc, buf, len) {\n  for (let n = 0; n < len; n++) {\n    crc = crc_table[(crc ^ buf[n]) & 0xff] ^ (crc >>> 8);\n  }\n  return crc;\n}\n\n// Return the CRC of the bytes buf[0..len-1].\nfunction crc32(buf, len) {\n  len = len || buf.length;\n  return (update_crc(0xffffffff, buf, len) ^ 0xffffffff) >>> 0;\n}\nmodule.exports = crc32;\nmodule.exports.crc32 = crc32;\n","import assert from 'assert';\n\nexport type DataError = {\n  msg: string;\n  per_frame?: boolean;\n};\n\nlet on_error: null | ((err: DataError) => void) = null;\nlet enabled = false;\nlet error_queue: DataError[] = [];\nlet msgs_in_queue: Partial<Record<string, true>> = Object.create(null);\nexport function dataErrorEx(err: DataError): void {\n  if (!enabled) {\n    return;\n  }\n  if (err.per_frame) {\n    if (msgs_in_queue[err.msg]) {\n      // Duplicate, silently ignore\n      return;\n    }\n    msgs_in_queue[err.msg] = true;\n  }\n  if (on_error) {\n    on_error(err);\n  }\n  error_queue.push(err);\n  if (error_queue.length > 25) {\n    let removed = error_queue.splice(0, 1)[0];\n    if (removed.per_frame) {\n      delete msgs_in_queue[removed.msg];\n    }\n  }\n}\n\nexport function dataError(msg: string): void {\n  dataErrorEx({ msg });\n}\n\nexport function dataErrorQueueEnable(val: boolean): void {\n  enabled = val;\n}\n\nexport function dataErrorOnError(cb: (err: DataError) => void): void {\n  assert(!on_error);\n  on_error = cb;\n}\n\nexport function dataErrorQueueGet(): DataError[] {\n  return error_queue;\n}\n\nexport function dataErrorQueueClear(): void {\n  error_queue = [];\n  msgs_in_queue = Object.create(null);\n}\n","/* eslint prefer-template:off */\n// From https://github.com/sindresorhus/dot-prop\n// MIT License\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\n// Adjusted to work on old browsers (if through Babel) and to not crash on Arrays\n\nconst { arrayToSet } = require('./util.js');\n\nconst disallowedKeys = arrayToSet([\n  '__proto__',\n  'prototype',\n  'constructor'\n]);\n\nfunction isObject(value) {\n  const type = typeof value;\n  return value !== null && (type === 'object' || type === 'function');\n}\n\nfunction isValidPath(pathSegments) {\n  for (let ii = 0; ii < pathSegments.length; ++ii) {\n    if (disallowedKeys[pathSegments[ii]]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getPathSegments(path) {\n  const pathArray = path.split('.');\n  const parts = [];\n\n  for (let i = 0; i < pathArray.length; i++) {\n    let p = pathArray[i];\n\n    while (p[p.length - 1] === '\\\\' && pathArray[i + 1] !== undefined) {\n      p = p.slice(0, -1) + '.';\n      p += pathArray[++i];\n    }\n\n    parts.push(p);\n  }\n\n  if (!isValidPath(parts)) {\n    return [];\n  }\n\n  return parts;\n}\n\nexport function dotPropGet(object, path, value) {\n  if (!isObject(object) || typeof path !== 'string') {\n    return value === undefined ? object : value;\n  }\n\n  const pathArray = getPathSegments(path);\n  if (pathArray.length === 0) {\n    return value;\n  }\n\n  for (let i = 0; i < pathArray.length; i++) {\n    object = object[pathArray[i]];\n\n    if (object === undefined || object === null) {\n      // `object` is either `undefined` or `null` so we want to stop the loop, and\n      // if this is not the last bit of the path, and\n      // if it did't return `undefined`\n      // it would return `null` if `object` is `null`\n      // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n      if (i !== pathArray.length - 1) {\n        return value;\n      }\n\n      break;\n    }\n  }\n\n  return object === undefined ? value : object;\n}\n\nexport function dotPropSet(object, path, value) {\n  if (!isObject(object) || typeof path !== 'string') {\n    return object;\n  }\n\n  const root = object;\n  const pathArray = getPathSegments(path);\n\n  for (let i = 0; i < pathArray.length; i++) {\n    const p = pathArray[i];\n\n    if (i === pathArray.length - 1) {\n      object[p] = value;\n    } else if (!isObject(object[p])) {\n      object[p] = {};\n    }\n\n\n    object = object[p];\n  }\n\n  return root;\n}\n\n// eslint-disable-next-line consistent-return\nexport function dotPropDelete(object, path) {\n  if (!isObject(object) || typeof path !== 'string') {\n    return false;\n  }\n\n  const pathArray = getPathSegments(path);\n\n  for (let i = 0; i < pathArray.length; i++) {\n    const p = pathArray[i];\n\n    if (i === pathArray.length - 1) {\n      delete object[p];\n      return true;\n    }\n\n    object = object[p];\n\n    if (!isObject(object)) {\n      return false;\n    }\n  }\n}\n\nexport function dotPropHas(object, path) {\n  if (!isObject(object) || typeof path !== 'string') {\n    return false;\n  }\n\n  const pathArray = getPathSegments(path);\n  if (pathArray.length === 0) {\n    return false;\n  }\n\n  for (let i = 0; i < pathArray.length; i++) {\n    if (isObject(object)) {\n      if (!(pathArray[i] in object)) {\n        return false;\n      }\n\n      object = object[pathArray[i]];\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// Legacy APIs\nexports.get = dotPropGet;\nexports.set = dotPropSet;\nexports.delete = dotPropDelete;\nexports.has = dotPropHas;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport const PRESENCE_OFFLINE = 0; // for invisible, etc\nexport const PRESENCE_ACTIVE = 1;\nexport const PRESENCE_INACTIVE = 2;\n// when invisible *and* idle; client -> server only, other clients should never see\nexport const PRESENCE_OFFLINE_INACTIVE = 3;\nexport function presenceActive(presence_value: number): boolean {\n  return !(presence_value === PRESENCE_INACTIVE || presence_value === PRESENCE_OFFLINE_INACTIVE);\n}\nexport function presenceVisible(presence_value: number): boolean {\n  return !(presence_value === PRESENCE_OFFLINE || presence_value === PRESENCE_OFFLINE_INACTIVE);\n}\n\nexport type NumberEnum<K extends string, V extends number> = Record<K, V> & Partial<Record<string, V | string>>;\nexport type StringEnum<K extends string, V extends string> = Record<K, V>;\n\nexport function getStringEnumValues<K extends string, V extends string>(e: StringEnum<K, V>): V[] {\n  return Object.values(e);\n}\nexport function isValidNumberEnumKey<K extends string, V extends number>(e: NumberEnum<K, V>, k: string): k is K {\n  return typeof e[k] === 'number';\n}\nexport function isValidStringEnumKey<K extends string, V extends string>(e: StringEnum<K, V>, k: string): k is K {\n  return k in e;\n}\nexport function isValidStringEnumValue<K extends string, V extends string>(\n  e: StringEnum<K, V>,\n  v: string | undefined | null,\n): v is V {\n  for (let key in e) {\n    if (e[key] === v) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport const CHAT_FLAG_EMOTE = 1;\nexport const CHAT_FLAG_USERCHAT = 2; // Only used on client, not communicated\n","// Errors\nexport const ERR_INVALID_DATA = 'ERR_INVALID_DATA';\nexport const ERR_INVALID_PROVIDER = 'ERR_INVALID_PROVIDER';\nexport const ERR_UNAUTHORIZED = 'ERR_UNAUTHORIZED';\nexport const ERR_NO_USER_ID = 'ERR_NO_USER_ID';\nexport const ERR_UNCONFIRMED_EMAIL = 'ERR_UNCONFIRMED_EMAIL';\nexport const ERR_SERVER = 'ERR_SERVER';\nexport const ERR_EMAIL_ALREADY_USED = 'ERR_EMAIL_ALREADY_USED';\nexport const ERR_NOT_AVAILABLE = 'ERR_NOT_AVAILABLE';\n","export enum FriendStatus {\n  Added = 1,\n  AddedAuto = 2,\n  Removed = 3,\n  Blocked = 4,\n}\n\nexport interface FriendData {\n  status: FriendStatus;\n  ids?: Record<string, string>;\n}\n\nexport type FriendsData = Record<string, FriendData>;\n","/**\n *\n *  MD5 (Message-Digest Algorithm)\n *  http://www.webtoolkit.info/\n *\n * Modified by railGun to handle node.js Buffer objects\n *\n **/\n\n/* eslint no-bitwise:off, new-cap:off*/\nconst assert = require('assert');\n\nfunction stringUtf8Encode(str) {\n  let c;\n  let n;\n  let utftext = [];\n  str = str.replace(/\\r\\n/g, '\\n');\n  for (n = 0; n < str.length; ++n) {\n    c = str.charCodeAt(n);\n    if (c < 128) {\n      utftext.push(String.fromCharCode(c));\n    } else if ((c > 127) && (c < 2048)) {\n      utftext.push(String.fromCharCode((c >> 6) | 192));\n      utftext.push(String.fromCharCode((c & 63) | 128));\n    } else {\n      utftext.push(String.fromCharCode((c >> 12) | 224));\n      utftext.push(String.fromCharCode(((c >> 6) & 63) | 128));\n      utftext.push(String.fromCharCode((c & 63) | 128));\n    }\n  }\n  return utftext.join('');\n}\n\n\nfunction rotateLeft(lValue, iShiftBits) {\n  return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n}\n\nfunction addUnsigned(lX,lY) {\n  let lX8 = (lX & 0x80000000);\n  let lY8 = (lY & 0x80000000);\n  let lX4 = (lX & 0x40000000);\n  let lY4 = (lY & 0x40000000);\n  let lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n  if (lX4 & lY4) {\n    return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n  }\n  if (lX4 | lY4) {\n    if (lResult & 0x40000000) {\n      return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n    } else {\n      return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n    }\n  } else {\n    return (lResult ^ lX8 ^ lY8);\n  }\n}\n\nfunction F(x,y,z) {\n  return (x & y) | ((~x) & z);\n}\nfunction G(x,y,z) {\n  return (x & z) | (y & (~z));\n}\nfunction H(x,y,z) {\n  return (x ^ y ^ z);\n}\nfunction I(x,y,z) {\n  return (y ^ (x | (~z)));\n}\n\nfunction FF(a,b,c,d,x,s,ac) {\n  a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));\n  return addUnsigned(rotateLeft(a, s), b);\n}\n\nfunction GG(a,b,c,d,x,s,ac) {\n  a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));\n  return addUnsigned(rotateLeft(a, s), b);\n}\n\nfunction HH(a,b,c,d,x,s,ac) {\n  a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));\n  return addUnsigned(rotateLeft(a, s), b);\n}\n\nfunction II(a,b,c,d,x,s,ac) {\n  a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));\n  return addUnsigned(rotateLeft(a, s), b);\n}\n\nfunction convertToWordArray(string) {\n  let lWordCount;\n  let lMessageLength = string.length;\n  let lNumberOfWords_temp1=lMessageLength + 8;\n  let lNumberOfWords_temp2=\n    (lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n  let lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n  let lWordArray=new Array(lNumberOfWords-1);\n  let lBytePosition = 0;\n  let lByteCount = 0;\n  while (lByteCount < lMessageLength) {\n    lWordCount = (lByteCount-(lByteCount % 4))/4;\n    lBytePosition = (lByteCount % 4)*8;\n    lWordArray[lWordCount] |= string.charCodeAt(lByteCount) << lBytePosition;\n    lByteCount++;\n  }\n  lWordCount = (lByteCount-(lByteCount % 4))/4;\n  lBytePosition = (lByteCount % 4)*8;\n  lWordArray[lWordCount] |= (0x80<<lBytePosition);\n  lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n  lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n  return lWordArray;\n}\n\n// function convertByteArraytoWordArray(arr) {\n//   let lWordCount;\n//   let lMessageLength = arr.length;\n//   let lNumberOfWords_temp1 = lMessageLength + 8;\n//   let lNumberOfWords_temp2 =\n//     (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;\n//   let lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n//   let lWordArray = new Array(lNumberOfWords - 1);\n//   let lBytePosition = 0;\n//   let lByteCount = 0;\n//   while (lByteCount < lMessageLength) {\n//     lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n//     lBytePosition = (lByteCount % 4) * 8;\n//     lWordArray[lWordCount] |= arr[lByteCount] << lBytePosition;\n//     lByteCount++;\n//   }\n//   lWordCount = (lByteCount - (lByteCount % 4)) / 4;\n//   lBytePosition = (lByteCount % 4) * 8;\n//   lWordArray[lWordCount] |= 0x80 << lBytePosition;\n//   lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n//   lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n//   return lWordArray;\n// }\n\nfunction wordToHex(lValue) {\n  let wordToHexValue='';\n\n\n  let wordToHexValue_temp='';\n\n\n  let lByte;\n  let lCount;\n  for (lCount = 0; lCount<=3; lCount++) {\n    lByte = (lValue>>>(lCount*8)) & 255;\n    wordToHexValue_temp = `0${lByte.toString(16)}`;\n    wordToHexValue +=\n      wordToHexValue_temp.substr(wordToHexValue_temp.length-2,2);\n  }\n  return wordToHexValue;\n}\n\n// string can either be a string, node.js Buffer, array (of numbers < 256)\n// or a typed array\nmodule.exports = function md5(string) {\n  let AA;\n  let BB;\n  let CC;\n  let DD;\n  let a;\n  let b;\n  let c;\n  let d;\n  let k;\n  let S11=7;\n  let S12=12;\n  let S13=17;\n  let S14=22;\n  let S21=5;\n  let S22=9;\n  let S23=14;\n  let S24=20;\n  let S31=4;\n  let S32=11;\n  let S33=16;\n  let S34=23;\n  let S41=6;\n  let S42=10;\n  let S43=15;\n  let S44=21;\n\n  let x;\n  if (typeof string === 'string') {\n    string = stringUtf8Encode(string);\n    x = convertToWordArray(string);\n  } else {\n    assert(false); // disable due to not used\n    // node.js buffer or Array\n    // x = convertByteArraytoWordArray(string);\n  }\n\n  a = 0x67452301;\n  b = 0xEFCDAB89;\n  c = 0x98BADCFE;\n  d = 0x10325476;\n\n  for (k=0; k<x.length; k+=16) {\n    AA=a;\n    BB=b;\n    CC=c;\n    DD=d;\n    a=FF(a,b,c,d,x[k], S11,0xD76AA478);\n    d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n    c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n    b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n    a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n    d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n    c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n    b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n    a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n    d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n    c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n    b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n    a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n    d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n    c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n    b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n    a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n    d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n    c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n    b=GG(b,c,d,a,x[k], S24,0xE9B6C7AA);\n    a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n    d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n    c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n    b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n    a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n    d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n    c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n    b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n    a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n    d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n    c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n    b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n    a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n    d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n    c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n    b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n    a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n    d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n    c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n    b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n    a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n    d=HH(d,a,b,c,x[k], S32,0xEAA127FA);\n    c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n    b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n    a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n    d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n    c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n    b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n    a=II(a,b,c,d,x[k], S41,0xF4292244);\n    d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n    c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n    b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n    a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n    d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n    c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n    b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n    a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n    d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n    c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n    b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n    a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n    d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n    c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n    b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n    a=addUnsigned(a,AA);\n    b=addUnsigned(b,BB);\n    c=addUnsigned(c,CC);\n    d=addUnsigned(d,DD);\n  }\n\n  let temp = wordToHex(a)+wordToHex(b)+wordToHex(c)+wordToHex(d);\n  return temp.toLowerCase();\n};\n\n/* // Uncomment this and run \"node MD5.js file.ext\"\nvar FS = require('fs');\nvar data = FS.readFileSync(process.argv[2]);\nvar md5 = module.exports(data);\nconsole.log('MD5 = ' + md5);\n// */\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Some code derived from libGLOV (C++), also MIT Licensed\n\n/* eslint no-bitwise:off */\n\n// Upon read, throw an exception if there is any data read error (e.g. read off of end of packet)\n\n// TODO: Maybe: Have 2 offsets, one for writing (data_len?), one for reading (buf_offs?),\n//   then there should be many fewer ?pak.readable branches\n//   that return different values under different circumstances, and maybe fewer .makeReadable() calls needed.\n\n\n// 3 bits of flags reserved for internal use\nconst PACKET_DEBUG = exports.PACKET_DEBUG = 1<<0;\nconst PACKET_RESERVED1 = exports.PACKET_RESERVED1 = 1<<1;\nconst PACKET_RESERVED2 = exports.PACKET_RESERVED2 = 1<<2;\nconst FLAG_PACKET_INTERNAL = PACKET_DEBUG | PACKET_RESERVED1 | PACKET_RESERVED2;\n\n// Internal, runtime-only (not serialized) flags < 8 bits\nconst PACKET_UNOWNED_BUFFER = 1 << 8;\n\nimport assert from 'assert';\nimport {\n  base64Decode,\n  base64Encode,\n} from './base64';\nimport { deprecate, isInteger, log2 } from './util';\n// import { isInteger, log2 } from '../../build.dev/common/glov/util';\n\nconst { max } = Math;\n\ndeprecate(exports, 'default_flags');\n\nconst FALSYS = [undefined, null, 0, false, '', NaN];\nconst PAK_BUF_DEFAULT_SIZE = 1024;\n\nconst UNDERRUN = 'PKTERR_UNDERRUN';\n\nconst POOL_PACKETS = 5000;\nconst POOL_TIMEOUT = 5000;\nconst POOL_BUF_BY_SIZE = [\n  0, // 2^0 : 1 - shouldn't be allocated ever?\n  10, // 2^1 : 2\n  10, // 2^2 : 4\n  20, // 2^3 : 8\n  20, // 2^4 : 16\n  20, // 2^5 : 32\n  20, // 2^6 : 64\n  20, // 2^7 : 128\n  20, // 2^8 : 256\n  20, // 2^9 : 512\n  5000, // 2^10 : 1024 - standard Packet size\n  20, // 2^11 : 2048\n  20, // 2^12 : 4096\n  20, // 2^13 : 8192\n  20, // 2^14 : 16384\n  20, // 2^15 : 32768\n  20, // 2^16 : 65536\n  10, // 2^17 : 131072\n  10, // 2^18 : 262144,\n];\n\nlet pak_pool = [];\nlet pak_debug_pool = [];\nlet buf_pool = POOL_BUF_BY_SIZE.map(() => []);\n\nfunction allocDataView(size) {\n  let pool_idx = log2(size);\n  assert(pool_idx);\n  if (pool_idx >= buf_pool.length) {\n    pool_idx = 0;\n  }\n  if (pool_idx) {\n    size = 1 << pool_idx;\n    if (buf_pool[pool_idx].length) {\n      // No reinit here, just a container\n      //console.log(`Buffer FROMPOOL:${size}/${pool_idx}`);\n      return buf_pool[pool_idx].pop();\n    }\n  } else {\n    // Enable this (and lower pool size) to track down big packets:\n    // console.log(`Allocating UNPOOLABLE buffer of size ${size} from ${new Error().stack}`);\n  }\n  //console.log(`Buffer ALLOC:${size}`);\n  let u8 = new Uint8Array(size);\n  let dv = new DataView(u8.buffer);\n  dv.u8 = u8;\n  if (pool_idx) {\n    dv.packet_pool_idx = pool_idx;\n  }\n  return dv;\n}\n\nfunction wrapU8AsDataView(u8) {\n  let dv = new DataView(u8.buffer, u8.byteOffset, u8.byteLength);\n  dv.u8 = u8;\n  return dv;\n}\n\nfunction utf8ByteLength(str) {\n  let len = str.length;\n  let ret = len;\n  for (let ii = 0; ii < len; ++ii) {\n    let c = str.charCodeAt(ii);\n    if (c > 0x7F) {\n      ++ret;\n      if (c > 0x07FF) {\n        ++ret;\n        if (c > 0xFFFF) {\n          ++ret;\n          if (c > 0x1FFFFF) {\n            ++ret;\n            if (c > 0x3FFFFFF) {\n              ++ret;\n            }\n          }\n        }\n      }\n    }\n  }\n  return ret;\n}\n\n// Assumes buffer will fit it\nfunction utf8WriteChar(buf, buf_offs, c) {\n  if (c > 0x10FFFF) {\n    // Limit to Unicode max code point. Note that this function currently\n    //   receives character codes, not code points, so will not actually\n    //   ever receive a value over 0xFFFF since JavaScript uses UTF-16\n    //   character codes.  See note on writeString below.\n    c = 0xFFFF;\n  }\n  if (c <= 0x7F) {\n    buf.u8[buf_offs++] = c;\n  } else if (c <= 0x07FF) {\n    buf.u8[buf_offs++] = (c >> 6) | 0xC0;\n    buf.u8[buf_offs++] = (c & 0x3F) | 0x80;\n  } else if (c <= 0xFFFF) {\n    buf.u8[buf_offs++] = (c >> 12) | 0xE0;\n    buf.u8[buf_offs++] = ((c >> 6) & 0x3F) | 0x80;\n    buf.u8[buf_offs++] = (c & 0x3F) | 0x80;\n  } else if (c <= 0x10FFFF) { // Note: technically can fit up to 0x1FFFFF here, but those code points are disallowed\n    buf.u8[buf_offs++] = (c >> 18) | 0xF0;\n    buf.u8[buf_offs++] = ((c >> 12) & 0x3F) | 0x80;\n    buf.u8[buf_offs++] = ((c >> 6) & 0x3F) | 0x80;\n    buf.u8[buf_offs++] = (c & 0x3F) | 0x80;\n  } else {\n    assert(false);\n  }\n  return buf_offs;\n}\n\nfunction poolBuf(dv) {\n  // if it's poolable (not part of another Buffer), pool it!\n  assert(dv);\n  assert(dv.u8);\n  let pool_idx = dv.packet_pool_idx;\n  if (pool_idx) {\n    let arr = buf_pool[pool_idx];\n    if (arr.length < POOL_BUF_BY_SIZE[pool_idx]) {\n      //console.log(`Buffer TOPOOL:${dv.byteLength}/${pool_idx}`);\n      arr.push(dv);\n    }\n  } else {\n    // console.log(`Buffer UNPOOLABLE:${dv.byteLength}`);\n  }\n}\n\nexport function packetBufPoolAlloc(size) {\n  return allocDataView(size);\n}\nexport function packetBufPoolFree(dv) {\n  poolBuf(dv);\n}\n\n\nlet default_flags = 0;\nexport function packetDefaultFlags() {\n  return default_flags;\n}\n\nexport function packetEnableDebug(enable) {\n  if (enable) {\n    default_flags |= PACKET_DEBUG;\n  }\n}\n\nfunction Packet(flags, init_size, pak_debug) {\n  this.reinit(flags, init_size, pak_debug);\n}\nPacket.prototype.reinit = function (flags, init_size, pak_debug) {\n  this.flags = flags || 0;\n  this.has_flags = false;\n  this.buf = null;\n  this.buf_len = 0;\n  this.buf_offs = 0;\n  this.bufs = null;\n  this.bsizes = null;\n  this.readable = false;\n  this.ref_count = 1;\n  this.pak_debug = pak_debug;\n  if (init_size) {\n    this.fit(init_size, true);\n    this.buf_len = init_size;\n  }\n};\nPacket.prototype.getRefCount = function () {\n  return this.ref_count;\n};\nPacket.prototype.ref = function () {\n  assert(this.ref_count); // must not already be pooled!\n  ++this.ref_count;\n};\nPacket.prototype.pool = function () {\n  assert(this.ref_count);\n  if (--this.ref_count) {\n    return;\n  }\n  // Do not clear on pool(), callers (readInt()) may still momentarily reference .buf, etc\n  if (this.flags & PACKET_UNOWNED_BUFFER) {\n    // doing nothing with buffers, still pooling the packet\n  } else {\n    if (this.buf) {\n      poolBuf(this.buf);\n    }\n    if (this.bufs) {\n      for (let ii = 0; ii < this.bufs.length; ++ii) {\n        poolBuf(this.bufs[ii]);\n      }\n    }\n  }\n  if (pak_pool.length < POOL_PACKETS) {\n    pak_pool.push(this);\n  }\n  if (this.pak_debug) {\n    this.pak_debug.poolDebug();\n  }\n};\n\nPacket.prototype.totalSize = function () {\n  let ret = 0;\n  if (this.readable) {\n    return this.buf_len;\n  }\n  if (this.bsizes) {\n    for (let ii = 0; ii < this.bsizes.length; ++ii) {\n      ret += this.bsizes[ii];\n    }\n  }\n  ret += this.buf_offs;\n  return ret;\n};\n\nPacket.prototype.setReadable = function () {\n  assert(this.buf);\n  assert(!this.bufs);\n  assert(!this.readable);\n  this.readable = true;\n};\n\nPacket.prototype.makeReadable = function () {\n  assert(this.buf);\n  assert(!this.readable); // otherwise just reset offset? or do nothing?\n  let total = this.totalSize(); // before this.readable = true\n  this.readable = true;\n  if (!this.bufs) {\n    this.buf_len = total;\n    this.buf_offs = 0;\n    return;\n  }\n  let buf = allocDataView(total);\n  let u8 = buf.u8;\n  let offs = 0;\n  for (let ii = 0; ii < this.bufs.length; ++ii) {\n    let bsize = this.bsizes[ii];\n    let dv = this.bufs[ii];\n    if (offs + dv.u8.length > total) {\n      // unused portion would overrun\n      assert.equal(dv.byteOffset, 0);\n      u8.set(new Uint8Array(dv.buffer, 0, bsize), offs);\n    } else {\n      u8.set(dv.u8, offs);\n    }\n    offs += bsize;\n    poolBuf(dv);\n  }\n  assert.equal(this.buf.byteOffset, 0); // Would handle it, but should never happen here, these are our pooled buffers?\n  u8.set(new Uint8Array(this.buf.buffer, this.buf.byteOffset, this.buf_offs), offs);\n  poolBuf(this.buf);\n  assert.equal(offs + this.buf_offs, total);\n  this.bufs = this.bsizes = null;\n  this.buf = buf;\n  this.buf_offs = 0;\n  this.buf_len = total; // buffer is actually buf.buffer.byteLength, but we can't read past `total`\n};\n\nPacket.prototype.flush = function () {\n  let { buf, buf_offs } = this;\n  if (!this.bufs) {\n    this.bufs = [buf];\n    this.bsizes = [buf_offs];\n  } else {\n    this.bufs.push(buf);\n    this.bsizes.push(buf_offs);\n  }\n  this.buf = null;\n  this.buf_len = 0;\n  this.buf_offs = 0;\n};\nPacket.prototype.fit = function (extra_bytes, no_advance) {\n  let { buf, buf_len, buf_offs } = this;\n  let new_offs = buf_offs + extra_bytes;\n  if (new_offs <= buf_len) {\n    if (!no_advance) {\n      this.buf_offs = new_offs;\n    }\n    return buf_offs;\n  }\n  assert(!this.readable); // Shouldn't happen on concatenated buffers\n  if (buf) {\n    this.flush();\n  }\n  this.buf_len = buf_len = max(PAK_BUF_DEFAULT_SIZE, extra_bytes);\n  this.buf = allocDataView(buf_len);\n  this.buf_offs = no_advance ? 0 : extra_bytes;\n  return 0;\n};\nPacket.prototype.advance = function (bytes) {\n  let offs = this.buf_offs;\n  let new_offs = offs + bytes;\n  this.buf_offs = new_offs;\n  if (new_offs > this.buf_len) {\n    throw new Error(UNDERRUN);\n  }\n  if (new_offs === this.buf_len) {\n    this.pool();\n  }\n  return offs;\n};\nPacket.prototype.ended = function () {\n  return this.buf_offs === this.buf_len;\n};\n\n// low-level write/read functions\nPacket.prototype.writeU8 = function (v) {\n  assert(v >= 0 && v < 256);\n  let offs = this.fit(1);\n  this.buf.u8[offs] = v;\n};\nPacket.prototype.readU8 = function () {\n  return this.buf.u8[this.advance(1)];\n};\n// Packed int, first byte:\n// 0-247 byte\n// 248 positive 16-bit\n// 249 negative 16-bit\n// 250 positive 32-bit\n// 251 negative 32-bit\n// 252 positive 64-bit\n// 253 negative 64-bit\n// 254 unused\n// 255 negative byte\nexport function packetSizeInt(v) {\n  assert(isInteger(v));\n  let neg = (v < 0) ? 1 : 0;\n  if (neg) {\n    v = -v;\n  }\n  if (v < 248) { // || neg && v < 256 would also decode right\n    if (neg) {\n      return 2;\n    }\n    return 1;\n  } else {\n    if (v < 65536) {\n      return 3;\n    } else if (v < 4294967296) {\n      return 5;\n    } else {\n      return 9;\n    }\n  }\n}\nPacket.prototype.writeInt = function (v) {\n  assert(isInteger(v));\n  let offs = this.fit(9, true); // 9 is max size of a packed int\n  let buf = this.buf;\n  let neg = (v < 0) ? 1 : 0;\n  if (neg) {\n    v = -v;\n  }\n  if (v < 248) { // || neg && v < 256 would also decode right\n    if (neg) {\n      buf.u8[offs++] = 255;\n    }\n    buf.u8[offs++] = v;\n  } else {\n    if (v < 65536) {\n      buf.u8[offs++] = 248 + neg;\n      buf.setUint16(offs, v, true);\n      offs += 2;\n    } else if (v < 4294967296) {\n      buf.u8[offs++] = 250 + neg;\n      buf.setUint32(offs, v, true);\n      offs += 4;\n    } else {\n      buf.u8[offs++] = 252 + neg;\n      let low_bits = v >>> 0;\n      buf.setUint32(offs, low_bits, true);\n      offs += 4;\n      buf.setUint32(offs, (v - low_bits) / 4294967296, true);\n      offs += 4;\n    }\n  }\n  this.buf_offs = offs;\n};\nPacket.prototype.zeroInt = function () {\n  // Overwrite an existing int with a zero, keeping the same packed size\n  let b1 = this.buf.u8[this.buf_offs];\n  if (b1 < 248) {\n    this.buf.u8[this.buf_offs++] = 0;\n    return;\n  }\n  // Otherwise, leave header bit\n  this.buf_offs++;\n  let zeroes;\n  switch (b1) {\n    case 253:\n    case 252:\n      zeroes = 8;\n      break;\n    case 251:\n    case 250:\n      zeroes = 4;\n      break;\n    case 249:\n    case 248:\n      zeroes = 2;\n      break;\n    case 255:\n      zeroes = 1;\n      break;\n    default:\n      throw new Error('PKTERR_PACKED_INT');\n  }\n  while (zeroes) {\n    --zeroes;\n    this.buf.u8[this.buf_offs++] = 0;\n  }\n};\n\n// Actual Node.js Buffer, not Uint8Array/DataView\n// Speculative read, if there's enough data\nexport function packetReadIntFromBuffer(buf, offs, buf_len) {\n  if (buf_len - offs < 1) {\n    return null;\n  }\n  let b1 = buf[offs++];\n  if (b1 < 248) {\n    return { v: b1, offs };\n  }\n  let sign = 1;\n  switch (b1) {\n    case 249:\n      sign = -1;\n    case 248: { // eslint-disable-line no-fallthrough\n      if (buf_len - offs < 2) {\n        return null;\n      }\n      let v = sign * buf.readUInt16LE(offs);\n      offs += 2;\n      return { v, offs };\n    }\n    case 251:\n      sign = -1;\n    case 250: { // eslint-disable-line no-fallthrough\n      if (buf_len - offs < 4) {\n        return null;\n      }\n      let v = sign * buf.readUInt32LE(offs);\n      offs += 4;\n      return { v, offs };\n    }\n    case 253:\n      sign = -1;\n    case 252: { // eslint-disable-line no-fallthrough\n      if (buf_len - offs < 8) {\n        return null;\n      }\n      let low_bits = buf.readUInt32LE(offs);\n      offs += 4;\n      let high_bits = buf.readUInt32LE(offs);\n      offs += 4;\n      let v = sign * (high_bits * 4294967296 + low_bits);\n      return { v, offs };\n    }\n    case 255: {\n      if (buf_len - offs < 1) {\n        return null;\n      }\n      let v = -buf[offs++];\n      return { v, offs };\n    }\n    default:\n      throw new Error('PKTERR_PACKED_INT');\n  }\n}\n\nPacket.prototype.readInt = function () {\n  let b1 = this.buf.u8[this.advance(1)];\n  if (b1 < 248) {\n    return b1;\n  }\n  let sign = 1;\n  switch (b1) {\n    case 249:\n      sign = -1;\n    case 248: // eslint-disable-line no-fallthrough\n      return sign * this.buf.getUint16(this.advance(2), true);\n    case 251:\n      sign = -1;\n    case 250: // eslint-disable-line no-fallthrough\n      return sign * this.buf.getUint32(this.advance(4), true);\n    case 253:\n      sign = -1;\n    case 252: { // eslint-disable-line no-fallthrough\n      let low_bits = this.buf.getUint32(this.advance(4), true);\n      let high_bits = this.buf.getUint32(this.advance(4), true);\n      return sign * (high_bits * 4294967296 + low_bits);\n    }\n    case 255:\n      return -this.buf.u8[this.advance(1)];\n    default:\n      throw new Error('PKTERR_PACKED_INT');\n  }\n};\nPacket.prototype.writeFloat = function (v) {\n  assert.equal(typeof v, 'number');\n  if (!v) {\n    this.buf.u8[this.fit(1)] = 0;\n    return;\n  }\n  let offs = this.fit(5, true);\n  this.buf.setFloat32(offs, v, true);\n  if (this.buf.u8[offs] <= 1) { // escape a 0 or 1 in the first byte\n    this.buf.u8[offs++] = 1;\n    this.buf.setFloat32(offs, v, true);\n  }\n  this.buf_offs = offs + 4;\n};\nPacket.prototype.readFloat = function () {\n  let offs = this.advance(1);\n  let b1 = this.buf.u8[offs];\n  if (!b1) {\n    return 0;\n  }\n  if (b1 === 1) {\n    return this.buf.getFloat32(this.advance(4), true);\n  }\n  this.advance(3);\n  return this.buf.getFloat32(offs, true);\n};\nPacket.prototype.writeU32 = function (v) {\n  assert.equal(typeof v, 'number');\n  this.buf.setUint32(this.fit(4), v, true);\n};\nPacket.prototype.readU32 = function () {\n  return this.buf.getUint32(this.advance(4), true);\n};\n// Note this is not quite serializing the same as UTF-8 when dealing with surrogate\n//   pairs, such as code point U+1F303 which is represented by character codes\n//   0xD83C, 0xDF03, and would technically be <f0 9f 8c 83> in UTF-8, but we\n//   serialize as two separate characters.  When deserialized in the same way,\n//   this reconstructs the same original string, without losing the ability to\n//   serialize some otherwise valid JavaScript strings (e.g. just one char\n//   code 0xD83C) like with Node.js's Buffer's utf8 implementation.\nPacket.prototype.writeString = function (v) {\n  assert.equal(typeof v, 'string'); // Could maybe do a toString() here if not\n  let byte_length = utf8ByteLength(v);\n  this.writeInt(byte_length); // Just 1 byte for small strings\n  if (!byte_length) {\n    return;\n  }\n  let offs = this.fit(byte_length);\n  let buf = this.buf;\n  for (let ii = 0; ii < v.length; ++ii) {\n    let c = v.charCodeAt(ii);\n    if (c <= 0x7F) {\n      buf.u8[offs++] = c;\n    } else {\n      offs = utf8WriteChar(buf, offs, c);\n    }\n  }\n};\n// Only called on multi-byte characters; Supplied the first byte for efficiency\nPacket.prototype.utf8ReadChar = function (c) {\n  let buf = this.buf;\n  if (c >= 0xC0 && c < 0xE0) {\n    return ((c & 0x1F) << 6) |\n      (buf.u8[this.buf_offs++] & 0x3F);\n  } else if (c >= 0xE0 && c < 0xF0) {\n    return ((c & 0x0F) << 12) |\n      ((buf.u8[this.buf_offs++] & 0x3F) << 6) |\n      (buf.u8[this.buf_offs++] & 0x3F);\n  } else if (c >= 0xF0 && c < 0xF8) {\n    return ((c & 0x0F) << 18) |\n      ((buf.u8[this.buf_offs++] & 0x3F) << 12) |\n      ((buf.u8[this.buf_offs++] & 0x3F) << 6) |\n      (buf.u8[this.buf_offs++] & 0x3F);\n  } else { // c >= 0x80 & c < 0xC0 or c >= 0xF8\n    // Illegal continuation character, or old-spec 5-byte/6-byte UTF-8 encoding\n    //   Regardless, was not generated by our utf8WriteChar().\n    return 0xFFFD;\n  }\n};\n\nlet string_assembly = [];\nPacket.prototype.readString = function () {\n  let byte_length = this.readInt();\n  if (!byte_length) {\n    return '';\n  }\n  if (this.buf_offs + byte_length > this.buf_len) {\n    throw new Error(UNDERRUN);\n  }\n\n  let { buf } = this;\n  let end_offset = this.buf_offs + byte_length;\n  let ret;\n  if (byte_length > 8192) {\n    ret = '';\n    while (this.buf_offs < end_offset) {\n      let c = buf.u8[this.buf_offs++];\n      if (c > 0x7F) {\n        c = this.utf8ReadChar(c);\n      }\n      ret += String.fromCharCode(c);\n    }\n  } else {\n    string_assembly.length = byte_length;\n    let ii = 0;\n    while (this.buf_offs < end_offset) {\n      let c = buf.u8[this.buf_offs++];\n      if (c > 0x7F) {\n        c = this.utf8ReadChar(c);\n      }\n      string_assembly[ii++] = c;\n    }\n    if (string_assembly.length !== ii) {\n      // truncate if multi-byte UTF8 produced single characters\n      string_assembly.length = ii;\n    }\n    ret = String.fromCharCode.apply(undefined, string_assembly);\n  }\n  if (this.buf_offs === this.buf_len) {\n    this.pool();\n  }\n  return ret;\n};\n// Much more efficient than writeString if the input is known to be ANSI-ish (all characters <= 255)\nPacket.prototype.writeAnsiString = function (v) {\n  assert.equal(typeof v, 'string'); // Could maybe do a toString() here if not\n  let byte_length = v.length;\n  this.writeInt(byte_length);\n  let offs = this.fit(byte_length);\n  let { buf } = this;\n  for (let ii = 0; ii < byte_length; ++ii) {\n    buf.u8[offs++] = v.charCodeAt(ii);\n  }\n};\nPacket.prototype.readAnsiString = function () {\n  let len = this.readInt();\n  if (!len) {\n    return '';\n  }\n  let offs = this.advance(len);\n  let { buf } = this;\n  string_assembly.length = len;\n  for (let ii = 0; ii < len; ++ii) {\n    string_assembly[ii] = buf.u8[offs++];\n  }\n  return String.fromCharCode.apply(undefined, string_assembly);\n};\nexport function packetSizeAnsiString(v) {\n  return packetSizeInt(v.length) + v.length;\n}\n\n// high-level write/read functions\nPacket.prototype.writeJSON = function (v) {\n  if (!v) {\n    let idx = FALSYS.indexOf(v);\n    assert(idx !== -1);\n    this.writeU8(idx + 1);\n    return;\n  }\n  this.writeU8(0);\n  this.writeString(JSON.stringify(v));\n};\nPacket.prototype.readJSON = function () {\n  let byte = this.readU8();\n  if (byte) {\n    if (byte - 1 >= FALSYS.length) {\n      throw new Error('PKTERR_JSON_HEADER');\n    }\n    return FALSYS[byte - 1];\n  }\n  let str = this.readString();\n  return JSON.parse(str);\n};\n// Uint8Array or Buffer object?\nPacket.prototype.writeBuffer = function (v) {\n  this.writeInt(v.length);\n  if (v.length) {\n    let offs = this.fit(v.length);\n    this.buf.u8.set(v, offs);\n  }\n};\nconst null_buf = new Uint8Array(0);\nPacket.prototype.readBuffer = function (do_copy) {\n  let len = this.readInt();\n  if (!len) {\n    return null_buf;\n  }\n  let offs = this.advance(len);\n  if (do_copy) {\n    return this.buf.u8.slice(offs, offs + len);\n  } else {\n    let { buf } = this;\n    return new Uint8Array(buf.buffer, buf.byteOffset + offs, len);\n  }\n};\nPacket.prototype.appendBuffer = function (v) {\n  if (v.length) {\n    let offs = this.fit(v.length);\n    this.buf.u8.set(v, offs);\n  }\n};\nPacket.prototype.writeBool = function (v) {\n  this.writeU8(v?1:0);\n};\nPacket.prototype.readBool = function () {\n  return Boolean(this.readU8());\n};\n\nPacket.prototype.append = function (pak) {\n  assert.equal(this.flags & FLAG_PACKET_INTERNAL, pak.flags & FLAG_PACKET_INTERNAL);\n  if (pak.bufs) {\n    for (let ii = 0; ii < pak.bufs.length; ++ii) {\n      let buf = pak.bufs[ii];\n      let bsize = pak.bsizes[ii];\n      let offs = this.fit(bsize);\n      if (bsize !== buf.byteLength) {\n        this.buf.u8.set(new Uint8Array(buf.buffer, buf.byteOffset, bsize), offs);\n      } else {\n        this.buf.u8.set(buf.u8, offs);\n      }\n    }\n  }\n  if (pak.buf) {\n    let buf = pak.buf;\n    let bsize = pak.readable ? pak.buf_len : pak.buf_offs;\n    let offs = this.fit(bsize);\n    if (bsize !== buf.byteLength) {\n      this.buf.u8.set(new Uint8Array(buf.buffer, buf.byteOffset, bsize), offs);\n    } else {\n      this.buf.u8.set(buf.u8, offs);\n    }\n  }\n};\n\nPacket.prototype.appendRemaining = function (pak) {\n  assert.equal(this.flags & FLAG_PACKET_INTERNAL, pak.flags & FLAG_PACKET_INTERNAL);\n  assert(pak.readable);\n  assert(!pak.bufs);\n  assert(pak.buf);\n  assert(pak.buf_offs <= pak.buf_len);\n  let bsize = pak.buf_len - pak.buf_offs;\n  if (bsize) {\n    let offs = this.fit(bsize);\n    this.buf.u8.set(new Uint8Array(pak.buf.buffer, pak.buf.byteOffset + pak.buf_offs, bsize), offs);\n  }\n  // everything consumed, pool it\n  pak.pool();\n};\n\nPacket.prototype.toJSON = function () {\n  let ret = {\n    f: this.flags,\n  };\n\n  if (this.bufs) {\n    ret.b = [];\n    for (let ii = 0; ii < this.bufs.length; ++ii) {\n      ret.b.push(base64Encode(this.bufs[ii], 0, this.bsizes[ii]));\n    }\n  }\n  if (this.buf) {\n    if (this.readable) {\n      ret.d = base64Encode(this.buf, 0, this.buf_len);\n    } else {\n      ret.d = base64Encode(this.buf, 0, this.buf_offs);\n    }\n  }\n  return ret;\n};\n\nPacket.prototype.setBuffer = function (buf, buf_len) {\n  assert(!this.buf);\n  assert(!this.bufs);\n  assert(this.flags & PACKET_UNOWNED_BUFFER); // Probably okay if not?\n  assert(buf instanceof Uint8Array);\n  this.buf = wrapU8AsDataView(buf);\n  this.buf_len = buf_len;\n  this.readable = true;\n};\n\nPacket.prototype.getBuffer = function () {\n  assert(this.buf);\n  assert(!this.bufs);\n  return this.buf.u8;\n};\n\nPacket.prototype.getBufferLen = function () {\n  assert(this.buf);\n  assert(!this.bufs);\n  return this.readable ? this.buf_len : this.buf_offs;\n};\n\nPacket.prototype.getOffset = function () {\n  if (this.readable) {\n    return this.buf_offs;\n  }\n  return this.totalSize();\n};\n\nPacket.prototype.seek = function (pos) {\n  assert(this.readable); // .makeReadable should be called so that it is a single buffer\n  assert(pos >= 0 && pos <= this.buf_len);\n  this.buf_offs = pos;\n};\n\nPacket.prototype.writeFlags = function () {\n  assert(!this.has_flags);\n  assert.equal(this.buf_offs, 0);\n  this.writeU8(this.flags);\n  this.has_flags = true;\n};\n\nPacket.prototype.updateFlags = function (flags) {\n  assert(this.has_flags);\n  assert(!(flags & FLAG_PACKET_INTERNAL));\n  this.flags = this.flags & FLAG_PACKET_INTERNAL | flags;\n  let buf = this.bufs ? this.bufs[0] : this.buf;\n  buf.u8[0] = this.flags;\n};\n\nPacket.prototype.readFlags = function () {\n  let read = this.readU8();\n  assert.equal(read, this.flags & 0xFF);\n  this.has_flags = true;\n  return this.flags;\n};\n\nPacket.prototype.getFlags = function () {\n  return this.flags;\n};\n\nPacket.prototype.getInternalFlags = function () {\n  return this.flags & FLAG_PACKET_INTERNAL;\n};\n\nPacket.prototype.contents = function () {\n  return `pak(${this.totalSize()}b)`;\n};\n\nfunction PacketDebug(flags, init_size) {\n  this.reinit(flags, init_size);\n}\nPacketDebug.prototype.reinit = function (flags, init_size) {\n  this.in_pool = false;\n  if (pak_pool.length) {\n    this.pak = pak_pool.pop();\n    this.pak.reinit(flags, init_size, this);\n  } else {\n    this.pak = new Packet(flags, init_size, this);\n  }\n  this.warned = false;\n  this.pool_timer = setTimeout(() => {\n    console.warn(`Packet not pooled after 5s: ${this.contents()}`);\n    this.warned = true;\n  }, POOL_TIMEOUT);\n};\nPacketDebug.prototype.poolDebug = function () {\n  if (this.warned) {\n    console.warn('Packet pooled after timeout');\n  } else {\n    clearTimeout(this.pool_timer);\n  }\n  assert(!this.in_pool);\n  this.in_pool = true; // Set this, as if pooled, even if discarded\n  if (pak_debug_pool.length < POOL_PACKETS) {\n    pak_debug_pool.push(this);\n  }\n};\nconst types = [null, 'U8', 'U32', 'Int', 'Float', 'String', 'AnsiString', 'JSON', 'Bool', 'Buffer'];\n// Functions (types) that read and write a debug byte\ntypes.forEach((type, idx) => {\n  if (!type) { // don't use debug ID 0\n    return;\n  }\n  let write = `write${type}`;\n  let read = `read${type}`;\n  let write_fn = Packet.prototype[write];\n  let read_fn = Packet.prototype[read];\n  PacketDebug.prototype[write] = function (v) {\n    this.pak.writeU8(idx);\n    write_fn.call(this.pak, v);\n  };\n  PacketDebug.prototype[read] = function (param) {\n    let found_idx = this.pak.readU8();\n    if (found_idx !== idx) {\n      assert(false, `PacketDebug error: Expected ${type}(${idx}), found ${types[found_idx]}(${found_idx})`);\n    }\n    return read_fn.call(this.pak, param);\n  };\n});\nPacketDebug.prototype.zeroInt = function () {\n  this.pak.writeU8(3); // types.indexof('Int')\n  this.pak.zeroInt();\n};\n// Functions that simply fall through\n[\n  'ended',\n  'getBuffer',\n  'getBufferLen',\n  'getFlags',\n  'getInternalFlags',\n  'getOffset',\n  'getRefCount',\n  'makeReadable',\n  'pool',\n  'readFlags', // *not* wrapped in debug headers\n  'ref',\n  'seek',\n  'setBuffer',\n  'setReadable',\n  'toJSON',\n  'totalSize',\n  'updateFlags',\n  'writeFlags', // *not* wrapped in debug headers\n  'appendBuffer', // low-level\n].forEach((fname) => {\n  let fn = Packet.prototype[fname];\n  PacketDebug.prototype[fname] = function () {\n    return fn.apply(this.pak, arguments); // eslint-disable-line prefer-rest-params\n  };\n});\nPacketDebug.prototype.append = function (pak) {\n  assert(pak instanceof PacketDebug);\n  this.pak.append(pak.pak);\n};\nPacketDebug.prototype.appendRemaining = function (pak) {\n  assert(pak instanceof PacketDebug);\n  this.pak.appendRemaining(pak.pak);\n};\nfunction format(v) {\n  switch (typeof v) {\n    case 'object':\n      if (v instanceof Uint8Array) {\n        return `u8<${v.length}>`;\n      }\n      return JSON.stringify(v);\n    default:\n      return v;\n  }\n}\nPacketDebug.prototype.contents = function () {\n  let { pak } = this;\n  let cur_offs = pak.getOffset();\n  let read_len = cur_offs;\n  let ret = [`buf:${pak.buf_offs}/${pak.buf_len}`];\n  if (pak.bufs) {\n    // write packet, just combine and reset location when done\n    pak.makeReadable();\n    ret.push('bufs');\n  } else if (pak.buf) {\n    // read packet, or write packet that is a single buf\n    if (pak.readable) {\n      read_len = pak.buf_len;\n    }\n    pak.buf_offs = 0;\n  } else {\n    ret.push('empty');\n    read_len = -1;\n  }\n  let saved_ref_count = pak.ref_count;\n  pak.ref_count = 2; // prevent auto pooling, don't assert on ref() if unref'd.\n  try {\n    if (!saved_ref_count) {\n      ret.push('!ref_count=0!');\n    }\n    if (pak.has_flags) {\n      ret.push(`flags:${pak.readU8()}`);\n    }\n    while (pak.buf_offs < read_len) {\n      let type_idx = pak.readU8();\n      let type = types[type_idx];\n      if (!type) {\n        ret.push(`UnknownType:${type_idx}`);\n        break;\n      }\n      let val = pak[`read${type}`]();\n      ret.push(`${type}:${format(val)}`);\n    }\n  } catch (e) {\n    ret.push(`Error dumping packet contents: ${e}`);\n  }\n  pak.ref_count = saved_ref_count;\n  pak.buf_offs = cur_offs;\n  return ret.join(',');\n};\n\nfunction packetCreate(flags, init_size) {\n  if (flags === undefined) {\n    flags = default_flags;\n  }\n  let pool = (flags & PACKET_DEBUG) ? pak_debug_pool : pak_pool;\n  if (pool.length) {\n    let pak = pool.pop();\n    pak.reinit(flags, init_size);\n    return pak;\n  }\n  if (flags & PACKET_DEBUG) {\n    return new PacketDebug(flags, init_size);\n  }\n  return new Packet(flags, init_size);\n}\nexports.packetCreate = packetCreate;\n\nfunction packetFromBuffer(buf, buf_len, need_copy) {\n  let flags = buf[0];\n  assert.equal(typeof flags, 'number'); // `buf` should be a Buffer or Uint8Array, not a DataView like other funcs here\n  if (need_copy) {\n    assert(buf_len);\n    assert(buf.buffer instanceof ArrayBuffer);\n    let pak = packetCreate(flags, buf_len);\n    if (buf.byteLength !== buf_len) {\n      buf = Buffer.from(buf.buffer, buf.byteOffset, buf_len);\n    }\n    pak.getBuffer().set(buf);\n    pak.setReadable();\n    return pak;\n  } else {\n    // reference unowned/unpoolable buffer\n    assert(buf instanceof Uint8Array);\n    let pak = packetCreate(flags | PACKET_UNOWNED_BUFFER);\n    pak.setBuffer(buf, buf_len || buf.byteLength);\n    return pak;\n  }\n}\nexports.packetFromBuffer = packetFromBuffer;\n\nfunction packetFromJSON(js_obj) {\n  let pak = packetCreate(js_obj.f);\n\n  let payload = pak.pak || pak;\n\n  function decode(str) {\n    return base64Decode(str, allocDataView);\n  }\n  if (js_obj.b) {\n    payload.bsizes = [];\n    payload.bufs = [];\n    for (let ii = 0; ii < js_obj.b.length; ++ii) {\n      let buf = decode(js_obj.b[ii]);\n      payload.bufs.push(buf);\n      payload.bsizes.push(buf.decode_size);\n      delete buf.decode_size;\n    }\n  }\n  if (js_obj.d) {\n    payload.buf = decode(js_obj.d);\n    payload.buf_len = payload.buf.decode_size;\n    delete payload.buf.decode_size;\n    payload.buf_offs = 0;\n  }\n\n  return pak;\n}\nexports.packetFromJSON = packetFromJSON;\n\nfunction isPacket(thing) {\n  return thing instanceof Packet || thing instanceof PacketDebug;\n}\nexports.isPacket = isPacket;\n","const NUM_BUCKETS = 5;\n\nlet counters = { time_start: Date.now() };\nlet hist = [counters];\nlet bucket_time = 10000;\nlet countdown = bucket_time;\n\nexport function perfCounterSetBucketTime(time) {\n  countdown = bucket_time = time;\n}\n\nexport function perfCounterAdd(key) {\n  counters[key] = (counters[key] || 0) + 1;\n}\n\nexport function perfCounterAddValue(key, value) {\n  counters[key] = (counters[key] || 0) + value;\n}\n\nexport function perfCounterTick(dt, log) {\n  countdown -= dt;\n  if (countdown <= 0) {\n    countdown = bucket_time;\n    if (hist.length === NUM_BUCKETS) {\n      hist.splice(0, 1);\n    }\n    let now = Date.now();\n    counters.time_end = now;\n    if (log) {\n      log(counters);\n    }\n    counters = {};\n    counters.time_start = now;\n    hist.push(counters);\n  }\n}\n\nexport function perfCounterHistory() {\n  return hist;\n}\n","import assert from 'assert';\n\nexport type PlatformID = string;\n\nexport interface PlatformDef {\n  // devmode: if `auto`, will enable MODE_DEVELOPMENT if the host starts with `localhost`\n  devmode: 'auto' | 'on' | 'off';\n  // reload: whether or not we can call document.reload() to reload the page\n  reload: boolean;\n  // reload_updates: whether or not calling document.reload() will cause us to get an updated version of the client\n  reload_updates: boolean;\n  // random_creation_name: new users get a randomly generated name by default\n  random_creation_name: boolean;\n}\n/*\nExtend this like so:\n\n  declare module 'glov/common/platform' {\n    interface PlatformDef {\n      some_feature: boolean;\n    }\n  }\n\nAnd make sure to define all parameters for the `web` platform with:\n  platformRegister('web', { ... });\n\n*/\n\nlet platforms: Partial<Record<PlatformID, PlatformDef>> = Object.create(null);\n\nlet too_late_to_register = false;\n\nexport function platformRegister(id: PlatformID, def: PlatformDef): void {\n  assert(!too_late_to_register);\n  assert(!platforms[id] || id === 'web');\n  platforms[id] = def;\n}\n\nexport function platformGetValidIDs(): PlatformID[] {\n  return Object.keys(platforms);\n}\nexport function platformIsValid(v: string | undefined | null): boolean {\n  too_late_to_register = true; // all registering must be done before the first querying\n  return Boolean(typeof v === 'string' && platforms[v]);\n}\nlet parameter_overrides: Partial<PlatformDef> = Object.create(null);\nexport function platformParameter<T extends keyof PlatformDef>(platform: PlatformID, parameter: T): PlatformDef[T];\nexport function platformParameter(platform: PlatformID, parameter: keyof PlatformDef): unknown {\n  let override = parameter_overrides[parameter];\n  if (override !== undefined) {\n    return override;\n  }\n  let platdef = platforms[platform];\n  assert(platdef);\n  return platdef[parameter];\n}\n\nexport function platformOverrideParameter<T extends keyof PlatformDef>(parameter: T, value: PlatformDef[T]): void {\n  parameter_overrides[parameter] = value;\n}\n\nplatformRegister('web', {\n  devmode: 'auto',\n  reload: true,\n  reload_updates: true,\n  random_creation_name: false,\n} as PlatformDef);\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Alea PRNG\n// Based on code from Johannes Baagøe <baagoe@baagoe.com>, 2010\n// From https://github.com/coverslide/node-alea/blob/master/alea.js, MIT Licensed\n// From http://baagoe.com/en/RandomMusings/javascript/\n\nexport function mashString(data) {\n  let n = 0xefc8249d;\n  for (let i = 0; i < data.length; i++) {\n    n += data.charCodeAt(i);\n    let h = 0.02519603282416938 * n;\n    n = h >>> 0;\n    h -= n;\n    h *= n;\n    n = h >>> 0;\n    h -= n;\n    n += h * 0x100000000; // 2^32\n  }\n  return n >>> 0;\n  // return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n}\n\n// Takes an integer (up to 53bits) and returns a 0-1 float\nexport function mashI53(data) {\n  let n = 0xefc8249d;\n  while (data) {\n    let byte = data % 256;\n    data = (data - byte) / 256;\n    n += byte;\n    let h = 0.02519603282416938 * n;\n    n = h >>> 0;\n    h -= n;\n    h *= n;\n    n = h >>> 0;\n    h -= n;\n    n += h * 0x100000000; // 2^32\n  }\n  return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n}\n\nfunction Mash() {\n  this.n = 0xc06c5fc8; // 0xefc8249d;\n}\nMash.prototype.mash = function (data) {\n  let n = this.n + data;\n  let h = 0.02519603282416938 * n;\n  n = h >>> 0;\n  h -= n;\n  h *= n;\n  n = h >>> 0;\n  h -= n;\n  n += h * 0x100000000; // 2^32\n  this.n = n;\n  return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n};\n\nfunction Alea(seed) {\n  this.reseed(seed);\n}\nAlea.prototype.reseed = function (seed) {\n  if (seed >= 4294967296) { // 2^32\n    // e.g. Date.now()\n    seed = mashI53(seed);\n  }\n\n  // this.s0/s1/s2 are floating point between 0 and 1\n  // this.c is a 32-bit int\n  this.c = 1;\n  let mash = new Mash();\n  // Hard-coded results of initial mash(' ') found in original implementation\n  this.s0 = 0.3014581324532628;\n  this.s1 = 0.2643220406025648;\n  this.s2 = 0.7516536582261324;\n\n  this.s0 -= mash.mash(seed);\n  if (this.s0 < 0) {\n    this.s0 += 1;\n  }\n  this.s1 -= mash.mash(seed);\n  if (this.s1 < 0) {\n    this.s1 += 1;\n  }\n  this.s2 -= mash.mash(seed);\n  if (this.s2 < 0) {\n    this.s2 += 1;\n  }\n};\nAlea.prototype.step = function () {\n  let t = 2091639 * this.s0 + this.c * 2.3283064365386963e-10; // 2^-32\n  this.s0 = this.s1;\n  this.s1 = this.s2;\n  return (this.s2 = t - (this.c = t | 0));\n};\nAlea.prototype.uint32 = function () {\n  return this.step() * 0x100000000; // 2^32\n};\nAlea.prototype.fract53 = function () {\n  return this.step() +\n    (this.step() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n};\nAlea.prototype.random = Alea.prototype.step;\nAlea.prototype.range = function (range) {\n  return (this.step() * range) | 0;\n};\nAlea.prototype.floatBetween = function (a, b) {\n  return a + (b - a) * this.random();\n};\n\n// Note: import/export probably needs more precision than F32 or JSON provide\nAlea.prototype.exportState = function () {\n  return [this.s0, this.s1, this.s2, this.c];\n};\nAlea.prototype.importState = function (i) {\n  this.s0 = i[0];\n  this.s1 = i[1];\n  this.s2 = i[2];\n  this.c = i[3];\n};\n\nexport function randCreate(seed) {\n  return new Alea(seed);\n}\n\nexport function shuffleArray(rand, arr) {\n  for (let ii = arr.length - 1; ii >= 1; --ii) {\n    let swap = rand.range(ii + 1);\n    let t = arr[ii];\n    arr[ii] = arr[swap];\n    arr[swap] = t;\n  }\n}\n","// bitmask\nexports.FORMAT_PACK = 1<<0;\nexports.FORMAT_PNG = 1<<1;\nexports.TEXPACK_MAGIC = 0x8F49A352;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n/* eslint prefer-rest-params:off, no-underscore-dangle:off */\n\nconst assert = require('assert');\n\nfunction EventEmitter() {\n  this._listeners = {};\n}\n\nmodule.exports = EventEmitter;\n// Also \"export\" `EventEmitter` so you can do `import { EventEmitter } from 'tiny-events.js'` but\n//   not pollute the prototype (would show up for all classes that `extend EventEmitter`).\nObject.defineProperty(module.exports, 'EventEmitter', {\n  value: EventEmitter,\n  enumerable: false,\n});\n\nfunction addListener(ee, type, fn, once) {\n  assert(typeof fn === 'function');\n  let arr = ee._listeners[type];\n  if (!arr) {\n    arr = ee._listeners[type] = [];\n  }\n  arr.push({\n    once,\n    fn,\n  });\n}\n\nEventEmitter.prototype.hasListener = function (type, fn) {\n  let arr = this._listeners[type];\n  if (!arr) {\n    return false;\n  }\n  for (let ii = 0; ii < arr.length; ++ii) {\n    if (arr[ii].fn === fn) {\n      return true;\n    }\n  }\n  return false;\n};\n\nEventEmitter.prototype.on = function (type, fn) {\n  addListener(this, type, fn, 0);\n  return this;\n};\n\nEventEmitter.prototype.once = function (type, fn) {\n  addListener(this, type, fn, 1);\n  return this;\n};\n\nEventEmitter.prototype.removeListener = function (type, fn) {\n  let arr = this._listeners[type];\n  assert(arr);\n  for (let ii = 0; ii < arr.length; ++ii) {\n    if (arr[ii].fn === fn) {\n      arr.splice(ii, 1);\n      return this;\n    }\n  }\n  assert(false); // expected to find the listener!\n  return this;\n};\n\nfunction filterNotOnce(elem) {\n  return !elem.once;\n}\n\nEventEmitter.prototype.emit = function (type, ...args) {\n  let arr = this._listeners[type];\n  if (!arr) {\n    return false;\n  }\n\n  let any = false;\n  let any_once = false;\n  for (let ii = 0; ii < arr.length; ++ii) {\n    let elem = arr[ii];\n    any = true;\n    elem.fn(...args);\n    if (elem.once) {\n      any_once = true;\n    }\n  }\n  if (any_once) {\n    this._listeners[type] = arr.filter(filterNotOnce);\n  }\n\n  return any;\n};\n\n// Aliases\n// EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nimport assert from 'assert';\n\nimport type { DataObject, ErrorCallback } from './types';\nimport type { Vec2 } from './vmath';\n\nconst { PI, abs, floor, min, max, random, round, pow, sqrt } = Math;\nconst TWO_PI = PI * 2;\n\nexport const EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nexport const VALID_USER_ID_REGEX = /^(?:fb\\$|[a-z0-9])[a-z0-9_]{1,32}$/;\n\nexport function nop(): void {\n  // empty\n}\n\nexport function identity<T>(a: T): T {\n  return a;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function once<T extends any[]>(fn: (...args: T) => void): (...args: T) => void {\n  let called = false;\n  return function (...args) {\n    if (called) {\n      return;\n    }\n    called = true;\n    fn(...args);\n  };\n}\n\nexport function empty(obj: DataObject | null | undefined): boolean {\n  for (let key in obj) {\n    return false;\n  }\n  return true;\n}\n\nexport function easeInOut(v: number, a: number): number {\n  let va = pow(v, a);\n  return va / (va + pow(1 - v, a));\n}\n\nexport function easeIn(v: number, a: number): number {\n  return 2 * easeInOut(0.5 * v, a);\n}\n\nexport function easeOut(v: number, a: number): number {\n  return 2 * easeInOut(0.5 + 0.5 * v, a) - 1;\n}\n\nexport function clone<T>(obj: T): T {\n  if (!obj) { // handle undefined\n    return obj;\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function merge<A, B>(dest: A, src: B): A & B {\n  for (let f in src) {\n    (dest as DataObject)[f] = src[f];\n  }\n  return dest as (A & B);\n}\n\nexport function has<T>(obj: T, field: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, field);\n}\n\nexport function defaults<A, B>(dest: A, src: B): A & B {\n  for (let f in src) {\n    if (!has(dest, f)) {\n      (dest as DataObject)[f] = src[f];\n    }\n  }\n  return dest as (A & B);\n}\n\nexport function defaultsDeep<A, B>(dest: A, src: B): A & B {\n  for (let f in src) {\n    if (!has(dest, f)) {\n      (dest as DataObject)[f] = src[f];\n    } else {\n      let vd = (dest as DataObject)[f];\n      let vs = src[f];\n      if (typeof vd === 'object' && !Array.isArray(vd) && typeof vs === 'object' && !Array.isArray(vs)) {\n        defaultsDeep(vd, src[f]);\n      }\n    }\n  }\n  return dest as (A & B);\n}\n\nexport function cloneShallow<T>(src: T): T {\n  return merge({}, src);\n}\n\nexport function deepEqual(a: unknown, b: unknown): boolean {\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let ii = 0; ii < a.length; ++ii) {\n      if (!deepEqual(a[ii], b[ii])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (typeof a === 'object') {\n    if (typeof b !== 'object') {\n      return false;\n    }\n    if (!a || !b) { // at least one is null\n      return !a && !b; // equal if both are null\n    }\n    for (let key in a) {\n      // b must have key, or both a[key] and b[key] are undefined\n      if (!deepEqual((a as DataObject)[key], (b as DataObject)[key])) {\n        return false;\n      }\n    }\n    for (let key in b) {\n      // if b has key and it's defined, a must also be defined (and would have checked equality above)\n      if ((b as DataObject)[key] !== undefined && (a as DataObject)[key] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a === b;\n}\n\nexport function deepAdd(dest: DataObject, src: DataObject): void {\n  assert(dest && src);\n  for (let key in src) {\n    let value = src[key];\n    let dest_value = dest[key];\n    if (typeof value === 'object') {\n      assert(value);\n      let dest_sub = (dest[key] = dest_value || {}) as DataObject;\n      assert.equal(typeof dest_sub, 'object');\n      deepAdd(dest_sub, value);\n    } else {\n      if (!dest_value) {\n        dest_value = 0;\n      }\n      assert(typeof dest_value === 'number');\n      assert(typeof value === 'number');\n      dest[key] = (dest_value || 0) + value;\n    }\n  }\n}\n\nexport function clamp(v: number, mn: number, mx: number): number {\n  return min(max(mn, v), mx);\n}\n\nexport function lerp(a: number, v0: number, v1: number): number {\n  return (1 - a) * v0 + a * v1;\n}\n\nexport function shortAngleDist(a0: number, a1: number): number {\n  let delta = (a1 - a0) % TWO_PI;\n  return 2 * delta % TWO_PI - delta;\n}\n\nexport function lerpAngle(t: number, a0: number, a1: number): number {\n  let r = a0 + shortAngleDist(a0, a1) * t;\n  if (r < 0) {\n    r += TWO_PI;\n  }\n  return r;\n}\n\n\nexport function mix(v0: number, v1: number, a: number): number { // GLSL semantics\n  return (1 - a) * v0 + a * v1;\n}\n\nexport function map01(number: number, in_min: number, in_max: number): number {\n  return (number - in_min) / (in_max - in_min);\n}\n\nexport function sign(a: number): -1 | 0 | 1 {\n  return a < 0 ? -1 : a > 0 ? 1 : 0;\n}\n\nexport function mod(a: number, n: number): number {\n  return ((a % n) + n) % n;\n}\n\n// log2 rounded up to nearest integer\nexport function log2(val: number): number {\n  for (let ii=1, jj=0; ; ii <<= 1, ++jj) {\n    if (ii >= val) {\n      return jj;\n    }\n  }\n}\n\nexport function ridx(arr: unknown[], idx: number): void {\n  arr[idx] = arr[arr.length - 1];\n  arr.pop();\n}\n\nexport function tail<T>(arr: T[]): T | null {\n  if (!arr.length) {\n    return null;\n  }\n  return arr[arr.length - 1];\n}\n\nexport function round100(a: number): number {\n  return round(a * 100) / 100;\n}\n\nexport function round1000(a: number): number {\n  return round(a * 1000) / 1000;\n}\n\nexport function fract(a: number): number {\n  return a - floor(a);\n}\n\nexport function nearSame(a: number, b: number, tol: number): boolean {\n  return abs(b - a) <= tol;\n}\n\nexport function nearSameAngle(a: number, b: number, tol: number): boolean {\n  return abs(shortAngleDist(a, b)) <= tol;\n}\n\nexport function titleCase(str: string): string {\n  return str.split(' ').map((word) => `${word[0].toUpperCase()}${word.slice(1)}`)\n    .join(' ');\n}\n\nconst EPSILON = 0.00001;\n\n// http://local.wasp.uwa.edu.au/~pbourke/geometry/sphereline/\nexport function lineCircleIntersect(p1: Vec2, p2: Vec2, pCircle: Vec2, radius: number): boolean {\n  let dp = [\n    p2[0] - p1[0],\n    p2[1] - p1[1]\n  ];\n  let a = dp[0] * dp[0] + dp[1] * dp[1];\n  let b = 2 * (dp[0] * (p1[0] - pCircle[0]) + dp[1] * (p1[1] - pCircle[1]));\n  let c = pCircle[0] * pCircle[0] + pCircle[1] * pCircle[1];\n  c += p1[0] * p1[0] + p1[1] * p1[1];\n  c -= 2 * (pCircle[0] * p1[0] + pCircle[1] * p1[1]);\n  c -= radius * radius;\n  let bb4ac = b * b - 4 * a * c;\n  if (abs(a) < EPSILON || bb4ac < 0) {\n    return false;\n  }\n\n  let mu1 = (-b + sqrt(bb4ac)) / (2 * a);\n  let mu2 = (-b - sqrt(bb4ac)) / (2 * a);\n  if (mu1 >= 0 && mu1 <= 1 || mu2 >= 0 && mu2 <= 1) {\n    return true;\n  }\n\n  return false;\n}\n\n// line segment intercept math by Paul Bourke http://paulbourke.net/geometry/pointlineplane/\nexport function lineLineIntersect(p1: Vec2, p2: Vec2, p3: Vec2, p4: Vec2): boolean {\n  let denominator = ((p4[1] - p3[1]) * (p2[0] - p1[0]) - (p4[0] - p3[0]) * (p2[1] - p1[1]));\n  let numa = ((p4[0] - p3[0]) * (p1[1] - p3[1]) - (p4[1] - p3[1]) * (p1[0] - p3[0]));\n  let numb = ((p2[0] - p1[0]) * (p1[1] - p3[1]) - (p2[1] - p1[1]) * (p1[0] - p3[0]));\n\n  if (denominator === 0) {\n    // lines are parallel, or 0-length line\n    if (!numa && !numb) {\n      // lines are coincident\n      return true;\n    }\n    return false;\n  }\n\n  let ua = numa / denominator;\n  let ub = numb / denominator;\n\n  // is the intersection along the segments\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n    return false;\n  }\n\n  return true;\n  // let x = p1[0] + ua * (p2[0] - p1[0]);\n  // let y = p1[1] + ua * (p2[1] - p1[1]);\n  // return [x, y];\n}\n\n// let setPrototypeOf = Object.setPrototypeOf ?\n//   Object.setPrototypeOf.bind() :\n//   function _setPrototypeOf(o, p) {\n//     o.__proto__ = p; // eslint-disable-line no-proto\n//     return o;\n//   };\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function inherits(ctor: Constructor | Function, superCtor: Constructor | Function): void {\n  // From Node.js\n  assert(typeof superCtor === 'function');\n  let ctor_proto_orig = ctor.prototype;\n  // not needed? ctor.super_ = superCtor; // eslint-disable-line no-underscore-dangle\n  // second parameter also not actually needed, just defines new Foo().constructor === Foo?\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  // If anything had been added to the prototype (only in the case of late/double\n  //   inheritance), add it\n  for (let key in ctor_proto_orig) {\n    ctor.prototype[key] = ctor_proto_orig[key];\n  }\n  // Also inherit static methods\n  // Could use setPrototypeOf (fewer ordering issues) if needed, but has strong performance warnings\n  // setPrototypeOf(ctor, superCtor);\n  for (let key in superCtor) {\n    (ctor as unknown as DataObject)[key] = (superCtor as unknown as DataObject)[key];\n  }\n}\n\nexport function isPowerOfTwo(n: number): boolean {\n  return ((n & (n - 1)) === 0);\n}\n\nexport function nextHighestPowerOfTwo(x: number): number {\n  --x;\n  for (let i = 1; i < 32; i <<= 1) {\n    x |= x >> i;\n  }\n  return x + 1;\n}\n\nexport function logdata(data: unknown): string {\n  if (data === undefined) {\n    return '';\n  }\n  let r = JSON.stringify(data);\n  if (r.length < 120) {\n    return r;\n  }\n  return `${r.slice(0, 120-3)}...(${r.length})`;\n}\n\nexport function isInteger(v: unknown): v is number /* and an integer */ {\n  return typeof v === 'number' && isFinite(v) && floor(v) === v;\n}\n\nexport function toNumber(v: string): number {\n  return Number(v);\n}\n\nexport function randomNot(not_value: number, min_value: number, max_value: number): number {\n  let new_value;\n  let range = max_value - min_value;\n  do {\n    new_value = floor(min_value + random() * range);\n  } while (new_value === not_value);\n  return new_value;\n}\n\nexport function toArray(array_like: Float32Array | Int32Array | Uint8Array): number[] {\n  return Array.prototype.slice.call(array_like);\n}\n\nexport function arrayToSet(array: number[]): Partial<Record<number, true>>;\nexport function arrayToSet(array: string[]): Partial<Record<string, true>>;\nexport function arrayToSet<T extends string | number>(array: T[]): Partial<Record<T, true>> {\n  let ret = Object.create(null);\n  for (let ii = 0; ii < array.length; ++ii) {\n    ret[array[ii]] = true;\n  }\n  return ret;\n}\n\n// Makes a prototype-less object that can safely be used as a set to query for user-supplied strings\nexport function objectToSet<V, T extends Partial<Record<string, V>>>(obj: T | undefined): T {\n  return merge(Object.create(null), obj);\n}\n\nexport function matchAll(str: string, re: RegExp): string[] {\n  let ret = [];\n  let m;\n  do {\n    m = re.exec(str);\n    if (m) {\n      ret.push(m[1]);\n    }\n  } while (m);\n  return ret;\n}\n\nexport function callEach<T extends unknown[]>(\n  arr: ((...fargs: T) => void)[] | null | undefined,\n  pre_clear?: null | undefined | boolean | never[], // `boolean` for `delete foo.cbs`\n  ...args: T\n): void {\n  if (arr && arr.length) {\n    for (let ii = 0; ii < arr.length; ++ii) {\n      arr[ii](...args);\n    }\n  }\n}\n\n// The characters cause problems with lower level systems (Google Firestore)\n// that presumably try to convert to UTF-16.\n// const utf16_surrogates = /[\\uD800-\\uDFFF]/g;\n\n// \"Bad\" whitespace characters not caught by .trim()\n// Found by running:\n//   require('somefont.json').char_infos.filter(a=>String.fromCharCode(a.c).trim()).filter(a=>!a.w).map(a=a.c)\n// const bad_whitespace = /[\\x00-\\x1F\\x7F\\u1D54\\u1D55\\u2000-\\u200F\\u205F-\\u206F\\uFE00]/g;\n\n// eslint-disable-next-line no-control-regex, no-misleading-character-class\nconst sanitize_regex = /[\\uD800-\\uDFFF\\x00-\\x1F\\x7F\\u1D54\\u1D55\\u2000-\\u200F\\u205F-\\u206F\\uFE00]/g;\nexport function sanitize(str: string): string {\n  return (str || '').replace(sanitize_regex, '');\n}\n\nexport function plural(number: number, label: string): string {\n  return `${label}${number === 1 ? '' : 's'}`;\n}\n\nexport function secondsToFriendlyString(seconds: number, force_include_seconds?: boolean): string {\n  let days = floor(seconds / (60*60*24));\n  seconds -= days * 60*60*24;\n  let hours = floor(seconds / (60*60));\n  seconds -= hours * 60*60;\n  let minutes = floor(seconds / 60);\n  seconds -= minutes * 60;\n  let resp = [];\n  if (days) {\n    let years = floor(days / 365.25);\n    if (years) {\n      days -= floor(years * 365.25);\n      resp.push(`${years} ${plural(years, 'year')}`);\n    }\n    resp.push(`${days} ${plural(days, 'day')}`);\n  }\n  if (hours) {\n    resp.push(`${hours} ${plural(hours, 'hour')}`);\n  }\n  if (minutes || !resp.length) {\n    resp.push(`${minutes} ${plural(minutes, 'minute')}`);\n  }\n  if (force_include_seconds) {\n    resp.push(`${seconds} ${plural(seconds, 'second')}`);\n  }\n  return resp.join(', ');\n}\n\nexport function secondsSince2020(): number {\n  // Seconds since Jan 1st, 2020\n  return floor(Date.now() / 1000) - 1577836800;\n}\n\nexport function dateToSafeLocaleString(date: Date, date_only: boolean, options?: {\n  weekday?: 'long' | 'short';\n  year?: 'numeric' | '2-digit';\n  month?: 'numeric' | '2-digit' | 'long' | 'short';\n  day?: 'numeric' | '2-digit';\n  hour?: 'numeric' | '2-digit';\n  minute?: 'numeric' | '2-digit';\n  second?: 'numeric' | '2-digit';\n  timeZoneName?: 'long' | 'short';\n}): string {\n  // Uses toString as a fallback since some browsers do not properly detect default locale.\n  let date_text;\n  try {\n    date_text = date_only ? date.toLocaleDateString(undefined, options) : date.toLocaleString(undefined, options);\n  } catch (e) {\n    console.error(e, '(Using toString as fallback)');\n    date_text = date_only ? date.toDateString() : date.toString();\n  }\n  return date_text;\n}\n\nexport function dateToFileTimestamp(date: Date): string {\n  function pad(value: number): string {\n    return `${value < 10 ? 0 : ''}${value}`;\n  }\n  let year = date.getFullYear();\n  let month = pad(date.getMonth() + 1);\n  let day = pad(date.getDate());\n  let hours = pad(date.getHours());\n  let minutes = pad(date.getMinutes());\n  let seconds = pad(date.getSeconds());\n  return `${year}-${month}-${day} ${hours}_${minutes}_${seconds}`;\n}\n\nexport function msToTimeString(duration: number, opts?: { hide_ms?: boolean }): string {\n  opts = opts || {};\n  let ms = duration % 1000;\n  let s;\n  let m;\n  let h;\n  s = duration - ms;\n  s %= (60 * 1000);\n  m = (duration - ms - s);\n  m %= (60 * 60 * 1000);\n  h = duration - ms - s - m;\n  h /= 60 * 60 * 1000;\n  m /= 60 * 1000;\n  s /= 1000;\n\n  return `${\n    h ? `${h}:` : ''}${\n    h && m < 10 ? '0': ''}${m}:${\n    s < 10 ? '0' : ''}${s}${\n    opts.hide_ms ? '' : `.${ms < 10 ? '00' : ms < 100 ? '0' : ''}${ms}`\n  }`;\n}\n/**\n * Returns the string with removed symbols and punctuations\n * @param {string} string String to filter out symbols\n * @returns {string} New string without symbols and punctuations\n */\nexport function removeSymbols(string: string): string {\n  return string.replace(/[.,/\\\\@#£!$%^&*;:<>{}|?=\\-+_`'\"~[\\]()]/g,'').replace(/\\s{1,}/g,' ');\n}\n\n// Stop words map\nlet sw = arrayToSet([\n  'am', 'an', 'and', 'as', 'at', 'be', 'by', 'el',\n  'for', 'in', 'is', 'la', 'las', 'los', 'of', 'on',\n  'or', 'the', 'that', 'this', 'to', 'with',\n]);\n/**\n * Removes single char and stop words from the string array.\n * @param {string[]} string_array Array of strings to filter out single char\n * @returns {string[]} Filter string array with single char and stop words removed\n */\nexport function cleanupStringArray(string_array: string[]): string[] {\n  return string_array.filter((s) => (s.length > 1) && (s.length <= 32) && !sw[s]);\n}\n\n/**\n * Return an array of the string splits after transforming to lowercase and trimming whitespaces on each of the split.\n * Punctuations and symbols are also filtered.\n * Also removes single char and stopwords via cleanupStringArray.\n * @param {string[]} string String to use to form the string split result\n * @param {string} pattern String pattern to divide the string on\n * @returns {string[]} String split result\n */\nexport function cleanStringSplit(string: string, pattern: string): string[] {\n  // remove punctuations and symbols; e.g., 'In!@£$%^&*()_+sane Wo`{}[]|/?\\'\"rld;:<>s,.' = 'Insane Worlds'\n  const base = removeSymbols(sanitize(string));\n  return cleanupStringArray(base.toLowerCase().split(pattern).map((s) => s.trim()));\n}\n\nexport function eatPossiblePromise(p: Promise<unknown> | undefined): void {\n  // On some browsers, some APIs return Promises where they did not before,\n  //   wrap in this to discard any exceptions / rejections from these.\n  //   For example, pointerLockEnter, throws \"Uncaught UnknownError\" on Chrome on\n  //   Android, as well as triggering pointerlockerror.\n  if (p && p.catch) {\n    p.catch(nop);\n  }\n}\n\nexport function errorString(e: Error | DataObject | string | unknown) : string {\n  let msg = String(e);\n  if (msg === '[object Object]') {\n    try {\n      msg = JSON.stringify(e);\n    } catch (ignored) {\n      // ignored\n    }\n  }\n  if (e && (e as Error).stack && (e as Error).message) {\n    // Error object or similar\n    // Just grabbing the message, but could do something with the stack similar to error handler in bootstrap.js\n    msg = String((e as Error).message);\n  }\n  msg = msg.slice(0, 600); // Not too huge\n  return msg;\n}\n\nexport function deprecate(exports: Partial<Record<string, unknown>>, field: string, replacement: string): void {\n  Object.defineProperty(exports, field, {\n    get: function () {\n      assert(false, `${field} is deprecated, use ${replacement} instead`);\n      return undefined;\n    }\n  });\n}\n\nlet nextTick = typeof process !== 'undefined' ?\n  process.nextTick :\n  typeof window !== 'undefined' && window.setImmediate ? window.setImmediate :\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (fn: (...args: any[]) => void) => setTimeout(fn, 1);\n\nexport function callbackify<T>(f: () => Promise<T>): (next: ErrorCallback<T>) => void;\nexport function callbackify<T, P1>(f: (p1: P1) => Promise<T>): (p1: P1, next: ErrorCallback<T>) => void;\nexport function callbackify<T, P1, P2>(\n  f: (p1: P1, p2: P2) => Promise<T>\n): (p1: P1, p2: P2, next: ErrorCallback<T>) => void;\nexport function callbackify<T, P1, P2, P3>(\n  f: (p1: P1, p2: P2, p3: P3) => Promise<T>\n): (p1: P1, p2: P2, p3: P3, next: ErrorCallback<T>) => void;\nexport function callbackify<T, P1, P2, P3, P4>(\n  f: (p1: P1, p2: P2, p3: P3, p4: P4) => Promise<T>\n): (p1: P1, p2: P2, p3: P3, p4: P4, next: ErrorCallback<T>) => void;\n\n// Turns a promise-generating function into a callback-style function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function callbackify(f: (...args: any[]) => Promise<unknown>): (...args: any[]) => void {\n  return function (this: unknown) {\n    let cb = arguments[arguments.length - 1]; // eslint-disable-line prefer-rest-params\n    assert.equal(typeof cb, 'function');\n    let args = Array.prototype.slice.call(arguments, 0, -1); // eslint-disable-line prefer-rest-params\n    let p = f.apply(this, args); // eslint-disable-line @typescript-eslint/no-invalid-this\n    p.then((result) => {\n      if (cb) {\n        // escape promise so it doesn't catch and re-throw the error!\n        nextTick(cb.bind(this, null, result)); // eslint-disable-line @typescript-eslint/no-invalid-this\n        cb = null;\n      }\n    }).catch((err) => {\n      if (cb) {\n        nextTick(cb.bind(this, err)); // eslint-disable-line @typescript-eslint/no-invalid-this\n        cb = null;\n      }\n    });\n  };\n}\n\n// Wraps a callback so that it escapes implicit try/catches from callbacks fired\n//   within Promises.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function unpromisify<P extends any[], T=never>(f: (this: T, ...args: P) => void): (this: T, ...args: P) => void {\n  return function (this: T): void {\n  // eslint-disable-next-line @typescript-eslint/no-invalid-this, prefer-rest-params, @typescript-eslint/no-explicit-any\n    nextTick((f as any).apply.bind(f, this, arguments));\n  };\n}\n\nexport function msToSS2020(milliseconds: number): number {\n  // Integer seconds since Jan 1st, 2020\n  return floor(milliseconds / 1000) - 1577836800;\n}\n\nexport function ss2020ToMS(ss2020: number): number {\n  // Integer seconds since Jan 1st, 2020\n  return (ss2020 + 1577836800) * 1000;\n}\n\nconst whitespace_regex = /\\s/;\nexport function trimEnd(s: string): string {\n  let idx = s.length;\n  while (idx > 0 && s[idx-1].match(whitespace_regex)) {\n    --idx;\n  }\n  return s.slice(0, idx);\n}\n\nfunction isDigit(c: string): boolean {\n  return c >= '0' && c <= '9';\n}\n\nconst char_code_0 = '0'.charCodeAt(0);\nexport function cmpNumericSmart(a: string, b: string): number {\n  // smart compare numbers within strings\n  let ia = 0;\n  let ib = 0;\n  while (ia < a.length && ib < b.length) {\n    if (isDigit(a[ia])) {\n      if (isDigit(b[ib])) {\n        // compare numbers\n        let va = 0;\n        while (isDigit(a[ia])) {\n          va *= 10;\n          va += a.charCodeAt(ia++) - char_code_0;\n        }\n        let vb = 0;\n        while (isDigit(b[ib])) {\n          vb *= 10;\n          vb += b.charCodeAt(ib++) - char_code_0;\n        }\n        let d = va - vb;\n        if (d) {\n          return d;\n        }\n      } else {\n        // numbers before strings\n        return -1;\n      }\n    } else if (isDigit(b[ib])) {\n      return 1;\n    } else {\n      let d = a[ia].toLowerCase().charCodeAt(0) - b[ib].toLowerCase().charCodeAt(0);\n      if (d) {\n        return d;\n      }\n      ia++;\n      ib++;\n    }\n  }\n  if (ia < a.length) {\n    return 1;\n  } else if (ib < b.length) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nexport function mdEscape(text: string): string {\n  return text.replace(/([\\\\[*_])/g, '\\\\$1');\n}\n\ntype AsyncDictCacheInternal<T> = Partial<Record<string, {\n  in_flight?: Array<(value: T) => void>;\n  value?: T;\n}>>;\nlet async_dict_caches: Record<string, Record<never, never>> = {};\nexport function asyncDictionaryGet<T>(\n  cache_in: string | Record<never, never>, // {}\n  key: string,\n  get: (key: string, cb: (value: T) => void)=> void,\n  cb: (value: T) => void\n): void {\n  if (typeof cache_in === 'string') {\n    cache_in = async_dict_caches[cache_in] = async_dict_caches[cache_in] || {};\n  }\n  let cache = cache_in as AsyncDictCacheInternal<T>;\n  let elem = cache[key];\n  if (elem) {\n    if (elem.in_flight) {\n      elem.in_flight.push(cb);\n    } else {\n      cb(elem.value!);\n    }\n    return;\n  }\n  cache[key] = elem = {\n    in_flight: [cb],\n  };\n  get(key, function (value: T) {\n    assert(elem); // assert() is workaround TypeScript bug fixed in v5.4.0 TODO: REMOVE\n    elem.value = value;\n    callEach(elem.in_flight, elem.in_flight = undefined, value);\n  });\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Like assert(0), but return the value, so the throw can be disabled if the\n// calling code handles failure.  Can replace `verify(foo)` with `(foo)` at\n// build time in production builds.\n\nlet should_throw = true;\n\nfunction verify<T>(exp: T | undefined | null | false, msg?: string): T {\n  if (!exp && should_throw) {\n    throw new Error(`Assertion failed${msg ? `: ${msg}` : ''}`);\n  }\n  return exp as T;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace verify {\n  export const ok = verify;\n\n  export function equal<T>(a: T, b: T): boolean {\n    if (a === b) {\n      return true;\n    }\n    if (should_throw) {\n      throw new Error(`Assertion failed: \"${a}\"===\"${b}\"`);\n    }\n    return false;\n  }\n\n  export function dothrow(doit: boolean): void {\n    should_throw = doit;\n  }\n\n  export function shouldThrow(): boolean {\n    return should_throw;\n  }\n\n  export function unreachable(x: never): false {\n    verify(false);\n    return false;\n  }\n}\n\nexport = verify;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Vector math functions required by the rest of the engine taken piecemeal from\n// gl-matrix and related, as well as some generic math utilities\nconst mat3Create = require('gl-mat3/create');\nconst mat4Create = require('gl-mat4/create');\n\nconst { abs, acos, max, min, floor, pow, round, sqrt } = Math;\n\n// galaxy hack: use Float64Array or dragging viewport around is lossy/unstable\nexport type Mat3 = Float64Array |\n  [number, number, number,\n   number, number, number,\n   number, number, number];\nexport type Mat4 = Float64Array |\n  [number, number, number, number,\n   number, number, number, number,\n   number, number, number, number,\n   number, number, number, number];\n\nexport type Vec4 = [number, number, number, number, ...number[]] | Float64Array | Int32Array;\nexport type Vec3 = [number, number, number, ...number[]] | Float64Array | Int32Array;\nexport type Vec2 = [number, number, ...number[]] | Float64Array | Int32Array;\nexport type Vec1 = [number, ...number[]] | Float64Array | Int32Array;\n\n// Pure JS types compatible with vmath functions\nexport type JSVec4 = [number, number, number, number];\nexport type JSVec3 = [number, number, number];\nexport type JSVec2 = [number, number];\nexport type JSVec1 = [number];\n\nexport type ROVec4 = Readonly<Vec4>;\nexport type ROVec3 = Readonly<Vec3>;\nexport type ROVec2 = Readonly<Vec2>;\nexport type ROVec1 = Readonly<Vec1>;\n\nexport const mat3 = mat3Create as () => Mat3;\nexport const mat4 = mat4Create as () => Mat4;\n\nexport function vec1(v: number): Vec1 {\n  return new Float64Array([v || 0]);\n}\nexport const rovec1:(v: number) => ROVec1 = vec1;\n\nexport function vec2(): Vec2;\nexport function vec2(a: number, b: number): Vec2;\nexport function vec2(a?: number, b?: number): Vec2 {\n  let r = new Float64Array(2);\n  if (a || b) {\n    r[0] = a as number;\n    r[1] = b as number;\n  }\n  return r;\n}\nexport const rovec2:(a: number, b: number) => ROVec2 = vec2;\n\nexport function ivec2(): Vec2;\nexport function ivec2(a: number, b: number): Vec2;\nexport function ivec2(a?: number, b?: number): Vec2 {\n  let r = new Int32Array(2);\n  if (a || b) {\n    r[0] = a as number;\n    r[1] = b as number;\n  }\n  return r;\n}\nexport const roivec2:(a: number, b: number) => ROVec2 = ivec2;\n\nexport function vec3(): Vec3;\nexport function vec3(a: number, b: number, c: number): Vec3;\nexport function vec3(a?: number, b?: number, c?: number): Vec3 {\n  let r = new Float64Array(3);\n  if (a || b || c) {\n    r[0] = a as number;\n    r[1] = b as number;\n    r[2] = c as number;\n  }\n  return r;\n}\nexport const rovec3:(a: number, b: number, c: number) => ROVec3 = vec3;\n\nexport function ivec3(): Vec3;\nexport function ivec3(a: number, b: number, c: number): Vec3;\nexport function ivec3(a?: number, b?: number, c?: number): Vec3 {\n  let r = new Int32Array(3);\n  if (a || b || c) {\n    r[0] = a as number;\n    r[1] = b as number;\n    r[2] = c as number;\n  }\n  return r;\n}\nexport const roivec3:(a: number, b: number, c: number) => ROVec3 = ivec3;\n\nexport function vec4(): Vec4;\nexport function vec4(a: number, b: number, c: number, d: number): Vec4;\nexport function vec4(a?: number, b?: number, c?: number, d?: number): Vec4 {\n  let r = new Float64Array(4);\n  if (a || b || c || d) {\n    r[0] = a as number;\n    r[1] = b as number;\n    r[2] = c as number;\n    r[3] = d as number;\n  }\n  return r;\n}\nexport const rovec4:(a: number, b: number, c: number, d: number) => ROVec4 = vec4;\n\nfunction frozenVec4(a: number, b: number, c: number, d: number): ROVec4 {\n  // if (debug) {\n  //   return Object.freeze([a,b,c,d]); // Not a vec4, but lets us catch bugs\n  // }\n  return rovec4(a,b,c,d);\n}\n\nexport const unit_vec = frozenVec4(1,1,1,1);\nexport const half_vec = frozenVec4(0.5,0.5,0.5,0.5);\nexport const zero_vec = frozenVec4(0,0,0,0);\nexport const identity_mat3 = mat3();\nexport const identity_mat4 = mat4();\nexport const xaxis = frozenVec4(1,0,0,0);\nexport const yaxis = frozenVec4(0,1,0,0);\nexport const zaxis = frozenVec4(0,0,1,0);\n\n\nexport function v2abs(out: Vec2, a: ROVec2): Vec2 {\n  out[0] = abs(a[0]);\n  out[1] = abs(a[1]);\n  return out;\n}\n\nexport function v2add(out: Vec2, a: ROVec2, b: ROVec2): Vec2 {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\nexport function v2addScale(out: Vec2, a: ROVec2, b: ROVec2, s: number): Vec2 {\n  out[0] = a[0] + b[0] * s;\n  out[1] = a[1] + b[1] * s;\n  return out;\n}\n\nexport function v2angle(a: ROVec2, b: ROVec2): number {\n  let mag = sqrt(\n    (a[0] * a[0] + a[1] * a[1]) *\n    (b[0] * b[0] + b[1] * b[1])\n  );\n  return acos(\n    min(max(\n      mag && ((a[0] * b[0] + a[1] * b[1]) / mag),\n      -1),1\n    )\n  );\n}\n\nexport function v2copy(out: Vec2, a: ROVec2): Vec2 {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\nexport function v2dist(a: ROVec2, b: ROVec2): number {\n  return sqrt((a[0] - b[0]) * (a[0] - b[0]) +\n    (a[1] - b[1]) * (a[1] - b[1]));\n}\n\nexport function v2distSq(a: ROVec2, b: ROVec2): number {\n  return (a[0] - b[0]) * (a[0] - b[0]) +\n    (a[1] - b[1]) * (a[1] - b[1]);\n}\n\nexport function v2div(out: Vec2, a: ROVec2, b: ROVec2): Vec2 {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\nexport function v2dot(a: ROVec2, b: ROVec2): number {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\nexport function v2floor(out: Vec2, a: ROVec2): Vec2 {\n  out[0] = floor(a[0]);\n  out[1] = floor(a[1]);\n  return out;\n}\n\nexport function v2iFloor(inout: Vec2): Vec2 {\n  inout[0] = floor(inout[0]);\n  inout[1] = floor(inout[1]);\n  return inout;\n}\n\nexport function v2lengthSq(a: ROVec2): number {\n  return a[0]*a[0] + a[1]*a[1];\n}\n\nexport function v2length(a: ROVec2): number {\n  return sqrt(v2lengthSq(a));\n}\n\nexport function v2lerp(out: Vec2, t: number, a: ROVec2, b: ROVec2): Vec2 {\n  let it = 1 - t;\n  out[0] = it * a[0] + t * b[0];\n  out[1] = it * a[1] + t * b[1];\n  return out;\n}\n\nexport function v2mul(out: Vec2, a: ROVec2, b: ROVec2): Vec2 {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\nexport function v2normalize(out: Vec2, a: ROVec2): Vec2 {\n  let len = a[0]*a[0] + a[1]*a[1];\n  if (len > 0) {\n    len = 1 / sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\nexport function v2iNormalize(inout: Vec2): Vec2 {\n  let len = inout[0]*inout[0] + inout[1]*inout[1];\n  if (len > 0) {\n    len = 1 / sqrt(len);\n    inout[0] *= len;\n    inout[1] *= len;\n  }\n  return inout;\n}\n\nexport function v2round(out: Vec2, a: ROVec2): Vec2 {\n  out[0] = round(a[0]);\n  out[1] = round(a[1]);\n  return out;\n}\n\nexport function v2iRound(inout: Vec2): Vec2 {\n  inout[0] = round(inout[0]);\n  inout[1] = round(inout[1]);\n  return inout;\n}\n\nexport function v2same(a: ROVec2, b: ROVec2): boolean {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\nexport function v2scale(out: Vec2, a: ROVec2, s: number): Vec2 {\n  out[0] = a[0] * s;\n  out[1] = a[1] * s;\n  return out;\n}\n\nexport function v2iScale(inout: Vec2, s: number): Vec2 {\n  inout[0] *= s;\n  inout[1] *= s;\n  return inout;\n}\n\nexport function v2set(out: Vec2, a: number, b: number): Vec2 {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n\nexport function v2sub(out: Vec2, a: ROVec2, b: ROVec2): Vec2 {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n// line segment intercept math by Paul Bourke http://paulbourke.net/geometry/pointlineplane/\nlet v2temp = vec2();\nexport function v2linePointDist(p1: Vec2, p2: Vec2, test: Vec2): number {\n  v2sub(v2temp, p2, p1);\n  let line_len_sq = v2lengthSq(v2temp);\n  if (!line_len_sq) {\n    return v2dist(p1, test);\n  }\n  let u = ((test[0] - p1[0]) * v2temp[0] + (test[1] - p1[1]) * v2temp[1]) / line_len_sq;\n  if (u <= 0) {\n    return v2dist(p1, test);\n  } else if (u >= 1) {\n    return v2dist(p2, test);\n  }\n  v2addScale(v2temp, p1, v2temp, u);\n  return v2dist(v2temp, test);\n}\n\n\nexport function v3add(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\nexport function v3iAdd(inout: Vec3, b: ROVec3): Vec3 {\n  inout[0] += b[0];\n  inout[1] += b[1];\n  inout[2] += b[2];\n  return inout;\n}\n\nexport function v3addScale(out: Vec3, a: ROVec3, b: ROVec3, s: number): Vec3 {\n  out[0] = a[0] + b[0] * s;\n  out[1] = a[1] + b[1] * s;\n  out[2] = a[2] + b[2] * s;\n  return out;\n}\n\nexport function v3iAddScale(inout: Vec3, b: ROVec3, s: number): Vec3 {\n  inout[0] += b[0] * s;\n  inout[1] += b[1] * s;\n  inout[2] += b[2] * s;\n  return inout;\n}\n\nexport function v3angle(a: ROVec3, b: ROVec3): number {\n  let mag = sqrt(\n    (a[0] * a[0] + a[1] * a[1] + a[2] * a[2]) *\n    (b[0] * b[0] + b[1] * b[1] + b[2] * b[2])\n  );\n  return acos(\n    min(max(\n      mag && ((a[0] * b[0] + a[1] * b[1] + a[2] * b[2]) / mag),\n      -1),1\n    )\n  );\n}\n\nexport function v3clone(a: ROVec3): Vec3 {\n  return a.slice(0) as Vec3;\n}\n\nexport function v3copy(out: Vec3, a: ROVec3): Vec3 {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\nexport function v3cross(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  let a0 = a[0];\n  let a1 = a[1];\n  let a2 = a[2];\n  let b0 = b[0];\n  let b1 = b[1];\n  let b2 = b[2];\n  out[0] = ((a1 * b2) - (a2 * b1));\n  out[1] = ((a2 * b0) - (a0 * b2));\n  out[2] = ((a0 * b1) - (a1 * b0));\n  return out;\n}\n\n// determinant of the matrix made by (columns?) [a, b, c];\nexport function v3determinant(a: ROVec3, b: ROVec3, c: Vec3): number {\n  // let a00 = a[0];\n  // let a01 = a[1];\n  // let a02 = a[2];\n  // let a10 = b[0];\n  // let a11 = b[1];\n  // let a12 = b[2];\n  // let a20 = c[0];\n  // let a21 = c[2];\n  // let a22 = c[2];\n  let a00 = a[0];\n  let a01 = b[0];\n  let a02 = c[0];\n  let a10 = a[1];\n  let a11 = b[1];\n  let a12 = c[1];\n  let a20 = a[2];\n  let a21 = b[2];\n  let a22 = c[2];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\nexport function v3distSq(a: ROVec3, b: ROVec3): number {\n  return (a[0] - b[0]) * (a[0] - b[0]) +\n    (a[1] - b[1]) * (a[1] - b[1]) +\n    (a[2] - b[2]) * (a[2] - b[2]);\n}\n\nexport function v3dist(a: ROVec3, b: ROVec3): number {\n  return sqrt(v3distSq(a,b));\n}\n\nexport function v3div(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\nexport function v3dot(a: ROVec3, b: ROVec3): number {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function v3iFloor(inout: Vec3): Vec3 {\n  inout[0] = floor(inout[0]);\n  inout[1] = floor(inout[1]);\n  inout[2] = floor(inout[2]);\n  return inout;\n}\n\nexport function v3floor(out: Vec3, a: ROVec3): Vec3 {\n  out[0] = floor(a[0]);\n  out[1] = floor(a[1]);\n  out[2] = floor(a[2]);\n  return out;\n}\n\nexport function v3lengthSq(a: ROVec3): number {\n  return a[0]*a[0] + a[1]*a[1] + a[2]*a[2];\n}\n\nexport function v3length(a: ROVec3): number {\n  return sqrt(v3lengthSq(a));\n}\n\nexport function v3lerp(out: Vec3, t: number, a: ROVec3, b: ROVec3): Vec3 {\n  let it = 1 - t;\n  out[0] = it * a[0] + t * b[0];\n  out[1] = it * a[1] + t * b[1];\n  out[2] = it * a[2] + t * b[2];\n  return out;\n}\n\nexport function v3iMax(inout: Vec3, b: ROVec3): Vec3 {\n  inout[0] = max(inout[0], b[0]);\n  inout[1] = max(inout[1], b[1]);\n  inout[2] = max(inout[2], b[2]);\n  return inout;\n}\n\nexport function v3min(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  out[0] = min(a[0], b[0]);\n  out[1] = min(a[1], b[1]);\n  out[2] = min(a[2], b[2]);\n  return out;\n}\n\nexport function v3iMin(inout: Vec3, b: ROVec3): Vec3 {\n  inout[0] = min(inout[0], b[0]);\n  inout[1] = min(inout[1], b[1]);\n  inout[2] = min(inout[2], b[2]);\n  return inout;\n}\n\nexport function v3mul(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\nexport function v3iMul(inout: Vec3, b: ROVec3): Vec3 {\n  inout[0] *= b[0];\n  inout[1] *= b[1];\n  inout[2] *= b[2];\n  return inout;\n}\n\nexport function v3mulMat4(out: Vec3, a: ROVec3, m: Mat4): Vec3 {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  out[0] = x * m[0] + y * m[4] + z * m[8];\n  out[1] = x * m[1] + y * m[5] + z * m[9];\n  out[2] = x * m[2] + y * m[6] + z * m[10];\n  return out;\n}\n\n// Same as v3mulMat4, but assumes it's a vector with w=1\nexport function m4TransformVec3(out: Vec3, a: ROVec3, m: Mat4): Vec3 {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  out[0] = x * m[0] + y * m[4] + z * m[8] + m[12];\n  out[1] = x * m[1] + y * m[5] + z * m[9] + m[13];\n  out[2] = x * m[2] + y * m[6] + z * m[10] + m[14];\n  return out;\n}\n\nexport function v3normalize(out: Vec3, a: ROVec3): Vec3 {\n  let len = a[0]*a[0] + a[1]*a[1] + a[2]*a[2];\n  if (len > 0) {\n    len = 1 / sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\nexport function v3iNormalize(inout: Vec3): Vec3 {\n  let len = inout[0]*inout[0] + inout[1]*inout[1] + inout[2]*inout[2];\n  if (len > 0) {\n    len = 1 / sqrt(len);\n    inout[0] *= len;\n    inout[1] *= len;\n    inout[2] *= len;\n  }\n  return inout;\n}\n\n// Treats `a` as vec3 input with w assumed to be 1\n// out[0]/[1] have had perspective divide and converted to normalized 0-1 range\n// out[2] is distance\nexport function v3perspectiveProject(out: Vec3, a: ROVec3, m: Mat4): Vec3 {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  let invw = 0.5 / (w || 0.00001);\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) * invw + 0.5;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) * -invw + 0.5;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14];\n  return out;\n}\n\nexport function v3pow(out: Vec3, a: ROVec3, exp: number) : Vec3 {\n  out[0] = pow(a[0], exp);\n  out[1] = pow(a[1], exp);\n  out[2] = pow(a[2], exp);\n  return out;\n}\n\nexport function v3round(out: Vec3, a: ROVec3): Vec3 {\n  out[0] = round(a[0]);\n  out[1] = round(a[1]);\n  out[2] = round(a[2]);\n  return out;\n}\n\nexport function v3iRound(inout: Vec3): Vec3 {\n  inout[0] = round(inout[0]);\n  inout[1] = round(inout[1]);\n  inout[2] = round(inout[2]);\n  return inout;\n}\n\nexport function v3same(a: ROVec3, b: ROVec3): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\nexport function v3scale(out: Vec3, a: ROVec3, s: number): Vec3 {\n  out[0] = a[0] * s;\n  out[1] = a[1] * s;\n  out[2] = a[2] * s;\n  return out;\n}\n\nexport function v3scaleFloor(out: Vec3, a: ROVec3, s: number): Vec3 {\n  out[0] = floor(a[0] * s);\n  out[1] = floor(a[1] * s);\n  out[2] = floor(a[2] * s);\n  return out;\n}\n\nexport function v3iScale(inout: Vec3, s: number): Vec3 {\n  inout[0] *= s;\n  inout[1] *= s;\n  inout[2] *= s;\n  return inout;\n}\n\nexport function v3set(out: Vec3, a: number, b: number, c: number): Vec3 {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  return out;\n}\n\nexport function v3sub(out: Vec3, a: ROVec3, b: ROVec3): Vec3 {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\nexport function v3iSub(inout: Vec3, b: ROVec3): Vec3 {\n  inout[0] -= b[0];\n  inout[1] -= b[1];\n  inout[2] -= b[2];\n  return inout;\n}\n\nexport function v3zero(out: Vec3): Vec3 {\n  out[0] = out[1] = out[2] = 0;\n  return out;\n}\n\n\nexport function v4add(out: Vec4, a: ROVec4, b: ROVec4): Vec4 {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\nexport function v4clone(a: ROVec4): Vec4 {\n  return a.slice(0) as Vec4;\n}\n\nexport function v4copy(out: Vec4, a: ROVec4): Vec4 {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function v4dot(a: ROVec4, b: ROVec4): number {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\nexport function v4fromRGBA(rgba: number): Vec4 {\n  let r = rgba >>> 24;\n  let g = (rgba & 0x00FF0000) >> 16;\n  let b = (rgba & 0x0000FF00) >> 8;\n  let a = rgba & 0xFF;\n  return vec4(r/255, g/255, b/255, a/255);\n}\n\nexport function v4lerp(out: Vec4, t: number, a: ROVec4, b: ROVec4): Vec4 {\n  let it = 1 - t;\n  out[0] = it * a[0] + t * b[0];\n  out[1] = it * a[1] + t * b[1];\n  out[2] = it * a[2] + t * b[2];\n  out[3] = it * a[3] + t * b[3];\n  return out;\n}\n\nexport function v4mul(out: Vec4, a: ROVec4, b: ROVec4): Vec4 {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\nexport function v4mulAdd(out: Vec4, a: ROVec4, b: ROVec4, c: Vec4): Vec4 {\n  out[0] = a[0] * b[0] + c[0];\n  out[1] = a[1] * b[1] + c[1];\n  out[2] = a[2] * b[2] + c[2];\n  out[3] = a[3] * b[3] + c[3];\n  return out;\n}\n\nexport function v4same(a: ROVec4, b: ROVec4): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\nexport function v4scale(out: Vec4, a: ROVec4, s:number): Vec4 {\n  out[0] = a[0] * s;\n  out[1] = a[1] * s;\n  out[2] = a[2] * s;\n  out[3] = a[3] * s;\n  return out;\n}\n\nexport function v4set(out: Vec4, a: number, b: number, c: number, d: number): Vec4 {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  return out;\n}\n\nexport function v4zero(out: Vec4): Vec4 {\n  out[0] = out[1] = out[2] = out[3] = 0;\n  return out;\n}\n\nexport function mat4isFinite(m: Mat4): boolean {\n  return isFinite(m[0]) && isFinite(m[1]) && isFinite(m[2]) && isFinite(m[3]) &&\n    isFinite(m[4]) && isFinite(m[5]) && isFinite(m[6]) && isFinite(m[7]) &&\n    isFinite(m[8]) && isFinite(m[9]) && isFinite(m[10]) && isFinite(m[11]) &&\n    isFinite(m[12]) && isFinite(m[13]) && isFinite(m[14]) && isFinite(m[15]);\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n// Originally from Splody, used with permission\n/* eslint no-multi-spaces:off, array-bracket-spacing:off */\n\nconst assert = require('assert');\nconst { max } = Math;\n\nconst trans_src = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+';\nconst trans_dst = '4bcd3fgh1jk1mn0pqr57uvwxy24bcd3fgh1jk1mn0pqr57uvwxy201234567897';\nconst trans_src_regex = /\\S+/g;\nlet trans_lookup = {};\nconst unicode_replacement_chars = {};\nfunction cannonizeCharacter(c) {\n  c = unicode_replacement_chars[c] || c;\n  return trans_lookup[c] || '';\n}\nfunction canonize(str) {\n  return str.split('').map(cannonizeCharacter).join('');\n}\n\nfunction rot13(str) {\n  return str.split('').map((c) => {\n    c = c.charCodeAt(0);\n    if (c >= 97/*a*/ && c <= 122/*z*/) {\n      c = 97 + (((c - 97) + 13) % 26);\n    } else if (c >= 65/*A*/ && c <= 90/*Z*/) {\n      c = 65 + (((c - 65) + 13) % 26);\n    }\n    return String.fromCharCode(c);\n  }).join('');\n}\n\nlet profanity = {};\nlet reserved = {};\n\n// shorter first, if substrings (just 's' and 'es'/'ers')\nlet suffixes =           [ '', 's',  's', 'in', 'ing', 'er', 'ers', 'ed', 'y' ];\nlet suffixes_canonized = [ '', '5', '35', '1n', '1ng', '3r', '3r5', '3d', 'y' ];\n\nlet max_len = 0;\nlet inited = false;\n// filter_gkg is rot13 of (singular) words to filter\n// exceptions_txt is includes specific words that should not be filtered (e.g.\n//   a common word that looks like a plural of a filtered word)\nexport function profanityCommonStartup(filter_gkg, exceptions_txt) {\n  assert(!inited);\n  inited = true;\n  for (let ii = 0; ii < trans_src.length; ++ii) {\n    trans_lookup[trans_src[ii]] = trans_dst[ii];\n  }\n  let data = filter_gkg.split('\\n').filter((a) => a);\n  for (let ii = 0; ii < data.length; ++ii) {\n    let s = rot13(data[ii]);\n    let start_len = s.length;\n    s = canonize(s);\n    assert.equal(start_len, s.length); // Otherwise got a bad character in the source data?\n    for (let jj = 0; jj < suffixes_canonized.length; ++jj) {\n      let str = s + suffixes_canonized[jj];\n      let existing = profanity[str];\n      if (!existing || existing > jj) {\n        max_len = max(max_len, str.length);\n        profanity[str] = jj + 1;\n      }\n    }\n  }\n  data = exceptions_txt.split('\\n').filter((a) => a);\n  for (let ii = 0; ii < data.length; ++ii) {\n    delete profanity[canonize(data[ii])];\n  }\n}\n\nexport function profanitySetReplacementChars(replacement_chars) {\n  assert(replacement_chars);\n  for (let char_code_str in replacement_chars) {\n    let target = replacement_chars[char_code_str];\n    target = String.fromCharCode(target);\n    let source = String.fromCharCode(Number(char_code_str));\n    if (target === ' ') {\n      if (source.trim() !== '') {\n        // Replacing with space, but Javascript does not treat it as whitespace, do not allow\n        console.log(`Invalid whitespace replacement character: ${char_code_str}`);\n        continue;\n      }\n    }\n    unicode_replacement_chars[source] = target;\n  }\n}\n\nlet reserved_substrings = [];\nexport function reservedStartup(reserved_txt, reserved_substrings_in) {\n  let data = reserved_txt.split('\\n').filter((a) => a);\n  for (let i = 0; i < data.length; ++i) {\n    let string = canonize(data[i]);\n    reserved[string] = 1;\n  }\n  for (let ii = 0; ii < reserved_substrings_in.length; ++ii) {\n    reserved_substrings.push(canonize(reserved_substrings_in[ii]));\n  }\n}\n\nlet randWord;\nfunction filterWord(word_src) {\n  if (word_src.length >= max_len) {\n    return word_src;\n  }\n\n  let is_uppercase = word_src[0].toUpperCase() === word_src[0];\n  let word_canon = canonize(word_src);\n  let suffix_idx = profanity[word_canon];\n  // do lookup, replace\n  if (!suffix_idx) {\n    return word_src;\n  }\n  --suffix_idx;\n  let word = randWord();\n  if (is_uppercase) {\n    word = word[0].toUpperCase() + word.slice(1);\n  }\n  let suffix = suffixes[suffix_idx];\n  if (word[word.length - 1] === suffix[0]) { // e.g. replacement word ends in an 'e'\n    suffix = suffix.slice(1);\n  }\n  if (word.endsWith('e') && suffix[0] === 'i') {\n    word = word.slice(0, -1);\n  }\n  word += suffix;\n  return word;\n}\n\nlet is_profane;\nfunction checkWord(word_src) {\n  if (word_src.length >= max_len) {\n    return;\n  }\n\n  if (profanity[canonize(word_src)]) {\n    is_profane = true;\n  }\n}\n\nexport function profanityFilterCommon(user_str, rand_word_fn) {\n  assert(inited);\n  randWord = rand_word_fn;\n  return user_str.replace(trans_src_regex, filterWord);\n}\n\nexport function isProfane(user_str) {\n  assert(inited);\n  is_profane = false;\n  user_str.replace(trans_src_regex, checkWord);\n  return is_profane;\n}\n\nlet is_reserved;\nfunction checkReserved(word_src) {\n  word_src = canonize(word_src);\n  if (reserved[word_src]) {\n    is_reserved = true;\n  }\n  for (let ii = 0; ii < reserved_substrings.length; ++ii) {\n    if (word_src.includes(reserved_substrings[ii])) {\n      is_reserved = true;\n    }\n  }\n}\n\nexport function isReserved(user_str) {\n  assert(inited);\n  is_reserved = false;\n  user_str.replace(trans_src_regex, checkReserved);\n  let no_whitespace = canonize(user_str.replace(/[\\s_.]/g, ''));\n  for (let ii = 0; ii < reserved_substrings.length; ++ii) {\n    if (no_whitespace.includes(reserved_substrings[ii])) {\n      is_reserved = true;\n    }\n  }\n  return is_reserved;\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport let wsstats = { msgs: 0, bytes: 0 };\nexport let wsstats_out = { msgs: 0, bytes: 0 };\n\nimport assert from 'assert';\nimport {\n  ackHandleMessage,\n  ackReadHeader,\n  ackWrapPakFinish,\n  ackWrapPakPayload,\n  ackWrapPakStart,\n} from './ack';\nimport {\n  isPacket,\n  packetCreate,\n  packetDefaultFlags,\n  packetFromBuffer,\n} from './packet';\nimport { perfCounterAddValue } from './perfcounters';\n\nconst { random, round } = Math;\n\nexport const CONNECTION_TIMEOUT = 60000;\nexport const PING_TIME = CONNECTION_TIMEOUT / 2;\n\n// Rough estimate, if over, will prevent resizing the packet\nconst PAK_HEADER_SIZE = 1 + // flags\n  1+16 + // message id\n  1+9; // resp_pak_id\n\nlet net_delay = 0;\nlet net_delay_rand = 0;\n\nlet send_cb = null;\nexport function wsSetSendCB(cb) {\n  send_cb = cb;\n}\n\nfunction socketSendInternal(client, buf, pak) {\n  if (send_cb) {\n    send_cb(buf);\n  }\n  if (client.ws_server) {\n    client.socket.send(buf, pak.pool.bind(pak));\n  } else {\n    // Testing code to fake sending string packets for debugging\n    // Note: though we can successfully decode these string packets, ones seen\n    //   in the wild appear to have lost data and cannot be decoded in the same\n    //   way.\n    // let str = [];\n    // for (let ii = 0; ii < buf.length; ++ii) {\n    //   str.push(String.fromCharCode(buf[ii]));\n    // }\n    // client.socket.send(str.join(''));\n\n    client.socket.send(buf);\n    pak.pool();\n  }\n}\n\nexport function netDelaySet(delay, rand) {\n  if (delay === undefined) {\n    // development defaults\n    delay = 100;\n    rand = 50;\n  }\n  if (delay) {\n    console.log(`NetDelay: ON (${delay}+${rand})`);\n  } else {\n    console.log('NetDelay: Off');\n  }\n  net_delay = delay;\n  net_delay_rand = rand;\n}\n\nexport function netDelayGet() {\n  return [net_delay, net_delay_rand];\n}\n\nfunction NetDelayer(client, socket) {\n  this.client = client;\n  this.head = null;\n  this.tail = null;\n  this.tick = this.tickFn.bind(this);\n}\nNetDelayer.prototype.send = function (buf, pak) {\n  let now = Date.now();\n  let delay = round(net_delay + net_delay_rand * random());\n  let time = now + delay;\n  let elem = { buf, pak, time, next: null };\n  if (this.tail) {\n    this.tail.next = elem;\n    this.tail = elem;\n  } else {\n    this.head = this.tail = elem;\n    setTimeout(this.tick, delay);\n  }\n};\nNetDelayer.prototype.tickFn = function () {\n  let { client } = this;\n  if (client.net_delayer !== this) {\n    // we've been disconnected, just don't ever write these packets\n    while (this.head) {\n      let elem = this.head;\n      elem.pak.pool();\n      this.head = elem.next;\n    }\n    this.tail = null;\n    return;\n  }\n  // Send at least first, possibly more, then schedule tick if any left\n  let now = Date.now();\n  do {\n    // Pop it\n    let elem = this.head;\n    this.head = elem.next;\n    if (!this.head) {\n      this.tail = null;\n    }\n    // Send it\n    let { buf, pak } = elem;\n    socketSendInternal(client, buf, pak);\n  } while (this.head && this.head.time <= now);\n  if (this.head) {\n    setTimeout(this.tick, this.head.time - now);\n  }\n};\n\nexport function wsPakSendDest(client, pak) {\n  if (!client.connected || client.socket.readyState !== 1) {\n    // We only get to this particular location from wsserver.broadcast*, all\n    //   other paths will print the actual message and error earlier.\n    console.warn(`Attempting to send on a disconnected link (client_id:${client.id}), ignoring`);\n    pak.pool();\n    return;\n  }\n  let buf = pak.getBuffer(); // a Uint8Array\n  let buf_len = pak.getBufferLen();\n  if (buf_len !== buf.length) {\n    buf = new Uint8Array(buf.buffer, buf.byteOffset, buf_len);\n  }\n  perfCounterAddValue('net.send_bytes.total', buf.length);\n  wsstats_out.msgs++;\n  wsstats_out.bytes += buf.length;\n  if (net_delay) {\n    if (!client.net_delayer) {\n      client.net_delayer = new NetDelayer(client);\n    }\n    client.net_delayer.send(buf, pak);\n  } else {\n    socketSendInternal(client, buf, pak);\n  }\n  client.last_send_time = Date.now();\n}\n\nfunction wsPakSendFinish(pak, err, resp_func) {\n  let { client, msg } = pak.ws_data;\n  delete pak.ws_data;\n  let ack_resp_pkt_id = ackWrapPakFinish(pak, err, resp_func);\n\n  if (!client.connected || client.socket.readyState !== 1) { // WebSocket.OPEN\n    if (msg === 'channel_msg') { // client -> server channel message, attach additional debugging info\n      pak.seek(0);\n      pak.readFlags();\n      let header = ackReadHeader(pak);\n      let is_packet = isPacket(header.data);\n      let channel_id;\n      let submsg;\n      if (is_packet) {\n        pak.ref(); // deal with auto-pool of an empty packet\n        channel_id = pak.readAnsiString();\n        submsg = pak.readAnsiString();\n        if (!pak.ended()) {\n          pak.pool();\n        }\n      } else {\n        channel_id = header.data.channel_id;\n        submsg = header.data.msg;\n      }\n      msg = `channel_msg:${channel_id}:${submsg}`;\n    }\n    if (typeof msg !== 'number') {\n      (client.log ? client : console).log(`Attempting to send msg=${msg} on a disconnected link, ignoring`);\n      if (!client.log && client.onError && msg) {\n        // On the client, if we try to send a new packet while disconnected, this is an application error\n        client.onError(`Attempting to send msg=${msg} on a disconnected link`);\n      }\n    }\n\n    if (ack_resp_pkt_id) {\n      // Callback will never be dispatched through ack.js, remove the callback here\n      delete client.resp_cbs[ack_resp_pkt_id];\n    }\n    pak.pool();\n    return;\n  }\n\n  assert.equal(Boolean(resp_func && resp_func.expecting_response !== false), Boolean(ack_resp_pkt_id));\n\n  wsPakSendDest(client, pak);\n}\n\nfunction wsPakSend(err, resp_func) {\n  let pak = this; // eslint-disable-line @typescript-eslint/no-invalid-this\n  if (typeof err === 'function' && !resp_func) {\n    resp_func = err;\n    err = null;\n  }\n  wsPakSendFinish(pak, err, resp_func);\n}\n\nexport function wsPak(msg, ref_pak, client, msg_debug_name) {\n  assert(typeof msg === 'string' || typeof msg === 'number');\n\n  // Assume new packet needs to be comparable to old packet, in flags and size\n  let pak = packetCreate(ref_pak ? ref_pak.getInternalFlags() : packetDefaultFlags(),\n    ref_pak ? ref_pak.totalSize() + PAK_HEADER_SIZE : 0);\n  pak.writeFlags();\n\n  ackWrapPakStart(pak, client, msg, msg_debug_name);\n\n  pak.ws_data = {\n    msg,\n    client,\n  };\n  pak.send = wsPakSend;\n  return pak;\n}\n\nfunction sendMessageInternal(client, msg, err, data, msg_debug_name, resp_func) {\n  let is_packet = isPacket(data);\n  let pak = wsPak(msg, is_packet ? data : null, client, msg_debug_name);\n\n  if (!err) {\n    ackWrapPakPayload(pak, data);\n  }\n\n  pak.send(err, resp_func);\n}\n\nexport function sendMessage(msg, data, msg_debug_name, resp_func) {\n  // eslint-disable-next-line @typescript-eslint/no-invalid-this\n  sendMessageInternal(this, msg, null, data, msg_debug_name, resp_func);\n}\n\nexport function wsHandleMessage(client, buf, filter) {\n  ++wsstats.msgs;\n  let now = Date.now();\n  let source = client.id ? `client ${client.id}` : 'server';\n  if (!(buf instanceof Uint8Array)) {\n    (client.log ? client : console).log(`Received incorrect WebSocket data type from ${source} (${typeof buf})`);\n    if (typeof buf === 'string') {\n      (client.log ? client : console).log(`Invalid WebSocket data: ${JSON.stringify(buf.slice(0, 120))}`);\n    }\n    if (client.ws_server) {\n      if (!client.has_warned_about_text) {\n        // Send an generic error (still as binary, since if they got this far, they\n        //   must have received the binary `cack` successfully.\n        client.has_warned_about_text = true;\n        client.send('error', 'Server received non-binary WebSocket data.  ' +\n          'Likely cause is a proxy, VPN or something else intercepting and modifying network traffic.');\n      }\n      return;\n    }\n    return void client.onError('Invalid data received');\n  }\n  wsstats.bytes += buf.length;\n  let pak = packetFromBuffer(buf, buf.length, false);\n  pak.readFlags();\n  client.last_receive_time = now;\n  client.idle_counter = 0;\n\n  return void ackHandleMessage(client, source, pak, function sendFunc(msg, err, data, resp_func) {\n    if (resp_func && !resp_func.expecting_response) {\n      resp_func = null;\n    }\n    sendMessageInternal(client, msg, err, data, null, resp_func);\n  }, function pakFunc(msg, ref_pak) {\n    return wsPak(msg, ref_pak, client);\n  }, function handleFunc(msg, data, resp_func) {\n    let handler = client.handlers[msg];\n    if (!handler) {\n      let error_msg = `No handler for message ${JSON.stringify(msg)} from ${source}`;\n      console.error(error_msg, isPacket(data) ? data.contents() : data);\n      if (client.onError) {\n        return client.onError(error_msg);\n      }\n      return resp_func(error_msg);\n    }\n    return handler(client, data, resp_func);\n  }, filter);\n}\n"]}